({"theMap":"{\"version\":3,\"sources\":[\"builtin://charts\"],\"names\":[\"builtin://charts\",\",42,0,1020,44,3,1084\",\",43,2,1037,43,45,1080\",\",45,0,1085,47,3,1175\",\",46,2,1104,46,69,1171\",\",48,0,1176,50,3,1278\",\",49,2,1194,49,82,1274\",\",51,0,1279,56,3,1348\",\",52,2,1297,52,12,1307\",\",53,2,1310,53,12,1320\",\",54,2,1323,54,11,1332\",\",55,2,1335,55,11,1344\",\",59,7,1415,59,12,1420\",\",60,4,1427,60,48,1471\",\",65,0,1490,70,3,1618\",\",66,2,1512,66,16,1526\",\",67,2,1529,67,10,1537\",\",68,2,1540,68,15,1553\",\",69,2,1556,69,60,1614\",\",73,7,1684,73,12,1689\",\",74,4,1696,74,72,1764\",\",80,8,1844,80,13,1849\",\",80,19,1855,80,24,1860\",\",80,18,1854,80,25,1861\",\",81,4,1868,81,64,1928\",\",86,0,1947,89,3,2090\",\",87,2,1967,87,16,1981\",\",88,2,1984,88,104,2086\",\",99,6,2432,99,25,2451\",\",100,6,2458,100,25,2477\",\",101,6,2484,101,25,2503\",\",102,37,2541,102,46,2550\",\",106,45,2672,106,58,2685\",\",106,39,2666,106,58,2685\",\",106,6,2633,106,75,2702\",\",109,48,2765,109,57,2774\",\",109,31,2748,109,74,2791\",\",110,45,2839,110,54,2848\",\",110,28,2822,110,68,2862\",\",111,42,2907,111,51,2916\",\",111,25,2890,111,62,2927\",\",112,39,2969,112,48,2978\",\",112,22,2952,112,56,2986\",\",119,45,3124,119,51,3130\",\",119,58,3137,119,64,3143\",\",119,57,3136,119,65,3144\",\",122,7,3218,122,22,3233\",\",122,2,3213,122,31,3242\",\",122,2,3213,122,62,3273\",\",126,21,3366,126,45,3390\",\",126,2,3347,126,58,3403\",\",126,2,3347,126,89,3434\",\",130,7,3528,130,22,3543\",\",130,2,3523,130,35,3556\",\",130,2,3523,130,66,3587\",\",134,24,3700,134,51,3727\",\",134,2,3678,134,68,3744\",\",134,2,3678,134,99,3775\",\",138,7,3886,138,22,3901\",\",138,2,3881,138,39,3918\",\",138,2,3881,138,70,3949\",\",142,41,4068,142,69,4096\",\",142,31,4058,142,70,4097\",\",142,2,4029,142,71,4098\",\",146,2,4178,146,26,4202\",\",146,2,4178,146,49,4225\",\",150,2,4308,150,30,4336\",\",151,6,4343,151,67,4404\",\",152,6,4411,152,54,4459\",\",150,2,4308,153,17,4477\",\",167,17,4893,167,38,4914\",\",171,20,4964,171,47,4991\",\",170,4,4939,172,19,5015\",\",176,35,5100,176,72,5137\",\",177,35,5176,177,71,5212\",\",175,4,5042,177,73,5214\",\",179,16,5232,179,66,5282\",\",180,2,5285,180,44,5327\",\",189,7,5663,189,16,5672\",\",190,4,5679,190,57,5732\",\",194,7,5777,194,25,5795\",\",194,31,5801,194,37,5807\",\",194,30,5800,194,38,5808\",\",194,40,5810,194,64,5834\",\",196,30,5875,196,40,5885\",\",196,22,5867,196,41,5886\",\",196,44,5889,196,57,5902\",\",196,22,5867,196,57,5902\",\",196,12,5857,196,58,5903\",\",197,14,5918,197,33,5937\",\",197,10,5914,197,33,5937\",\",198,6,5944,198,32,5970\",\",221,6,6821,221,29,6844\",\",222,6,6865,222,33,6892\",\",223,6,6914,223,32,6940\",\",224,6,6961,224,33,6988\",\",225,17,7021,225,75,7079\",\",232,24,7263,232,48,7287\",\",233,24,7312,233,48,7336\",\",245,6,7612,245,27,7633\",\",248,52,7868,248,59,7875\",\",248,38,7854,248,63,7879\",\",248,28,7844,248,78,7894\",\",249,52,7947,249,59,7954\",\",249,38,7933,249,63,7958\",\",249,28,7923,249,78,7973\",\",250,28,8002,250,65,8039\",\",251,28,8068,251,65,8105\",\",254,6,8162,254,28,8184\",\",256,52,8293,256,61,8302\",\",256,34,8275,256,69,8310\",\",257,65,8377,257,71,8383\",\",257,52,8364,257,76,8388\",\",257,48,8360,257,77,8389\",\",258,65,8456,258,71,8462\",\",258,52,8443,258,76,8467\",\",258,48,8439,258,77,8468\",\",259,22,8492,259,57,8527\",\",260,22,8550,260,57,8585\",\",261,28,8614,261,59,8645\",\",262,28,8674,262,59,8705\",\",266,36,8810,266,41,8815\",\",266,26,8800,266,46,8820\",\",266,16,8790,266,61,8835\",\",267,36,8872,267,41,8877\",\",267,26,8862,267,46,8882\",\",267,16,8852,267,61,8897\",\",269,22,8932,269,29,8939\",\",292,8,9423,292,20,9435\",\",293,17,9453,293,27,9463\",\",294,13,9477,294,27,9491\",\",295,42,9534,295,58,9550\",\",295,42,9534,295,63,9555\",\",296,30,9587,296,35,9592\",\",296,17,9574,296,36,9593\",\",297,17,9611,297,32,9626\",\",297,7,9601,297,33,9627\",\",297,45,9639,297,60,9654\",\",297,35,9629,297,61,9655\",\",299,31,9698,299,36,9703\",\",299,30,9697,299,41,9708\",\",299,17,9684,299,42,9709\",\",300,17,9727,300,32,9742\",\",300,7,9717,300,33,9743\",\",300,45,9755,300,60,9770\",\",300,45,9755,300,65,9775\",\",300,35,9745,300,66,9776\",\",302,10,9796,302,41,9827\",\",304,29,9908,304,38,9917\",\",304,11,9890,304,39,9918\",\",304,6,9885,304,40,9919\",\",303,20,9848,305,7,9927\",\",307,29,10007,307,38,10016\",\",307,11,9989,307,39,10017\",\",307,6,9984,307,40,10018\",\",306,19,9947,308,7,10026\",\",309,14,10041,309,23,10050\",\",310,14,10065,310,24,10075\",\",311,26,10102,311,47,10123\",\",311,18,10094,311,48,10124\",\",312,31,10156,312,53,10178\",\",312,27,10152,312,53,10178\",\",312,27,10152,312,57,10182\",\",312,19,10144,312,58,10183\",\",322,21,10442,322,64,10485\",\",323,20,10507,323,62,10549\",\",332,2,10783,332,15,10796\",\",332,16,10797,332,24,10805\",\",332,33,10814,332,44,10825\",\",332,2,10783,332,46,10827\",\",337,15,10924,337,28,10937\",\",337,29,10938,337,37,10946\",\",337,15,10924,337,53,10962\",\",340,8,11005,340,41,11038\",\",341,8,11047,341,21,11060\",\",341,22,11061,341,30,11069\",\",341,45,11084,341,82,11121\",\",341,40,11079,341,83,11122\",\",341,8,11047,341,85,11124\",\",336,2,10887,343,5,11140\",\",347,2,11203,347,15,11216\",\",347,16,11217,347,24,11225\",\",347,41,11242,347,52,11253\",\",347,2,11203,347,54,11255\",\",351,2,11319,351,15,11332\",\",351,16,11333,351,24,11341\",\",351,50,11367,351,61,11378\",\",351,2,11319,351,63,11380\",\",355,7,11454,355,20,11467\",\",356,4,11474,356,56,11526\",\",358,2,11535,358,15,11548\",\",358,16,11549,358,24,11557\",\",358,2,11535,358,48,11581\",\",362,11,11650,362,40,11679\",\",362,7,11646,362,41,11680\",\",362,50,11689,362,77,11716\",\",362,46,11685,362,78,11717\",\",362,87,11726,362,115,11754\",\",362,83,11722,362,116,11755\",\",363,4,11761,363,57,11814\",\",365,2,11823,365,15,11836\",\",365,16,11837,365,24,11845\",\",365,2,11823,365,40,11861\",\",369,13,11928,369,26,11941\",\",369,27,11942,369,35,11950\",\",369,13,11928,369,57,11972\",\",370,8,11981,370,21,11994\",\",370,22,11995,370,30,12003\",\",370,8,11981,370,48,12021\",\",376,9,12100,376,17,12108\",\",376,9,12100,376,29,12120\",\",376,33,12124,376,48,12139\",\",376,9,12100,376,48,12139\",\",377,6,12147,377,62,12203\",\",379,4,12216,379,17,12229\",\",379,18,12230,379,26,12238\",\",379,52,12264,379,80,12292\",\",379,83,12295,379,91,12303\",\",379,32,12244,379,103,12315\",\",379,4,12216,379,105,12317\",\",385,9,12401,385,17,12409\",\",385,9,12401,385,29,12421\",\",385,33,12425,385,48,12440\",\",385,9,12401,385,48,12440\",\",386,6,12448,386,62,12504\",\",388,4,12517,388,17,12530\",\",388,18,12531,388,26,12539\",\",388,52,12565,388,80,12593\",\",388,83,12596,388,91,12604\",\",388,32,12545,388,103,12616\",\",388,4,12517,388,105,12618\",\",393,24,12710,393,32,12718\",\",393,7,12693,393,37,12723\",\",393,41,12727,393,57,12743\",\",393,7,12693,393,57,12743\",\",394,4,12749,394,80,12825\",\",397,10,12875,397,20,12885\",\",397,26,12891,397,36,12901\",\",397,25,12890,397,37,12902\",\",398,6,12910,398,66,12970\",\",396,2,12834,400,5,12984\",\",401,2,12987,401,15,13000\",\",401,16,13001,401,24,13009\",\",401,72,13057,401,101,13086\",\",401,122,13107,401,130,13115\",\",401,104,13089,401,135,13120\",\",401,51,13036,401,145,13130\",\",401,31,13016,401,146,13131\",\",401,2,12987,401,148,13133\",\",405,26,13228,405,34,13236\",\",405,9,13211,405,39,13241\",\",405,43,13245,405,58,13260\",\",405,9,13211,405,58,13260\",\",406,6,13268,406,67,13329\",\",408,2,13340,408,15,13353\",\",408,16,13354,408,24,13362\",\",408,71,13409,408,99,13437\",\",408,120,13458,408,128,13466\",\",408,102,13440,408,133,13471\",\",408,51,13389,408,142,13480\",\",408,31,13369,408,143,13481\",\",408,2,13340,408,145,13483\",\",412,7,13554,412,22,13569\",\",412,26,13573,412,34,13581\",\",412,26,13573,412,50,13597\",\",412,7,13554,412,50,13597\",\",413,4,13603,413,76,13675\",\",415,7,13689,415,22,13704\",\",415,7,13689,415,27,13709\",\",416,4,13715,416,54,13765\",\",418,2,13774,418,15,13787\",\",418,16,13788,418,24,13796\",\",418,58,13830,418,66,13838\",\",418,31,13803,418,74,13846\",\",418,31,13803,418,105,13877\",\",418,2,13774,418,108,13880\",\",422,2,13937,422,15,13950\",\",422,16,13951,422,24,13959\",\",422,2,13937,422,42,13977\",\",426,6,14039,426,17,14050\",\",426,23,14056,426,34,14067\",\",426,22,14055,426,35,14068\",\",426,37,14070,426,84,14117\",\",427,8,14126,427,21,14139\",\",427,22,14140,427,30,14148\",\",427,8,14126,427,50,14168\",\",432,2,14245,432,15,14258\",\",432,16,14259,432,24,14267\",\",432,2,14245,432,56,14299\",\",436,8,14390,436,29,14411\",\",436,35,14417,436,56,14438\",\",436,34,14416,436,57,14439\",\",437,4,14446,437,66,14508\",\",439,2,14517,439,15,14530\",\",439,16,14531,439,24,14539\",\",439,2,14517,439,64,14579\",\",444,22,14715,444,35,14728\",\",444,36,14729,444,44,14737\",\",444,22,14715,444,67,14760\",\",445,16,14777,445,29,14790\",\",445,30,14791,445,38,14799\",\",445,55,14816,445,67,14828\",\",445,16,14777,445,89,14850\",\",446,21,14872,446,34,14885\",\",446,35,14886,446,43,14894\",\",446,60,14911,446,71,14922\",\",446,21,14872,446,73,14924\",\",447,28,14953,447,41,14966\",\",447,42,14967,447,50,14975\",\",447,67,14992,447,79,15004\",\",447,28,14953,447,106,15031\",\",443,0,14655,448,5,15037\",\",453,2,15105,453,15,15118\",\",453,16,15119,453,24,15127\",\",453,42,15145,453,53,15156\",\",453,2,15105,453,55,15158\",\",457,7,15237,457,20,15250\",\",458,4,15257,458,66,15319\",\",460,2,15328,460,15,15341\",\",460,16,15342,460,24,15350\",\",460,2,15328,460,53,15379\",\",464,6,15451,464,17,15462\",\",464,23,15468,464,34,15479\",\",464,22,15467,464,35,15480\",\",464,37,15482,464,94,15539\",\",465,8,15548,465,21,15561\",\",465,22,15562,465,30,15570\",\",465,8,15548,465,59,15599\",\",470,2,15667,470,15,15680\",\",470,16,15681,470,24,15689\",\",470,2,15667,470,46,15711\",\",474,17,15811,474,22,15816\",\",474,7,15801,474,43,15837\",\",475,4,15843,475,59,15898\",\",477,2,15907,477,15,15920\",\",477,16,15921,477,24,15929\",\",477,59,15964,477,97,16002\",\",477,2,15907,477,99,16004\",\",482,22,16126,482,35,16139\",\",482,36,16140,482,44,16148\",\",482,22,16126,482,72,16176\",\",483,44,16221,483,57,16234\",\",483,58,16235,483,66,16243\",\",483,44,16221,483,141,16318\",\",481,2,16072,484,5,16324\",\",488,2,16392,488,15,16405\",\",488,16,16406,488,24,16414\",\",488,2,16392,488,46,16436\",\",492,2,16502,492,15,16515\",\",492,16,16516,492,24,16524\",\",492,43,16543,492,54,16554\",\",492,2,16502,492,56,16556\",\",496,7,16639,496,22,16654\",\",497,4,16661,497,58,16715\",\",499,2,16724,499,15,16737\",\",499,16,16738,499,24,16746\",\",499,2,16724,499,51,16773\",\",503,2,16842,503,15,16855\",\",503,16,16856,503,24,16864\",\",503,39,16879,503,57,16897\",\",503,2,16842,503,59,16899\",\",507,2,16955,507,15,16968\",\",507,16,16969,507,24,16977\",\",507,2,16955,507,42,16995\",\",511,2,17071,511,15,17084\",\",511,16,17085,511,24,17093\",\",511,2,17071,511,61,17130\",\",515,2,17200,515,15,17213\",\",515,16,17214,515,24,17222\",\",515,2,17200,515,55,17253\",\",519,2,17319,519,15,17332\",\",519,16,17333,519,24,17341\",\",519,64,17381,519,75,17392\",\",519,2,17319,519,77,17394\",\",523,2,17466,523,15,17479\",\",523,16,17480,523,24,17488\",\",523,75,17539,523,86,17550\",\",523,2,17466,523,88,17552\",\",527,7,17638,527,21,17652\",\",528,4,17659,528,67,17722\",\",530,2,17731,530,15,17744\",\",530,16,17745,530,24,17753\",\",530,46,17775,530,62,17791\",\",530,2,17731,530,64,17793\",\",534,7,17885,534,21,17899\",\",535,4,17906,535,73,17975\",\",537,2,17984,537,15,17997\",\",537,16,17998,537,24,18006\",\",537,2,17984,537,92,18074\",\",541,2,18130,541,15,18143\",\",541,16,18144,541,24,18152\",\",541,2,18130,541,42,18170\",\",545,2,18226,545,15,18239\",\",545,16,18240,545,24,18248\",\",545,2,18226,545,42,18266\",\",549,2,18320,549,15,18333\",\",549,16,18334,549,24,18342\",\",549,33,18351,549,44,18362\",\",549,2,18320,549,46,18364\",\",553,2,18418,553,15,18431\",\",553,16,18432,553,24,18440\",\",553,33,18449,553,44,18460\",\",553,2,18418,553,46,18462\",\",557,2,18516,557,15,18529\",\",557,16,18530,557,24,18538\",\",557,33,18547,557,44,18558\",\",557,2,18516,557,46,18560\",\",561,2,18614,561,15,18627\",\",561,16,18628,561,24,18636\",\",561,33,18645,561,44,18656\",\",561,2,18614,561,46,18658\",\",573,4,18991,573,25,19012\",\",577,30,19074,577,38,19082\",\",577,17,19061,577,73,19117\",\",578,2,19120,578,15,19133\",\",578,16,19134,578,24,19142\",\",578,2,19120,578,45,19163\",\",582,24,19230,582,29,19235\",\",582,41,19247,582,47,19253\",\",582,2,19208,582,49,19255\",\",594,4,19596,594,25,19617\",\",598,30,19679,598,38,19687\",\",598,17,19666,598,73,19722\",\",599,2,19725,599,15,19738\",\",599,16,19739,599,24,19747\",\",599,2,19725,599,45,19768\",\",612,4,20153,612,25,20174\",\",612,4,20153,612,45,20194\",\",615,30,20234,615,38,20242\",\",615,17,20221,615,72,20276\",\",616,2,20279,616,15,20292\",\",616,16,20293,616,24,20301\",\",616,2,20279,616,45,20322\",\",628,4,20674,628,25,20695\",\",628,4,20674,628,45,20715\",\",631,48,20773,631,57,20782\",\",631,30,20755,631,65,20790\",\",632,30,20822,632,38,20830\",\",632,17,20809,632,69,20861\",\",633,2,20864,633,15,20877\",\",633,16,20878,633,24,20886\",\",633,2,20864,633,45,20907\",\",637,24,20986,637,29,20991\",\",637,41,21003,637,47,21009\",\",637,2,20964,637,49,21011\",\",645,10,21145,645,29,21164\",\",646,10,21176,646,29,21195\",\",647,18,21214,647,38,21234\",\",647,18,21214,647,47,21243\",\",650,11,21285,650,33,21307\",\",650,7,21281,650,34,21308\",\",651,4,21315,651,50,21361\",\",653,11,21379,653,25,21393\",\",653,7,21375,653,26,21394\",\",654,4,21401,654,80,21477\",\",657,37,21522,657,52,21537\",\",657,32,21517,657,58,21543\",\",657,10,21495,657,91,21576\",\",658,2,21579,658,15,21592\",\",658,16,21593,658,24,21601\",\",658,41,21618,658,56,21633\",\",658,41,21618,658,87,21664\",\",658,36,21613,658,88,21665\",\",658,2,21579,658,90,21667\",\",662,16,21780,662,20,21784\",\",662,15,21779,662,46,21810\",\",665,19,21876,665,40,21897\",\",666,12,21910,666,42,21940\",\",667,12,21953,667,42,21983\",\",670,50,22085,670,63,22098\",\",670,50,22085,670,67,22102\",\",670,42,22077,670,68,22103\",\",670,37,22072,670,68,22103\",\",670,13,22048,670,70,22105\",\",670,13,22048,670,77,22112\",\",670,93,22128,670,109,22144\",\",670,80,22115,670,110,22145\",\",670,13,22048,670,110,22145\",\",671,50,22196,671,63,22209\",\",671,50,22196,671,67,22213\",\",671,42,22188,671,68,22214\",\",671,37,22183,671,68,22214\",\",671,13,22159,671,70,22216\",\",671,13,22159,671,77,22223\",\",671,93,22239,671,109,22255\",\",671,80,22226,671,110,22256\",\",671,13,22159,671,110,22256\",\",672,9,22266,672,36,22293\",\",673,13,22307,673,33,22327\",\",679,9,22426,679,23,22440\",\",679,9,22426,679,30,22447\",\",679,37,22454,679,54,22471\",\",679,37,22454,679,59,22476\",\",679,36,22453,679,60,22477\",\",680,44,22529,680,61,22546\",\",680,40,22525,680,61,22546\",\",680,16,22501,680,62,22547\",\",680,8,22493,680,66,22551\",\",681,8,22560,681,25,22577\",\",681,8,22560,681,29,22581\",\",682,44,22633,682,61,22650\",\",682,40,22629,682,61,22650\",\",682,16,22605,682,62,22651\",\",682,8,22597,682,66,22655\",\",684,16,22692,684,32,22708\",\",684,8,22684,684,36,22712\",\",687,42,22767,687,63,22788\",\",687,30,22755,687,64,22789\",\",687,23,22748,687,64,22789\",\",687,12,22737,687,65,22790\",\",688,43,22834,688,64,22855\",\",688,33,22824,688,65,22856\",\",688,26,22817,688,65,22856\",\",688,15,22806,688,66,22857\",\",689,41,22899,689,55,22913\",\",689,29,22887,689,62,22920\",\",689,14,22872,689,63,22921\",\",690,41,22963,690,58,22980\",\",690,60,22982,690,69,22991\",\",690,29,22951,690,70,22992\",\",690,14,22936,690,71,22993\",\",691,19,23013,691,40,23034\",\",691,10,23004,691,41,23035\",\",691,10,23004,691,72,23066\",\",692,2,23069,692,15,23082\",\",693,4,23088,693,12,23096\",\",693,29,23113,693,66,23150\",\",693,24,23108,693,67,23151\",\",692,2,23069,694,5,23158\",\",698,17,23256,698,25,23264\",\",700,6,23297,700,78,23369\",\",702,21,23410,702,29,23418\",\",702,21,23410,702,49,23438\",\",703,48,23487,703,55,23494\",\",703,36,23475,703,56,23495\",\",703,58,23497,703,65,23504\",\",703,28,23467,703,66,23505\",\",703,18,23457,703,82,23521\",\",703,18,23457,703,113,23552\",\",704,6,23559,704,19,23572\",\",704,20,23573,704,28,23581\",\",704,55,23608,704,65,23618\",\",704,67,23620,704,80,23633\",\",704,45,23598,704,92,23645\",\",704,40,23593,704,93,23646\",\",704,6,23559,704,95,23648\",\",698,2,23241,705,5,23654\",\",709,19,23742,709,50,23773\",\",710,17,23792,710,25,23800\",\",710,17,23792,710,49,23824\",\",711,23,23848,711,32,23857\",\",711,34,23859,711,55,23880\",\",711,57,23882,711,78,23903\",\",711,57,23882,711,89,23914\",\",712,15,23932,712,43,23960\",\",712,15,23932,712,74,23991\",\",713,16,24008,713,29,24021\",\",713,30,24022,713,38,24030\",\",713,16,24008,713,57,24049\",\",714,30,24080,714,51,24101\",\",714,30,24080,714,62,24112\",\",714,18,24068,714,78,24128\",\",715,47,24176,715,71,24200\",\",717,2,24204,717,65,24267\",\",721,19,24361,721,50,24392\",\",722,17,24411,722,25,24419\",\",722,17,24411,722,49,24443\",\",723,23,24467,723,44,24488\",\",723,23,24467,723,64,24508\",\",724,23,24533,724,32,24542\",\",724,34,24544,724,55,24565\",\",724,71,24581,724,87,24597\",\",724,57,24567,724,88,24598\",\",724,57,24567,724,119,24629\",\",725,15,24647,725,43,24675\",\",725,15,24647,725,74,24706\",\",726,16,24723,726,29,24736\",\",726,30,24737,726,38,24745\",\",726,16,24723,726,57,24764\",\",727,44,24809,727,60,24825\",\",727,30,24795,727,61,24826\",\",727,18,24783,727,77,24842\",\",729,40,24931,729,55,24946\",\",729,20,24911,729,67,24958\",\",729,4,24895,729,83,24974\",\",731,2,24978,731,65,25041\",\",735,23,25133,735,44,25154\",\",735,23,25133,735,64,25174\",\",736,32,25208,736,40,25216\",\",736,32,25208,736,64,25240\",\",736,16,25192,736,65,25241\",\",738,6,25256,738,28,25278\",\",739,17,25303,739,30,25316\",\",739,31,25317,739,39,25325\",\",739,17,25303,739,65,25351\",\",741,8,25412,741,46,25450\",\",742,6,25457,742,66,25517\",\",743,6,25524,743,28,25546\",\",744,17,25571,744,30,25584\",\",744,31,25585,744,39,25593\",\",744,17,25571,744,65,25619\",\",746,8,25680,746,46,25718\",\",747,6,25725,747,66,25785\",\",748,6,25792,748,27,25813\",\",749,17,25837,749,30,25850\",\",749,31,25851,749,39,25859\",\",749,17,25837,749,64,25884\",\",751,8,25945,751,45,25982\",\",752,6,25989,752,66,26049\",\",753,47,26097,753,54,26104\",\",753,33,26083,753,55,26105\",\",753,33,26083,753,61,26111\",\",752,6,25989,753,63,26113\",\",754,6,26120,754,27,26141\",\",755,17,26166,755,30,26179\",\",755,31,26180,755,39,26188\",\",755,17,26166,755,61,26210\",\",757,8,26271,757,45,26308\",\",758,6,26315,758,66,26375\",\",759,17,26393,759,93,26469\",\",766,37,26636,766,45,26644\",\",766,37,26636,766,57,26656\",\",766,20,26619,766,58,26657\",\",767,17,26675,767,37,26695\",\",768,7,26703,768,38,26734\",\",770,10,26815,770,40,26845\",\",769,10,26746,770,40,26845\",\",769,10,26746,771,23,26869\",\",772,10,26880,772,37,26907\",\",769,10,26746,772,37,26907\",\",769,4,26740,772,38,26908\",\",778,8,27011,781,11,27104\",\",777,6,26973,781,16,27109\",\",776,4,26931,781,31,27124\",\",786,31,27315,786,57,27341\",\",787,28,27370,787,42,27384\",\",788,11,27396,788,42,27427\",\",790,14,27496,790,34,27516\",\",789,14,27443,790,34,27516\",\",789,14,27443,791,27,27544\",\",792,14,27559,792,44,27589\",\",789,14,27443,792,44,27589\",\",789,14,27443,793,27,27617\",\",794,14,27632,794,41,27659\",\",789,14,27443,794,41,27659\",\",789,8,27437,794,42,27660\",\",783,46,27177,783,54,27185\",\",783,46,27177,783,66,27197\",\",783,28,27159,783,67,27198\",\",785,28,27260,785,48,27280\",\",785,19,27251,785,49,27281\",\",783,4,27135,796,7,27678\",\",799,2,27688,799,15,27701\",\",799,16,27702,799,24,27710\",\",799,39,27725,799,66,27752\",\",799,2,27688,799,68,27754\",\",804,40,27915,804,54,27929\",\",804,24,27899,804,55,27930\",\",803,2,27829,804,56,27931\",\",808,37,28038,808,45,28046\",\",808,37,28038,808,55,28056\",\",808,20,28021,808,56,28057\",\",809,17,28075,809,35,28093\",\",810,7,28101,810,38,28132\",\",812,10,28211,812,40,28241\",\",811,10,28144,812,40,28241\",\",811,10,28144,813,23,28265\",\",814,10,28276,814,37,28303\",\",811,10,28144,814,37,28303\",\",811,4,28138,814,38,28304\",\",819,8,28401,819,39,28432\",\",818,6,28364,819,44,28437\",\",817,4,28324,819,57,28450\",\",823,31,28630,823,57,28656\",\",824,28,28685,824,42,28699\",\",825,11,28711,825,42,28742\",\",827,14,28809,827,34,28829\",\",826,14,28758,827,34,28829\",\",826,14,28758,828,27,28857\",\",829,14,28872,829,44,28902\",\",826,14,28758,829,44,28902\",\",826,14,28758,830,27,28930\",\",831,14,28945,831,41,28972\",\",826,14,28758,831,41,28972\",\",826,8,28752,831,42,28973\",\",820,46,28498,820,54,28506\",\",820,46,28498,820,64,28516\",\",820,28,28480,820,65,28517\",\",822,28,28577,822,46,28595\",\",822,19,28568,822,47,28596\",\",820,4,28456,833,7,28991\",\",835,32,29030,835,58,29056\",\",835,18,29016,835,59,29057\",\",835,18,29016,835,76,29074\",\",836,38,29113,836,47,29122\",\",836,20,29095,836,61,29136\",\",837,14,29152,837,22,29160\",\",837,14,29152,837,37,29175\",\",838,42,29218,838,60,29236\",\",838,34,29210,838,61,29237\",\",838,17,29193,838,62,29238\",\",839,42,29281,839,60,29299\",\",839,34,29273,839,61,29300\",\",839,17,29256,839,62,29301\",\",840,2,29304,840,15,29317\",\",841,4,29323,841,12,29331\",\",840,2,29304,841,40,29359\",\",843,22,29406,843,39,29423\",\",843,14,29398,843,54,29438\",\",844,22,29463,844,42,29483\",\",844,14,29455,844,57,29498\",\",840,2,29304,844,58,29499\",\",848,61,29629,848,75,29643\",\",848,47,29615,848,76,29644\",\",848,2,29570,848,77,29645\",\",854,37,29902,854,45,29910\",\",854,37,29902,854,55,29920\",\",854,20,29885,854,56,29921\",\",855,17,29939,855,32,29954\",\",856,7,29962,856,38,29993\",\",858,10,30073,858,40,30103\",\",857,10,30005,858,40,30103\",\",857,10,30005,859,23,30127\",\",860,10,30138,860,37,30165\",\",857,10,30005,860,37,30165\",\",857,4,29999,860,38,30166\",\",865,8,30263,865,39,30294\",\",864,6,30226,865,44,30299\",\",863,4,30186,865,54,30309\",\",870,33,30498,870,59,30524\",\",871,30,30555,871,44,30569\",\",872,18,30588,872,38,30608\",\",873,13,30622,873,44,30653\",\",874,16,30671,874,63,30718\",\",874,16,30671,875,29,30748\",\",876,16,30765,876,46,30795\",\",874,16,30671,876,46,30795\",\",874,16,30671,877,29,30825\",\",878,16,30842,878,43,30869\",\",874,16,30671,878,43,30869\",\",874,10,30665,878,44,30870\",\",882,22,30996,882,43,31017\",\",883,17,31035,883,30,31048\",\",883,17,31035,883,35,31053\",\",884,20,31075,884,51,31106\",\",884,20,31075,884,64,31119\",\",884,20,31075,884,74,31129\",\",884,20,31075,885,50,31180\",\",884,14,31069,885,51,31181\",\",887,17,31215,887,28,31226\",\",887,17,31215,887,32,31230\",\",888,20,31252,888,51,31283\",\",888,20,31252,888,64,31296\",\",888,20,31252,888,74,31306\",\",888,20,31252,889,56,31363\",\",888,14,31246,889,57,31364\",\",891,17,31398,891,28,31409\",\",891,17,31398,891,32,31413\",\",892,20,31435,892,51,31466\",\",892,20,31435,892,64,31479\",\",892,20,31435,892,74,31489\",\",892,20,31435,893,57,31547\",\",892,14,31429,893,58,31548\",\",880,56,30939,880,70,30953\",\",880,47,30930,880,71,30954\",\",880,8,30891,896,11,31590\",\",866,46,30357,866,54,30365\",\",866,46,30357,866,64,30375\",\",866,28,30339,866,65,30376\",\",868,28,30433,868,43,30448\",\",868,19,30424,868,44,30449\",\",866,4,30315,898,7,31608\",\",901,33,31678,901,52,31697\",\",901,54,31699,901,62,31707\",\",901,54,31699,901,66,31711\",\",901,19,31664,901,67,31712\",\",902,15,31728,902,45,31758\",\",906,23,31935,906,35,31947\",\",906,6,31918,906,36,31948\",\",905,4,31849,907,7,31956\",\",903,21,31780,908,5,31962\",\",909,2,31965,909,34,31997\",\",916,37,32294,916,45,32302\",\",916,37,32294,916,55,32312\",\",916,20,32277,916,56,32313\",\",917,17,32331,917,32,32346\",\",918,7,32354,918,38,32385\",\",920,10,32465,920,40,32495\",\",919,10,32397,920,40,32495\",\",919,10,32397,921,23,32519\",\",922,10,32530,922,37,32557\",\",919,10,32397,922,37,32557\",\",919,4,32391,922,38,32558\",\",926,8,32616,926,38,32646\",\",925,6,32580,926,48,32656\",\",932,18,32830,932,38,32850\",\",933,13,32864,933,27,32878\",\",933,13,32864,933,32,32883\",\",934,16,32901,934,47,32932\",\",934,16,32901,935,56,32989\",\",936,30,33020,936,44,33034\",\",936,16,33006,936,45,33035\",\",934,16,32901,936,45,33035\",\",934,16,32901,936,52,33042\",\",934,10,32895,936,53,33043\",\",938,13,33069,938,25,33081\",\",938,13,33069,938,29,33085\",\",939,16,33103,939,47,33134\",\",939,16,33103,940,52,33187\",\",939,10,33097,940,53,33188\",\",942,13,33214,942,25,33226\",\",942,13,33214,942,29,33230\",\",943,16,33248,943,47,33279\",\",943,16,33248,944,53,33333\",\",943,10,33242,944,54,33334\",\",928,46,32704,928,54,32712\",\",928,46,32704,928,64,32722\",\",928,28,32686,928,65,32723\",\",930,28,32780,930,43,32795\",\",930,19,32771,930,44,32796\",\",928,4,32662,947,7,33364\",\",950,33,33434,950,52,33453\",\",950,54,33455,950,62,33463\",\",950,54,33455,950,66,33467\",\",950,19,33420,950,67,33468\",\",951,15,33484,951,48,33517\",\",954,14,33614,954,26,33626\",\",954,4,33604,954,27,33627\",\",952,21,33539,955,5,33633\",\",956,2,33636,956,34,33668\",\",960,2,33718,960,15,33731\",\",960,16,33732,960,24,33740\",\",960,31,33747,960,40,33756\",\",960,2,33718,960,42,33758\",\",964,2,33808,964,15,33821\",\",964,16,33822,964,24,33830\",\",964,31,33837,964,40,33846\",\",964,2,33808,964,42,33848\",\",968,2,33904,968,15,33917\",\",968,16,33918,968,24,33926\",\",968,2,33904,968,41,33943\",\",995,59,34655,995,70,34666\",\",995,51,34647,995,71,34667\",\",995,27,34623,995,38,34634\",\",995,8,34604,995,75,34671\",\",998,15,34726,998,36,34747\",\",999,15,34764,999,36,34785\",\",1000,15,34802,1000,36,34823\",\",1001,15,34840,1001,36,34861\",\",991,2,34415,1004,5,34900\",\",1010,21,35091,1010,31,35101\",\",1012,21,35147,1012,28,35154\",\",1012,21,35147,1012,33,35159\",\",1010,6,35076,1013,9,35169\",\",1014,21,35195,1014,31,35205\",\",1016,21,35251,1016,28,35258\",\",1016,21,35251,1016,33,35263\",\",1014,6,35180,1017,9,35273\",\",1018,21,35299,1018,31,35309\",\",1020,21,35355,1020,39,35373\",\",1020,21,35355,1020,44,35378\",\",1018,6,35284,1021,9,35388\",\",1022,21,35414,1022,31,35424\",\",1024,21,35470,1024,39,35488\",\",1024,21,35470,1024,44,35493\",\",1022,6,35399,1025,9,35503\",\",1009,4,35040,1026,7,35511\",\",1009,4,35040,1026,26,35530\",\",1008,2,34998,1027,5,35536\",\",1033,8,35678,1033,18,35688\",\",1033,23,35693,1033,36,35706\",\",1035,25,35769,1035,32,35776\",\",1035,34,35778,1035,44,35788\",\",1035,17,35761,1035,45,35789\",\",1036,25,35816,1036,32,35823\",\",1036,34,35825,1036,44,35835\",\",1036,17,35808,1036,45,35836\",\",1037,25,35863,1037,32,35870\",\",1037,34,35872,1037,44,35882\",\",1037,17,35855,1037,45,35883\",\",1038,25,35910,1038,32,35917\",\",1038,34,35919,1038,44,35929\",\",1038,17,35902,1038,45,35930\",\",1041,8,35976,1041,18,35986\",\",1042,8,36003,1042,21,36016\",\",1031,2,35608,1045,5,36081\",\",1121,16,37882,1121,25,37891\",\",1121,15,37881,1121,88,37954\",\",1121,10,37876,1121,89,37955\",\",1177,18,39188,1177,27,39197\",\",1301,9,41810,1301,20,41821\",\",1303,22,41863,1303,45,41886\",\",1303,17,41858,1303,46,41887\",\",1355,23,42882,1355,45,42904\",\",1703,65,53461,1703,83,53479\",\",1703,65,53461,1703,95,53491\",\",1703,35,53431,1703,96,53492\",\",1703,21,53417,1703,98,53494\",\",1705,33,53550,1705,37,53554\",\",1705,39,53556,1705,98,53615\",\",1706,71,53689,1706,86,53704\",\",1706,71,53689,1706,102,53720\",\",1706,49,53667,1706,120,53738\",\",1706,39,53657,1706,121,53739\",\",1705,22,53539,1706,123,53741\",\",1703,4,53400,1707,7,53749\",\",1537,11,47404,1537,25,47418\",\",1538,8,47429,1538,60,47481\",\",1540,6,47498,1540,19,47511\",\",1540,20,47512,1540,28,47520\",\",1540,6,47498,1540,54,47546\",\",1543,6,47624,1543,19,47637\",\",1543,20,47638,1543,28,47646\",\",1543,6,47624,1543,62,47680\",\",1559,11,48249,1559,26,48264\",\",1560,8,48275,1560,56,48323\",\",1562,6,48340,1562,19,48353\",\",1562,20,48354,1562,28,48362\",\",1562,6,48340,1562,54,48388\",\",1565,6,48466,1565,19,48479\",\",1565,20,48480,1565,28,48488\",\",1565,6,48466,1565,62,48522\",\",1576,11,48857,1576,25,48871\",\",1577,8,48882,1577,60,48934\",\",1579,6,48951,1579,19,48964\",\",1579,20,48965,1579,28,48973\",\",1579,6,48951,1579,54,48999\",\",1582,6,49077,1582,19,49090\",\",1582,20,49091,1582,28,49099\",\",1582,6,49077,1582,62,49133\",\",1642,11,51211,1642,25,51225\",\",1643,8,51235,1643,60,51287\",\",1645,6,51304,1645,19,51317\",\",1645,20,51318,1645,28,51326\",\",1645,6,51304,1645,54,51352\",\",1679,6,52580,1679,19,52593\",\",1679,20,52594,1679,28,52602\",\",1679,6,52580,1679,51,52625\",\",1687,23,52877,1687,31,52885\",\",1687,44,52898,1687,59,52913\",\",1687,6,52860,1687,61,52915\",\",1690,23,53003,1690,31,53011\",\",1690,47,53027,1690,65,53045\",\",1690,6,52986,1690,67,53047\",\",1693,23,53135,1693,31,53143\",\",1693,47,53159,1693,65,53177\",\",1693,6,53118,1693,67,53179\",\",1696,23,53259,1696,31,53267\",\",1697,22,53292,1697,36,53306\",\",1698,22,53330,1698,36,53344\",\",1696,6,53242,1699,8,53353\",\",1519,0,46727,1709,3,53759\",\",1520,2,46746,1545,34,47724\",\",1546,2,47727,1567,34,48566\",\",1568,2,48569,1583,8,49142\",\",1584,2,49145,1588,26,49333\",\",1589,2,49336,1594,34,49540\",\",1595,2,49543,1606,35,49944\",\",1607,2,49947,1624,35,50595\",\",1625,2,50598,1652,40,51606\",\",1653,2,51609,1671,40,52338\",\",1672,2,52341,1680,8,52634\",\",1681,2,52637,1700,8,53362\",\",1712,6,53826,1712,13,53833\",\",1712,6,53826,1712,18,53838\",\",1712,24,53844,1712,32,53852\",\",1712,24,53844,1712,37,53857\",\",1712,23,53843,1712,38,53858\",\",1713,4,53864,1713,54,53914\",\",1777,27,56169,1777,35,56177\",\",1777,8,56150,1777,36,56178\",\",1778,4,56183,1778,12,56191\",\",1778,4,56183,1778,38,56217\",\",1781,27,56278,1781,35,56286\",\",1781,8,56259,1781,36,56287\",\",1782,4,56292,1782,12,56300\",\",1782,4,56292,1782,39,56327\",\",1785,4,56378,1785,17,56391\",\",1785,18,56392,1785,26,56400\",\",1785,4,56378,1785,42,56416\",\",1788,4,56467,1788,17,56480\",\",1788,18,56481,1788,26,56489\",\",1788,4,56467,1788,42,56505\",\",1791,4,56558,1791,17,56571\",\",1791,18,56572,1791,26,56580\",\",1791,4,56558,1791,44,56598\",\",1794,35,56665,1794,51,56681\",\",1794,4,56634,1794,52,56682\",\",1767,12,55749,1767,28,55765\",\",1767,34,55771,1767,54,55791\",\",1767,63,55800,1767,90,55827\",\",1767,59,55796,1767,91,55828\",\",1768,8,55838,1768,74,55904\",\",1770,24,55939,1770,32,55947\",\",1770,6,55921,1770,60,55975\",\",1719,0,53946,1796,3,56692\",\",1720,2,53966,1721,35,54055\",\",1722,2,54058,1725,26,54201\",\",1726,2,54204,1731,20,54399\",\",1732,2,54402,1737,24,54595\",\",1738,2,54598,1743,24,54806\",\",1744,2,54809,1750,24,55045\",\",1751,2,55048,1771,8,55984\",\",1803,2,56938,1805,26,57005\",\",1809,7,57091,1809,18,57102\",\",1809,22,57106,1809,33,57117\",\",1809,7,57091,1809,33,57117\",\",1810,4,57123,1810,61,57180\",\",1812,2,57189,1812,20,57207\",\",1813,2,57210,1813,20,57228\",\",1815,40,57298,1815,57,57315\",\",1815,59,57317,1815,78,57336\",\",1815,8,57266,1815,79,57337\",\",1814,2,57231,1816,22,57360\",\",1820,7,57472,1820,18,57483\",\",1820,22,57487,1820,33,57498\",\",1820,7,57472,1820,33,57498\",\",1821,4,57504,1821,69,57569\",\",1823,7,57583,1823,18,57594\",\",1823,22,57598,1823,37,57613\",\",1823,7,57583,1823,37,57613\",\",1824,4,57619,1824,73,57688\",\",1826,2,57697,1826,20,57715\",\",1827,2,57718,1827,20,57736\",\",1829,48,57814,1829,67,57833\",\",1829,8,57774,1829,68,57834\",\",1828,2,57739,1830,22,57857\",\",1834,7,57967,1834,18,57978\",\",1834,22,57982,1834,33,57993\",\",1834,7,57967,1834,33,57993\",\",1835,4,57999,1835,67,58062\",\",1837,7,58076,1837,18,58087\",\",1837,22,58091,1837,37,58106\",\",1837,7,58076,1837,37,58106\",\",1838,4,58112,1838,71,58179\",\",1840,2,58188,1840,20,58206\",\",1841,2,58209,1841,20,58227\",\",1843,40,58297,1843,57,58314\",\",1843,59,58316,1843,75,58332\",\",1843,8,58265,1843,76,58333\",\",1842,2,58230,1844,22,58356\",\",1851,7,58605,1851,18,58616\",\",1851,22,58620,1851,33,58631\",\",1851,7,58605,1851,33,58631\",\",1852,4,58637,1852,64,58697\",\",1854,2,58706,1854,20,58724\",\",1855,2,58727,1855,20,58745\",\",1857,40,58818,1857,57,58835\",\",1857,59,58837,1857,78,58856\",\",1857,8,58786,1857,79,58857\",\",1856,2,58748,1858,25,58883\",\",1865,7,59005,1865,18,59016\",\",1865,22,59020,1865,33,59031\",\",1865,7,59005,1865,33,59031\",\",1866,4,59037,1866,72,59105\",\",1868,7,59119,1868,18,59130\",\",1868,22,59134,1868,37,59149\",\",1868,7,59119,1868,37,59149\",\",1869,4,59155,1869,76,59227\",\",1871,2,59236,1871,20,59254\",\",1872,2,59257,1872,20,59275\",\",1873,2,59278,1873,27,59303\",\",1875,48,59384,1875,67,59403\",\",1875,8,59344,1875,68,59404\",\",1874,2,59306,1876,25,59430\",\",1883,7,59550,1883,18,59561\",\",1883,22,59565,1883,33,59576\",\",1883,7,59550,1883,33,59576\",\",1884,4,59582,1884,72,59650\",\",1886,7,59664,1886,18,59675\",\",1886,22,59679,1886,37,59694\",\",1886,7,59664,1886,37,59694\",\",1887,4,59700,1887,76,59772\",\",1889,2,59781,1889,20,59799\",\",1890,2,59802,1890,20,59820\",\",1891,2,59823,1891,26,59847\",\",1893,40,59920,1893,57,59937\",\",1893,59,59939,1893,75,59955\",\",1893,8,59888,1893,76,59956\",\",1892,2,59850,1894,25,59982\",\",1908,2,60279,1908,26,60303\",\",1909,2,60306,1909,24,60328\",\",1910,2,60331,1910,27,60356\",\",1913,17,60389,1913,32,60404\",\",1914,17,60422,1914,32,60437\",\",1915,20,60458,1915,48,60486\",\",1919,7,60525,1919,24,60542\",\",1920,4,60548,1920,45,60589\",\",1922,7,60603,1922,35,60631\",\",1923,4,60637,1923,69,60702\",\",1926,47,60757,1926,73,60783\",\",1930,9,60838,1930,53,60882\",\",1933,35,60992,1933,39,60996\",\",1933,17,60974,1933,48,61005\",\",1933,17,60974,1933,65,61022\",\",1934,33,61057,1934,37,61061\",\",1934,40,61064,1934,49,61073\",\",1934,15,61039,1934,55,61079\",\",1934,15,61039,1934,72,61096\",\",1929,16,60802,1935,22,61120\",\",1937,2,61124,1937,65,61187\",\",1945,17,61328,1945,32,61343\",\",1946,17,61361,1946,32,61376\",\",1948,9,61417,1948,18,61426\",\",1949,6,61434,1949,63,61491\",\",1947,2,61379,1951,5,61505\",\",1952,7,61513,1952,35,61541\",\",1953,4,61547,1953,79,61622\",\",1955,18,61647,1955,34,61663\",\",1956,7,61671,1956,36,61700\",\",1957,4,61706,1957,80,61782\",\",1959,7,61796,1959,24,61813\",\",1960,4,61819,1960,56,61871\",\",1963,10,61921,1963,20,61931\",\",1963,26,61937,1963,36,61947\",\",1963,25,61936,1963,37,61948\",\",1964,6,61956,1964,66,62016\",\",1962,2,61880,1966,5,62030\",\",1967,2,62033,1967,24,62055\",\",1968,2,62058,1968,25,62081\",\",1969,2,62084,1969,27,62109\",\",1971,9,62148,1971,45,62184\",\",1970,2,62112,1972,22,62207\",\",1980,17,62437,1980,32,62452\",\",1981,17,62470,1981,32,62485\",\",1983,9,62526,1983,18,62535\",\",1984,6,62543,1984,53,62590\",\",1982,2,62488,1986,5,62604\",\",1987,7,62612,1987,35,62640\",\",1988,4,62646,1988,69,62711\",\",1990,7,62725,1990,24,62742\",\",1991,4,62748,1991,46,62790\",\",1993,2,62799,1993,24,62821\",\",1994,2,62824,1994,27,62849\",\",1996,37,62916,1996,57,62936\",\",1996,9,62888,1996,58,62937\",\",1995,2,62852,1997,22,62960\",\",2005,17,63255,2005,32,63270\",\",2006,17,63288,2006,32,63303\",\",2008,9,63344,2008,18,63353\",\",2009,6,63361,2009,53,63408\",\",2007,2,63306,2011,5,63422\",\",2012,7,63430,2012,35,63458\",\",2013,4,63464,2013,69,63529\",\",2015,7,63543,2015,24,63560\",\",2016,4,63566,2016,46,63608\",\",2018,2,63617,2018,26,63641\",\",2019,2,63644,2019,24,63666\",\",2020,2,63669,2020,27,63694\",\",2022,35,63759,2022,55,63779\",\",2022,9,63733,2022,64,63788\",\",2021,2,63697,2023,22,63811\",\",2032,2,64044,2032,24,64066\",\",2033,2,64069,2033,27,64094\",\",2036,17,64127,2036,32,64142\",\",2037,17,64160,2037,32,64175\",\",2038,20,64196,2038,48,64224\",\",2041,7,64262,2041,24,64279\",\",2042,4,64285,2042,45,64326\",\",2044,7,64340,2044,35,64368\",\",2045,4,64374,2045,69,64439\",\",2048,47,64494,2048,73,64520\",\",2051,9,64574,2051,45,64610\",\",2054,35,64720,2054,39,64724\",\",2054,17,64702,2054,48,64733\",\",2054,17,64702,2054,65,64750\",\",2055,33,64785,2055,37,64789\",\",2055,40,64792,2055,49,64801\",\",2055,15,64767,2055,55,64807\",\",2055,15,64767,2055,72,64824\",\",2050,16,64538,2056,22,64848\",\",2058,2,64852,2058,65,64915\",\",2069,2,65257,2069,26,65281\",\",2070,7,65289,2070,24,65306\",\",2070,7,65289,2070,29,65311\",\",2071,4,65317,2071,49,65362\",\",2074,38,65435,2074,61,65458\",\",2074,63,65460,2074,88,65485\",\",2074,8,65405,2074,89,65486\",\",2073,2,65371,2075,21,65509\",\",2083,2,65746,2083,26,65770\",\",2084,7,65778,2084,24,65795\",\",2084,7,65778,2084,29,65800\",\",2085,4,65806,2085,49,65851\",\",2087,2,65860,2087,26,65884\",\",2088,7,65892,2088,22,65907\",\",2088,26,65911,2088,43,65928\",\",2088,7,65892,2088,43,65928\",\",2089,4,65934,2089,85,66015\",\",2092,38,66088,2092,61,66111\",\",2092,63,66113,2092,79,66129\",\",2092,8,66058,2092,80,66130\",\",2091,2,66024,2093,21,66153\",\",2101,2,66386,2101,26,66410\",\",2102,7,66418,2102,24,66435\",\",2102,7,66418,2102,29,66440\",\",2103,4,66446,2103,49,66491\",\",2105,2,66500,2105,27,66525\",\",2106,7,66533,2106,22,66548\",\",2106,26,66552,2106,43,66569\",\",2106,7,66533,2106,43,66569\",\",2107,4,66575,2107,85,66656\",\",2110,46,66737,2110,71,66762\",\",2110,8,66699,2110,72,66763\",\",2109,2,66665,2111,21,66786\",\",2120,7,66985,2120,28,67006\",\",2120,7,66985,2120,33,67011\",\",2121,4,67017,2121,45,67058\",\",2125,2,67086,2125,33,67117\",\",2129,23,67312,2129,41,67330\",\",2129,23,67312,2129,52,67341\",\",2129,23,67312,2129,56,67345\",\",2129,4,67293,2129,57,67346\",\",2128,37,67230,2128,59,67252\",\",2128,18,67211,2131,5,67360\",\",2133,11,67373,2133,40,67402\",\",2133,11,67373,2133,47,67409\",\",2135,44,67494,2135,74,67524\",\",2135,8,67458,2135,78,67528\",\",2134,2,67412,2136,33,67562\",\",2149,17,67923,2149,32,67938\",\",2150,17,67956,2150,37,67976\",\",2151,18,67995,2151,34,68011\",\",2152,44,68057,2152,69,68082\",\",2152,20,68033,2152,71,68084\",\",2155,7,68123,2155,24,68140\",\",2156,4,68146,2156,53,68195\",\",2158,7,68209,2158,25,68227\",\",2159,4,68234,2159,56,68286\",\",2161,7,68300,2161,35,68328\",\",2162,4,68334,2162,77,68407\",\",2164,38,68452,2164,52,68466\",\",2164,21,68435,2164,52,68466\",\",2164,7,68421,2164,67,68481\",\",2165,4,68487,2165,78,68561\",\",2169,19,68618,2169,36,68635\",\",2169,2,68601,2169,37,68636\",\",2170,2,68639,2170,27,68664\",\",2171,2,68667,2171,28,68693\",\",2173,46,68741,2173,87,68782\",\",2177,47,68913,2177,75,68941\",\",2177,27,68893,2177,76,68942\",\",2177,9,68875,2177,77,68943\",\",2180,13,69032,2180,50,69069\",\",2181,48,69119,2181,66,69137\",\",2181,32,69103,2181,67,69138\",\",2181,17,69088,2181,68,69139\",\",2182,59,69200,2182,68,69209\",\",2182,46,69187,2182,73,69214\",\",2182,30,69171,2182,74,69215\",\",2182,15,69156,2182,75,69216\",\",2176,16,68833,2183,28,69246\",\",2185,2,69250,2185,65,69313\",\",2198,17,69674,2198,32,69689\",\",2199,17,69707,2199,37,69727\",\",2200,18,69746,2200,34,69762\",\",2201,44,69808,2201,69,69833\",\",2201,20,69784,2201,71,69835\",\",2204,7,69874,2204,24,69891\",\",2205,4,69897,2205,53,69946\",\",2207,7,69960,2207,25,69978\",\",2208,4,69985,2208,56,70037\",\",2210,7,70051,2210,35,70079\",\",2211,4,70085,2211,77,70158\",\",2213,38,70203,2213,52,70217\",\",2213,21,70186,2213,52,70217\",\",2213,7,70172,2213,67,70232\",\",2214,4,70238,2214,78,70312\",\",2218,19,70369,2218,36,70386\",\",2218,2,70352,2218,37,70387\",\",2219,2,70390,2219,27,70415\",\",2220,2,70418,2220,28,70444\",\",2222,47,70493,2222,89,70535\",\",2226,47,70666,2226,75,70694\",\",2226,27,70646,2226,76,70695\",\",2226,9,70628,2226,77,70696\",\",2227,13,70711,2227,50,70748\",\",2228,48,70798,2228,66,70816\",\",2228,32,70782,2228,67,70817\",\",2228,17,70767,2228,68,70818\",\",2229,59,70879,2229,68,70888\",\",2229,46,70866,2229,73,70893\",\",2229,30,70850,2229,74,70894\",\",2229,15,70835,2229,75,70895\",\",2225,16,70586,2231,28,70952\",\",2233,2,70956,2233,65,71019\",\",2238,5,71286,2238,17,71298\",\",2238,21,71302,2238,33,71314\",\",2238,37,71318,2238,49,71330\",\",2238,53,71334,2238,65,71346\",\",2238,69,71350,2238,81,71362\",\",2241,6,71388,2241,14,71396\",\",2241,16,71398,2241,24,71406\",\",2241,26,71408,2241,34,71416\",\",2241,36,71418,2241,44,71426\",\",2241,46,71428,2241,54,71436\",\",2241,4,71386,2241,55,71437\",\",2241,74,71456,2241,81,71463\",\",2241,83,71465,2241,90,71472\",\",2241,92,71474,2241,99,71481\",\",2241,101,71483,2241,108,71490\",\",2241,110,71492,2241,117,71499\",\",2241,66,71448,2241,118,71500\",\",2241,58,71440,2241,119,71501\",\",2260,18,72075,2260,33,72090\",\",2261,14,72105,2261,25,72116\",\",2262,14,72131,2262,25,72142\",\",2263,18,72161,2263,33,72176\",\",2264,7,72184,2264,29,72206\",\",2265,4,72212,2265,66,72274\",\",2267,7,72288,2267,33,72314\",\",2268,4,72320,2268,76,72392\",\",2270,7,72406,2270,33,72432\",\",2271,4,72438,2271,76,72510\",\",2273,7,72524,2273,21,72538\",\",2274,4,72544,2274,52,72592\",\",2276,2,72601,2276,20,72619\",\",2277,2,72622,2277,20,72640\",\",2278,2,72643,2278,24,72665\",\",2281,57,72758,2281,76,72777\",\",2281,8,72709,2281,77,72778\",\",2280,2,72669,2282,27,72806\",\",2286,35,72937,2286,52,72954\",\",2286,2,72904,2286,69,72971\",\",2291,48,73160,2291,55,73167\",\",2291,11,73123,2291,71,73183\",\",2292,2,73186,2292,44,73228\",\",2303,17,73481,2303,32,73496\",\",2304,17,73514,2304,32,73529\",\",2305,7,73537,2305,35,73565\",\",2306,4,73571,2306,76,73643\",\",2308,7,73657,2308,24,73674\",\",2309,4,73680,2309,54,73730\",\",2311,14,73751,2311,31,73768\",\",2311,2,73739,2311,32,73769\",\",2314,11,73810,2314,23,73822\",\",2314,11,73810,2314,28,73827\",\",2315,8,73837,2315,71,73900\",\",2312,2,73772,2317,8,73919\",\",2318,2,73922,2318,27,73947\",\",2321,12,74032,2321,20,74040\",\",2321,36,74056,2321,45,74065\",\",2321,12,74032,2321,46,74066\",\",2321,4,74024,2321,52,74072\",\",2320,33,73982,2320,45,73994\",\",2320,33,73982,2320,51,74000\",\",2320,15,73964,2322,5,74078\",\",2324,12,74162,2324,20,74170\",\",2324,36,74186,2324,45,74195\",\",2324,12,74162,2324,46,74196\",\",2324,4,74154,2324,52,74202\",\",2323,33,74112,2323,45,74124\",\",2323,33,74112,2323,51,74130\",\",2323,15,74094,2325,5,74208\",\",2328,9,74247,2328,43,74281\",\",2328,9,74247,2328,74,74312\",\",2329,39,74353,2329,62,74376\",\",2329,38,74352,2329,67,74381\",\",2329,24,74338,2329,68,74382\",\",2329,12,74326,2329,69,74383\",\",2327,2,74212,2331,21,74426\",\",2336,16,74572,2336,27,74583\",\",2336,16,74572,2336,38,74594\",\",2336,16,74572,2336,42,74598\",\",2336,4,74560,2336,43,74599\",\",2335,29,74522,2335,43,74536\",\",2335,9,74502,2337,5,74605\",\",2340,7,74713,2340,21,74727\",\",2343,7,74767,2343,18,74778\",\",2343,25,74785,2343,42,74802\",\",2343,20,74780,2343,47,74807\",\",2343,49,74809,2343,60,74820\",\",2338,16,74622,2345,5,74835\",\",2346,22,74858,2346,34,74870\",\",2346,36,74872,2346,48,74884\",\",2346,2,74838,2346,49,74885\",\",2353,2,75037,2353,24,75059\",\",2355,19,75108,2355,40,75129\",\",2355,9,75098,2355,49,75138\",\",2354,2,75062,2356,22,75162\",\",2363,17,75377,2363,32,75392\",\",2364,17,75410,2364,32,75425\",\",2365,7,75433,2365,35,75461\",\",2366,4,75467,2366,77,75540\",\",2368,2,75549,2368,24,75571\",\",2369,2,75574,2369,27,75599\",\",2371,9,75638,2371,34,75663\",\",2370,2,75602,2372,22,75687\",\",2381,2,75946,2381,26,75970\",\",2382,2,75973,2382,24,75995\",\",2385,19,76045,2385,40,76066\",\",2385,9,76035,2385,57,76083\",\",2384,2,75999,2386,22,76107\",\",2394,17,76343,2394,27,76353\",\",2396,21,76397,2396,31,76407\",\",2398,13,76447,2398,27,76461\",\",2399,12,76475,2399,67,76530\",\",2410,17,76709,2410,27,76719\",\",2412,21,76763,2412,31,76773\",\",2414,13,76813,2414,27,76827\",\",2415,12,76841,2415,67,76896\",\",2428,44,77154,2428,48,77158\",\",2428,29,77139,2428,53,77163\",\",2429,48,77212,2429,52,77216\",\",2429,33,77197,2429,57,77221\",\",2430,47,77269,2430,51,77273\",\",2430,32,77254,2430,56,77278\",\",2431,49,77328,2431,53,77332\",\",2431,34,77313,2431,58,77337\",\",2435,10,77453,2435,33,77476\",\",2433,6,77374,2437,26,77516\",\",2441,10,77644,2441,45,77679\",\",2439,6,77565,2443,26,77719\",\",2446,29,77820,2446,52,77843\",\",2445,6,77757,2447,26,77874\",\",2451,14,77989,2451,39,78014\",\",2452,10,78025,2452,33,78048\",\",2449,6,77912,2454,26,78087\",\",2458,14,78209,2458,39,78234\",\",2459,10,78245,2459,39,78274\",\",2456,6,78132,2461,26,78313\",\",2465,10,78428,2465,32,78450\",\",2463,6,78350,2467,31,78494\",\",2472,14,78658,2472,39,78683\",\",2473,14,78698,2473,39,78723\",\",2474,10,78734,2474,33,78757\",\",2469,6,78532,2476,32,78802\",\",2427,2,77088,2477,5,78808\",\",2542,14,81487,2542,27,81500\",\",2542,32,81505,2542,47,81520\",\",2542,13,81486,2542,48,81521\",\",2545,17,81593,2545,29,81605\",\",2545,8,81584,2545,30,81606\",\",2546,35,81642,2546,41,81648\",\",2546,21,81628,2546,43,81650\",\",2547,25,81677,2547,34,81686\",\",2547,19,81671,2547,42,81694\",\",2546,4,81611,2549,7,81727\",\",2544,29,81552,2544,50,81573\",\",2544,7,81530,2550,5,81733\",\",2555,11,81827,2555,18,81834\",\",2556,12,81848,2556,20,81856\",\",2571,20,82191,2571,29,82200\",\",2571,19,82190,2571,35,82206\",\",2571,11,82182,2571,39,82210\",\",2572,21,82232,2572,44,82255\",\",2573,3,82279,2573,15,82291\",\",2573,17,82293,2573,29,82305\",\",2576,29,82341,2576,35,82347\",\",2576,29,82341,2576,66,82378\",\",2579,3,82432,2579,13,82442\",\",2579,3,82432,2579,19,82448\",\",2579,23,82452,2579,29,82458\",\",2579,3,82432,2579,29,82458\",\",2579,36,82465,2579,42,82471\",\",2579,46,82475,2579,56,82485\",\",2579,46,82475,2579,62,82491\",\",2579,36,82465,2579,62,82491\",\",2579,35,82464,2579,63,82492\",\",2583,3,82545,2583,13,82555\",\",2583,3,82545,2583,19,82561\",\",2583,23,82565,2583,29,82571\",\",2583,3,82545,2583,29,82571\",\",2583,36,82578,2583,42,82584\",\",2583,46,82588,2583,56,82598\",\",2583,46,82588,2583,62,82604\",\",2583,36,82578,2583,62,82604\",\",2583,35,82577,2583,63,82605\",\",2587,2,82658,2587,21,82677\",\",2587,26,82682,2587,45,82701\",\",2591,10,82759,2591,16,82765\",\",2591,19,82768,2591,25,82774\",\",2591,10,82759,2591,25,82774\",\",2591,2,82751,2591,26,82775\",\",2591,37,82786,2591,43,82792\",\",2591,46,82795,2591,52,82801\",\",2591,37,82786,2591,52,82801\",\",2591,29,82778,2591,53,82802\",\",2591,2,82751,2591,53,82802\",\",2599,19,83025,2599,29,83035\",\",2600,11,83047,2600,26,83062\",\",2598,44,82977,2598,54,82987\",\",2598,17,82950,2605,9,83145\",\",2606,6,83152,2606,15,83161\",\",2595,2,82869,2607,5,83167\",\",2611,27,83268,2611,34,83275\",\",2611,36,83277,2611,44,83285\",\",2611,19,83260,2611,45,83286\",\",2611,47,83288,2611,57,83298\",\",2611,47,83288,2611,63,83304\",\",2611,11,83252,2611,64,83305\",\",2612,27,83333,2612,34,83340\",\",2612,36,83342,2612,44,83350\",\",2612,19,83325,2612,45,83351\",\",2612,47,83353,2612,57,83363\",\",2612,47,83353,2612,63,83369\",\",2612,11,83317,2612,64,83370\",\",2613,27,83398,2613,34,83405\",\",2613,36,83407,2613,44,83415\",\",2613,19,83390,2613,45,83416\",\",2613,47,83418,2613,57,83428\",\",2613,47,83418,2613,63,83434\",\",2613,11,83382,2613,64,83435\",\",2614,27,83463,2614,34,83470\",\",2614,36,83472,2614,44,83480\",\",2614,19,83455,2614,45,83481\",\",2614,47,83483,2614,57,83493\",\",2614,47,83483,2614,63,83499\",\",2614,11,83447,2614,64,83500\",\",2616,31,83533,2616,38,83540\",\",2616,40,83542,2616,48,83550\",\",2616,18,83520,2616,49,83551\",\",2617,5,83558,2617,9,83562\",\",2617,16,83569,2617,23,83576\",\",2617,25,83578,2617,35,83588\",\",2617,25,83578,2617,41,83594\",\",2617,11,83564,2617,42,83595\",\",2617,49,83602,2617,56,83609\",\",2617,58,83611,2617,68,83621\",\",2617,58,83611,2617,74,83627\",\",2617,44,83597,2617,75,83628\",\",2627,9,83912,2627,16,83919\",\",2627,19,83922,2627,27,83930\",\",2627,9,83912,2627,27,83930\",\",2627,32,83935,2627,39,83942\",\",2627,42,83945,2627,50,83953\",\",2627,32,83935,2627,50,83953\",\",2627,8,83911,2627,51,83954\",\",2628,8,83969,2628,15,83976\",\",2628,23,83984,2628,30,83991\",\",2628,19,83980,2628,30,83991\",\",2628,8,83969,2628,31,83992\",\",2629,15,84014,2629,20,84019\",\",2629,14,84013,2629,25,84024\",\",2630,15,84047,2630,20,84052\",\",2630,14,84046,2630,25,84057\",\",2632,5,84071,2632,9,84075\",\",2633,11,84088,2633,21,84098\",\",2633,11,84088,2633,27,84104\",\",2633,31,84108,2633,41,84118\",\",2633,31,84108,2633,47,84124\",\",2633,29,84106,2633,48,84125\",\",2633,6,84083,2633,49,84126\",\",2634,11,84139,2634,21,84149\",\",2634,11,84139,2634,27,84155\",\",2634,31,84159,2634,41,84169\",\",2634,31,84159,2634,47,84175\",\",2634,29,84157,2634,48,84176\",\",2634,6,84134,2634,49,84177\",\",2635,7,84188,2635,25,84206\",\",2638,7,84237,2638,11,84241\",\",2639,15,84258,2639,25,84268\",\",2639,15,84258,2639,31,84274\",\",2639,13,84256,2639,32,84275\",\",2639,34,84277,2639,44,84287\",\",2639,34,84277,2639,50,84293\",\",2639,8,84251,2639,51,84294\",\",2640,15,84311,2640,25,84321\",\",2640,15,84311,2640,31,84327\",\",2640,13,84309,2640,32,84328\",\",2640,34,84330,2640,44,84340\",\",2640,34,84330,2640,50,84346\",\",2640,8,84304,2640,51,84347\",\",2632,4,84070,2641,7,84356\",\",2643,37,84400,2643,43,84406\",\",2643,27,84390,2643,43,84406\",\",2643,50,84413,2643,56,84419\",\",2643,50,84413,2643,66,84429\",\",2644,37,84472,2644,43,84478\",\",2644,27,84462,2644,43,84478\",\",2644,50,84485,2644,56,84491\",\",2644,50,84485,2644,66,84501\",\",2644,49,84484,2644,67,84502\",\",2643,2,84365,2644,69,84504\",\",2645,6,84511,2645,20,84525\",\",2654,12,84787,2654,36,84811\",\",2654,41,84816,2654,64,84839\",\",2655,13,84859,2655,17,84863\",\",2656,12,84890,2656,36,84914\",\",2657,21,84942,2657,55,84976\",\",2657,21,84942,2657,61,84982\",\",2658,28,85011,2658,38,85021\",\",2658,40,85023,2658,51,85034\",\",2658,15,84998,2658,52,85035\",\",2659,28,85068,2659,38,85078\",\",2659,40,85080,2659,51,85091\",\",2659,15,85055,2659,52,85092\",\",2660,15,85109,2660,19,85113\",\",2660,28,85122,2660,62,85156\",\",2660,28,85122,2660,68,85162\",\",2662,15,85197,2662,19,85201\",\",2664,12,85246,2664,35,85269\",\",2665,13,85289,2665,17,85293\",\",2665,19,85295,2665,53,85329\",\",2665,19,85295,2665,59,85335\",\",2667,27,85393,2667,61,85427\",\",2670,26,85517,2670,60,85551\",\",2670,26,85517,2670,66,85557\",\",2671,17,85575,2671,21,85579\",\",2667,12,85378,2672,15,85613\",\",2676,27,85721,2676,50,85744\",\",2674,8,85634,2677,11,85763\",\",2652,22,84694,2678,9,85773\",\",2649,13,84607,2680,5,85794\",\",2686,15,85948,2686,26,85959\",\",2687,15,85975,2687,29,85989\",\",2688,34,86024,2688,43,86033\",\",2688,45,86035,2688,54,86044\",\",2688,21,86011,2688,55,86045\",\",2688,73,86063,2688,82,86072\",\",2688,84,86074,2688,93,86083\",\",2688,60,86050,2688,94,86084\",\",2689,15,86101,2689,29,86115\",\",2689,10,86096,2689,35,86121\",\",2691,26,86162,2691,35,86171\",\",2691,20,86156,2691,44,86180\",\",2691,10,86146,2691,44,86180\",\",2685,20,85882,2694,9,86229\",\",2682,2,85798,2696,5,86248\",\",2699,0,86254,2703,3,86354\",\",2700,2,86274,2700,28,86300\",\",2701,2,86303,2701,31,86332\",\",2702,2,86335,2702,17,86350\",\",2710,43,86653,2710,68,86678\",\",2711,35,86719,2711,45,86729\",\",2708,6,86536,2712,9,86740\",\",2715,33,86838,2715,58,86863\",\",2716,35,86911,2716,60,86936\",\",2717,28,86965,2717,37,86974\",\",2717,40,86977,2717,49,86986\",\",2717,39,86976,2717,55,86992\",\",2714,6,86778,2718,9,87003\",\",2721,33,87093,2721,43,87103\",\",2722,37,87149,2722,46,87158\",\",2722,36,87148,2722,52,87164\",\",2722,54,87166,2722,63,87175\",\",2720,6,87033,2724,9,87223\",\",2706,11,86475,2725,5,87229\",\",2726,3,87233,2726,10,87240\",\",2726,12,87242,2726,19,87249\",\",2735,17,87410,2735,30,87423\",\",2735,47,87440,2735,54,87447\",\",2735,32,87425,2735,55,87448\",\",2736,17,87490,2736,31,87504\",\",2734,2,87375,2737,5,87510\",\",2742,22,87625,2742,33,87636\",\",2742,17,87620,2742,39,87642\",\",2744,9,87677,2744,16,87684\",\",2743,17,87661,2745,72,87791\",\",2749,15,87867,2749,71,87923\",\",2752,22,87974,2752,28,87980\",\",2752,22,87974,2752,39,87991\",\",2752,7,87959,2752,41,87993\",\",2752,65,88017,2752,71,88023\",\",2752,65,88017,2752,82,88034\",\",2752,50,88002,2752,84,88036\",\",2752,46,87998,2752,85,88037\",\",2753,10,88049,2754,57,88180\",\",2753,4,88043,2754,58,88181\",\",2757,16,88209,2757,55,88248\",\",2758,19,88268,2758,38,88287\",\",2758,43,88292,2758,48,88297\",\",2758,19,88268,2758,49,88298\",\",2759,20,88319,2759,43,88342\",\",2760,54,88397,2760,74,88417\",\",2760,23,88366,2760,75,88418\",\",2761,15,88434,2761,34,88453\",\",2761,39,88458,2761,44,88463\",\",2761,15,88434,2761,45,88464\",\",2762,57,88522,2762,77,88542\",\",2762,23,88488,2762,78,88543\",\",2763,18,88562,2763,37,88581\",\",2763,42,88586,2763,47,88591\",\",2763,18,88562,2763,48,88592\",\",2764,19,88612,2764,39,88632\",\",2764,44,88637,2764,49,88642\",\",2764,19,88612,2764,50,88643\",\",2773,10,88879,2773,35,88904\",\",2774,10,88915,2774,35,88940\",\",2776,18,88960,2776,113,89055\",\",2807,34,90288,2807,44,90298\",\",2807,34,90288,2807,50,90304\",\",2807,52,90306,2807,62,90316\",\",2807,52,90306,2807,68,90322\",\",2807,70,90324,2807,86,90340\",\",2807,19,90273,2807,87,90341\",\",2806,20,90239,2807,88,90342\",\",2805,37,90183,2809,11,90422\",\",2824,20,91020,2824,63,91063\",\",2825,17,91083,2825,57,91123\",\",2826,21,91146,2826,65,91190\",\",2827,21,91213,2827,65,91257\",\",2823,14,90984,2828,10,91268\",\",2831,12,91405,2831,28,91421\",\",2834,32,91521,2834,54,91543\",\",2833,10,91452,2836,13,91593\",\",2839,19,91635,2839,30,91646\",\",2839,6,91622,2839,31,91647\",\",2766,2,88647,2841,23,91679\"],\"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CA1iDL95B;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,WA6iDK+5B,6CA7iDL/5B;AAAAA;AAAAA;AAAAA;AAAAA,qBA6iDmBg6B,yBA7iDnBh6B;AAAAA;AAAAA;AAAAA;AAAAA;AA6iDKi6B,yCA7iDLj6B;AAAAA;AA6iDKi6B,uCA7iDLj6B;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA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\":\"builtin://charts\"}",
"theModule":"function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2718(R,NAMESPACE,M,$B54,$CL31,$C11,$E8,$G8,$I5,$IM55,$$included$131,$$included$229,$RED37,$S16,$ST56,$SD18,$VS8) {\nvar G = R.getFieldLoc;\nvar U = function throw_error(loc,name) {\nR.ffi.throwUninitializedIdMkLoc(loc,name);\n};\nvar M = \"builtin://charts\";\nvar D = R.undefined;\nvar L = [[\"builtin://charts\",43,2,1037,43,45,1080],\n[\"builtin://charts\",43,21,1056,43,27,1062],\n[\"builtin://charts\",43,38,1073,43,44,1079],\n[\"builtin://charts\",42,0,1020,44,3,1084],\n[\"builtin://charts\",46,2,1104,46,69,1171],\n[\"builtin://charts\",46,26,1128,46,32,1134],\n[\"builtin://charts\",46,46,1148,46,52,1154],\n[\"builtin://charts\",46,62,1164,46,68,1170],\n[\"builtin://charts\",45,0,1085,47,3,1175],\n[\"builtin://charts\",49,2,1194,49,82,1274],\n[\"builtin://charts\",49,25,1217,49,31,1223],\n[\"builtin://charts\",49,47,1239,49,53,1245],\n[\"builtin://charts\",49,64,1256,49,81,1273],\n[\"builtin://charts\",48,0,1176,50,3,1278],\n[\"builtin://charts\",52,2,1297,52,12,1307],\n[\"builtin://charts\",53,2,1310,53,12,1320],\n[\"builtin://charts\",54,2,1323,54,11,1332],\n[\"builtin://charts\",55,2,1335,55,11,1344],\n[\"builtin://charts\",51,0,1279,56,3,1348],\n[\"builtin://charts\",58,0,1350,63,3,1488],\n[\"builtin://charts\",58,42,1392,58,49,1399],\n[\"builtin://charts\",60,4,1427,60,48,1471],\n[\"builtin://charts\",59,7,1415,59,12,1420],\n[\"builtin://charts\",58,31,1381,58,37,1387],\n[\"builtin://charts\",66,2,1512,66,16,1526],\n[\"builtin://charts\",67,2,1529,67,10,1537],\n[\"builtin://charts\",68,2,1540,68,15,1553],\n[\"builtin://charts\",69,2,1556,69,60,1614],\n[\"builtin://charts\",69,25,1579,69,59,1613],\n[\"builtin://charts\",65,0,1490,70,3,1618],\n[\"builtin://charts\",72,0,1620,77,3,1781],\n[\"builtin://charts\",72,41,1661,72,48,1668],\n[\"builtin://charts\",74,4,1696,74,72,1764],\n[\"builtin://charts\",73,7,1684,73,12,1689],\n[\"builtin://charts\",72,30,1650,72,36,1656],\n[\"builtin://charts\",79,0,1783,84,3,1945],\n[\"builtin://charts\",79,37,1820,79,44,1827],\n[\"builtin://charts\",81,4,1868,81,64,1928],\n[\"builtin://charts\",80,19,1855,80,24,1860],\n[\"builtin://charts\",80,8,1844,80,13,1849],\n[\"builtin://charts\",79,26,1809,79,32,1815],\n[\"builtin://charts\",87,2,1967,87,16,1981],\n[\"builtin://charts\",88,2,1984,88,104,2086],\n[\"builtin://charts\",88,35,2017,88,68,2050],\n[\"builtin://charts\",88,78,2060,88,103,2085],\n[\"builtin://charts\",86,0,1947,89,3,2090],\n[\"builtin://charts\",95,0,2265,95,50,2315],\n[\"builtin://charts\",95,30,2295,95,37,2302],\n[\"builtin://charts\",95,19,2284,95,25,2290],\n[\"builtin://charts\",96,0,2316,96,53,2369],\n[\"builtin://charts\",96,33,2349,96,40,2356],\n[\"builtin://charts\",96,22,2338,96,28,2344],\n[\"builtin://charts\",97,0,2370,97,54,2424],\n[\"builtin://charts\",97,34,2404,97,41,2411],\n[\"builtin://charts\",97,21,2391,97,29,2399],\n[\"builtin://charts\",99,6,2432,99,25,2451],\n[\"builtin://charts\",100,6,2458,100,25,2477],\n[\"builtin://charts\",101,6,2484,101,25,2503],\n[\"builtin://charts\",102,7,2511,102,54,2558],\n[\"builtin://charts\",102,36,2540,102,53,2557],\n[\"builtin://charts\",102,37,2541,102,46,2550],\n[\"builtin://charts\",102,14,2518,102,20,2524],\n[\"builtin://charts\",102,27,2531,102,33,2537],\n[\"builtin://charts\",105,22,2600,107,7,2710],\n[\"builtin://charts\",106,21,2648,106,62,2689],\n[\"builtin://charts\",106,39,2666,106,58,2685],\n[\"builtin://charts\",106,45,2672,106,58,2685],\n[\"builtin://charts\",106,6,2633,106,75,2702],\n[\"builtin://charts\",105,33,2611,105,46,2624],\n[\"builtin://charts\",109,13,2730,109,75,2792],\n[\"builtin://charts\",109,47,2764,109,73,2790],\n[\"builtin://charts\",109,48,2765,109,57,2774],\n[\"builtin://charts\",109,31,2748,109,74,2791],\n[\"builtin://charts\",110,13,2807,110,69,2863],\n[\"builtin://charts\",110,44,2838,110,67,2861],\n[\"builtin://charts\",110,45,2839,110,54,2848],\n[\"builtin://charts\",110,28,2822,110,68,2862],\n[\"builtin://charts\",111,13,2878,111,63,2928],\n[\"builtin://charts\",111,41,2906,111,61,2926],\n[\"builtin://charts\",111,42,2907,111,51,2916],\n[\"builtin://charts\",111,25,2890,111,62,2927],\n[\"builtin://charts\",112,13,2943,112,57,2987],\n[\"builtin://charts\",112,38,2968,112,55,2985],\n[\"builtin://charts\",112,39,2969,112,48,2978],\n[\"builtin://charts\",112,22,2952,112,56,2986],\n[\"builtin://charts\",114,13,3025,114,21,3033],\n[\"builtin://charts\",119,15,3094,119,66,3145],\n[\"builtin://charts\",119,58,3137,119,64,3143],\n[\"builtin://charts\",119,45,3124,119,51,3130],\n[\"builtin://charts\",119,22,3101,119,28,3107],\n[\"builtin://charts\",119,35,3114,119,41,3120],\n[\"builtin://charts\",121,0,3147,123,3,3277],\n[\"builtin://charts\",122,7,3218,122,22,3233],\n[\"builtin://charts\",122,2,3213,122,62,3273],\n[\"builtin://charts\",121,51,3198,121,62,3209],\n[\"builtin://charts\",122,2,3213,122,31,3242],\n[\"builtin://charts\",121,20,3167,121,29,3176],\n[\"builtin://charts\",121,37,3184,121,46,3193],\n[\"builtin://charts\",125,0,3279,127,3,3438],\n[\"builtin://charts\",126,9,3354,126,46,3391],\n[\"builtin://charts\",126,21,3366,126,45,3390],\n[\"builtin://charts\",126,2,3347,126,89,3434],\n[\"builtin://charts\",125,53,3332,125,64,3343],\n[\"builtin://charts\",126,2,3347,126,58,3403],\n[\"builtin://charts\",125,22,3301,125,31,3310],\n[\"builtin://charts\",125,39,3318,125,48,3327],\n[\"builtin://charts\",129,0,3440,131,3,3591],\n[\"builtin://charts\",130,7,3528,130,22,3543],\n[\"builtin://charts\",130,2,3523,130,66,3587],\n[\"builtin://charts\",129,68,3508,129,79,3519],\n[\"builtin://charts\",130,2,3523,130,35,3556],\n[\"builtin://charts\",129,20,3460,129,29,3469],\n[\"builtin://charts\",129,37,3477,129,46,3486],\n[\"builtin://charts\",129,54,3494,129,63,3503],\n[\"builtin://charts\",133,0,3593,135,3,3779],\n[\"builtin://charts\",134,9,3685,134,52,3728],\n[\"builtin://charts\",134,24,3700,134,51,3727],\n[\"builtin://charts\",134,2,3678,134,99,3775],\n[\"builtin://charts\",133,70,3663,133,81,3674],\n[\"builtin://charts\",134,2,3678,134,68,3744],\n[\"builtin://charts\",133,22,3615,133,31,3624],\n[\"builtin://charts\",133,39,3632,133,48,3641],\n[\"builtin://charts\",133,56,3649,133,65,3658],\n[\"builtin://charts\",137,0,3781,139,3,3953],\n[\"builtin://charts\",138,7,3886,138,22,3901],\n[\"builtin://charts\",138,2,3881,138,70,3949],\n[\"builtin://charts\",137,85,3866,137,96,3877],\n[\"builtin://charts\",138,2,3881,138,39,3918],\n[\"builtin://charts\",137,20,3801,137,29,3810],\n[\"builtin://charts\",137,37,3818,137,46,3827],\n[\"builtin://charts\",137,54,3835,137,63,3844],\n[\"builtin://charts\",137,71,3852,137,80,3861],\n[\"builtin://charts\",141,0,3955,143,3,4102],\n[\"builtin://charts\",142,41,4068,142,69,4096],\n[\"builtin://charts\",142,31,4058,142,70,4097],\n[\"builtin://charts\",142,2,4029,142,71,4098],\n[\"builtin://charts\",141,49,4004,141,70,4025],\n[\"builtin://charts\",141,31,3986,141,44,3999],\n[\"builtin://charts\",145,0,4104,147,3,4229],\n[\"builtin://charts\",146,2,4178,146,49,4225],\n[\"builtin://charts\",145,57,4161,145,70,4174],\n[\"builtin://charts\",145,31,4135,145,52,4156],\n[\"builtin://charts\",149,0,4231,154,3,4481],\n[\"builtin://charts\",149,57,4288,149,73,4304],\n[\"builtin://charts\",150,2,4308,153,17,4477],\n[\"builtin://charts\",152,6,4411,152,54,4459],\n[\"builtin://charts\",151,6,4343,151,67,4404],\n[\"builtin://charts\",150,2,4308,150,30,4336],\n[\"builtin://charts\",149,25,4256,149,31,4262],\n[\"builtin://charts\",149,44,4275,149,52,4283],\n[\"builtin://charts\",156,0,4483,181,3,5331],\n[\"builtin://charts\",171,6,4950,171,49,4993],\n[\"builtin://charts\",171,20,4964,171,47,4991],\n[\"builtin://charts\",176,6,5071,176,73,5138],\n[\"builtin://charts\",176,39,5104,176,52,5117],\n[\"builtin://charts\",176,54,5119,176,71,5136],\n[\"builtin://charts\",176,35,5100,176,72,5137],\n[\"builtin://charts\",177,6,5147,177,72,5213],\n[\"builtin://charts\",177,38,5179,177,51,5192],\n[\"builtin://charts\",177,53,5194,177,70,5211],\n[\"builtin://charts\",177,35,5176,177,71,5212],\n[\"builtin://charts\",175,4,5042,177,73,5214],\n[\"builtin://charts\",179,20,5236,179,48,5264],\n[\"builtin://charts\",179,34,5250,179,47,5263],\n[\"builtin://charts\",180,2,5285,180,44,5327],\n[\"builtin://charts\",179,16,5232,179,66,5282],\n[\"builtin://charts\",170,4,4939,172,19,5015],\n[\"builtin://charts\",157,9,4515,157,20,4526],\n[\"builtin://charts\",158,20,4549,158,35,4564],\n[\"builtin://charts\",159,14,4581,159,22,4589],\n[\"builtin://charts\",160,11,4603,160,28,4620],\n[\"builtin://charts\",161,10,4633,161,27,4650],\n[\"builtin://charts\",183,0,5333,216,3,6659],\n[\"builtin://charts\",193,2,5744,200,5,5984],\n[\"builtin://charts\",197,10,5914,197,33,5937],\n[\"builtin://charts\",196,22,5867,196,57,5902],\n[\"builtin://charts\",194,31,5801,194,37,5807],\n[\"builtin://charts\",193,19,5761,193,25,5767],\n[\"builtin://charts\",183,41,5374,183,62,5395],\n[\"builtin://charts\",190,4,5679,190,57,5732],\n[\"builtin://charts\",189,7,5663,189,16,5672],\n[\"builtin://charts\",183,30,5363,183,36,5369],\n[\"builtin://charts\",218,0,6661,227,3,7089],\n[\"builtin://charts\",218,40,6701,218,49,6710],\n[\"builtin://charts\",225,17,7021,225,75,7079],\n[\"builtin://charts\",218,29,6690,218,35,6696],\n[\"builtin://charts\",229,0,7091,236,3,7386],\n[\"builtin://charts\",229,36,7127,229,42,7133],\n[\"builtin://charts\",229,44,7135,229,50,7141],\n[\"builtin://charts\",229,35,7126,229,51,7142],\n[\"builtin://charts\",233,24,7312,233,48,7336],\n[\"builtin://charts\",232,24,7263,232,48,7287],\n[\"builtin://charts\",229,24,7115,229,30,7121],\n[\"builtin://charts\",238,0,7388,275,3,9065],\n[\"builtin://charts\",239,6,7465,239,12,7471],\n[\"builtin://charts\",239,14,7473,239,20,7479],\n[\"builtin://charts\",239,5,7464,239,21,7480],\n[\"builtin://charts\",248,32,7848,248,64,7880],\n[\"builtin://charts\",248,52,7868,248,59,7875],\n[\"builtin://charts\",248,38,7854,248,63,7879],\n[\"builtin://charts\",249,32,7927,249,64,7959],\n[\"builtin://charts\",249,52,7947,249,59,7954],\n[\"builtin://charts\",249,38,7933,249,63,7958],\n[\"builtin://charts\",251,28,8068,251,65,8105],\n[\"builtin://charts\",250,28,8002,250,65,8039],\n[\"builtin://charts\",249,28,7923,249,78,7973],\n[\"builtin://charts\",248,28,7844,248,78,7894],\n[\"builtin://charts\",256,12,8253,256,70,8311],\n[\"builtin://charts\",256,39,8280,256,62,8303],\n[\"builtin://charts\",256,52,8293,256,61,8302],\n[\"builtin://charts\",256,34,8275,256,69,8310],\n[\"builtin://charts\",256,19,8260,256,31,8272],\n[\"builtin://charts\",257,26,8338,257,78,8390],\n[\"builtin://charts\",257,59,8371,257,72,8384],\n[\"builtin://charts\",257,65,8377,257,71,8383],\n[\"builtin://charts\",257,48,8360,257,77,8389],\n[\"builtin://charts\",257,52,8364,257,76,8388],\n[\"builtin://charts\",257,33,8345,257,45,8357],\n[\"builtin://charts\",258,26,8417,258,78,8469],\n[\"builtin://charts\",258,59,8450,258,72,8463],\n[\"builtin://charts\",258,65,8456,258,71,8462],\n[\"builtin://charts\",258,48,8439,258,77,8468],\n[\"builtin://charts\",258,52,8443,258,76,8467],\n[\"builtin://charts\",258,33,8424,258,45,8436],\n[\"builtin://charts\",262,28,8674,262,59,8705],\n[\"builtin://charts\",261,28,8614,261,59,8645],\n[\"builtin://charts\",260,22,8550,260,57,8585],\n[\"builtin://charts\",259,22,8492,259,57,8527],\n[\"builtin://charts\",266,20,8794,266,47,8821],\n[\"builtin://charts\",266,30,8804,266,42,8816],\n[\"builtin://charts\",266,36,8810,266,41,8815],\n[\"builtin://charts\",266,26,8800,266,46,8820],\n[\"builtin://charts\",267,20,8856,267,47,8883],\n[\"builtin://charts\",267,30,8866,267,42,8878],\n[\"builtin://charts\",267,36,8872,267,41,8877],\n[\"builtin://charts\",267,26,8862,267,46,8882],\n[\"builtin://charts\",267,16,8852,267,61,8897],\n[\"builtin://charts\",266,16,8790,266,61,8835],\n[\"builtin://charts\",254,6,8162,254,28,8184],\n[\"builtin://charts\",245,6,7612,245,27,7633],\n[\"builtin://charts\",238,34,7422,238,43,7431],\n[\"builtin://charts\",238,60,7448,238,68,7456],\n[\"builtin://charts\",291,0,9348,325,3,10559],\n[\"builtin://charts\",292,8,9423,292,20,9435],\n[\"builtin://charts\",293,17,9453,293,27,9463],\n[\"builtin://charts\",295,5,9497,295,19,9511],\n[\"builtin://charts\",295,21,9513,295,35,9527],\n[\"builtin://charts\",303,20,9848,305,7,9927],\n[\"builtin://charts\",304,6,9885,304,40,9919],\n[\"builtin://charts\",304,11,9890,304,39,9918],\n[\"builtin://charts\",304,29,9908,304,38,9917],\n[\"builtin://charts\",306,19,9947,308,7,10026],\n[\"builtin://charts\",307,6,9984,307,40,10018],\n[\"builtin://charts\",307,11,9989,307,39,10017],\n[\"builtin://charts\",307,29,10007,307,38,10016],\n[\"builtin://charts\",309,14,10041,309,23,10050],\n[\"builtin://charts\",310,14,10065,310,24,10075],\n[\"builtin://charts\",311,26,10102,311,47,10123],\n[\"builtin://charts\",311,18,10094,311,48,10124],\n[\"builtin://charts\",312,31,10156,312,53,10178],\n[\"builtin://charts\",312,19,10144,312,58,10183],\n[\"builtin://charts\",322,21,10442,322,64,10485],\n[\"builtin://charts\",323,20,10507,323,62,10549],\n[\"builtin://charts\",291,58,9406,291,65,9413],\n[\"builtin://charts\",312,27,10152,312,57,10182],\n[\"builtin://charts\",312,27,10152,312,53,10178],\n[\"builtin://charts\",302,10,9796,302,41,9827],\n[\"builtin://charts\",295,4,9496,295,36,9528],\n[\"builtin://charts\",296,17,9574,296,36,9593],\n[\"builtin://charts\",297,17,9611,297,32,9626],\n[\"builtin://charts\",297,45,9639,297,60,9654],\n[\"builtin://charts\",297,35,9629,297,61,9655],\n[\"builtin://charts\",297,7,9601,297,33,9627],\n[\"builtin://charts\",296,30,9587,296,35,9592],\n[\"builtin://charts\",299,17,9684,299,42,9709],\n[\"builtin://charts\",300,17,9727,300,32,9742],\n[\"builtin://charts\",300,45,9755,300,60,9770],\n[\"builtin://charts\",300,45,9755,300,65,9775],\n[\"builtin://charts\",300,35,9745,300,66,9776],\n[\"builtin://charts\",300,7,9717,300,33,9743],\n[\"builtin://charts\",299,30,9697,299,41,9708],\n[\"builtin://charts\",299,31,9698,299,36,9703],\n[\"builtin://charts\",295,42,9534,295,63,9555],\n[\"builtin://charts\",294,13,9477,294,27,9491],\n[\"builtin://charts\",291,26,9374,291,32,9380],\n[\"builtin://charts\",291,41,9389,291,53,9401],\n[\"builtin://charts\",331,15,10749,333,3,10831],\n[\"builtin://charts\",332,2,10783,332,15,10796],\n[\"builtin://charts\",332,16,10797,332,24,10805],\n[\"builtin://charts\",332,16,10797,332,45,10826],\n[\"builtin://charts\",332,2,10783,332,46,10827],\n[\"builtin://charts\",331,37,10771,331,44,10778],\n[\"builtin://charts\",335,20,10853,344,3,11144],\n[\"builtin://charts\",337,15,10924,337,28,10937],\n[\"builtin://charts\",337,29,10938,337,37,10946],\n[\"builtin://charts\",337,29,10938,337,52,10961],\n[\"builtin://charts\",337,15,10924,337,53,10962],\n[\"builtin://charts\",337,4,10913,337,53,10962],\n[\"builtin://charts\",336,2,10887,343,5,11140],\n[\"builtin://charts\",340,13,11010,340,32,11029],\n[\"builtin://charts\",340,20,11017,340,27,11024],\n[\"builtin://charts\",341,8,11047,341,21,11060],\n[\"builtin://charts\",341,22,11061,341,30,11069],\n[\"builtin://charts\",341,45,11084,341,82,11121],\n[\"builtin://charts\",341,22,11061,341,84,11123],\n[\"builtin://charts\",341,8,11047,341,85,11124],\n[\"builtin://charts\",340,8,11005,340,41,11038],\n[\"builtin://charts\",338,4,10967,342,9,11134],\n[\"builtin://charts\",336,9,10894,336,13,10898],\n[\"builtin://charts\",335,43,10876,335,49,10882],\n[\"builtin://charts\",346,23,11169,348,3,11259],\n[\"builtin://charts\",347,2,11203,347,15,11216],\n[\"builtin://charts\",347,16,11217,347,24,11225],\n[\"builtin://charts\",347,16,11217,347,53,11254],\n[\"builtin://charts\",347,2,11203,347,54,11255],\n[\"builtin://charts\",346,45,11191,346,52,11198],\n[\"builtin://charts\",350,24,11285,352,3,11384],\n[\"builtin://charts\",351,2,11319,351,15,11332],\n[\"builtin://charts\",351,16,11333,351,24,11341],\n[\"builtin://charts\",351,16,11333,351,62,11379],\n[\"builtin://charts\",351,2,11319,351,63,11380],\n[\"builtin://charts\",350,46,11307,350,53,11314],\n[\"builtin://charts\",354,20,11406,359,3,11585],\n[\"builtin://charts\",358,2,11535,358,15,11548],\n[\"builtin://charts\",358,16,11549,358,24,11557],\n[\"builtin://charts\",358,16,11549,358,47,11580],\n[\"builtin://charts\",358,2,11535,358,48,11581],\n[\"builtin://charts\",356,4,11474,356,56,11526],\n[\"builtin://charts\",355,7,11454,355,20,11467],\n[\"builtin://charts\",354,46,11432,354,52,11438],\n[\"builtin://charts\",361,15,11602,366,3,11865],\n[\"builtin://charts\",365,2,11823,365,15,11836],\n[\"builtin://charts\",365,16,11837,365,24,11845],\n[\"builtin://charts\",365,16,11837,365,39,11860],\n[\"builtin://charts\",365,2,11823,365,40,11861],\n[\"builtin://charts\",363,4,11761,363,57,11814],\n[\"builtin://charts\",362,83,11722,362,116,11755],\n[\"builtin://charts\",362,46,11685,362,78,11717],\n[\"builtin://charts\",362,7,11646,362,41,11680],\n[\"builtin://charts\",361,37,11624,361,43,11630],\n[\"builtin://charts\",368,15,11882,372,3,12031],\n[\"builtin://charts\",369,13,11928,369,26,11941],\n[\"builtin://charts\",369,27,11942,369,35,11950],\n[\"builtin://charts\",369,27,11942,369,56,11971],\n[\"builtin://charts\",369,13,11928,369,57,11972],\n[\"builtin://charts\",370,8,11981,370,21,11994],\n[\"builtin://charts\",370,22,11995,370,30,12003],\n[\"builtin://charts\",370,22,11995,370,47,12020],\n[\"builtin://charts\",370,8,11981,370,48,12021],\n[\"builtin://charts\",368,38,11905,368,45,11912],\n[\"builtin://charts\",374,16,12049,381,3,12327],\n[\"builtin://charts\",376,9,12100,376,17,12108],\n[\"builtin://charts\",376,9,12100,376,20,12111],\n[\"builtin://charts\",376,9,12100,376,29,12120],\n[\"builtin://charts\",376,33,12124,376,48,12139],\n[\"builtin://charts\",379,4,12216,379,17,12229],\n[\"builtin://charts\",379,18,12230,379,26,12238],\n[\"builtin://charts\",379,37,12249,379,81,12293],\n[\"builtin://charts\",379,83,12295,379,91,12303],\n[\"builtin://charts\",379,83,12295,379,94,12306],\n[\"builtin://charts\",379,18,12230,379,104,12316],\n[\"builtin://charts\",379,4,12216,379,105,12317],\n[\"builtin://charts\",379,32,12244,379,103,12315],\n[\"builtin://charts\",377,6,12147,377,62,12203],\n[\"builtin://charts\",376,9,12100,376,48,12139],\n[\"builtin://charts\",374,39,12072,374,45,12078],\n[\"builtin://charts\",383,22,12351,390,3,12628],\n[\"builtin://charts\",385,9,12401,385,17,12409],\n[\"builtin://charts\",385,9,12401,385,20,12412],\n[\"builtin://charts\",385,9,12401,385,29,12421],\n[\"builtin://charts\",385,33,12425,385,48,12440],\n[\"builtin://charts\",388,4,12517,388,17,12530],\n[\"builtin://charts\",388,18,12531,388,26,12539],\n[\"builtin://charts\",388,37,12550,388,81,12594],\n[\"builtin://charts\",388,83,12596,388,91,12604],\n[\"builtin://charts\",388,83,12596,388,94,12607],\n[\"builtin://charts\",388,18,12531,388,104,12617],\n[\"builtin://charts\",388,4,12517,388,105,12618],\n[\"builtin://charts\",388,32,12545,388,103,12616],\n[\"builtin://charts\",386,6,12448,386,62,12504],\n[\"builtin://charts\",385,9,12401,385,48,12440],\n[\"builtin://charts\",383,45,12374,383,51,12380],\n[\"builtin://charts\",392,17,12647,402,3,13137],\n[\"builtin://charts\",393,24,12710,393,32,12718],\n[\"builtin://charts\",393,24,12710,393,36,12722],\n[\"builtin://charts\",393,41,12727,393,57,12743],\n[\"builtin://charts\",396,2,12834,400,5,12984],\n[\"builtin://charts\",398,6,12910,398,66,12970],\n[\"builtin://charts\",397,26,12891,397,36,12901],\n[\"builtin://charts\",397,10,12875,397,20,12885],\n[\"builtin://charts\",401,2,12987,401,15,13000],\n[\"builtin://charts\",401,16,13001,401,24,13009],\n[\"builtin://charts\",401,56,13041,401,102,13087],\n[\"builtin://charts\",401,122,13107,401,130,13115],\n[\"builtin://charts\",401,122,13107,401,134,13119],\n[\"builtin://charts\",401,16,13001,401,147,13132],\n[\"builtin://charts\",401,2,12987,401,148,13133],\n[\"builtin://charts\",401,51,13036,401,145,13130],\n[\"builtin://charts\",394,4,12749,394,80,12825],\n[\"builtin://charts\",393,7,12693,393,57,12743],\n[\"builtin://charts\",392,41,12671,392,47,12677],\n[\"builtin://charts\",404,25,13164,409,3,13487],\n[\"builtin://charts\",405,26,13228,405,34,13236],\n[\"builtin://charts\",405,26,13228,405,38,13240],\n[\"builtin://charts\",405,43,13245,405,58,13260],\n[\"builtin://charts\",408,2,13340,408,15,13353],\n[\"builtin://charts\",408,16,13354,408,24,13362],\n[\"builtin://charts\",408,56,13394,408,100,13438],\n[\"builtin://charts\",408,120,13458,408,128,13466],\n[\"builtin://charts\",408,120,13458,408,132,13470],\n[\"builtin://charts\",408,16,13354,408,144,13482],\n[\"builtin://charts\",408,2,13340,408,145,13483],\n[\"builtin://charts\",408,51,13389,408,142,13480],\n[\"builtin://charts\",406,6,13268,406,67,13329],\n[\"builtin://charts\",405,9,13211,405,58,13260],\n[\"builtin://charts\",404,48,13187,404,54,13193],\n[\"builtin://charts\",411,20,13509,419,3,13884],\n[\"builtin://charts\",412,7,13554,412,22,13569],\n[\"builtin://charts\",412,26,13573,412,34,13581],\n[\"builtin://charts\",412,26,13573,412,41,13588],\n[\"builtin://charts\",412,26,13573,412,50,13597],\n[\"builtin://charts\",415,7,13689,415,22,13704],\n[\"builtin://charts\",418,2,13774,418,15,13787],\n[\"builtin://charts\",418,16,13788,418,24,13796],\n[\"builtin://charts\",418,58,13830,418,66,13838],\n[\"builtin://charts\",418,58,13830,418,73,13845],\n[\"builtin://charts\",418,31,13803,418,105,13877],\n[\"builtin://charts\",418,16,13788,418,107,13879],\n[\"builtin://charts\",418,2,13774,418,108,13880],\n[\"builtin://charts\",418,31,13803,418,74,13846],\n[\"builtin://charts\",416,4,13715,416,54,13765],\n[\"builtin://charts\",415,7,13689,415,27,13709],\n[\"builtin://charts\",413,4,13603,413,76,13675],\n[\"builtin://charts\",412,7,13554,412,50,13597],\n[\"builtin://charts\",411,43,13532,411,49,13538],\n[\"builtin://charts\",421,16,13902,423,3,13981],\n[\"builtin://charts\",422,2,13937,422,15,13950],\n[\"builtin://charts\",422,16,13951,422,24,13959],\n[\"builtin://charts\",422,16,13951,422,41,13976],\n[\"builtin://charts\",422,2,13937,422,42,13977],\n[\"builtin://charts\",421,39,13925,421,46,13932],\n[\"builtin://charts\",425,17,14000,429,3,14178],\n[\"builtin://charts\",426,37,14070,426,84,14117],\n[\"builtin://charts\",427,8,14126,427,21,14139],\n[\"builtin://charts\",427,22,14140,427,30,14148],\n[\"builtin://charts\",427,22,14140,427,49,14167],\n[\"builtin://charts\",427,8,14126,427,50,14168],\n[\"builtin://charts\",426,23,14056,426,34,14067],\n[\"builtin://charts\",426,6,14039,426,17,14050],\n[\"builtin://charts\",425,41,14024,425,47,14030],\n[\"builtin://charts\",431,24,14204,433,3,14303],\n[\"builtin://charts\",432,2,14245,432,15,14258],\n[\"builtin://charts\",432,16,14259,432,24,14267],\n[\"builtin://charts\",432,16,14259,432,55,14298],\n[\"builtin://charts\",432,2,14245,432,56,14299],\n[\"builtin://charts\",431,54,14234,431,60,14240],\n[\"builtin://charts\",435,28,14333,440,3,14583],\n[\"builtin://charts\",439,2,14517,439,15,14530],\n[\"builtin://charts\",439,16,14531,439,24,14539],\n[\"builtin://charts\",439,16,14531,439,63,14578],\n[\"builtin://charts\",439,2,14517,439,64,14579],\n[\"builtin://charts\",437,4,14446,437,66,14508],\n[\"builtin://charts\",436,35,14417,436,56,14438],\n[\"builtin://charts\",436,8,14390,436,29,14411],\n[\"builtin://charts\",435,62,14367,435,68,14373],\n[\"builtin://charts\",442,24,14609,450,3,15044],\n[\"builtin://charts\",444,22,14715,444,35,14728],\n[\"builtin://charts\",444,36,14729,444,44,14737],\n[\"builtin://charts\",444,36,14729,444,66,14759],\n[\"builtin://charts\",444,22,14715,444,67,14760],\n[\"builtin://charts\",444,4,14697,444,67,14760],\n[\"builtin://charts\",443,0,14655,448,5,15037],\n[\"builtin://charts\",445,16,14777,445,29,14790],\n[\"builtin://charts\",445,30,14791,445,38,14799],\n[\"builtin://charts\",445,30,14791,445,88,14849],\n[\"builtin://charts\",445,16,14777,445,89,14850],\n[\"builtin://charts\",445,4,14765,445,89,14850],\n[\"builtin://charts\",446,21,14872,446,34,14885],\n[\"builtin://charts\",446,35,14886,446,43,14894],\n[\"builtin://charts\",446,35,14886,446,72,14923],\n[\"builtin://charts\",446,21,14872,446,73,14924],\n[\"builtin://charts\",446,4,14855,446,73,14924],\n[\"builtin://charts\",447,28,14953,447,41,14966],\n[\"builtin://charts\",447,42,14967,447,50,14975],\n[\"builtin://charts\",447,42,14967,447,105,15030],\n[\"builtin://charts\",447,28,14953,447,106,15031],\n[\"builtin://charts\",447,4,14929,447,106,15031],\n[\"builtin://charts\",443,7,14662,443,20,14675],\n[\"builtin://charts\",442,54,14639,442,67,14652],\n[\"builtin://charts\",452,25,15071,454,3,15162],\n[\"builtin://charts\",453,2,15105,453,15,15118],\n[\"builtin://charts\",453,16,15119,453,24,15127],\n[\"builtin://charts\",453,16,15119,453,54,15157],\n[\"builtin://charts\",453,2,15105,453,55,15158],\n[\"builtin://charts\",452,47,15093,452,54,15100],\n[\"builtin://charts\",456,25,15189,461,3,15383],\n[\"builtin://charts\",460,2,15328,460,15,15341],\n[\"builtin://charts\",460,16,15342,460,24,15350],\n[\"builtin://charts\",460,16,15342,460,52,15378],\n[\"builtin://charts\",460,2,15328,460,53,15379],\n[\"builtin://charts\",458,4,15257,458,66,15319],\n[\"builtin://charts\",457,7,15237,457,20,15250],\n[\"builtin://charts\",456,51,15215,456,57,15221],\n[\"builtin://charts\",463,27,15412,467,3,15609],\n[\"builtin://charts\",464,37,15482,464,94,15539],\n[\"builtin://charts\",465,8,15548,465,21,15561],\n[\"builtin://charts\",465,22,15562,465,30,15570],\n[\"builtin://charts\",465,22,15562,465,58,15598],\n[\"builtin://charts\",465,8,15548,465,59,15599],\n[\"builtin://charts\",464,23,15468,464,34,15479],\n[\"builtin://charts\",464,6,15451,464,17,15462],\n[\"builtin://charts\",463,51,15436,463,57,15442],\n[\"builtin://charts\",469,21,15632,471,3,15715],\n[\"builtin://charts\",470,2,15667,470,15,15680],\n[\"builtin://charts\",470,16,15681,470,24,15689],\n[\"builtin://charts\",470,16,15681,470,45,15710],\n[\"builtin://charts\",470,2,15667,470,46,15711],\n[\"builtin://charts\",469,44,15655,469,51,15662],\n[\"builtin://charts\",473,27,15744,478,3,16008],\n[\"builtin://charts\",474,11,15805,474,23,15817],\n[\"builtin://charts\",474,17,15811,474,22,15816],\n[\"builtin://charts\",477,2,15907,477,15,15920],\n[\"builtin://charts\",477,16,15921,477,24,15929],\n[\"builtin://charts\",477,16,15921,477,98,16003],\n[\"builtin://charts\",477,2,15907,477,99,16004],\n[\"builtin://charts\",475,4,15843,475,59,15898],\n[\"builtin://charts\",474,7,15801,474,43,15837],\n[\"builtin://charts\",473,61,15778,473,68,15785],\n[\"builtin://charts\",480,20,16030,485,3,16328],\n[\"builtin://charts\",482,22,16126,482,35,16139],\n[\"builtin://charts\",482,36,16140,482,44,16148],\n[\"builtin://charts\",482,36,16140,482,71,16175],\n[\"builtin://charts\",482,22,16126,482,72,16176],\n[\"builtin://charts\",482,4,16108,482,72,16176],\n[\"builtin://charts\",481,2,16072,484,5,16324],\n[\"builtin://charts\",483,44,16221,483,57,16234],\n[\"builtin://charts\",483,58,16235,483,66,16243],\n[\"builtin://charts\",483,58,16235,483,140,16317],\n[\"builtin://charts\",483,44,16221,483,141,16318],\n[\"builtin://charts\",483,4,16181,483,141,16318],\n[\"builtin://charts\",481,9,16079,481,19,16089],\n[\"builtin://charts\",480,47,16057,480,57,16067],\n[\"builtin://charts\",487,25,16355,489,3,16440],\n[\"builtin://charts\",488,2,16392,488,15,16405],\n[\"builtin://charts\",488,16,16406,488,24,16414],\n[\"builtin://charts\",488,16,16406,488,45,16435],\n[\"builtin://charts\",488,2,16392,488,46,16436],\n[\"builtin://charts\",487,50,16380,487,57,16387],\n[\"builtin://charts\",491,26,16468,493,3,16560],\n[\"builtin://charts\",492,2,16502,492,15,16515],\n[\"builtin://charts\",492,16,16516,492,24,16524],\n[\"builtin://charts\",492,16,16516,492,55,16555],\n[\"builtin://charts\",492,2,16502,492,56,16556],\n[\"builtin://charts\",491,48,16490,491,55,16497],\n[\"builtin://charts\",495,27,16589,500,3,16777],\n[\"builtin://charts\",499,2,16724,499,15,16737],\n[\"builtin://charts\",499,16,16738,499,24,16746],\n[\"builtin://charts\",499,16,16738,499,50,16772],\n[\"builtin://charts\",499,2,16724,499,51,16773],\n[\"builtin://charts\",497,4,16661,497,58,16715],\n[\"builtin://charts\",496,7,16639,496,22,16654],\n[\"builtin://charts\",495,55,16617,495,61,16623],\n[\"builtin://charts\",502,22,16801,504,3,16903],\n[\"builtin://charts\",503,2,16842,503,15,16855],\n[\"builtin://charts\",503,16,16856,503,24,16864],\n[\"builtin://charts\",503,16,16856,503,58,16898],\n[\"builtin://charts\",503,2,16842,503,59,16899],\n[\"builtin://charts\",502,51,16830,502,58,16837],\n[\"builtin://charts\",506,16,16921,508,3,16999],\n[\"builtin://charts\",507,2,16955,507,15,16968],\n[\"builtin://charts\",507,16,16969,507,24,16977],\n[\"builtin://charts\",507,16,16969,507,41,16994],\n[\"builtin://charts\",507,2,16955,507,42,16995],\n[\"builtin://charts\",506,39,16944,506,45,16950],\n[\"builtin://charts\",510,31,17032,512,3,17134],\n[\"builtin://charts\",511,2,17071,511,15,17084],\n[\"builtin://charts\",511,16,17085,511,24,17093],\n[\"builtin://charts\",511,16,17085,511,60,17129],\n[\"builtin://charts\",511,2,17071,511,61,17130],\n[\"builtin://charts\",510,58,17059,510,65,17066],\n[\"builtin://charts\",514,25,17161,516,3,17257],\n[\"builtin://charts\",515,2,17200,515,15,17213],\n[\"builtin://charts\",515,16,17214,515,24,17222],\n[\"builtin://charts\",515,16,17214,515,54,17252],\n[\"builtin://charts\",515,2,17200,515,55,17253],\n[\"builtin://charts\",514,52,17188,514,59,17195],\n[\"builtin://charts\",518,25,17284,520,3,17398],\n[\"builtin://charts\",519,2,17319,519,15,17332],\n[\"builtin://charts\",519,16,17333,519,24,17341],\n[\"builtin://charts\",519,16,17333,519,76,17393],\n[\"builtin://charts\",519,2,17319,519,77,17394],\n[\"builtin://charts\",518,48,17307,518,55,17314],\n[\"builtin://charts\",522,31,17431,524,3,17556],\n[\"builtin://charts\",523,2,17466,523,15,17479],\n[\"builtin://charts\",523,16,17480,523,24,17488],\n[\"builtin://charts\",523,16,17480,523,87,17551],\n[\"builtin://charts\",523,2,17466,523,88,17552],\n[\"builtin://charts\",522,54,17454,522,61,17461],\n[\"builtin://charts\",526,31,17589,531,3,17797],\n[\"builtin://charts\",530,2,17731,530,15,17744],\n[\"builtin://charts\",530,16,17745,530,24,17753],\n[\"builtin://charts\",530,16,17745,530,63,17792],\n[\"builtin://charts\",530,2,17731,530,64,17793],\n[\"builtin://charts\",528,4,17659,528,67,17722],\n[\"builtin://charts\",527,7,17638,527,21,17652],\n[\"builtin://charts\",526,58,17616,526,64,17622],\n[\"builtin://charts\",533,37,17836,538,3,18078],\n[\"builtin://charts\",537,2,17984,537,15,17997],\n[\"builtin://charts\",537,16,17998,537,24,18006],\n[\"builtin://charts\",537,16,17998,537,91,18073],\n[\"builtin://charts\",537,2,17984,537,92,18074],\n[\"builtin://charts\",535,4,17906,535,73,17975],\n[\"builtin://charts\",534,7,17885,534,21,17899],\n[\"builtin://charts\",533,64,17863,533,70,17869],\n[\"builtin://charts\",540,16,18096,542,3,18174],\n[\"builtin://charts\",541,2,18130,541,15,18143],\n[\"builtin://charts\",541,16,18144,541,24,18152],\n[\"builtin://charts\",541,16,18144,541,41,18169],\n[\"builtin://charts\",541,2,18130,541,42,18170],\n[\"builtin://charts\",540,39,18119,540,45,18125],\n[\"builtin://charts\",544,16,18192,546,3,18270],\n[\"builtin://charts\",545,2,18226,545,15,18239],\n[\"builtin://charts\",545,16,18240,545,24,18248],\n[\"builtin://charts\",545,16,18240,545,41,18265],\n[\"builtin://charts\",545,2,18226,545,42,18266],\n[\"builtin://charts\",544,39,18215,544,45,18221],\n[\"builtin://charts\",548,15,18287,550,3,18368],\n[\"builtin://charts\",549,2,18320,549,15,18333],\n[\"builtin://charts\",549,16,18334,549,24,18342],\n[\"builtin://charts\",549,16,18334,549,45,18363],\n[\"builtin://charts\",549,2,18320,549,46,18364],\n[\"builtin://charts\",548,37,18309,548,43,18315],\n[\"builtin://charts\",552,15,18385,554,3,18466],\n[\"builtin://charts\",553,2,18418,553,15,18431],\n[\"builtin://charts\",553,16,18432,553,24,18440],\n[\"builtin://charts\",553,16,18432,553,45,18461],\n[\"builtin://charts\",553,2,18418,553,46,18462],\n[\"builtin://charts\",552,37,18407,552,43,18413],\n[\"builtin://charts\",556,15,18483,558,3,18564],\n[\"builtin://charts\",557,2,18516,557,15,18529],\n[\"builtin://charts\",557,16,18530,557,24,18538],\n[\"builtin://charts\",557,16,18530,557,45,18559],\n[\"builtin://charts\",557,2,18516,557,46,18560],\n[\"builtin://charts\",556,37,18505,556,43,18511],\n[\"builtin://charts\",560,15,18581,562,3,18662],\n[\"builtin://charts\",561,2,18614,561,15,18627],\n[\"builtin://charts\",561,16,18628,561,24,18636],\n[\"builtin://charts\",561,16,18628,561,45,18657],\n[\"builtin://charts\",561,2,18614,561,46,18658],\n[\"builtin://charts\",560,37,18603,560,43,18609],\n[\"builtin://charts\",564,14,18678,579,3,19167],\n[\"builtin://charts\",568,2,18777,574,5,19018],\n[\"builtin://charts\",568,36,18811,568,42,18817],\n[\"builtin://charts\",568,23,18798,568,31,18806],\n[\"builtin://charts\",576,13,19035,576,21,19043],\n[\"builtin://charts\",577,30,19074,577,38,19082],\n[\"builtin://charts\",577,30,19074,577,42,19086],\n[\"builtin://charts\",578,2,19120,578,15,19133],\n[\"builtin://charts\",578,16,19134,578,24,19142],\n[\"builtin://charts\",578,16,19134,578,44,19162],\n[\"builtin://charts\",578,2,19120,578,45,19163],\n[\"builtin://charts\",577,17,19061,577,73,19117],\n[\"builtin://charts\",565,11,18703,565,38,18730],\n[\"builtin://charts\",566,10,18743,566,37,18770],\n[\"builtin://charts\",581,22,19191,583,3,19259],\n[\"builtin://charts\",582,15,19221,582,30,19236],\n[\"builtin://charts\",582,24,19230,582,29,19235],\n[\"builtin://charts\",582,32,19238,582,48,19254],\n[\"builtin://charts\",582,41,19247,582,47,19253],\n[\"builtin://charts\",582,2,19208,582,49,19255],\n[\"builtin://charts\",585,20,19281,600,3,19772],\n[\"builtin://charts\",589,2,19382,595,5,19623],\n[\"builtin://charts\",589,36,19416,589,42,19422],\n[\"builtin://charts\",589,23,19403,589,31,19411],\n[\"builtin://charts\",597,13,19640,597,21,19648],\n[\"builtin://charts\",598,30,19679,598,38,19687],\n[\"builtin://charts\",598,30,19679,598,42,19691],\n[\"builtin://charts\",599,2,19725,599,15,19738],\n[\"builtin://charts\",599,16,19739,599,24,19747],\n[\"builtin://charts\",599,16,19739,599,44,19767],\n[\"builtin://charts\",599,2,19725,599,45,19768],\n[\"builtin://charts\",598,17,19666,598,73,19722],\n[\"builtin://charts\",586,11,19306,586,38,19333],\n[\"builtin://charts\",587,10,19346,587,37,19373],\n[\"builtin://charts\",602,20,19794,617,3,20326],\n[\"builtin://charts\",607,2,19934,613,5,20200],\n[\"builtin://charts\",607,37,19969,607,49,19981],\n[\"builtin://charts\",607,24,19956,607,32,19964],\n[\"builtin://charts\",615,30,20234,615,38,20242],\n[\"builtin://charts\",615,30,20234,615,42,20246],\n[\"builtin://charts\",616,2,20279,616,15,20292],\n[\"builtin://charts\",616,16,20293,616,24,20301],\n[\"builtin://charts\",616,16,20293,616,44,20321],\n[\"builtin://charts\",616,2,20279,616,45,20322],\n[\"builtin://charts\",615,17,20221,615,72,20276],\n[\"builtin://charts\",603,14,19822,603,38,19846],\n[\"builtin://charts\",604,11,19860,604,38,19887],\n[\"builtin://charts\",605,10,19900,605,37,19927],\n[\"builtin://charts\",619,28,20356,634,3,20911],\n[\"builtin://charts\",623,2,20455,629,5,20721],\n[\"builtin://charts\",623,37,20490,623,49,20502],\n[\"builtin://charts\",623,24,20477,623,32,20485],\n[\"builtin://charts\",631,8,20733,631,66,20791],\n[\"builtin://charts\",631,35,20760,631,58,20783],\n[\"builtin://charts\",631,48,20773,631,57,20782],\n[\"builtin://charts\",631,30,20755,631,65,20790],\n[\"builtin://charts\",631,15,20740,631,27,20752],\n[\"builtin://charts\",632,30,20822,632,38,20830],\n[\"builtin://charts\",632,30,20822,632,42,20834],\n[\"builtin://charts\",633,2,20864,633,15,20877],\n[\"builtin://charts\",633,16,20878,633,24,20886],\n[\"builtin://charts\",633,16,20878,633,44,20906],\n[\"builtin://charts\",633,2,20864,633,45,20907],\n[\"builtin://charts\",632,17,20809,632,69,20861],\n[\"builtin://charts\",620,11,20381,620,38,20408],\n[\"builtin://charts\",621,10,20421,621,37,20448],\n[\"builtin://charts\",636,34,20947,638,3,21015],\n[\"builtin://charts\",637,15,20977,637,30,20992],\n[\"builtin://charts\",637,24,20986,637,29,20991],\n[\"builtin://charts\",637,32,20994,637,48,21010],\n[\"builtin://charts\",637,41,21003,637,47,21009],\n[\"builtin://charts\",637,2,20964,637,49,21011],\n[\"builtin://charts\",640,22,21039,659,3,21671],\n[\"builtin://charts\",645,10,21145,645,29,21164],\n[\"builtin://charts\",646,10,21176,646,29,21195],\n[\"builtin://charts\",647,18,21214,647,47,21243],\n[\"builtin://charts\",657,16,21501,657,59,21544],\n[\"builtin://charts\",658,2,21579,658,15,21592],\n[\"builtin://charts\",658,16,21593,658,24,21601],\n[\"builtin://charts\",658,41,21618,658,87,21664],\n[\"builtin://charts\",658,16,21593,658,89,21666],\n[\"builtin://charts\",658,2,21579,658,90,21667],\n[\"builtin://charts\",658,41,21618,658,56,21633],\n[\"builtin://charts\",657,10,21495,657,91,21576],\n[\"builtin://charts\",654,4,21401,654,80,21477],\n[\"builtin://charts\",653,7,21375,653,26,21394],\n[\"builtin://charts\",653,11,21379,653,25,21393],\n[\"builtin://charts\",651,4,21315,651,50,21361],\n[\"builtin://charts\",650,7,21281,650,34,21308],\n[\"builtin://charts\",650,11,21285,650,33,21307],\n[\"builtin://charts\",647,18,21214,647,38,21234],\n[\"builtin://charts\",641,18,21070,641,24,21076],\n[\"builtin://charts\",642,18,21097,642,24,21103],\n[\"builtin://charts\",661,24,21697,695,3,23162],\n[\"builtin://charts\",662,15,21779,662,46,21810],\n[\"builtin://charts\",662,16,21780,662,20,21784],\n[\"builtin://charts\",670,31,22066,670,69,22104],\n[\"builtin://charts\",670,50,22085,670,63,22098],\n[\"builtin://charts\",670,37,22072,670,68,22103],\n[\"builtin://charts\",670,50,22085,670,67,22102],\n[\"builtin://charts\",670,13,22048,670,70,22105],\n[\"builtin://charts\",670,13,22048,670,77,22112],\n[\"builtin://charts\",670,93,22128,670,109,22144],\n[\"builtin://charts\",671,31,22177,671,69,22215],\n[\"builtin://charts\",671,50,22196,671,63,22209],\n[\"builtin://charts\",671,37,22183,671,68,22214],\n[\"builtin://charts\",671,50,22196,671,67,22213],\n[\"builtin://charts\",671,13,22159,671,70,22216],\n[\"builtin://charts\",671,13,22159,671,77,22223],\n[\"builtin://charts\",671,93,22239,671,109,22255],\n[\"builtin://charts\",677,4,22399,685,10,22723],\n[\"builtin://charts\",679,9,22426,679,23,22440],\n[\"builtin://charts\",680,44,22529,680,61,22546],\n[\"builtin://charts\",680,40,22525,680,61,22546],\n[\"builtin://charts\",681,8,22560,681,25,22577],\n[\"builtin://charts\",682,44,22633,682,61,22650],\n[\"builtin://charts\",682,40,22629,682,61,22650],\n[\"builtin://charts\",681,8,22560,681,29,22581],\n[\"builtin://charts\",679,37,22454,679,54,22471],\n[\"builtin://charts\",679,37,22454,679,59,22476],\n[\"builtin://charts\",679,9,22426,679,30,22447],\n[\"builtin://charts\",691,10,23004,691,72,23066],\n[\"builtin://charts\",692,2,23069,692,15,23082],\n[\"builtin://charts\",693,4,23088,693,12,23096],\n[\"builtin://charts\",693,4,23088,693,68,23152],\n[\"builtin://charts\",692,2,23069,694,5,23158],\n[\"builtin://charts\",691,10,23004,691,41,23035],\n[\"builtin://charts\",691,19,23013,691,40,23034],\n[\"builtin://charts\",690,14,22936,690,71,22993],\n[\"builtin://charts\",690,29,22951,690,70,22992],\n[\"builtin://charts\",690,60,22982,690,69,22991],\n[\"builtin://charts\",690,41,22963,690,58,22980],\n[\"builtin://charts\",689,14,22872,689,63,22921],\n[\"builtin://charts\",689,29,22887,689,62,22920],\n[\"builtin://charts\",689,41,22899,689,55,22913],\n[\"builtin://charts\",688,26,22817,688,65,22856],\n[\"builtin://charts\",688,43,22834,688,64,22855],\n[\"builtin://charts\",687,23,22748,687,64,22789],\n[\"builtin://charts\",687,42,22767,687,63,22788],\n[\"builtin://charts\",673,13,22307,673,33,22327],\n[\"builtin://charts\",671,13,22159,671,110,22256],\n[\"builtin://charts\",670,13,22048,670,110,22145],\n[\"builtin://charts\",667,12,21953,667,42,21983],\n[\"builtin://charts\",666,12,21910,666,42,21940],\n[\"builtin://charts\",665,19,21876,665,40,21897],\n[\"builtin://charts\",661,56,21729,661,62,21735],\n[\"builtin://charts\",661,82,21755,661,88,21761],\n[\"builtin://charts\",697,26,23190,706,3,23658],\n[\"builtin://charts\",698,17,23256,698,25,23264],\n[\"builtin://charts\",698,17,23256,698,34,23273],\n[\"builtin://charts\",700,6,23297,700,78,23369],\n[\"builtin://charts\",699,4,23280,700,78,23369],\n[\"builtin://charts\",698,2,23241,705,5,23654],\n[\"builtin://charts\",702,21,23410,702,29,23418],\n[\"builtin://charts\",703,22,23461,703,67,23506],\n[\"builtin://charts\",703,48,23487,703,55,23494],\n[\"builtin://charts\",703,58,23497,703,65,23504],\n[\"builtin://charts\",703,36,23475,703,56,23495],\n[\"builtin://charts\",703,18,23457,703,113,23552],\n[\"builtin://charts\",704,6,23559,704,19,23572],\n[\"builtin://charts\",704,20,23573,704,28,23581],\n[\"builtin://charts\",704,55,23608,704,65,23618],\n[\"builtin://charts\",704,67,23620,704,80,23633],\n[\"builtin://charts\",704,20,23573,704,94,23647],\n[\"builtin://charts\",704,6,23559,704,95,23648],\n[\"builtin://charts\",703,18,23457,703,82,23521],\n[\"builtin://charts\",701,4,23374,704,95,23648],\n[\"builtin://charts\",698,9,23248,698,15,23254],\n[\"builtin://charts\",697,54,23218,697,72,23236],\n[\"builtin://charts\",708,15,23675,718,3,24271],\n[\"builtin://charts\",709,13,23736,709,51,23774],\n[\"builtin://charts\",709,19,23742,709,50,23773],\n[\"builtin://charts\",710,17,23792,710,25,23800],\n[\"builtin://charts\",710,17,23792,710,29,23804],\n[\"builtin://charts\",711,14,23839,711,91,23916],\n[\"builtin://charts\",711,22,23847,711,90,23915],\n[\"builtin://charts\",711,23,23848,711,32,23857],\n[\"builtin://charts\",711,57,23882,711,89,23914],\n[\"builtin://charts\",712,15,23932,712,74,23991],\n[\"builtin://charts\",713,16,24008,713,29,24021],\n[\"builtin://charts\",713,30,24022,713,38,24030],\n[\"builtin://charts\",713,30,24022,713,56,24048],\n[\"builtin://charts\",714,22,24072,714,63,24113],\n[\"builtin://charts\",714,30,24080,714,62,24112],\n[\"builtin://charts\",715,3,24132,715,22,24151],\n[\"builtin://charts\",715,24,24153,715,43,24172],\n[\"builtin://charts\",717,2,24204,717,65,24267],\n[\"builtin://charts\",715,2,24131,715,44,24173],\n[\"builtin://charts\",715,47,24176,715,71,24200],\n[\"builtin://charts\",714,18,24068,714,78,24128],\n[\"builtin://charts\",713,16,24008,713,57,24049],\n[\"builtin://charts\",712,15,23932,712,43,23960],\n[\"builtin://charts\",708,41,23701,708,59,23719],\n[\"builtin://charts\",720,21,24294,732,3,25045],\n[\"builtin://charts\",721,13,24355,721,51,24393],\n[\"builtin://charts\",721,19,24361,721,50,24392],\n[\"builtin://charts\",722,17,24411,722,25,24419],\n[\"builtin://charts\",722,17,24411,722,29,24423],\n[\"builtin://charts\",723,15,24459,723,65,24509],\n[\"builtin://charts\",724,14,24524,724,121,24631],\n[\"builtin://charts\",724,22,24532,724,120,24630],\n[\"builtin://charts\",724,23,24533,724,32,24542],\n[\"builtin://charts\",724,57,24567,724,119,24629],\n[\"builtin://charts\",724,57,24567,724,88,24598],\n[\"builtin://charts\",724,71,24581,724,87,24597],\n[\"builtin://charts\",725,15,24647,725,74,24706],\n[\"builtin://charts\",726,16,24723,726,29,24736],\n[\"builtin://charts\",726,30,24737,726,38,24745],\n[\"builtin://charts\",726,30,24737,726,56,24763],\n[\"builtin://charts\",727,22,24787,727,62,24827],\n[\"builtin://charts\",727,30,24795,727,61,24826],\n[\"builtin://charts\",727,44,24809,727,60,24825],\n[\"builtin://charts\",729,40,24931,729,55,24946],\n[\"builtin://charts\",729,40,24931,729,66,24957],\n[\"builtin://charts\",728,3,24846,728,22,24865],\n[\"builtin://charts\",728,24,24867,728,43,24886],\n[\"builtin://charts\",731,2,24978,731,65,25041],\n[\"builtin://charts\",728,2,24845,728,44,24887],\n[\"builtin://charts\",729,4,24895,729,83,24974],\n[\"builtin://charts\",729,20,24911,729,67,24958],\n[\"builtin://charts\",727,18,24783,727,77,24842],\n[\"builtin://charts\",726,16,24723,726,57,24764],\n[\"builtin://charts\",725,15,24647,725,43,24675],\n[\"builtin://charts\",720,47,24320,720,65,24338],\n[\"builtin://charts\",734,23,25070,761,3,26479],\n[\"builtin://charts\",735,15,25125,735,65,25175],\n[\"builtin://charts\",736,32,25208,736,40,25216],\n[\"builtin://charts\",736,32,25208,736,44,25220],\n[\"builtin://charts\",739,17,25303,739,30,25316],\n[\"builtin://charts\",739,31,25317,739,39,25325],\n[\"builtin://charts\",739,31,25317,739,64,25350],\n[\"builtin://charts\",740,7,25359,740,26,25378],\n[\"builtin://charts\",740,28,25380,740,47,25399],\n[\"builtin://charts\",742,6,25457,742,66,25517],\n[\"builtin://charts\",740,6,25358,740,48,25400],\n[\"builtin://charts\",741,8,25412,741,46,25450],\n[\"builtin://charts\",739,17,25303,739,65,25351],\n[\"builtin://charts\",744,17,25571,744,30,25584],\n[\"builtin://charts\",744,31,25585,744,39,25593],\n[\"builtin://charts\",744,31,25585,744,64,25618],\n[\"builtin://charts\",745,7,25627,745,26,25646],\n[\"builtin://charts\",745,28,25648,745,47,25667],\n[\"builtin://charts\",747,6,25725,747,66,25785],\n[\"builtin://charts\",745,6,25626,745,48,25668],\n[\"builtin://charts\",746,8,25680,746,46,25718],\n[\"builtin://charts\",744,17,25571,744,65,25619],\n[\"builtin://charts\",749,17,25837,749,30,25850],\n[\"builtin://charts\",749,31,25851,749,39,25859],\n[\"builtin://charts\",749,31,25851,749,63,25883],\n[\"builtin://charts\",750,7,25892,750,26,25911],\n[\"builtin://charts\",750,28,25913,750,47,25932],\n[\"builtin://charts\",752,6,25989,752,66,26049],\n[\"builtin://charts\",753,27,26077,753,62,26112],\n[\"builtin://charts\",753,33,26083,753,61,26111],\n[\"builtin://charts\",753,47,26097,753,54,26104],\n[\"builtin://charts\",752,6,25989,753,63,26113],\n[\"builtin://charts\",750,6,25891,750,48,25933],\n[\"builtin://charts\",751,8,25945,751,45,25982],\n[\"builtin://charts\",749,17,25837,749,64,25884],\n[\"builtin://charts\",755,17,26166,755,30,26179],\n[\"builtin://charts\",755,31,26180,755,39,26188],\n[\"builtin://charts\",755,31,26180,755,60,26209],\n[\"builtin://charts\",756,7,26218,756,26,26237],\n[\"builtin://charts\",756,28,26239,756,47,26258],\n[\"builtin://charts\",758,6,26315,758,66,26375],\n[\"builtin://charts\",756,6,26217,756,48,26259],\n[\"builtin://charts\",757,8,26271,757,45,26308],\n[\"builtin://charts\",755,17,26166,755,61,26210],\n[\"builtin://charts\",759,17,26393,759,93,26469],\n[\"builtin://charts\",754,6,26120,754,27,26141],\n[\"builtin://charts\",748,6,25792,748,27,25813],\n[\"builtin://charts\",743,6,25524,743,28,25546],\n[\"builtin://charts\",738,6,25256,738,28,25278],\n[\"builtin://charts\",736,16,25192,736,65,25241],\n[\"builtin://charts\",734,50,25097,734,59,25106],\n[\"builtin://charts\",763,21,26502,800,3,27758],\n[\"builtin://charts\",766,37,26636,766,45,26644],\n[\"builtin://charts\",766,37,26636,766,57,26656],\n[\"builtin://charts\",767,17,26675,767,37,26695],\n[\"builtin://charts\",776,9,26936,781,17,27110],\n[\"builtin://charts\",777,11,26978,781,12,27105],\n[\"builtin://charts\",779,10,27040,779,24,27054],\n[\"builtin://charts\",778,8,27011,781,11,27104],\n[\"builtin://charts\",780,10,27065,780,37,27092],\n[\"builtin://charts\",780,22,27077,780,28,27083],\n[\"builtin://charts\",778,15,27018,778,21,27024],\n[\"builtin://charts\",777,18,26985,777,32,26999],\n[\"builtin://charts\",777,6,26973,781,16,27109],\n[\"builtin://charts\",776,16,26943,776,36,26963],\n[\"builtin://charts\",783,4,27135,796,7,27678],\n[\"builtin://charts\",787,28,27370,787,42,27384],\n[\"builtin://charts\",789,8,27437,794,42,27660],\n[\"builtin://charts\",789,14,27443,794,41,27659],\n[\"builtin://charts\",789,14,27443,793,27,27617],\n[\"builtin://charts\",789,14,27443,792,44,27589],\n[\"builtin://charts\",789,14,27443,791,27,27544],\n[\"builtin://charts\",789,14,27443,790,34,27516],\n[\"builtin://charts\",788,11,27396,788,42,27427],\n[\"builtin://charts\",783,46,27177,783,54,27185],\n[\"builtin://charts\",783,46,27177,783,66,27197],\n[\"builtin://charts\",785,28,27260,785,48,27280],\n[\"builtin://charts\",799,2,27688,799,15,27701],\n[\"builtin://charts\",799,16,27702,799,24,27710],\n[\"builtin://charts\",799,16,27702,799,67,27753],\n[\"builtin://charts\",799,2,27688,799,68,27754],\n[\"builtin://charts\",799,39,27725,799,66,27752],\n[\"builtin://charts\",785,19,27251,785,49,27281],\n[\"builtin://charts\",776,4,26931,781,31,27124],\n[\"builtin://charts\",769,4,26740,772,38,26908],\n[\"builtin://charts\",769,10,26746,772,37,26907],\n[\"builtin://charts\",769,10,26746,771,23,26869],\n[\"builtin://charts\",769,10,26746,770,40,26845],\n[\"builtin://charts\",768,7,26703,768,38,26734],\n[\"builtin://charts\",764,19,26534,764,29,26544],\n[\"builtin://charts\",802,28,27788,805,3,27935],\n[\"builtin://charts\",803,2,27829,803,47,27874],\n[\"builtin://charts\",804,40,27915,804,54,27929],\n[\"builtin://charts\",804,24,27899,804,55,27930],\n[\"builtin://charts\",803,2,27829,804,56,27931],\n[\"builtin://charts\",802,56,27816,802,64,27824],\n[\"builtin://charts\",807,19,27956,845,3,29503],\n[\"builtin://charts\",808,37,28038,808,45,28046],\n[\"builtin://charts\",808,37,28038,808,55,28056],\n[\"builtin://charts\",809,17,28075,809,35,28093],\n[\"builtin://charts\",817,9,28329,819,45,28438],\n[\"builtin://charts\",818,11,28369,819,40,28433],\n[\"builtin://charts\",819,13,28406,819,34,28427],\n[\"builtin://charts\",819,20,28413,819,26,28419],\n[\"builtin://charts\",819,8,28401,819,39,28432],\n[\"builtin://charts\",818,19,28377,818,31,28389],\n[\"builtin://charts\",818,6,28364,819,44,28437],\n[\"builtin://charts\",817,16,28336,817,34,28354],\n[\"builtin://charts\",820,4,28456,833,7,28991],\n[\"builtin://charts\",824,28,28685,824,42,28699],\n[\"builtin://charts\",826,8,28752,831,42,28973],\n[\"builtin://charts\",826,14,28758,831,41,28972],\n[\"builtin://charts\",826,14,28758,830,27,28930],\n[\"builtin://charts\",826,14,28758,829,44,28902],\n[\"builtin://charts\",826,14,28758,828,27,28857],\n[\"builtin://charts\",826,14,28758,827,34,28829],\n[\"builtin://charts\",825,11,28711,825,42,28742],\n[\"builtin://charts\",820,46,28498,820,54,28506],\n[\"builtin://charts\",820,46,28498,820,64,28516],\n[\"builtin://charts\",822,28,28577,822,46,28595],\n[\"builtin://charts\",835,32,29030,835,58,29056],\n[\"builtin://charts\",835,18,29016,835,59,29057],\n[\"builtin://charts\",836,12,29087,836,62,29137],\n[\"builtin://charts\",836,25,29100,836,48,29123],\n[\"builtin://charts\",836,38,29113,836,47,29122],\n[\"builtin://charts\",836,20,29095,836,61,29136],\n[\"builtin://charts\",837,14,29152,837,22,29160],\n[\"builtin://charts\",837,14,29152,837,31,29169],\n[\"builtin://charts\",837,14,29152,837,37,29175],\n[\"builtin://charts\",840,2,29304,840,15,29317],\n[\"builtin://charts\",841,4,29323,841,12,29331],\n[\"builtin://charts\",841,4,29323,841,39,29358],\n[\"builtin://charts\",843,22,29406,843,39,29423],\n[\"builtin://charts\",844,22,29463,844,42,29483],\n[\"builtin://charts\",840,2,29304,844,58,29499],\n[\"builtin://charts\",840,2,29304,841,40,29359],\n[\"builtin://charts\",839,17,29256,839,62,29301],\n[\"builtin://charts\",839,34,29273,839,61,29300],\n[\"builtin://charts\",839,42,29281,839,60,29299],\n[\"builtin://charts\",838,17,29193,838,62,29238],\n[\"builtin://charts\",838,34,29210,838,61,29237],\n[\"builtin://charts\",838,42,29218,838,60,29236],\n[\"builtin://charts\",835,18,29016,835,76,29074],\n[\"builtin://charts\",822,19,28568,822,47,28596],\n[\"builtin://charts\",817,4,28324,819,57,28450],\n[\"builtin://charts\",811,4,28138,814,38,28304],\n[\"builtin://charts\",811,10,28144,814,37,28303],\n[\"builtin://charts\",811,10,28144,813,23,28265],\n[\"builtin://charts\",811,10,28144,812,40,28241],\n[\"builtin://charts\",810,7,28101,810,38,28132],\n[\"builtin://charts\",807,45,27982,807,55,27992],\n[\"builtin://charts\",847,26,29531,849,3,29649],\n[\"builtin://charts\",848,2,29570,848,36,29604],\n[\"builtin://charts\",848,61,29629,848,75,29643],\n[\"builtin://charts\",848,47,29615,848,76,29644],\n[\"builtin://charts\",848,2,29570,848,77,29645],\n[\"builtin://charts\",847,52,29557,847,60,29565],\n[\"builtin://charts\",851,20,29671,910,3,32001],\n[\"builtin://charts\",854,37,29902,854,45,29910],\n[\"builtin://charts\",854,37,29902,854,55,29920],\n[\"builtin://charts\",855,17,29939,855,32,29954],\n[\"builtin://charts\",863,9,30191,865,45,30300],\n[\"builtin://charts\",864,11,30231,865,40,30295],\n[\"builtin://charts\",865,13,30268,865,34,30289],\n[\"builtin://charts\",865,20,30275,865,26,30281],\n[\"builtin://charts\",865,8,30263,865,39,30294],\n[\"builtin://charts\",864,19,30239,864,31,30251],\n[\"builtin://charts\",864,6,30226,865,44,30299],\n[\"builtin://charts\",863,16,30198,863,34,30216],\n[\"builtin://charts\",866,4,30315,898,7,31608],\n[\"builtin://charts\",871,30,30555,871,44,30569],\n[\"builtin://charts\",880,8,30891,896,11,31590],\n[\"builtin://charts\",883,17,31035,883,30,31048],\n[\"builtin://charts\",887,17,31215,887,28,31226],\n[\"builtin://charts\",891,17,31398,891,28,31409],\n[\"builtin://charts\",892,14,31429,893,58,31548],\n[\"builtin://charts\",892,20,31435,893,57,31547],\n[\"builtin://charts\",892,20,31435,892,74,31489],\n[\"builtin://charts\",892,20,31435,892,64,31479],\n[\"builtin://charts\",892,20,31435,892,51,31466],\n[\"builtin://charts\",891,17,31398,891,32,31413],\n[\"builtin://charts\",888,14,31246,889,57,31364],\n[\"builtin://charts\",888,20,31252,889,56,31363],\n[\"builtin://charts\",888,20,31252,888,74,31306],\n[\"builtin://charts\",888,20,31252,888,64,31296],\n[\"builtin://charts\",888,20,31252,888,51,31283],\n[\"builtin://charts\",887,17,31215,887,32,31230],\n[\"builtin://charts\",884,14,31069,885,51,31181],\n[\"builtin://charts\",884,20,31075,885,50,31180],\n[\"builtin://charts\",884,20,31075,884,74,31129],\n[\"builtin://charts\",884,20,31075,884,64,31119],\n[\"builtin://charts\",884,20,31075,884,51,31106],\n[\"builtin://charts\",883,17,31035,883,35,31053],\n[\"builtin://charts\",880,56,30939,880,70,30953],\n[\"builtin://charts\",880,47,30930,880,71,30954],\n[\"builtin://charts\",874,10,30665,878,44,30870],\n[\"builtin://charts\",874,16,30671,878,43,30869],\n[\"builtin://charts\",874,16,30671,877,29,30825],\n[\"builtin://charts\",874,16,30671,876,46,30795],\n[\"builtin://charts\",874,16,30671,875,29,30748],\n[\"builtin://charts\",874,16,30671,874,63,30718],\n[\"builtin://charts\",873,13,30622,873,44,30653],\n[\"builtin://charts\",866,46,30357,866,54,30365],\n[\"builtin://charts\",866,46,30357,866,64,30375],\n[\"builtin://charts\",868,28,30433,868,43,30448],\n[\"builtin://charts\",901,33,31678,901,52,31697],\n[\"builtin://charts\",901,54,31699,901,62,31707],\n[\"builtin://charts\",901,54,31699,901,66,31711],\n[\"builtin://charts\",903,21,31780,908,5,31962],\n[\"builtin://charts\",905,4,31849,907,7,31956],\n[\"builtin://charts\",906,23,31935,906,35,31947],\n[\"builtin://charts\",906,6,31918,906,36,31948],\n[\"builtin://charts\",909,2,31965,909,34,31997],\n[\"builtin://charts\",902,15,31728,902,45,31758],\n[\"builtin://charts\",901,19,31664,901,67,31712],\n[\"builtin://charts\",868,19,30424,868,44,30449],\n[\"builtin://charts\",863,4,30186,865,54,30309],\n[\"builtin://charts\",857,4,29999,860,38,30166],\n[\"builtin://charts\",857,10,30005,860,37,30165],\n[\"builtin://charts\",857,10,30005,859,23,30127],\n[\"builtin://charts\",857,10,30005,858,40,30103],\n[\"builtin://charts\",856,7,29962,856,38,29993],\n[\"builtin://charts\",851,43,29694,851,53,29704],\n[\"builtin://charts\",912,27,32030,957,3,33672],\n[\"builtin://charts\",916,37,32294,916,45,32302],\n[\"builtin://charts\",916,37,32294,916,55,32312],\n[\"builtin://charts\",917,17,32331,917,32,32346],\n[\"builtin://charts\",925,11,32585,926,39,32647],\n[\"builtin://charts\",926,13,32621,926,34,32642],\n[\"builtin://charts\",926,20,32628,926,26,32634],\n[\"builtin://charts\",926,8,32616,926,38,32646],\n[\"builtin://charts\",925,18,32592,925,30,32604],\n[\"builtin://charts\",928,4,32662,947,7,33364],\n[\"builtin://charts\",933,13,32864,933,27,32878],\n[\"builtin://charts\",938,13,33069,938,25,33081],\n[\"builtin://charts\",942,13,33214,942,25,33226],\n[\"builtin://charts\",943,10,33242,944,54,33334],\n[\"builtin://charts\",943,16,33248,944,53,33333],\n[\"builtin://charts\",943,16,33248,943,47,33279],\n[\"builtin://charts\",942,13,33214,942,29,33230],\n[\"builtin://charts\",939,10,33097,940,53,33188],\n[\"builtin://charts\",939,16,33103,940,52,33187],\n[\"builtin://charts\",939,16,33103,939,47,33134],\n[\"builtin://charts\",938,13,33069,938,29,33085],\n[\"builtin://charts\",936,30,33020,936,44,33034],\n[\"builtin://charts\",934,10,32895,936,53,33043],\n[\"builtin://charts\",934,16,32901,936,52,33042],\n[\"builtin://charts\",934,16,32901,936,45,33035],\n[\"builtin://charts\",934,16,32901,935,56,32989],\n[\"builtin://charts\",934,16,32901,934,47,32932],\n[\"builtin://charts\",933,13,32864,933,32,32883],\n[\"builtin://charts\",928,46,32704,928,54,32712],\n[\"builtin://charts\",928,46,32704,928,64,32722],\n[\"builtin://charts\",930,28,32780,930,43,32795],\n[\"builtin://charts\",950,33,33434,950,52,33453],\n[\"builtin://charts\",950,54,33455,950,62,33463],\n[\"builtin://charts\",950,54,33455,950,66,33467],\n[\"builtin://charts\",952,21,33539,955,5,33633],\n[\"builtin://charts\",954,14,33614,954,26,33626],\n[\"builtin://charts\",954,4,33604,954,27,33627],\n[\"builtin://charts\",956,2,33636,956,34,33668],\n[\"builtin://charts\",950,19,33420,950,67,33468],\n[\"builtin://charts\",930,19,32771,930,44,32796],\n[\"builtin://charts\",925,6,32580,926,48,32656],\n[\"builtin://charts\",919,4,32391,922,38,32558],\n[\"builtin://charts\",919,10,32397,922,37,32557],\n[\"builtin://charts\",919,10,32397,921,23,32519],\n[\"builtin://charts\",919,10,32397,920,40,32495],\n[\"builtin://charts\",918,7,32354,918,38,32385],\n[\"builtin://charts\",912,50,32053,912,58,32061],\n[\"builtin://charts\",959,13,33687,961,3,33762],\n[\"builtin://charts\",960,2,33718,960,15,33731],\n[\"builtin://charts\",960,16,33732,960,24,33740],\n[\"builtin://charts\",960,16,33732,960,41,33757],\n[\"builtin://charts\",960,2,33718,960,42,33758],\n[\"builtin://charts\",959,33,33707,959,39,33713],\n[\"builtin://charts\",963,13,33777,965,3,33852],\n[\"builtin://charts\",964,2,33808,964,15,33821],\n[\"builtin://charts\",964,16,33822,964,24,33830],\n[\"builtin://charts\",964,16,33822,964,41,33847],\n[\"builtin://charts\",964,2,33808,964,42,33848],\n[\"builtin://charts\",963,33,33797,963,39,33803],\n[\"builtin://charts\",967,20,33874,969,3,33947],\n[\"builtin://charts\",968,2,33904,968,15,33917],\n[\"builtin://charts\",968,16,33918,968,24,33926],\n[\"builtin://charts\",968,16,33918,968,40,33942],\n[\"builtin://charts\",968,2,33904,968,41,33943],\n[\"builtin://charts\",967,38,33892,967,45,33899],\n[\"builtin://charts\",990,0,34358,1005,3,34904],\n[\"builtin://charts\",990,42,34400,990,53,34411],\n[\"builtin://charts\",992,15,34455,992,53,34493],\n[\"builtin://charts\",992,4,34444,992,53,34493],\n[\"builtin://charts\",991,2,34415,1004,5,34900],\n[\"builtin://charts\",994,6,34520,996,9,34681],\n[\"builtin://charts\",995,8,34604,995,75,34671],\n[\"builtin://charts\",995,51,34647,995,71,34667],\n[\"builtin://charts\",995,59,34655,995,70,34666],\n[\"builtin://charts\",995,27,34623,995,38,34634],\n[\"builtin://charts\",994,23,34537,994,49,34563],\n[\"builtin://charts\",994,63,34577,994,79,34593],\n[\"builtin://charts\",997,6,34688,1003,7,34894],\n[\"builtin://charts\",1001,15,34840,1001,36,34861],\n[\"builtin://charts\",1000,15,34802,1000,36,34823],\n[\"builtin://charts\",999,15,34764,999,36,34785],\n[\"builtin://charts\",998,15,34726,998,36,34747],\n[\"builtin://charts\",993,4,34498,1003,7,34894],\n[\"builtin://charts\",991,9,34422,991,21,34434],\n[\"builtin://charts\",990,27,34385,990,37,34395],\n[\"builtin://charts\",1007,0,34906,1028,3,35540],\n[\"builtin://charts\",1008,2,34998,1027,5,35536],\n[\"builtin://charts\",1009,4,35040,1026,7,35511],\n[\"builtin://charts\",1010,21,35091,1010,31,35101],\n[\"builtin://charts\",1014,21,35195,1014,31,35205],\n[\"builtin://charts\",1018,21,35299,1018,31,35309],\n[\"builtin://charts\",1022,21,35414,1022,31,35424],\n[\"builtin://charts\",1023,8,35434,1023,22,35448],\n[\"builtin://charts\",1022,6,35399,1025,9,35503],\n[\"builtin://charts\",1024,21,35470,1024,44,35493],\n[\"builtin://charts\",1024,21,35470,1024,39,35488],\n[\"builtin://charts\",1024,8,35457,1024,44,35493],\n[\"builtin://charts\",1022,13,35406,1022,19,35412],\n[\"builtin://charts\",1019,8,35319,1019,22,35333],\n[\"builtin://charts\",1018,6,35284,1021,9,35388],\n[\"builtin://charts\",1020,21,35355,1020,44,35378],\n[\"builtin://charts\",1020,21,35355,1020,39,35373],\n[\"builtin://charts\",1020,8,35342,1020,44,35378],\n[\"builtin://charts\",1018,13,35291,1018,19,35297],\n[\"builtin://charts\",1015,8,35215,1015,22,35229],\n[\"builtin://charts\",1014,6,35180,1017,9,35273],\n[\"builtin://charts\",1016,21,35251,1016,33,35263],\n[\"builtin://charts\",1016,8,35238,1016,33,35263],\n[\"builtin://charts\",1014,13,35187,1014,19,35193],\n[\"builtin://charts\",1011,8,35111,1011,22,35125],\n[\"builtin://charts\",1010,6,35076,1013,9,35169],\n[\"builtin://charts\",1012,21,35147,1012,33,35159],\n[\"builtin://charts\",1012,8,35134,1012,33,35159],\n[\"builtin://charts\",1010,13,35083,1010,19,35089],\n[\"builtin://charts\",1009,4,35040,1026,26,35530],\n[\"builtin://charts\",1007,71,34977,1007,88,34994],\n[\"builtin://charts\",1030,0,35542,1046,3,36085],\n[\"builtin://charts\",1031,2,35608,1045,5,36081],\n[\"builtin://charts\",1033,8,35678,1033,18,35688],\n[\"builtin://charts\",1035,25,35769,1035,32,35776],\n[\"builtin://charts\",1035,34,35778,1035,44,35788],\n[\"builtin://charts\",1036,25,35816,1036,32,35823],\n[\"builtin://charts\",1036,34,35825,1036,44,35835],\n[\"builtin://charts\",1037,25,35863,1037,32,35870],\n[\"builtin://charts\",1037,34,35872,1037,44,35882],\n[\"builtin://charts\",1038,25,35910,1038,32,35917],\n[\"builtin://charts\",1038,34,35919,1038,44,35929],\n[\"builtin://charts\",1034,8,35721,1040,9,35967],\n[\"builtin://charts\",1041,8,35976,1041,18,35986],\n[\"builtin://charts\",1042,8,36003,1042,21,36016],\n[\"builtin://charts\",1033,23,35693,1033,36,35706],\n[\"builtin://charts\",1030,51,35593,1030,62,35604],\n[\"builtin://charts\",1030,29,35571,1030,46,35588],\n[\"builtin://charts\",1121,15,37881,1121,88,37954],\n[\"builtin://charts\",1121,16,37882,1121,25,37891],\n[\"builtin://charts\",1177,17,39187,1177,34,39204],\n[\"builtin://charts\",1177,18,39188,1177,27,39197],\n[\"builtin://charts\",1355,2,42861,1355,49,42908],\n[\"builtin://charts\",1355,23,42882,1355,45,42904],\n[\"builtin://charts\",1372,63,43283,1377,1,43368],\n[\"builtin://charts\",1403,58,43988,1406,1,44046],\n[\"builtin://charts\",1422,58,44417,1427,1,44506],\n[\"builtin://charts\",1443,68,44890,1448,1,44979],\n[\"builtin://charts\",1466,2,45397,1472,3,45513],\n[\"builtin://charts\",1498,60,46214,1513,1,46543],\n[\"builtin://charts\",1702,2,53374,1708,5,53755],\n[\"builtin://charts\",1703,30,53426,1703,97,53493],\n[\"builtin://charts\",1703,65,53461,1703,77,53473],\n[\"builtin://charts\",1703,65,53461,1703,95,53491],\n[\"builtin://charts\",1703,35,53431,1703,96,53492],\n[\"builtin://charts\",1703,65,53461,1703,83,53479],\n[\"builtin://charts\",1704,6,53502,1704,20,53516],\n[\"builtin://charts\",1703,4,53400,1707,7,53749],\n[\"builtin://charts\",1705,32,53549,1706,122,53740],\n[\"builtin://charts\",1705,33,53550,1705,37,53554],\n[\"builtin://charts\",1706,71,53689,1706,102,53720],\n[\"builtin://charts\",1705,22,53539,1706,123,53741],\n[\"builtin://charts\",1706,39,53657,1706,121,53739],\n[\"builtin://charts\",1706,49,53667,1706,120,53738],\n[\"builtin://charts\",1706,71,53689,1706,86,53704],\n[\"builtin://charts\",1705,39,53556,1705,98,53615],\n[\"builtin://charts\",1705,6,53523,1706,123,53741],\n[\"builtin://charts\",1703,11,53407,1703,19,53415],\n[\"builtin://charts\",1703,21,53417,1703,98,53494],\n[\"builtin://charts\",1522,12,46828,1522,34,46850],\n[\"builtin://charts\",1522,17,46833,1522,33,46849],\n[\"builtin://charts\",1536,4,47340,1541,7,47554],\n[\"builtin://charts\",1540,6,47498,1540,19,47511],\n[\"builtin://charts\",1540,20,47512,1540,28,47520],\n[\"builtin://charts\",1540,20,47512,1540,53,47545],\n[\"builtin://charts\",1540,6,47498,1540,54,47546],\n[\"builtin://charts\",1538,8,47429,1538,60,47481],\n[\"builtin://charts\",1537,11,47404,1537,25,47418],\n[\"builtin://charts\",1536,42,47378,1536,48,47384],\n[\"builtin://charts\",1542,4,47560,1544,7,47688],\n[\"builtin://charts\",1543,6,47624,1543,19,47637],\n[\"builtin://charts\",1543,20,47638,1543,28,47646],\n[\"builtin://charts\",1543,20,47638,1543,61,47679],\n[\"builtin://charts\",1543,6,47624,1543,62,47680],\n[\"builtin://charts\",1542,52,47608,1542,59,47615],\n[\"builtin://charts\",1552,12,47999,1552,37,48024],\n[\"builtin://charts\",1552,17,48004,1552,36,48023],\n[\"builtin://charts\",1558,4,48185,1563,7,48396],\n[\"builtin://charts\",1562,6,48340,1562,19,48353],\n[\"builtin://charts\",1562,20,48354,1562,28,48362],\n[\"builtin://charts\",1562,20,48354,1562,53,48387],\n[\"builtin://charts\",1562,6,48340,1562,54,48388],\n[\"builtin://charts\",1560,8,48275,1560,56,48323],\n[\"builtin://charts\",1559,11,48249,1559,26,48264],\n[\"builtin://charts\",1558,42,48223,1558,48,48229],\n[\"builtin://charts\",1564,4,48402,1566,7,48530],\n[\"builtin://charts\",1565,6,48466,1565,19,48479],\n[\"builtin://charts\",1565,20,48480,1565,28,48488],\n[\"builtin://charts\",1565,20,48480,1565,61,48521],\n[\"builtin://charts\",1565,6,48466,1565,62,48522],\n[\"builtin://charts\",1564,52,48450,1564,59,48457],\n[\"builtin://charts\",1570,12,48648,1570,33,48669],\n[\"builtin://charts\",1570,17,48653,1570,32,48668],\n[\"builtin://charts\",1575,4,48793,1580,7,49007],\n[\"builtin://charts\",1579,6,48951,1579,19,48964],\n[\"builtin://charts\",1579,20,48965,1579,28,48973],\n[\"builtin://charts\",1579,20,48965,1579,53,48998],\n[\"builtin://charts\",1579,6,48951,1579,54,48999],\n[\"builtin://charts\",1577,8,48882,1577,60,48934],\n[\"builtin://charts\",1576,11,48857,1576,25,48871],\n[\"builtin://charts\",1575,42,48831,1575,48,48837],\n[\"builtin://charts\",1581,4,49013,1583,7,49141],\n[\"builtin://charts\",1582,6,49077,1582,19,49090],\n[\"builtin://charts\",1582,20,49091,1582,28,49099],\n[\"builtin://charts\",1582,20,49091,1582,61,49132],\n[\"builtin://charts\",1582,6,49077,1582,62,49133],\n[\"builtin://charts\",1581,52,49061,1581,59,49068],\n[\"builtin://charts\",1586,12,49247,1586,45,49280],\n[\"builtin://charts\",1586,17,49252,1586,44,49279],\n[\"builtin://charts\",1591,12,49426,1591,38,49452],\n[\"builtin://charts\",1591,17,49431,1591,37,49451],\n[\"builtin://charts\",1606,12,49921,1606,34,49943],\n[\"builtin://charts\",1606,17,49926,1606,33,49942],\n[\"builtin://charts\",1624,12,50572,1624,34,50594],\n[\"builtin://charts\",1624,17,50577,1624,33,50593],\n[\"builtin://charts\",1641,4,51147,1646,7,51360],\n[\"builtin://charts\",1645,6,51304,1645,19,51317],\n[\"builtin://charts\",1645,20,51318,1645,28,51326],\n[\"builtin://charts\",1645,20,51318,1645,53,51351],\n[\"builtin://charts\",1645,6,51304,1645,54,51352],\n[\"builtin://charts\",1643,8,51235,1643,60,51287],\n[\"builtin://charts\",1642,11,51211,1642,25,51225],\n[\"builtin://charts\",1641,42,51185,1641,48,51191],\n[\"builtin://charts\",1652,12,51578,1652,39,51605],\n[\"builtin://charts\",1652,17,51583,1652,38,51604],\n[\"builtin://charts\",1671,12,52310,1671,40,52338],\n[\"builtin://charts\",1671,17,52315,1671,39,52337],\n[\"builtin://charts\",1676,12,52478,1676,33,52499],\n[\"builtin://charts\",1676,17,52483,1676,32,52498],\n[\"builtin://charts\",1678,4,52540,1680,7,52633],\n[\"builtin://charts\",1679,6,52580,1679,19,52593],\n[\"builtin://charts\",1679,20,52594,1679,28,52602],\n[\"builtin://charts\",1679,20,52594,1679,50,52624],\n[\"builtin://charts\",1679,6,52580,1679,51,52625],\n[\"builtin://charts\",1685,12,52781,1685,34,52803],\n[\"builtin://charts\",1685,17,52786,1685,33,52802],\n[\"builtin://charts\",1686,4,52809,1688,7,52923],\n[\"builtin://charts\",1687,6,52860,1687,22,52876],\n[\"builtin://charts\",1687,23,52877,1687,31,52885],\n[\"builtin://charts\",1687,23,52877,1687,60,52914],\n[\"builtin://charts\",1687,6,52860,1687,61,52915],\n[\"builtin://charts\",1686,40,52845,1686,46,52851],\n[\"builtin://charts\",1689,4,52929,1691,7,53055],\n[\"builtin://charts\",1690,6,52986,1690,22,53002],\n[\"builtin://charts\",1690,23,53003,1690,31,53011],\n[\"builtin://charts\",1690,23,53003,1690,66,53046],\n[\"builtin://charts\",1690,6,52986,1690,67,53047],\n[\"builtin://charts\",1689,46,52971,1689,52,52977],\n[\"builtin://charts\",1692,4,53061,1694,7,53187],\n[\"builtin://charts\",1693,6,53118,1693,22,53134],\n[\"builtin://charts\",1693,23,53135,1693,31,53143],\n[\"builtin://charts\",1693,23,53135,1693,66,53178],\n[\"builtin://charts\",1693,6,53118,1693,67,53179],\n[\"builtin://charts\",1692,46,53103,1692,52,53109],\n[\"builtin://charts\",1695,4,53193,1700,7,53361],\n[\"builtin://charts\",1696,6,53242,1696,22,53258],\n[\"builtin://charts\",1696,23,53259,1696,31,53267],\n[\"builtin://charts\",1696,23,53259,1699,7,53352],\n[\"builtin://charts\",1696,6,53242,1699,8,53353],\n[\"builtin://charts\",1695,38,53227,1695,44,53233],\n[\"builtin://charts\",1520,2,46746,1545,34,47724],\n[\"builtin://charts\",1520,28,46772,1520,42,46786],\n[\"builtin://charts\",1546,2,47727,1567,34,48566],\n[\"builtin://charts\",1546,31,47756,1546,48,47773],\n[\"builtin://charts\",1568,2,48569,1583,8,49142],\n[\"builtin://charts\",1568,27,48594,1568,40,48607],\n[\"builtin://charts\",1584,2,49145,1588,26,49333],\n[\"builtin://charts\",1584,39,49182,1584,63,49206],\n[\"builtin://charts\",1589,2,49336,1594,34,49540],\n[\"builtin://charts\",1589,32,49366,1589,50,49384],\n[\"builtin://charts\",1595,2,49543,1606,35,49944],\n[\"builtin://charts\",1595,28,49569,1595,42,49583],\n[\"builtin://charts\",1607,2,49947,1624,35,50595],\n[\"builtin://charts\",1607,28,49973,1607,42,49987],\n[\"builtin://charts\",1625,2,50598,1652,40,51606],\n[\"builtin://charts\",1625,33,50629,1625,52,50648],\n[\"builtin://charts\",1653,2,51609,1671,40,52338],\n[\"builtin://charts\",1653,34,51641,1653,53,51660],\n[\"builtin://charts\",1672,2,52341,1680,8,52634],\n[\"builtin://charts\",1672,27,52366,1672,41,52380],\n[\"builtin://charts\",1681,2,52637,1700,8,53362],\n[\"builtin://charts\",1681,28,52663,1681,43,52678],\n[\"builtin://charts\",1519,0,46727,1709,3,53759],\n[\"builtin://charts\",1711,0,53761,1717,3,53944],\n[\"builtin://charts\",1712,6,53826,1712,13,53833],\n[\"builtin://charts\",1711,50,53811,1711,57,53818],\n[\"builtin://charts\",1713,4,53864,1713,54,53914],\n[\"builtin://charts\",1712,24,53844,1712,32,53852],\n[\"builtin://charts\",1712,24,53844,1712,37,53857],\n[\"builtin://charts\",1712,6,53826,1712,18,53838],\n[\"builtin://charts\",1711,28,53789,1711,45,53806],\n[\"builtin://charts\",1776,2,56120,1779,5,56223],\n[\"builtin://charts\",1777,27,56169,1777,35,56177],\n[\"builtin://charts\",1778,4,56183,1778,12,56191],\n[\"builtin://charts\",1778,4,56183,1778,29,56208],\n[\"builtin://charts\",1778,4,56183,1778,38,56217],\n[\"builtin://charts\",1777,8,56150,1777,36,56178],\n[\"builtin://charts\",1780,2,56227,1783,5,56333],\n[\"builtin://charts\",1781,27,56278,1781,35,56286],\n[\"builtin://charts\",1782,4,56292,1782,12,56300],\n[\"builtin://charts\",1782,4,56292,1782,30,56318],\n[\"builtin://charts\",1782,4,56292,1782,39,56327],\n[\"builtin://charts\",1781,8,56259,1781,36,56287],\n[\"builtin://charts\",1784,2,56337,1786,5,56422],\n[\"builtin://charts\",1785,4,56378,1785,17,56391],\n[\"builtin://charts\",1785,18,56392,1785,26,56400],\n[\"builtin://charts\",1785,18,56392,1785,41,56415],\n[\"builtin://charts\",1785,4,56378,1785,42,56416],\n[\"builtin://charts\",1784,30,56365,1784,36,56371],\n[\"builtin://charts\",1787,2,56426,1789,5,56511],\n[\"builtin://charts\",1788,4,56467,1788,17,56480],\n[\"builtin://charts\",1788,18,56481,1788,26,56489],\n[\"builtin://charts\",1788,18,56481,1788,41,56504],\n[\"builtin://charts\",1788,4,56467,1788,42,56505],\n[\"builtin://charts\",1787,30,56454,1787,36,56460],\n[\"builtin://charts\",1790,2,56515,1792,5,56604],\n[\"builtin://charts\",1791,4,56558,1791,17,56571],\n[\"builtin://charts\",1791,18,56572,1791,26,56580],\n[\"builtin://charts\",1791,18,56572,1791,43,56597],\n[\"builtin://charts\",1791,4,56558,1791,44,56598],\n[\"builtin://charts\",1790,32,56545,1790,38,56551],\n[\"builtin://charts\",1793,2,56608,1795,5,56688],\n[\"builtin://charts\",1794,35,56665,1794,51,56681],\n[\"builtin://charts\",1794,4,56634,1794,52,56682],\n[\"builtin://charts\",1721,12,54032,1721,34,54054],\n[\"builtin://charts\",1721,17,54037,1721,33,54053],\n[\"builtin://charts\",1723,12,54124,1723,34,54146],\n[\"builtin://charts\",1723,17,54129,1723,33,54145],\n[\"builtin://charts\",1727,12,54275,1727,39,54302],\n[\"builtin://charts\",1727,17,54280,1727,38,54301],\n[\"builtin://charts\",1733,12,54468,1733,34,54490],\n[\"builtin://charts\",1733,17,54473,1733,33,54489],\n[\"builtin://charts\",1739,12,54674,1739,39,54701],\n[\"builtin://charts\",1739,17,54679,1739,38,54700],\n[\"builtin://charts\",1745,12,54887,1745,40,54915],\n[\"builtin://charts\",1745,17,54892,1745,39,54914],\n[\"builtin://charts\",1752,12,55116,1752,35,55139],\n[\"builtin://charts\",1752,17,55121,1752,34,55138],\n[\"builtin://charts\",1766,4,55682,1771,7,55983],\n[\"builtin://charts\",1770,6,55921,1770,23,55938],\n[\"builtin://charts\",1770,24,55939,1770,32,55947],\n[\"builtin://charts\",1770,24,55939,1770,59,55974],\n[\"builtin://charts\",1770,6,55921,1770,60,55975],\n[\"builtin://charts\",1768,8,55838,1768,74,55904],\n[\"builtin://charts\",1767,59,55796,1767,91,55828],\n[\"builtin://charts\",1767,34,55771,1767,54,55791],\n[\"builtin://charts\",1767,12,55749,1767,28,55765],\n[\"builtin://charts\",1766,44,55722,1766,50,55728],\n[\"builtin://charts\",1720,2,53966,1721,35,54055],\n[\"builtin://charts\",1720,28,53992,1720,48,54012],\n[\"builtin://charts\",1722,2,54058,1725,26,54201],\n[\"builtin://charts\",1722,28,54084,1722,48,54104],\n[\"builtin://charts\",1726,2,54204,1731,20,54399],\n[\"builtin://charts\",1726,33,54235,1726,53,54255],\n[\"builtin://charts\",1732,2,54402,1737,24,54595],\n[\"builtin://charts\",1732,28,54428,1732,48,54448],\n[\"builtin://charts\",1738,2,54598,1743,24,54806],\n[\"builtin://charts\",1738,33,54629,1738,58,54654],\n[\"builtin://charts\",1744,2,54809,1750,24,55045],\n[\"builtin://charts\",1744,34,54841,1744,60,54867],\n[\"builtin://charts\",1751,2,55048,1771,8,55984],\n[\"builtin://charts\",1751,29,55075,1751,50,55096],\n[\"builtin://charts\",1719,0,53946,1796,3,56692],\n[\"builtin://charts\",1802,0,56869,1806,3,57009],\n[\"builtin://charts\",1803,2,56938,1805,3,56982],\n[\"builtin://charts\",1802,55,56924,1802,65,56934],\n[\"builtin://charts\",1802,33,56902,1802,50,56919],\n[\"builtin://charts\",1808,0,57011,1817,3,57364],\n[\"builtin://charts\",1809,7,57091,1809,18,57102],\n[\"builtin://charts\",1809,22,57106,1809,33,57117],\n[\"builtin://charts\",1812,2,57189,1812,20,57207],\n[\"builtin://charts\",1813,2,57210,1813,20,57228],\n[\"builtin://charts\",1815,13,57271,1815,30,57288],\n[\"builtin://charts\",1815,47,57305,1815,56,57314],\n[\"builtin://charts\",1815,40,57298,1815,57,57315],\n[\"builtin://charts\",1815,66,57324,1815,77,57335],\n[\"builtin://charts\",1815,59,57317,1815,78,57336],\n[\"builtin://charts\",1814,2,57231,1816,3,57341],\n[\"builtin://charts\",1808,55,57066,1808,65,57076],\n[\"builtin://charts\",1815,8,57266,1815,79,57337],\n[\"builtin://charts\",1810,4,57123,1810,61,57180],\n[\"builtin://charts\",1809,7,57091,1809,33,57117],\n[\"builtin://charts\",1808,30,57041,1808,36,57047],\n[\"builtin://charts\",1808,44,57055,1808,50,57061],\n[\"builtin://charts\",1819,0,57366,1831,3,57861],\n[\"builtin://charts\",1820,7,57472,1820,18,57483],\n[\"builtin://charts\",1820,22,57487,1820,33,57498],\n[\"builtin://charts\",1823,7,57583,1823,18,57594],\n[\"builtin://charts\",1823,22,57598,1823,37,57613],\n[\"builtin://charts\",1826,2,57697,1826,20,57715],\n[\"builtin://charts\",1827,2,57718,1827,20,57736],\n[\"builtin://charts\",1829,13,57779,1829,30,57796],\n[\"builtin://charts\",1829,55,57821,1829,66,57832],\n[\"builtin://charts\",1829,48,57814,1829,67,57833],\n[\"builtin://charts\",1828,2,57739,1830,3,57838],\n[\"builtin://charts\",1819,81,57447,1819,91,57457],\n[\"builtin://charts\",1829,8,57774,1829,68,57834],\n[\"builtin://charts\",1824,4,57619,1824,73,57688],\n[\"builtin://charts\",1823,7,57583,1823,37,57613],\n[\"builtin://charts\",1821,4,57504,1821,69,57569],\n[\"builtin://charts\",1820,7,57472,1820,33,57498],\n[\"builtin://charts\",1819,42,57408,1819,48,57414],\n[\"builtin://charts\",1819,56,57422,1819,62,57428],\n[\"builtin://charts\",1819,70,57436,1819,76,57442],\n[\"builtin://charts\",1833,0,57863,1845,3,58360],\n[\"builtin://charts\",1834,7,57967,1834,18,57978],\n[\"builtin://charts\",1834,22,57982,1834,33,57993],\n[\"builtin://charts\",1837,7,58076,1837,18,58087],\n[\"builtin://charts\",1837,22,58091,1837,37,58106],\n[\"builtin://charts\",1840,2,58188,1840,20,58206],\n[\"builtin://charts\",1841,2,58209,1841,20,58227],\n[\"builtin://charts\",1843,13,58270,1843,30,58287],\n[\"builtin://charts\",1843,47,58304,1843,56,58313],\n[\"builtin://charts\",1843,40,58297,1843,57,58314],\n[\"builtin://charts\",1843,59,58316,1843,75,58332],\n[\"builtin://charts\",1842,2,58230,1844,3,58337],\n[\"builtin://charts\",1833,79,57942,1833,89,57952],\n[\"builtin://charts\",1843,8,58265,1843,76,58333],\n[\"builtin://charts\",1838,4,58112,1838,71,58179],\n[\"builtin://charts\",1837,7,58076,1837,37,58106],\n[\"builtin://charts\",1835,4,57999,1835,67,58062],\n[\"builtin://charts\",1834,7,57967,1834,33,57993],\n[\"builtin://charts\",1833,40,57903,1833,46,57909],\n[\"builtin://charts\",1833,54,57917,1833,60,57923],\n[\"builtin://charts\",1833,68,57931,1833,74,57937],\n[\"builtin://charts\",1847,0,58362,1849,3,58521],\n[\"builtin://charts\",1847,96,58458,1847,108,58470],\n[\"builtin://charts\",1847,27,58389,1847,33,58395],\n[\"builtin://charts\",1847,40,58402,1847,46,58408],\n[\"builtin://charts\",1847,57,58419,1847,63,58425],\n[\"builtin://charts\",1847,75,58437,1847,91,58453],\n[\"builtin://charts\",1850,0,58522,1859,3,58887],\n[\"builtin://charts\",1851,7,58605,1851,18,58616],\n[\"builtin://charts\",1851,22,58620,1851,33,58631],\n[\"builtin://charts\",1854,2,58706,1854,20,58724],\n[\"builtin://charts\",1855,2,58727,1855,20,58745],\n[\"builtin://charts\",1857,47,58825,1857,56,58834],\n[\"builtin://charts\",1857,40,58818,1857,57,58835],\n[\"builtin://charts\",1857,66,58844,1857,77,58855],\n[\"builtin://charts\",1857,59,58837,1857,78,58856],\n[\"builtin://charts\",1856,2,58748,1858,3,58861],\n[\"builtin://charts\",1850,58,58580,1850,68,58590],\n[\"builtin://charts\",1857,8,58786,1857,79,58857],\n[\"builtin://charts\",1852,4,58637,1852,64,58697],\n[\"builtin://charts\",1851,7,58605,1851,33,58631],\n[\"builtin://charts\",1850,33,58555,1850,39,58561],\n[\"builtin://charts\",1850,47,58569,1850,53,58575],\n[\"builtin://charts\",1861,0,58889,1877,3,59434],\n[\"builtin://charts\",1865,7,59005,1865,18,59016],\n[\"builtin://charts\",1865,22,59020,1865,33,59031],\n[\"builtin://charts\",1868,7,59119,1868,18,59130],\n[\"builtin://charts\",1868,22,59134,1868,37,59149],\n[\"builtin://charts\",1871,2,59236,1871,20,59254],\n[\"builtin://charts\",1872,2,59257,1872,20,59275],\n[\"builtin://charts\",1873,2,59278,1873,27,59303],\n[\"builtin://charts\",1875,55,59391,1875,66,59402],\n[\"builtin://charts\",1875,48,59384,1875,67,59403],\n[\"builtin://charts\",1874,2,59306,1876,3,59408],\n[\"builtin://charts\",1864,19,58980,1864,29,58990],\n[\"builtin://charts\",1875,8,59344,1875,68,59404],\n[\"builtin://charts\",1869,4,59155,1869,76,59227],\n[\"builtin://charts\",1868,7,59119,1868,37,59149],\n[\"builtin://charts\",1866,4,59037,1866,72,59105],\n[\"builtin://charts\",1865,7,59005,1865,33,59031],\n[\"builtin://charts\",1862,12,58937,1862,18,58943],\n[\"builtin://charts\",1863,8,58953,1863,14,58959],\n[\"builtin://charts\",1864,8,58969,1864,14,58975],\n[\"builtin://charts\",1879,0,59436,1895,3,59986],\n[\"builtin://charts\",1883,7,59550,1883,18,59561],\n[\"builtin://charts\",1883,22,59565,1883,33,59576],\n[\"builtin://charts\",1886,7,59664,1886,18,59675],\n[\"builtin://charts\",1886,22,59679,1886,37,59694],\n[\"builtin://charts\",1889,2,59781,1889,20,59799],\n[\"builtin://charts\",1890,2,59802,1890,20,59820],\n[\"builtin://charts\",1891,2,59823,1891,26,59847],\n[\"builtin://charts\",1893,47,59927,1893,56,59936],\n[\"builtin://charts\",1893,40,59920,1893,57,59937],\n[\"builtin://charts\",1893,59,59939,1893,75,59955],\n[\"builtin://charts\",1892,2,59850,1894,3,59960],\n[\"builtin://charts\",1882,19,59525,1882,29,59535],\n[\"builtin://charts\",1893,8,59888,1893,76,59956],\n[\"builtin://charts\",1887,4,59700,1887,76,59772],\n[\"builtin://charts\",1886,7,59664,1886,37,59694],\n[\"builtin://charts\",1884,4,59582,1884,72,59650],\n[\"builtin://charts\",1883,7,59550,1883,33,59576],\n[\"builtin://charts\",1880,12,59482,1880,18,59488],\n[\"builtin://charts\",1881,8,59498,1881,14,59504],\n[\"builtin://charts\",1882,8,59514,1882,14,59520],\n[\"builtin://charts\",1897,0,59988,1938,3,61191],\n[\"builtin://charts\",1908,2,60279,1908,26,60303],\n[\"builtin://charts\",1909,2,60306,1909,24,60328],\n[\"builtin://charts\",1910,2,60331,1910,27,60356],\n[\"builtin://charts\",1913,17,60389,1913,32,60404],\n[\"builtin://charts\",1914,17,60422,1914,32,60437],\n[\"builtin://charts\",1926,3,60713,1926,22,60732],\n[\"builtin://charts\",1926,24,60734,1926,43,60753],\n[\"builtin://charts\",1933,28,60985,1933,47,61004],\n[\"builtin://charts\",1933,34,60991,1933,46,61003],\n[\"builtin://charts\",1933,35,60992,1933,39,60996],\n[\"builtin://charts\",1933,17,60974,1933,48,61005],\n[\"builtin://charts\",1934,26,61050,1934,54,61078],\n[\"builtin://charts\",1934,32,61056,1934,53,61077],\n[\"builtin://charts\",1934,33,61057,1934,37,61061],\n[\"builtin://charts\",1934,39,61063,1934,52,61076],\n[\"builtin://charts\",1934,40,61064,1934,49,61073],\n[\"builtin://charts\",1934,15,61039,1934,55,61079],\n[\"builtin://charts\",1929,16,60802,1935,3,61101],\n[\"builtin://charts\",1937,2,61124,1937,65,61187],\n[\"builtin://charts\",1900,23,60084,1900,33,60094],\n[\"builtin://charts\",1934,15,61039,1934,72,61096],\n[\"builtin://charts\",1933,17,60974,1933,65,61022],\n[\"builtin://charts\",1930,9,60838,1930,53,60882],\n[\"builtin://charts\",1926,2,60712,1926,44,60754],\n[\"builtin://charts\",1926,47,60757,1926,73,60783],\n[\"builtin://charts\",1923,4,60637,1923,69,60702],\n[\"builtin://charts\",1922,7,60603,1922,35,60631],\n[\"builtin://charts\",1920,4,60548,1920,45,60589],\n[\"builtin://charts\",1919,7,60525,1919,24,60542],\n[\"builtin://charts\",1915,20,60458,1915,48,60486],\n[\"builtin://charts\",1898,12,60031,1898,18,60037],\n[\"builtin://charts\",1899,12,60052,1899,18,60058],\n[\"builtin://charts\",1900,12,60073,1900,18,60079],\n[\"builtin://charts\",1940,0,61193,1973,3,62211],\n[\"builtin://charts\",1945,17,61328,1945,32,61343],\n[\"builtin://charts\",1946,17,61361,1946,32,61376],\n[\"builtin://charts\",1947,2,61379,1951,5,61505],\n[\"builtin://charts\",1949,6,61434,1949,63,61491],\n[\"builtin://charts\",1948,9,61417,1948,18,61426],\n[\"builtin://charts\",1955,18,61647,1955,34,61663],\n[\"builtin://charts\",1962,2,61880,1966,5,62030],\n[\"builtin://charts\",1964,6,61956,1964,66,62016],\n[\"builtin://charts\",1963,26,61937,1963,36,61947],\n[\"builtin://charts\",1963,10,61921,1963,20,61931],\n[\"builtin://charts\",1967,2,62033,1967,24,62055],\n[\"builtin://charts\",1968,2,62058,1968,25,62081],\n[\"builtin://charts\",1969,2,62084,1969,27,62109],\n[\"builtin://charts\",1970,2,62112,1972,3,62188],\n[\"builtin://charts\",1944,5,61293,1944,15,61303],\n[\"builtin://charts\",1971,9,62148,1971,45,62184],\n[\"builtin://charts\",1960,4,61819,1960,56,61871],\n[\"builtin://charts\",1959,7,61796,1959,24,61813],\n[\"builtin://charts\",1957,4,61706,1957,80,61782],\n[\"builtin://charts\",1956,7,61671,1956,36,61700],\n[\"builtin://charts\",1953,4,61547,1953,79,61622],\n[\"builtin://charts\",1952,7,61513,1952,35,61541],\n[\"builtin://charts\",1941,12,61240,1941,18,61246],\n[\"builtin://charts\",1942,12,61260,1942,18,61266],\n[\"builtin://charts\",1943,13,61281,1943,19,61287],\n[\"builtin://charts\",1975,0,62213,1998,3,62964],\n[\"builtin://charts\",1980,17,62437,1980,32,62452],\n[\"builtin://charts\",1981,17,62470,1981,32,62485],\n[\"builtin://charts\",1982,2,62488,1986,5,62604],\n[\"builtin://charts\",1984,6,62543,1984,53,62590],\n[\"builtin://charts\",1983,9,62526,1983,18,62535],\n[\"builtin://charts\",1993,2,62799,1993,24,62821],\n[\"builtin://charts\",1994,2,62824,1994,27,62849],\n[\"builtin://charts\",1996,48,62927,1996,56,62935],\n[\"builtin://charts\",1996,37,62916,1996,57,62936],\n[\"builtin://charts\",1995,2,62852,1997,3,62941],\n[\"builtin://charts\",1975,63,62276,1975,73,62286],\n[\"builtin://charts\",1996,9,62888,1996,58,62937],\n[\"builtin://charts\",1991,4,62748,1991,46,62790],\n[\"builtin://charts\",1990,7,62725,1990,24,62742],\n[\"builtin://charts\",1988,4,62646,1988,69,62711],\n[\"builtin://charts\",1987,7,62612,1987,35,62640],\n[\"builtin://charts\",1975,34,62247,1975,40,62253],\n[\"builtin://charts\",1975,52,62265,1975,58,62271],\n[\"builtin://charts\",2000,0,62966,2024,3,63815],\n[\"builtin://charts\",2005,17,63255,2005,32,63270],\n[\"builtin://charts\",2006,17,63288,2006,32,63303],\n[\"builtin://charts\",2007,2,63306,2011,5,63422],\n[\"builtin://charts\",2009,6,63361,2009,53,63408],\n[\"builtin://charts\",2008,9,63344,2008,18,63353],\n[\"builtin://charts\",2018,2,63617,2018,26,63641],\n[\"builtin://charts\",2019,2,63644,2019,24,63666],\n[\"builtin://charts\",2020,2,63669,2020,27,63694],\n[\"builtin://charts\",2022,46,63770,2022,54,63778],\n[\"builtin://charts\",2022,35,63759,2022,55,63779],\n[\"builtin://charts\",2021,2,63697,2023,3,63792],\n[\"builtin://charts\",2000,87,63053,2000,97,63063],\n[\"builtin://charts\",2022,9,63733,2022,64,63788],\n[\"builtin://charts\",2016,4,63566,2016,46,63608],\n[\"builtin://charts\",2015,7,63543,2015,24,63560],\n[\"builtin://charts\",2013,4,63464,2013,69,63529],\n[\"builtin://charts\",2012,7,63430,2012,35,63458],\n[\"builtin://charts\",2000,40,63006,2000,46,63012],\n[\"builtin://charts\",2000,58,63024,2000,64,63030],\n[\"builtin://charts\",2000,76,63042,2000,82,63048],\n[\"builtin://charts\",2026,0,63817,2059,3,64919],\n[\"builtin://charts\",2032,2,64044,2032,24,64066],\n[\"builtin://charts\",2033,2,64069,2033,27,64094],\n[\"builtin://charts\",2036,17,64127,2036,32,64142],\n[\"builtin://charts\",2037,17,64160,2037,32,64175],\n[\"builtin://charts\",2048,3,64450,2048,22,64469],\n[\"builtin://charts\",2048,24,64471,2048,43,64490],\n[\"builtin://charts\",2054,28,64713,2054,47,64732],\n[\"builtin://charts\",2054,34,64719,2054,46,64731],\n[\"builtin://charts\",2054,35,64720,2054,39,64724],\n[\"builtin://charts\",2054,17,64702,2054,48,64733],\n[\"builtin://charts\",2055,26,64778,2055,54,64806],\n[\"builtin://charts\",2055,32,64784,2055,53,64805],\n[\"builtin://charts\",2055,33,64785,2055,37,64789],\n[\"builtin://charts\",2055,39,64791,2055,52,64804],\n[\"builtin://charts\",2055,40,64792,2055,49,64801],\n[\"builtin://charts\",2055,15,64767,2055,55,64807],\n[\"builtin://charts\",2050,16,64538,2056,3,64829],\n[\"builtin://charts\",2058,2,64852,2058,65,64915],\n[\"builtin://charts\",2026,63,63880,2026,73,63890],\n[\"builtin://charts\",2055,15,64767,2055,72,64824],\n[\"builtin://charts\",2054,17,64702,2054,65,64750],\n[\"builtin://charts\",2051,9,64574,2051,45,64610],\n[\"builtin://charts\",2048,2,64449,2048,44,64491],\n[\"builtin://charts\",2048,47,64494,2048,73,64520],\n[\"builtin://charts\",2045,4,64374,2045,69,64439],\n[\"builtin://charts\",2044,7,64340,2044,35,64368],\n[\"builtin://charts\",2042,4,64285,2042,45,64326],\n[\"builtin://charts\",2041,7,64262,2041,24,64279],\n[\"builtin://charts\",2038,20,64196,2038,48,64224],\n[\"builtin://charts\",2026,34,63851,2026,40,63857],\n[\"builtin://charts\",2026,52,63869,2026,58,63875],\n[\"builtin://charts\",2061,0,64921,2063,3,65065],\n[\"builtin://charts\",2061,83,65004,2061,91,65012],\n[\"builtin://charts\",2061,27,64948,2061,33,64954],\n[\"builtin://charts\",2061,44,64965,2061,50,64971],\n[\"builtin://charts\",2061,62,64983,2061,78,64999],\n[\"builtin://charts\",2064,0,65066,2076,3,65513],\n[\"builtin://charts\",2069,2,65257,2069,26,65281],\n[\"builtin://charts\",2070,7,65289,2070,24,65306],\n[\"builtin://charts\",2074,51,65448,2074,60,65457],\n[\"builtin://charts\",2074,38,65435,2074,61,65458],\n[\"builtin://charts\",2074,76,65473,2074,87,65484],\n[\"builtin://charts\",2074,63,65460,2074,88,65485],\n[\"builtin://charts\",2073,2,65371,2075,3,65491],\n[\"builtin://charts\",2064,51,65117,2064,61,65127],\n[\"builtin://charts\",2074,8,65405,2074,89,65486],\n[\"builtin://charts\",2071,4,65317,2071,49,65362],\n[\"builtin://charts\",2070,7,65289,2070,29,65311],\n[\"builtin://charts\",2064,40,65106,2064,46,65112],\n[\"builtin://charts\",2078,0,65515,2094,3,66157],\n[\"builtin://charts\",2083,2,65746,2083,26,65770],\n[\"builtin://charts\",2084,7,65778,2084,24,65795],\n[\"builtin://charts\",2087,2,65860,2087,26,65884],\n[\"builtin://charts\",2088,7,65892,2088,22,65907],\n[\"builtin://charts\",2088,26,65911,2088,43,65928],\n[\"builtin://charts\",2092,51,66101,2092,60,66110],\n[\"builtin://charts\",2092,38,66088,2092,61,66111],\n[\"builtin://charts\",2092,63,66113,2092,79,66129],\n[\"builtin://charts\",2091,2,66024,2093,3,66135],\n[\"builtin://charts\",2078,75,65590,2078,85,65600],\n[\"builtin://charts\",2092,8,66058,2092,80,66130],\n[\"builtin://charts\",2089,4,65934,2089,85,66015],\n[\"builtin://charts\",2088,7,65892,2088,43,65928],\n[\"builtin://charts\",2085,4,65806,2085,49,65851],\n[\"builtin://charts\",2084,7,65778,2084,29,65800],\n[\"builtin://charts\",2078,44,65559,2078,50,65565],\n[\"builtin://charts\",2078,64,65579,2078,70,65585],\n[\"builtin://charts\",2096,0,66159,2112,3,66790],\n[\"builtin://charts\",2101,2,66386,2101,26,66410],\n[\"builtin://charts\",2102,7,66418,2102,24,66435],\n[\"builtin://charts\",2105,2,66500,2105,27,66525],\n[\"builtin://charts\",2106,7,66533,2106,22,66548],\n[\"builtin://charts\",2106,26,66552,2106,43,66569],\n[\"builtin://charts\",2110,59,66750,2110,70,66761],\n[\"builtin://charts\",2110,46,66737,2110,71,66762],\n[\"builtin://charts\",2109,2,66665,2111,3,66768],\n[\"builtin://charts\",2096,77,66236,2096,87,66246],\n[\"builtin://charts\",2110,8,66699,2110,72,66763],\n[\"builtin://charts\",2107,4,66575,2107,85,66656],\n[\"builtin://charts\",2106,7,66533,2106,43,66569],\n[\"builtin://charts\",2103,4,66446,2103,49,66491],\n[\"builtin://charts\",2102,7,66418,2102,29,66440],\n[\"builtin://charts\",2096,46,66205,2096,52,66211],\n[\"builtin://charts\",2096,66,66225,2096,72,66231],\n[\"builtin://charts\",2114,0,66792,2137,3,67566],\n[\"builtin://charts\",2120,7,66985,2120,28,67006],\n[\"builtin://charts\",2125,2,67086,2125,33,67117],\n[\"builtin://charts\",2128,18,67211,2131,5,67360],\n[\"builtin://charts\",2129,23,67312,2129,41,67330],\n[\"builtin://charts\",2129,23,67312,2129,52,67341],\n[\"builtin://charts\",2129,4,67293,2129,57,67346],\n[\"builtin://charts\",2129,23,67312,2129,56,67345],\n[\"builtin://charts\",2128,36,67229,2128,62,67255],\n[\"builtin://charts\",2128,37,67230,2128,59,67252],\n[\"builtin://charts\",2133,11,67373,2133,40,67402],\n[\"builtin://charts\",2133,11,67373,2133,47,67409],\n[\"builtin://charts\",2135,19,67469,2135,77,67527],\n[\"builtin://charts\",2135,44,67494,2135,74,67524],\n[\"builtin://charts\",2135,8,67458,2135,78,67528],\n[\"builtin://charts\",2134,2,67412,2136,3,67532],\n[\"builtin://charts\",2114,51,66843,2114,61,66853],\n[\"builtin://charts\",2121,4,67017,2121,45,67058],\n[\"builtin://charts\",2120,7,66985,2120,33,67011],\n[\"builtin://charts\",2114,40,66832,2114,46,66838],\n[\"builtin://charts\",2139,0,67568,2186,3,69317],\n[\"builtin://charts\",2149,17,67923,2149,32,67938],\n[\"builtin://charts\",2150,17,67956,2150,37,67976],\n[\"builtin://charts\",2151,18,67995,2151,34,68011],\n[\"builtin://charts\",2152,36,68049,2152,70,68083],\n[\"builtin://charts\",2152,44,68057,2152,69,68082],\n[\"builtin://charts\",2152,20,68033,2152,71,68084],\n[\"builtin://charts\",2164,11,68425,2164,53,68467],\n[\"builtin://charts\",2164,38,68452,2164,52,68466],\n[\"builtin://charts\",2164,21,68435,2164,52,68466],\n[\"builtin://charts\",2169,19,68618,2169,36,68635],\n[\"builtin://charts\",2169,2,68601,2169,37,68636],\n[\"builtin://charts\",2170,2,68639,2170,27,68664],\n[\"builtin://charts\",2171,2,68667,2171,28,68693],\n[\"builtin://charts\",2173,2,68697,2173,21,68716],\n[\"builtin://charts\",2173,23,68718,2173,42,68737],\n[\"builtin://charts\",2177,47,68913,2177,75,68941],\n[\"builtin://charts\",2177,27,68893,2177,76,68942],\n[\"builtin://charts\",2180,13,69032,2180,50,69069],\n[\"builtin://charts\",2181,48,69119,2181,66,69137],\n[\"builtin://charts\",2181,54,69125,2181,65,69136],\n[\"builtin://charts\",2181,32,69103,2181,67,69138],\n[\"builtin://charts\",2182,46,69187,2182,73,69214],\n[\"builtin://charts\",2182,52,69193,2182,72,69213],\n[\"builtin://charts\",2182,58,69199,2182,71,69212],\n[\"builtin://charts\",2182,59,69200,2182,68,69209],\n[\"builtin://charts\",2182,30,69171,2182,74,69215],\n[\"builtin://charts\",2176,16,68833,2183,3,69221],\n[\"builtin://charts\",2185,2,69250,2185,65,69313],\n[\"builtin://charts\",2143,5,67673,2143,15,67683],\n[\"builtin://charts\",2182,15,69156,2182,75,69216],\n[\"builtin://charts\",2181,17,69088,2181,68,69139],\n[\"builtin://charts\",2177,9,68875,2177,77,68943],\n[\"builtin://charts\",2173,1,68696,2173,43,68738],\n[\"builtin://charts\",2173,46,68741,2173,87,68782],\n[\"builtin://charts\",2165,4,68487,2165,78,68561],\n[\"builtin://charts\",2164,7,68421,2164,67,68481],\n[\"builtin://charts\",2162,4,68334,2162,77,68407],\n[\"builtin://charts\",2161,7,68300,2161,35,68328],\n[\"builtin://charts\",2159,4,68234,2159,56,68286],\n[\"builtin://charts\",2158,7,68209,2158,25,68227],\n[\"builtin://charts\",2156,4,68146,2156,53,68195],\n[\"builtin://charts\",2155,7,68123,2155,24,68140],\n[\"builtin://charts\",2140,12,67613,2140,18,67619],\n[\"builtin://charts\",2141,17,67638,2141,25,67646],\n[\"builtin://charts\",2142,13,67661,2142,19,67667],\n[\"builtin://charts\",2188,0,69319,2234,3,71023],\n[\"builtin://charts\",2198,17,69674,2198,32,69689],\n[\"builtin://charts\",2199,17,69707,2199,37,69727],\n[\"builtin://charts\",2200,18,69746,2200,34,69762],\n[\"builtin://charts\",2201,36,69800,2201,70,69834],\n[\"builtin://charts\",2201,44,69808,2201,69,69833],\n[\"builtin://charts\",2201,20,69784,2201,71,69835],\n[\"builtin://charts\",2213,11,70176,2213,53,70218],\n[\"builtin://charts\",2213,38,70203,2213,52,70217],\n[\"builtin://charts\",2213,21,70186,2213,52,70217],\n[\"builtin://charts\",2218,19,70369,2218,36,70386],\n[\"builtin://charts\",2218,2,70352,2218,37,70387],\n[\"builtin://charts\",2219,2,70390,2219,27,70415],\n[\"builtin://charts\",2220,2,70418,2220,28,70444],\n[\"builtin://charts\",2222,3,70449,2222,22,70468],\n[\"builtin://charts\",2222,24,70470,2222,43,70489],\n[\"builtin://charts\",2226,47,70666,2226,75,70694],\n[\"builtin://charts\",2226,27,70646,2226,76,70695],\n[\"builtin://charts\",2227,13,70711,2227,50,70748],\n[\"builtin://charts\",2228,48,70798,2228,66,70816],\n[\"builtin://charts\",2228,54,70804,2228,65,70815],\n[\"builtin://charts\",2228,32,70782,2228,67,70817],\n[\"builtin://charts\",2229,46,70866,2229,73,70893],\n[\"builtin://charts\",2229,52,70872,2229,72,70892],\n[\"builtin://charts\",2229,58,70878,2229,71,70891],\n[\"builtin://charts\",2229,59,70879,2229,68,70888],\n[\"builtin://charts\",2229,30,70850,2229,74,70894],\n[\"builtin://charts\",2225,16,70586,2231,3,70927],\n[\"builtin://charts\",2233,2,70956,2233,65,71019],\n[\"builtin://charts\",2192,5,69424,2192,15,69434],\n[\"builtin://charts\",2229,15,70835,2229,75,70895],\n[\"builtin://charts\",2228,17,70767,2228,68,70818],\n[\"builtin://charts\",2226,9,70628,2226,77,70696],\n[\"builtin://charts\",2222,2,70448,2222,44,70490],\n[\"builtin://charts\",2222,47,70493,2222,89,70535],\n[\"builtin://charts\",2214,4,70238,2214,78,70312],\n[\"builtin://charts\",2213,7,70172,2213,67,70232],\n[\"builtin://charts\",2211,4,70085,2211,77,70158],\n[\"builtin://charts\",2210,7,70051,2210,35,70079],\n[\"builtin://charts\",2208,4,69985,2208,56,70037],\n[\"builtin://charts\",2207,7,69960,2207,25,69978],\n[\"builtin://charts\",2205,4,69897,2205,53,69946],\n[\"builtin://charts\",2204,7,69874,2204,24,69891],\n[\"builtin://charts\",2189,12,69364,2189,18,69370],\n[\"builtin://charts\",2190,17,69389,2190,25,69397],\n[\"builtin://charts\",2191,13,69412,2191,19,69418],\n[\"builtin://charts\",2236,0,71025,2243,3,71511],\n[\"builtin://charts\",2236,132,71157,2236,139,71164],\n[\"builtin://charts\",2241,6,71388,2241,14,71396],\n[\"builtin://charts\",2241,16,71398,2241,24,71406],\n[\"builtin://charts\",2241,26,71408,2241,34,71416],\n[\"builtin://charts\",2241,36,71418,2241,44,71426],\n[\"builtin://charts\",2241,46,71428,2241,54,71436],\n[\"builtin://charts\",2241,74,71456,2241,81,71463],\n[\"builtin://charts\",2241,83,71465,2241,90,71472],\n[\"builtin://charts\",2241,92,71474,2241,99,71481],\n[\"builtin://charts\",2241,101,71483,2241,108,71490],\n[\"builtin://charts\",2241,110,71492,2241,117,71499],\n[\"builtin://charts\",2241,66,71448,2241,118,71500],\n[\"builtin://charts\",2241,4,71386,2241,55,71437],\n[\"builtin://charts\",2236,32,71057,2236,52,71077],\n[\"builtin://charts\",2236,60,71085,2236,67,71092],\n[\"builtin://charts\",2236,75,71100,2236,82,71107],\n[\"builtin://charts\",2236,90,71115,2236,97,71122],\n[\"builtin://charts\",2236,105,71130,2236,112,71137],\n[\"builtin://charts\",2236,120,71145,2236,127,71152],\n[\"builtin://charts\",2245,0,71513,2247,3,71705],\n[\"builtin://charts\",2245,114,71627,2245,127,71640],\n[\"builtin://charts\",2245,28,71541,2245,34,71547],\n[\"builtin://charts\",2245,41,71554,2245,47,71560],\n[\"builtin://charts\",2245,58,71571,2245,64,71577],\n[\"builtin://charts\",2245,75,71588,2245,81,71594],\n[\"builtin://charts\",2245,93,71606,2245,109,71622],\n[\"builtin://charts\",2249,0,71707,2283,3,72810],\n[\"builtin://charts\",2260,18,72075,2260,33,72090],\n[\"builtin://charts\",2261,14,72105,2261,25,72116],\n[\"builtin://charts\",2262,14,72131,2262,25,72142],\n[\"builtin://charts\",2263,18,72161,2263,33,72176],\n[\"builtin://charts\",2276,2,72601,2276,20,72619],\n[\"builtin://charts\",2277,2,72622,2277,20,72640],\n[\"builtin://charts\",2278,2,72643,2278,24,72665],\n[\"builtin://charts\",2281,64,72765,2281,75,72776],\n[\"builtin://charts\",2281,57,72758,2281,76,72777],\n[\"builtin://charts\",2280,2,72669,2282,3,72782],\n[\"builtin://charts\",2254,5,71821,2254,15,71831],\n[\"builtin://charts\",2281,8,72709,2281,77,72778],\n[\"builtin://charts\",2274,4,72544,2274,52,72592],\n[\"builtin://charts\",2273,7,72524,2273,21,72538],\n[\"builtin://charts\",2271,4,72438,2271,76,72510],\n[\"builtin://charts\",2270,7,72406,2270,33,72432],\n[\"builtin://charts\",2268,4,72320,2268,76,72392],\n[\"builtin://charts\",2267,7,72288,2267,33,72314],\n[\"builtin://charts\",2265,4,72212,2265,66,72274],\n[\"builtin://charts\",2264,7,72184,2264,29,72206],\n[\"builtin://charts\",2250,12,71757,2250,18,71763],\n[\"builtin://charts\",2251,8,71773,2251,14,71779],\n[\"builtin://charts\",2252,8,71789,2252,14,71795],\n[\"builtin://charts\",2253,12,71809,2253,18,71815],\n[\"builtin://charts\",2285,0,72812,2287,3,72975],\n[\"builtin://charts\",2286,42,72944,2286,51,72953],\n[\"builtin://charts\",2286,35,72937,2286,52,72954],\n[\"builtin://charts\",2285,78,72890,2285,88,72900],\n[\"builtin://charts\",2286,2,72904,2286,69,72971],\n[\"builtin://charts\",2285,35,72847,2285,41,72853],\n[\"builtin://charts\",2285,49,72861,2285,55,72867],\n[\"builtin://charts\",2285,67,72879,2285,73,72885],\n[\"builtin://charts\",2289,0,72977,2293,3,73232],\n[\"builtin://charts\",2291,11,73123,2291,71,73183],\n[\"builtin://charts\",2291,47,73159,2291,67,73179],\n[\"builtin://charts\",2291,48,73160,2291,55,73167],\n[\"builtin://charts\",2292,2,73186,2292,28,73212],\n[\"builtin://charts\",2289,46,73023,2289,56,73033],\n[\"builtin://charts\",2292,2,73186,2292,44,73228],\n[\"builtin://charts\",2289,33,73010,2289,41,73018],\n[\"builtin://charts\",2295,0,73234,2332,3,74430],\n[\"builtin://charts\",2303,17,73481,2303,32,73496],\n[\"builtin://charts\",2304,17,73514,2304,32,73529],\n[\"builtin://charts\",2311,14,73751,2311,31,73768],\n[\"builtin://charts\",2311,2,73739,2311,32,73769],\n[\"builtin://charts\",2313,4,73789,2317,7,73918],\n[\"builtin://charts\",2314,11,73810,2314,23,73822],\n[\"builtin://charts\",2315,8,73837,2315,71,73900],\n[\"builtin://charts\",2314,11,73810,2314,28,73827],\n[\"builtin://charts\",2312,2,73772,2317,8,73919],\n[\"builtin://charts\",2318,2,73922,2318,27,73947],\n[\"builtin://charts\",2320,15,73964,2322,5,74078],\n[\"builtin://charts\",2321,12,74032,2321,20,74040],\n[\"builtin://charts\",2321,36,74056,2321,45,74065],\n[\"builtin://charts\",2321,12,74032,2321,46,74066],\n[\"builtin://charts\",2320,33,73982,2320,45,73994],\n[\"builtin://charts\",2320,33,73982,2320,51,74000],\n[\"builtin://charts\",2323,15,74094,2325,5,74208],\n[\"builtin://charts\",2324,12,74162,2324,20,74170],\n[\"builtin://charts\",2324,36,74186,2324,45,74195],\n[\"builtin://charts\",2324,12,74162,2324,46,74196],\n[\"builtin://charts\",2323,33,74112,2323,45,74124],\n[\"builtin://charts\",2323,33,74112,2323,51,74130],\n[\"builtin://charts\",2328,9,74247,2328,74,74312],\n[\"builtin://charts\",2327,2,74212,2331,3,74408],\n[\"builtin://charts\",2298,5,73312,2298,15,73322],\n[\"builtin://charts\",2329,24,74338,2329,68,74382],\n[\"builtin://charts\",2329,38,74352,2329,67,74381],\n[\"builtin://charts\",2329,39,74353,2329,62,74376],\n[\"builtin://charts\",2328,9,74247,2328,43,74281],\n[\"builtin://charts\",2309,4,73680,2309,54,73730],\n[\"builtin://charts\",2308,7,73657,2308,24,73674],\n[\"builtin://charts\",2306,4,73571,2306,76,73643],\n[\"builtin://charts\",2305,7,73537,2305,35,73565],\n[\"builtin://charts\",2296,12,73278,2296,18,73284],\n[\"builtin://charts\",2297,12,73298,2297,20,73306],\n[\"builtin://charts\",2334,0,74432,2347,3,74889],\n[\"builtin://charts\",2335,9,74502,2337,5,74605],\n[\"builtin://charts\",2336,16,74572,2336,27,74583],\n[\"builtin://charts\",2336,16,74572,2336,38,74594],\n[\"builtin://charts\",2336,4,74560,2336,43,74599],\n[\"builtin://charts\",2336,16,74572,2336,42,74598],\n[\"builtin://charts\",2335,28,74521,2335,46,74539],\n[\"builtin://charts\",2335,29,74522,2335,43,74536],\n[\"builtin://charts\",2338,16,74622,2345,5,74835],\n[\"builtin://charts\",2338,26,74632,2338,28,74634],\n[\"builtin://charts\",2338,30,74636,2338,32,74638],\n[\"builtin://charts\",2338,34,74640,2338,38,74644],\n[\"builtin://charts\",2340,7,74713,2340,21,74727],\n[\"builtin://charts\",2343,25,74785,2343,42,74802],\n[\"builtin://charts\",2343,49,74809,2343,60,74820],\n[\"builtin://charts\",2338,25,74631,2338,39,74645],\n[\"builtin://charts\",2338,3,74609,2338,5,74611],\n[\"builtin://charts\",2338,7,74613,2338,9,74615],\n[\"builtin://charts\",2338,11,74617,2338,12,74618],\n[\"builtin://charts\",2346,22,74858,2346,34,74870],\n[\"builtin://charts\",2346,36,74872,2346,48,74884],\n[\"builtin://charts\",2334,49,74481,2334,59,74491],\n[\"builtin://charts\",2346,2,74838,2346,49,74885],\n[\"builtin://charts\",2338,2,74608,2338,13,74619],\n[\"builtin://charts\",2334,38,74470,2334,44,74476],\n[\"builtin://charts\",2349,0,74891,2357,3,75166],\n[\"builtin://charts\",2353,2,75037,2353,24,75059],\n[\"builtin://charts\",2355,30,75119,2355,39,75128],\n[\"builtin://charts\",2355,19,75108,2355,40,75129],\n[\"builtin://charts\",2354,2,75062,2356,3,75143],\n[\"builtin://charts\",2349,45,74936,2349,55,74946],\n[\"builtin://charts\",2355,9,75098,2355,49,75138],\n[\"builtin://charts\",2349,34,74925,2349,40,74931],\n[\"builtin://charts\",2359,0,75168,2373,3,75691],\n[\"builtin://charts\",2363,17,75377,2363,32,75392],\n[\"builtin://charts\",2364,17,75410,2364,32,75425],\n[\"builtin://charts\",2368,2,75549,2368,24,75571],\n[\"builtin://charts\",2369,2,75574,2369,27,75599],\n[\"builtin://charts\",2370,2,75602,2372,3,75668],\n[\"builtin://charts\",2359,71,75239,2359,81,75249],\n[\"builtin://charts\",2371,9,75638,2371,34,75663],\n[\"builtin://charts\",2366,4,75467,2366,77,75540],\n[\"builtin://charts\",2365,7,75433,2365,35,75461],\n[\"builtin://charts\",2359,42,75210,2359,48,75216],\n[\"builtin://charts\",2359,60,75228,2359,66,75234],\n[\"builtin://charts\",2375,0,75693,2387,3,76111],\n[\"builtin://charts\",2381,2,75946,2381,26,75970],\n[\"builtin://charts\",2382,2,75973,2382,24,75995],\n[\"builtin://charts\",2385,30,76056,2385,39,76065],\n[\"builtin://charts\",2385,19,76045,2385,40,76066],\n[\"builtin://charts\",2384,2,75999,2386,3,76088],\n[\"builtin://charts\",2375,69,75762,2375,79,75772],\n[\"builtin://charts\",2385,9,76035,2385,57,76083],\n[\"builtin://charts\",2375,40,75733,2375,46,75739],\n[\"builtin://charts\",2375,58,75751,2375,64,75757],\n[\"builtin://charts\",2393,0,76284,2407,3,76648],\n[\"builtin://charts\",2394,17,76343,2394,27,76353],\n[\"builtin://charts\",2393,33,76317,2393,40,76324],\n[\"builtin://charts\",2396,21,76397,2396,31,76407],\n[\"builtin://charts\",2399,12,76475,2399,67,76530],\n[\"builtin://charts\",2398,13,76447,2398,27,76461],\n[\"builtin://charts\",2397,8,76417,2402,13,76580],\n[\"builtin://charts\",2396,6,76382,2404,9,76616],\n[\"builtin://charts\",2396,13,76389,2396,19,76395],\n[\"builtin://charts\",2395,4,76359,2404,9,76616],\n[\"builtin://charts\",2394,2,76328,2406,5,76644],\n[\"builtin://charts\",2394,9,76335,2394,15,76341],\n[\"builtin://charts\",2409,0,76650,2423,3,77014],\n[\"builtin://charts\",2410,17,76709,2410,27,76719],\n[\"builtin://charts\",2409,33,76683,2409,40,76690],\n[\"builtin://charts\",2412,21,76763,2412,31,76773],\n[\"builtin://charts\",2415,12,76841,2415,67,76896],\n[\"builtin://charts\",2414,13,76813,2414,27,76827],\n[\"builtin://charts\",2413,8,76783,2418,13,76946],\n[\"builtin://charts\",2412,6,76748,2420,9,76982],\n[\"builtin://charts\",2412,13,76755,2412,19,76761],\n[\"builtin://charts\",2411,4,76725,2420,9,76982],\n[\"builtin://charts\",2410,2,76694,2422,5,77010],\n[\"builtin://charts\",2410,9,76701,2410,15,76707],\n[\"builtin://charts\",2425,0,77016,2534,3,81279],\n[\"builtin://charts\",2425,37,77053,2425,48,77064],\n[\"builtin://charts\",2428,29,77139,2428,42,77152],\n[\"builtin://charts\",2428,43,77153,2428,52,77162],\n[\"builtin://charts\",2428,44,77154,2428,48,77158],\n[\"builtin://charts\",2428,29,77139,2428,53,77163],\n[\"builtin://charts\",2428,4,77114,2428,53,77163],\n[\"builtin://charts\",2427,2,77088,2477,5,78808],\n[\"builtin://charts\",2429,33,77197,2429,46,77210],\n[\"builtin://charts\",2429,47,77211,2429,56,77220],\n[\"builtin://charts\",2429,48,77212,2429,52,77216],\n[\"builtin://charts\",2429,33,77197,2429,57,77221],\n[\"builtin://charts\",2429,4,77168,2429,57,77221],\n[\"builtin://charts\",2430,32,77254,2430,45,77267],\n[\"builtin://charts\",2430,46,77268,2430,55,77277],\n[\"builtin://charts\",2430,47,77269,2430,51,77273],\n[\"builtin://charts\",2430,32,77254,2430,56,77278],\n[\"builtin://charts\",2430,4,77226,2430,56,77278],\n[\"builtin://charts\",2431,34,77313,2431,47,77326],\n[\"builtin://charts\",2431,48,77327,2431,57,77336],\n[\"builtin://charts\",2431,49,77328,2431,53,77332],\n[\"builtin://charts\",2431,34,77313,2431,58,77337],\n[\"builtin://charts\",2431,4,77283,2431,58,77337],\n[\"builtin://charts\",2434,8,77416,2436,11,77489],\n[\"builtin://charts\",2435,10,77453,2435,33,77476],\n[\"builtin://charts\",2433,6,77374,2437,7,77497],\n[\"builtin://charts\",2432,4,77342,2437,26,77516],\n[\"builtin://charts\",2440,8,77607,2442,11,77692],\n[\"builtin://charts\",2441,10,77644,2441,45,77679],\n[\"builtin://charts\",2439,6,77565,2443,7,77700],\n[\"builtin://charts\",2438,4,77521,2443,26,77719],\n[\"builtin://charts\",2446,8,77799,2446,56,77847],\n[\"builtin://charts\",2446,29,77820,2446,52,77843],\n[\"builtin://charts\",2445,6,77757,2447,7,77855],\n[\"builtin://charts\",2444,4,77724,2447,26,77874],\n[\"builtin://charts\",2450,8,77954,2453,11,78060],\n[\"builtin://charts\",2452,10,78025,2452,33,78048],\n[\"builtin://charts\",2451,14,77989,2451,39,78014],\n[\"builtin://charts\",2449,6,77912,2454,7,78068],\n[\"builtin://charts\",2448,4,77879,2454,26,78087],\n[\"builtin://charts\",2457,8,78174,2460,11,78286],\n[\"builtin://charts\",2459,10,78245,2459,39,78274],\n[\"builtin://charts\",2458,14,78209,2458,39,78234],\n[\"builtin://charts\",2456,6,78132,2461,7,78294],\n[\"builtin://charts\",2455,4,78092,2461,26,78313],\n[\"builtin://charts\",2464,8,78397,2466,11,78462],\n[\"builtin://charts\",2465,10,78428,2465,32,78450],\n[\"builtin://charts\",2463,6,78350,2467,7,78470],\n[\"builtin://charts\",2462,4,78318,2467,31,78494],\n[\"builtin://charts\",2470,8,78580,2475,11,78769],\n[\"builtin://charts\",2471,24,78625,2471,42,78643],\n[\"builtin://charts\",2474,10,78734,2474,33,78757],\n[\"builtin://charts\",2473,14,78698,2473,39,78723],\n[\"builtin://charts\",2472,14,78658,2472,39,78683],\n[\"builtin://charts\",2469,6,78532,2476,7,78777],\n[\"builtin://charts\",2468,4,78499,2476,32,78802],\n[\"builtin://charts\",2427,9,77095,2427,19,77105],\n[\"builtin://charts\",2425,22,77038,2425,32,77048],\n[\"builtin://charts\",2536,0,81281,2568,3,82102],\n[\"builtin://charts\",2544,7,81530,2550,5,81733],\n[\"builtin://charts\",2546,30,81637,2546,42,81649],\n[\"builtin://charts\",2546,35,81642,2546,41,81648],\n[\"builtin://charts\",2547,24,81676,2547,41,81693],\n[\"builtin://charts\",2547,25,81677,2547,34,81686],\n[\"builtin://charts\",2547,6,81658,2547,42,81694],\n[\"builtin://charts\",2546,4,81611,2549,7,81727],\n[\"builtin://charts\",2548,6,81701,2548,24,81719],\n[\"builtin://charts\",2546,11,81618,2546,19,81626],\n[\"builtin://charts\",2546,21,81628,2546,43,81650],\n[\"builtin://charts\",2545,8,81584,2545,30,81606],\n[\"builtin://charts\",2545,17,81593,2545,29,81605],\n[\"builtin://charts\",2555,11,81827,2555,18,81834],\n[\"builtin://charts\",2556,12,81848,2556,20,81856],\n[\"builtin://charts\",2552,2,81737,2557,3,81861],\n[\"builtin://charts\",2540,30,81399,2540,47,81416],\n[\"builtin://charts\",2544,29,81552,2544,50,81573],\n[\"builtin://charts\",2542,13,81486,2542,48,81521],\n[\"builtin://charts\",2542,32,81505,2542,47,81520],\n[\"builtin://charts\",2542,14,81487,2542,27,81500],\n[\"builtin://charts\",2537,9,81307,2537,27,81325],\n[\"builtin://charts\",2538,13,81340,2538,19,81346],\n[\"builtin://charts\",2539,13,81361,2539,19,81367],\n[\"builtin://charts\",2540,19,81388,2540,25,81394],\n[\"builtin://charts\",2570,0,82104,2574,3,82310],\n[\"builtin://charts\",2570,50,82154,2570,56,82160],\n[\"builtin://charts\",2570,58,82162,2570,64,82168],\n[\"builtin://charts\",2570,49,82153,2570,65,82169],\n[\"builtin://charts\",2573,17,82293,2573,29,82305],\n[\"builtin://charts\",2573,3,82279,2573,15,82291],\n[\"builtin://charts\",2572,21,82232,2572,44,82255],\n[\"builtin://charts\",2571,19,82190,2571,35,82206],\n[\"builtin://charts\",2571,20,82191,2571,29,82200],\n[\"builtin://charts\",2570,23,82127,2570,29,82133],\n[\"builtin://charts\",2570,38,82142,2570,44,82148],\n[\"builtin://charts\",2576,0,82312,2576,71,82383],\n[\"builtin://charts\",2576,29,82341,2576,35,82347],\n[\"builtin://charts\",2576,29,82341,2576,66,82378],\n[\"builtin://charts\",2576,20,82332,2576,67,82379],\n[\"builtin://charts\",2578,0,82385,2580,3,82496],\n[\"builtin://charts\",2579,3,82432,2579,13,82442],\n[\"builtin://charts\",2579,3,82432,2579,19,82448],\n[\"builtin://charts\",2578,35,82420,2578,42,82427],\n[\"builtin://charts\",2579,46,82475,2579,56,82485],\n[\"builtin://charts\",2579,46,82475,2579,62,82491],\n[\"builtin://charts\",2579,36,82465,2579,62,82491],\n[\"builtin://charts\",2579,3,82432,2579,29,82458],\n[\"builtin://charts\",2578,20,82405,2578,24,82409],\n[\"builtin://charts\",2582,0,82498,2584,3,82609],\n[\"builtin://charts\",2583,3,82545,2583,13,82555],\n[\"builtin://charts\",2583,3,82545,2583,19,82561],\n[\"builtin://charts\",2582,35,82533,2582,42,82540],\n[\"builtin://charts\",2583,46,82588,2583,56,82598],\n[\"builtin://charts\",2583,46,82588,2583,62,82604],\n[\"builtin://charts\",2583,36,82578,2583,62,82604],\n[\"builtin://charts\",2583,3,82545,2583,29,82571],\n[\"builtin://charts\",2582,20,82518,2582,24,82522],\n[\"builtin://charts\",2586,0,82611,2588,3,82705],\n[\"builtin://charts\",2586,36,82647,2586,43,82654],\n[\"builtin://charts\",2587,26,82682,2587,45,82701],\n[\"builtin://charts\",2587,2,82658,2587,21,82677],\n[\"builtin://charts\",2586,21,82632,2586,25,82636],\n[\"builtin://charts\",2590,0,82707,2592,3,82806],\n[\"builtin://charts\",2590,34,82741,2590,40,82747],\n[\"builtin://charts\",2591,2,82751,2591,53,82802],\n[\"builtin://charts\",2591,37,82786,2591,52,82801],\n[\"builtin://charts\",2591,10,82759,2591,25,82774],\n[\"builtin://charts\",2590,14,82721,2590,18,82725],\n[\"builtin://charts\",2590,25,82732,2590,29,82736],\n[\"builtin://charts\",2594,0,82808,2608,3,83171],\n[\"builtin://charts\",2594,45,82853,2594,57,82865],\n[\"builtin://charts\",2596,4,82897,2596,19,82912],\n[\"builtin://charts\",2595,2,82869,2607,5,83167],\n[\"builtin://charts\",2598,17,82950,2605,9,83145],\n[\"builtin://charts\",2598,27,82960,2598,31,82964],\n[\"builtin://charts\",2598,33,82966,2598,36,82969],\n[\"builtin://charts\",2600,11,83047,2600,26,83062],\n[\"builtin://charts\",2599,19,83025,2599,29,83035],\n[\"builtin://charts\",2598,26,82959,2598,37,82970],\n[\"builtin://charts\",2598,7,82940,2598,8,82941],\n[\"builtin://charts\",2598,10,82943,2598,13,82946],\n[\"builtin://charts\",2598,6,82939,2598,14,82947],\n[\"builtin://charts\",2598,44,82977,2598,54,82987],\n[\"builtin://charts\",2597,4,82917,2606,15,83161],\n[\"builtin://charts\",2595,9,82876,2595,19,82886],\n[\"builtin://charts\",2594,19,82827,2594,29,82837],\n[\"builtin://charts\",2594,36,82844,2594,40,82848],\n[\"builtin://charts\",2610,0,83173,2646,3,84529],\n[\"builtin://charts\",2611,47,83288,2611,57,83298],\n[\"builtin://charts\",2611,47,83288,2611,63,83304],\n[\"builtin://charts\",2612,47,83353,2612,57,83363],\n[\"builtin://charts\",2612,47,83353,2612,63,83369],\n[\"builtin://charts\",2613,47,83418,2613,57,83428],\n[\"builtin://charts\",2613,47,83418,2613,63,83434],\n[\"builtin://charts\",2614,47,83483,2614,57,83493],\n[\"builtin://charts\",2614,47,83483,2614,63,83499],\n[\"builtin://charts\",2643,20,84383,2644,68,84503],\n[\"builtin://charts\",2644,50,84485,2644,66,84501],\n[\"builtin://charts\",2644,27,84462,2644,43,84478],\n[\"builtin://charts\",2643,50,84413,2643,66,84429],\n[\"builtin://charts\",2643,27,84390,2643,43,84406],\n[\"builtin://charts\",2643,2,84365,2644,69,84504],\n[\"builtin://charts\",2610,54,83227,2610,66,83239],\n[\"builtin://charts\",2645,6,84511,2645,20,84525],\n[\"builtin://charts\",2617,4,83557,2617,76,83629],\n[\"builtin://charts\",2617,5,83558,2617,9,83562],\n[\"builtin://charts\",2617,25,83578,2617,35,83588],\n[\"builtin://charts\",2617,25,83578,2617,41,83594],\n[\"builtin://charts\",2617,58,83611,2617,68,83621],\n[\"builtin://charts\",2617,58,83611,2617,74,83627],\n[\"builtin://charts\",2617,44,83597,2617,75,83628],\n[\"builtin://charts\",2617,11,83564,2617,42,83595],\n[\"builtin://charts\",2629,8,84007,2629,26,84025],\n[\"builtin://charts\",2629,14,84013,2629,25,84024],\n[\"builtin://charts\",2629,15,84014,2629,20,84019],\n[\"builtin://charts\",2630,8,84040,2630,26,84058],\n[\"builtin://charts\",2630,14,84046,2630,25,84057],\n[\"builtin://charts\",2630,15,84047,2630,20,84052],\n[\"builtin://charts\",2632,4,84070,2634,50,84178],\n[\"builtin://charts\",2632,5,84071,2632,9,84075],\n[\"builtin://charts\",2633,11,84088,2633,21,84098],\n[\"builtin://charts\",2633,11,84088,2633,27,84104],\n[\"builtin://charts\",2633,31,84108,2633,41,84118],\n[\"builtin://charts\",2633,31,84108,2633,47,84124],\n[\"builtin://charts\",2634,11,84139,2634,21,84149],\n[\"builtin://charts\",2634,11,84139,2634,27,84155],\n[\"builtin://charts\",2634,31,84159,2634,41,84169],\n[\"builtin://charts\",2634,31,84159,2634,47,84175],\n[\"builtin://charts\",2632,4,84070,2641,7,84356],\n[\"builtin://charts\",2638,6,84236,2640,52,84348],\n[\"builtin://charts\",2638,7,84237,2638,11,84241],\n[\"builtin://charts\",2639,15,84258,2639,25,84268],\n[\"builtin://charts\",2639,15,84258,2639,31,84274],\n[\"builtin://charts\",2639,34,84277,2639,44,84287],\n[\"builtin://charts\",2639,34,84277,2639,50,84293],\n[\"builtin://charts\",2640,15,84311,2640,25,84321],\n[\"builtin://charts\",2640,15,84311,2640,31,84327],\n[\"builtin://charts\",2640,34,84330,2640,44,84340],\n[\"builtin://charts\",2640,34,84330,2640,50,84346],\n[\"builtin://charts\",2640,8,84304,2640,51,84347],\n[\"builtin://charts\",2640,13,84309,2640,32,84328],\n[\"builtin://charts\",2639,8,84251,2639,51,84294],\n[\"builtin://charts\",2639,13,84256,2639,32,84275],\n[\"builtin://charts\",2635,7,84188,2635,25,84206],\n[\"builtin://charts\",2634,6,84134,2634,49,84177],\n[\"builtin://charts\",2634,29,84157,2634,48,84176],\n[\"builtin://charts\",2633,6,84083,2633,49,84126],\n[\"builtin://charts\",2633,29,84106,2633,48,84125],\n[\"builtin://charts\",2628,8,83969,2628,31,83992],\n[\"builtin://charts\",2628,19,83980,2628,30,83991],\n[\"builtin://charts\",2627,8,83911,2627,51,83954],\n[\"builtin://charts\",2627,32,83935,2627,50,83953],\n[\"builtin://charts\",2627,9,83912,2627,27,83930],\n[\"builtin://charts\",2616,18,83520,2616,49,83551],\n[\"builtin://charts\",2610,26,83199,2610,30,83203],\n[\"builtin://charts\",2610,39,83212,2610,43,83216],\n[\"builtin://charts\",2648,0,84531,2697,3,86252],\n[\"builtin://charts\",2648,51,84582,2648,61,84592],\n[\"builtin://charts\",2683,4,85825,2683,20,85841],\n[\"builtin://charts\",2682,2,85798,2696,5,86248],\n[\"builtin://charts\",2685,20,85882,2694,9,86229],\n[\"builtin://charts\",2685,30,85892,2685,34,85896],\n[\"builtin://charts\",2685,36,85898,2685,39,85901],\n[\"builtin://charts\",2686,15,85948,2686,26,85959],\n[\"builtin://charts\",2687,15,85975,2687,29,85989],\n[\"builtin://charts\",2689,15,86101,2689,29,86115],\n[\"builtin://charts\",2691,25,86161,2691,38,86174],\n[\"builtin://charts\",2691,26,86162,2691,35,86171],\n[\"builtin://charts\",2691,10,86146,2691,44,86180],\n[\"builtin://charts\",2688,60,86050,2688,94,86084],\n[\"builtin://charts\",2688,21,86011,2688,55,86045],\n[\"builtin://charts\",2685,29,85891,2685,40,85902],\n[\"builtin://charts\",2685,7,85869,2685,8,85870],\n[\"builtin://charts\",2685,10,85872,2685,16,85878],\n[\"builtin://charts\",2685,6,85868,2685,17,85879],\n[\"builtin://charts\",2684,4,85846,2695,12,86242],\n[\"builtin://charts\",2682,9,85805,2682,13,85809],\n[\"builtin://charts\",2650,4,84635,2650,20,84651],\n[\"builtin://charts\",2649,13,84607,2680,5,85794],\n[\"builtin://charts\",2652,22,84694,2678,9,85773],\n[\"builtin://charts\",2652,32,84704,2652,40,84712],\n[\"builtin://charts\",2652,42,84714,2652,47,84719],\n[\"builtin://charts\",2675,10,85666,2675,37,85693],\n[\"builtin://charts\",2674,8,85634,2677,11,85763],\n[\"builtin://charts\",2676,10,85704,2676,57,85751],\n[\"builtin://charts\",2674,15,85641,2674,19,85645],\n[\"builtin://charts\",2655,12,84858,2655,31,84877],\n[\"builtin://charts\",2655,13,84859,2655,17,84863],\n[\"builtin://charts\",2657,21,84942,2657,61,84982],\n[\"builtin://charts\",2660,14,85108,2660,69,85163],\n[\"builtin://charts\",2660,15,85109,2660,19,85113],\n[\"builtin://charts\",2660,28,85122,2660,68,85162],\n[\"builtin://charts\",2660,28,85122,2660,62,85156],\n[\"builtin://charts\",2662,14,85196,2662,35,85217],\n[\"builtin://charts\",2662,15,85197,2662,19,85201],\n[\"builtin://charts\",2659,15,85055,2659,52,85092],\n[\"builtin://charts\",2658,15,84998,2658,52,85035],\n[\"builtin://charts\",2657,21,84942,2657,55,84976],\n[\"builtin://charts\",2665,12,85288,2665,66,85342],\n[\"builtin://charts\",2665,13,85289,2665,17,85293],\n[\"builtin://charts\",2665,19,85295,2665,59,85335],\n[\"builtin://charts\",2665,19,85295,2665,53,85329],\n[\"builtin://charts\",2668,14,85443,2668,29,85458],\n[\"builtin://charts\",2667,12,85378,2672,15,85613],\n[\"builtin://charts\",2670,26,85517,2670,66,85557],\n[\"builtin://charts\",2671,16,85574,2671,39,85597],\n[\"builtin://charts\",2671,17,85575,2671,21,85579],\n[\"builtin://charts\",2670,26,85517,2670,60,85551],\n[\"builtin://charts\",2669,14,85473,2671,39,85597],\n[\"builtin://charts\",2667,19,85385,2667,25,85391],\n[\"builtin://charts\",2667,27,85393,2667,61,85427],\n[\"builtin://charts\",2664,12,85246,2664,35,85269],\n[\"builtin://charts\",2656,12,84890,2656,36,84914],\n[\"builtin://charts\",2654,41,84816,2654,64,84839],\n[\"builtin://charts\",2654,12,84787,2654,36,84811],\n[\"builtin://charts\",2652,31,84703,2652,48,84720],\n[\"builtin://charts\",2652,7,84679,2652,15,84687],\n[\"builtin://charts\",2652,17,84689,2652,18,84690],\n[\"builtin://charts\",2652,6,84678,2652,19,84691],\n[\"builtin://charts\",2651,4,84656,2679,14,85788],\n[\"builtin://charts\",2649,20,84614,2649,30,84624],\n[\"builtin://charts\",2648,30,84561,2648,40,84571],\n[\"builtin://charts\",2700,2,86274,2700,28,86300],\n[\"builtin://charts\",2700,21,86293,2700,27,86299],\n[\"builtin://charts\",2701,2,86303,2701,31,86332],\n[\"builtin://charts\",2701,24,86325,2701,30,86331],\n[\"builtin://charts\",2702,2,86335,2702,17,86350],\n[\"builtin://charts\",2699,0,86254,2703,3,86354],\n[\"builtin://charts\",2705,0,86356,2727,3,87254],\n[\"builtin://charts\",2706,3,86467,2706,4,86468],\n[\"builtin://charts\",2706,6,86470,2706,7,86471],\n[\"builtin://charts\",2705,75,86431,2705,89,86445],\n[\"builtin://charts\",2705,91,86447,2705,105,86461],\n[\"builtin://charts\",2705,74,86430,2705,106,86462],\n[\"builtin://charts\",2706,2,86466,2706,8,86472],\n[\"builtin://charts\",2709,8,86571,2709,46,86609],\n[\"builtin://charts\",2708,6,86536,2712,9,86740],\n[\"builtin://charts\",2710,43,86653,2710,72,86682],\n[\"builtin://charts\",2710,43,86653,2710,68,86678],\n[\"builtin://charts\",2710,8,86618,2710,73,86683],\n[\"builtin://charts\",2711,35,86719,2711,45,86729],\n[\"builtin://charts\",2711,8,86692,2711,46,86730],\n[\"builtin://charts\",2708,13,86543,2708,24,86554],\n[\"builtin://charts\",2707,4,86506,2712,9,86740],\n[\"builtin://charts\",2706,11,86475,2725,5,87229],\n[\"builtin://charts\",2715,33,86838,2715,62,86867],\n[\"builtin://charts\",2715,33,86838,2715,58,86863],\n[\"builtin://charts\",2715,8,86813,2715,70,86875],\n[\"builtin://charts\",2714,6,86778,2718,9,87003],\n[\"builtin://charts\",2716,35,86911,2716,60,86936],\n[\"builtin://charts\",2716,8,86884,2716,60,86936],\n[\"builtin://charts\",2717,39,86976,2717,55,86992],\n[\"builtin://charts\",2717,40,86977,2717,49,86986],\n[\"builtin://charts\",2717,28,86965,2717,37,86974],\n[\"builtin://charts\",2717,8,86945,2717,56,86993],\n[\"builtin://charts\",2714,13,86785,2714,24,86796],\n[\"builtin://charts\",2713,4,86745,2718,9,87003],\n[\"builtin://charts\",2721,33,87093,2721,43,87103],\n[\"builtin://charts\",2721,8,87068,2721,51,87111],\n[\"builtin://charts\",2720,6,87033,2724,9,87223],\n[\"builtin://charts\",2722,54,87166,2722,63,87175],\n[\"builtin://charts\",2722,36,87148,2722,52,87164],\n[\"builtin://charts\",2722,37,87149,2722,46,87158],\n[\"builtin://charts\",2722,8,87120,2722,64,87176],\n[\"builtin://charts\",2723,8,87185,2723,36,87213],\n[\"builtin://charts\",2720,13,87040,2720,24,87051],\n[\"builtin://charts\",2719,4,87008,2724,9,87223],\n[\"builtin://charts\",2706,18,86482,2706,29,86493],\n[\"builtin://charts\",2705,36,86392,2705,47,86403],\n[\"builtin://charts\",2705,58,86414,2705,69,86425],\n[\"builtin://charts\",2729,0,87256,2738,3,87514],\n[\"builtin://charts\",2733,5,87360,2733,16,87371],\n[\"builtin://charts\",2735,17,87410,2735,30,87423],\n[\"builtin://charts\",2735,47,87440,2735,54,87447],\n[\"builtin://charts\",2735,4,87397,2735,79,87472],\n[\"builtin://charts\",2734,2,87375,2737,5,87510],\n[\"builtin://charts\",2736,4,87477,2736,31,87504],\n[\"builtin://charts\",2734,9,87382,2734,15,87388],\n[\"builtin://charts\",2730,7,87285,2730,21,87299],\n[\"builtin://charts\",2731,10,87311,2731,21,87322],\n[\"builtin://charts\",2732,7,87331,2732,30,87354],\n[\"builtin://charts\",2740,0,87516,2863,3,92326],\n[\"builtin://charts\",2742,22,87625,2742,33,87636],\n[\"builtin://charts\",2752,15,87967,2752,40,87992],\n[\"builtin://charts\",2752,22,87974,2752,28,87980],\n[\"builtin://charts\",2752,22,87974,2752,39,87991],\n[\"builtin://charts\",2752,7,87959,2752,41,87993],\n[\"builtin://charts\",2758,19,88268,2758,38,88287],\n[\"builtin://charts\",2758,43,88292,2758,48,88297],\n[\"builtin://charts\",2758,19,88268,2758,49,88298],\n[\"builtin://charts\",2760,54,88397,2760,74,88417],\n[\"builtin://charts\",2761,15,88434,2761,34,88453],\n[\"builtin://charts\",2761,39,88458,2761,44,88463],\n[\"builtin://charts\",2761,15,88434,2761,45,88464],\n[\"builtin://charts\",2762,57,88522,2762,77,88542],\n[\"builtin://charts\",2763,18,88562,2763,37,88581],\n[\"builtin://charts\",2763,42,88586,2763,47,88591],\n[\"builtin://charts\",2763,18,88562,2763,48,88592],\n[\"builtin://charts\",2764,19,88612,2764,39,88632],\n[\"builtin://charts\",2764,44,88637,2764,49,88642],\n[\"builtin://charts\",2764,19,88612,2764,50,88643],\n[\"builtin://charts\",2767,4,88686,2840,7,91655],\n[\"builtin://charts\",2768,20,88727,2768,59,88766],\n[\"builtin://charts\",2804,6,90071,2838,9,91615],\n[\"builtin://charts\",2824,20,91020,2824,63,91063],\n[\"builtin://charts\",2825,17,91083,2825,57,91123],\n[\"builtin://charts\",2826,21,91146,2826,65,91190],\n[\"builtin://charts\",2827,21,91213,2827,65,91257],\n[\"builtin://charts\",2804,71,90136,2804,79,90144],\n[\"builtin://charts\",2834,32,91521,2834,54,91543],\n[\"builtin://charts\",2834,12,91501,2834,54,91543],\n[\"builtin://charts\",2833,10,91452,2836,13,91593],\n[\"builtin://charts\",2835,12,91556,2835,35,91579],\n[\"builtin://charts\",2833,17,91459,2833,25,91467],\n[\"builtin://charts\",2833,17,91459,2833,40,91482],\n[\"builtin://charts\",2831,12,91405,2831,28,91421],\n[\"builtin://charts\",2823,14,90984,2828,10,91268],\n[\"builtin://charts\",2807,19,90273,2807,87,90341],\n[\"builtin://charts\",2807,34,90288,2807,44,90298],\n[\"builtin://charts\",2807,34,90288,2807,50,90304],\n[\"builtin://charts\",2807,52,90306,2807,62,90316],\n[\"builtin://charts\",2807,52,90306,2807,68,90322],\n[\"builtin://charts\",2807,70,90324,2807,86,90340],\n[\"builtin://charts\",2806,20,90239,2807,88,90342],\n[\"builtin://charts\",2806,10,90229,2807,88,90342],\n[\"builtin://charts\",2805,37,90183,2809,11,90422],\n[\"builtin://charts\",2808,10,90353,2808,67,90410],\n[\"builtin://charts\",2805,44,90190,2805,50,90196],\n[\"builtin://charts\",2804,60,90125,2804,66,90131],\n[\"builtin://charts\",2839,6,91622,2839,31,91647],\n[\"builtin://charts\",2776,18,88960,2776,113,89055],\n[\"builtin://charts\",2774,10,88915,2774,35,88940],\n[\"builtin://charts\",2773,10,88879,2773,35,88904],\n[\"builtin://charts\",2766,2,88647,2841,3,91659],\n[\"builtin://charts\",2740,46,87562,2740,57,87573],\n[\"builtin://charts\",2762,23,88488,2762,78,88543],\n[\"builtin://charts\",2760,23,88366,2760,75,88418],\n[\"builtin://charts\",2757,16,88209,2757,55,88248],\n[\"builtin://charts\",2753,4,88043,2754,58,88181],\n[\"builtin://charts\",2753,10,88049,2754,57,88180],\n[\"builtin://charts\",2752,58,88010,2752,83,88035],\n[\"builtin://charts\",2752,65,88017,2752,71,88023],\n[\"builtin://charts\",2752,65,88017,2752,82,88034],\n[\"builtin://charts\",2752,50,88002,2752,84,88036],\n[\"builtin://charts\",2752,46,87998,2752,85,88037],\n[\"builtin://charts\",2749,15,87867,2749,71,87923],\n[\"builtin://charts\",2749,4,87856,2749,71,87923],\n[\"builtin://charts\",2748,2,87822,2751,5,87951],\n[\"builtin://charts\",2748,9,87829,2748,25,87845],\n[\"builtin://charts\",2744,8,87676,2745,71,87790],\n[\"builtin://charts\",2744,9,87677,2744,16,87684],\n[\"builtin://charts\",2743,17,87661,2745,72,87791],\n[\"builtin://charts\",2743,4,87648,2745,72,87791],\n[\"builtin://charts\",2742,2,87605,2747,5,87819],\n[\"builtin://charts\",2742,9,87612,2742,15,87618],\n[\"builtin://charts\",2742,17,87620,2742,39,87642],\n[\"builtin://charts\",2740,25,87541,2740,41,87557],\n[\"dummy location\"],\n[\"builtin://charts\",1498,36,46190,1498,57,46211],\n[\"builtin://charts\",1475,2,45548,1475,17,45563],\n[\"builtin://charts\",1476,2,45567,1476,17,45582],\n[\"builtin://charts\",1477,2,45586,1477,18,45602],\n[\"builtin://charts\",1478,2,45606,1478,36,45640],\n[\"builtin://charts\",1479,2,45644,1479,22,45664],\n[\"builtin://charts\",1480,2,45669,1480,32,45699],\n[\"builtin://charts\",1481,2,45704,1481,26,45728],\n[\"builtin://charts\",1482,2,45732,1482,28,45758],\n[\"builtin://charts\",1483,2,45762,1483,34,45794],\n[\"builtin://charts\",1484,2,45798,1484,34,45830],\n[\"builtin://charts\",1485,2,45835,1485,38,45871],\n[\"builtin://charts\",1486,2,45876,1486,39,45913],\n[\"builtin://charts\",1487,2,45918,1487,35,45951],\n[\"builtin://charts\",1488,2,45956,1488,18,45972],\n[\"builtin://charts\",1489,2,45976,1489,18,45992],\n[\"builtin://charts\",1490,2,45996,1490,25,46019],\n[\"builtin://charts\",1491,2,46023,1491,25,46046],\n[\"builtin://charts\",1492,2,46050,1492,25,46073],\n[\"builtin://charts\",1493,2,46077,1493,25,46100],\n[\"builtin://charts\",1494,2,46104,1494,23,46125],\n[\"builtin://charts\",1495,2,46129,1495,21,46148],\n[\"builtin://charts\",1465,41,45366,1465,67,45392],\n[\"builtin://charts\",1451,2,45019,1451,17,45034],\n[\"builtin://charts\",1452,2,45038,1452,17,45053],\n[\"builtin://charts\",1453,2,45057,1453,18,45073],\n[\"builtin://charts\",1454,2,45077,1454,36,45111],\n[\"builtin://charts\",1455,2,45115,1455,22,45135],\n[\"builtin://charts\",1456,2,45140,1456,32,45170],\n[\"builtin://charts\",1457,2,45175,1457,26,45199],\n[\"builtin://charts\",1458,2,45203,1458,18,45219],\n[\"builtin://charts\",1459,2,45223,1459,18,45239],\n[\"builtin://charts\",1460,2,45243,1460,25,45266],\n[\"builtin://charts\",1461,2,45270,1461,25,45293],\n[\"builtin://charts\",1462,2,45297,1462,25,45320],\n[\"builtin://charts\",1443,40,44862,1443,65,44887],\n[\"builtin://charts\",1430,2,44545,1430,17,44560],\n[\"builtin://charts\",1431,2,44564,1431,17,44579],\n[\"builtin://charts\",1432,2,44583,1432,18,44599],\n[\"builtin://charts\",1433,2,44603,1433,36,44637],\n[\"builtin://charts\",1434,2,44641,1434,22,44661],\n[\"builtin://charts\",1435,2,44665,1435,32,44695],\n[\"builtin://charts\",1436,2,44699,1436,26,44723],\n[\"builtin://charts\",1437,2,44727,1437,18,44743],\n[\"builtin://charts\",1438,2,44747,1438,18,44763],\n[\"builtin://charts\",1439,2,44767,1439,25,44790],\n[\"builtin://charts\",1440,2,44794,1440,25,44817],\n[\"builtin://charts\",1422,35,44394,1422,55,44414],\n[\"builtin://charts\",1409,2,44080,1409,17,44095],\n[\"builtin://charts\",1410,2,44099,1410,17,44114],\n[\"builtin://charts\",1411,2,44118,1411,18,44134],\n[\"builtin://charts\",1412,2,44138,1412,36,44172],\n[\"builtin://charts\",1413,2,44176,1413,22,44196],\n[\"builtin://charts\",1414,2,44201,1414,32,44231],\n[\"builtin://charts\",1415,2,44236,1415,26,44260],\n[\"builtin://charts\",1416,2,44264,1416,18,44280],\n[\"builtin://charts\",1417,2,44284,1417,18,44300],\n[\"builtin://charts\",1418,2,44304,1418,25,44327],\n[\"builtin://charts\",1419,2,44331,1419,25,44354],\n[\"builtin://charts\",1403,35,43965,1403,55,43985],\n[\"builtin://charts\",1392,2,43706,1392,17,43721],\n[\"builtin://charts\",1393,2,43725,1393,17,43740],\n[\"builtin://charts\",1394,2,43744,1394,18,43760],\n[\"builtin://charts\",1395,2,43764,1395,36,43798],\n[\"builtin://charts\",1396,2,43802,1396,22,43822],\n[\"builtin://charts\",1397,2,43827,1397,32,43857],\n[\"builtin://charts\",1398,2,43862,1398,26,43886],\n[\"builtin://charts\",1399,2,43890,1399,18,43906],\n[\"builtin://charts\",1400,2,43910,1400,18,43926],\n[\"builtin://charts\",1389,35,43622,1389,55,43642],\n[\"builtin://charts\",1380,2,43402,1380,17,43417],\n[\"builtin://charts\",1381,2,43421,1381,17,43436],\n[\"builtin://charts\",1382,2,43440,1382,18,43456],\n[\"builtin://charts\",1383,2,43460,1383,36,43494],\n[\"builtin://charts\",1384,2,43498,1384,22,43518],\n[\"builtin://charts\",1385,2,43523,1385,32,43553],\n[\"builtin://charts\",1386,2,43558,1386,26,43582],\n[\"builtin://charts\",1372,40,43260,1372,60,43280],\n[\"builtin://charts\",1359,2,42945,1359,17,42960],\n[\"builtin://charts\",1360,2,42964,1360,17,42979],\n[\"builtin://charts\",1361,2,42983,1361,18,42999],\n[\"builtin://charts\",1362,2,43003,1362,36,43037],\n[\"builtin://charts\",1363,2,43041,1363,22,43061],\n[\"builtin://charts\",1364,2,43066,1364,32,43096],\n[\"builtin://charts\",1365,2,43101,1365,18,43117],\n[\"builtin://charts\",1366,2,43121,1366,18,43137],\n[\"builtin://charts\",1367,2,43141,1367,23,43162],\n[\"builtin://charts\",1368,2,43166,1368,23,43187],\n[\"builtin://charts\",1369,2,43191,1369,26,43215],\n[\"builtin://charts\",1348,31,42730,1348,48,42747],\n[\"builtin://charts\",1339,2,42515,1339,17,42530],\n[\"builtin://charts\",1340,2,42534,1340,17,42549],\n[\"builtin://charts\",1341,2,42553,1341,18,42569],\n[\"builtin://charts\",1342,2,42573,1342,36,42607],\n[\"builtin://charts\",1343,2,42611,1343,22,42631],\n[\"builtin://charts\",1344,2,42636,1344,32,42666],\n[\"builtin://charts\",1345,2,42671,1345,26,42695],\n[\"builtin://charts\",1324,2,42288,1324,24,42310],\n[\"builtin://charts\",1325,2,42314,1325,26,42338],\n[\"builtin://charts\",1326,2,42342,1326,18,42358],\n[\"builtin://charts\",1327,2,42362,1327,23,42383],\n[\"builtin://charts\",1303,22,41863,1303,45,41886],\n[\"builtin://charts\",1274,2,41043,1274,30,41071],\n[\"builtin://charts\",1275,2,41075,1275,26,41099],\n[\"builtin://charts\",1276,2,41103,1276,39,41140],\n[\"builtin://charts\",1277,2,41144,1277,34,41176],\n[\"builtin://charts\",1278,2,41180,1278,22,41200],\n[\"builtin://charts\",1279,2,41204,1279,21,41223],\n[\"builtin://charts\",1280,2,41227,1280,23,41248],\n[\"builtin://charts\",1281,2,41252,1281,17,41267],\n[\"builtin://charts\",1282,2,41271,1282,23,41292],\n[\"builtin://charts\",1283,2,41296,1283,43,41337],\n[\"builtin://charts\",1284,2,41341,1284,18,41357],\n[\"builtin://charts\",1285,2,41361,1285,33,41392],\n[\"builtin://charts\",1286,2,41396,1286,35,41429],\n[\"builtin://charts\",1287,2,41433,1287,26,41457],\n[\"builtin://charts\",1288,2,41461,1288,28,41487],\n[\"builtin://charts\",1289,2,41491,1289,31,41520],\n[\"builtin://charts\",1293,2,41616,1293,26,41640],\n[\"builtin://charts\",1294,2,41644,1294,31,41673],\n[\"builtin://charts\",1295,2,41677,1295,26,41701],\n[\"builtin://charts\",1296,2,41705,1296,30,41733],\n[\"builtin://charts\",1297,2,41737,1297,27,41762],\n[\"builtin://charts\",1267,2,40916,1267,17,40931],\n[\"builtin://charts\",1268,2,40935,1268,13,40946],\n[\"builtin://charts\",1269,2,40950,1269,13,40961],\n[\"builtin://charts\",1270,2,40965,1270,17,40980],\n[\"builtin://charts\",1271,2,40984,1271,27,41009],\n[\"builtin://charts\",1256,2,40736,1256,33,40767],\n[\"builtin://charts\",1257,2,40771,1257,26,40795],\n[\"builtin://charts\",1258,2,40799,1258,18,40815],\n[\"builtin://charts\",1251,2,40662,1251,17,40677],\n[\"builtin://charts\",1252,2,40681,1252,17,40696],\n[\"builtin://charts\",1236,2,40407,1236,22,40427],\n[\"builtin://charts\",1237,2,40431,1237,26,40455],\n[\"builtin://charts\",1238,2,40459,1238,18,40475],\n[\"builtin://charts\",1239,2,40479,1239,22,40499],\n[\"builtin://charts\",1240,2,40503,1240,26,40527],\n[\"builtin://charts\",1230,2,40315,1230,17,40330],\n[\"builtin://charts\",1231,2,40334,1231,17,40349],\n[\"builtin://charts\",1232,2,40353,1232,27,40378],\n[\"builtin://charts\",1195,2,39509,1195,26,39533],\n[\"builtin://charts\",1196,2,39537,1196,26,39561],\n[\"builtin://charts\",1197,2,39565,1197,18,39581],\n[\"builtin://charts\",1198,2,39585,1198,22,39605],\n[\"builtin://charts\",1199,2,39609,1199,26,39633],\n[\"builtin://charts\",1200,2,39637,1200,33,39668],\n[\"builtin://charts\",1201,2,39672,1201,35,39705],\n[\"builtin://charts\",1202,2,39709,1202,26,39733],\n[\"builtin://charts\",1203,2,39738,1203,28,39764],\n[\"builtin://charts\",1204,2,39769,1204,31,39798],\n[\"builtin://charts\",1205,2,39803,1205,26,39827],\n[\"builtin://charts\",1206,2,39832,1206,31,39861],\n[\"builtin://charts\",1207,2,39866,1207,26,39890],\n[\"builtin://charts\",1208,2,39895,1208,30,39923],\n[\"builtin://charts\",1209,2,39927,1209,23,39948],\n[\"builtin://charts\",1188,2,39392,1188,13,39403],\n[\"builtin://charts\",1189,2,39407,1189,13,39418],\n[\"builtin://charts\",1190,2,39422,1190,17,39437],\n[\"builtin://charts\",1191,2,39441,1191,27,39466],\n[\"builtin://charts\",1145,2,38390,1145,18,38406],\n[\"builtin://charts\",1146,2,38410,1146,26,38434],\n[\"builtin://charts\",1147,2,38438,1147,18,38454],\n[\"builtin://charts\",1148,2,38458,1148,18,38474],\n[\"builtin://charts\",1149,2,38478,1149,21,38497],\n[\"builtin://charts\",1150,2,38501,1150,33,38532],\n[\"builtin://charts\",1151,2,38536,1151,35,38569],\n[\"builtin://charts\",1152,2,38573,1152,26,38597],\n[\"builtin://charts\",1153,2,38602,1153,28,38628],\n[\"builtin://charts\",1154,2,38633,1154,31,38662],\n[\"builtin://charts\",1155,2,38667,1155,23,38688],\n[\"builtin://charts\",1156,2,38693,1156,39,38730],\n[\"builtin://charts\",1157,2,38735,1157,22,38755],\n[\"builtin://charts\",1158,2,38759,1158,26,38783],\n[\"builtin://charts\",1159,2,38787,1159,26,38811],\n[\"builtin://charts\",1160,2,38816,1160,31,38845],\n[\"builtin://charts\",1161,2,38850,1161,26,38874],\n[\"builtin://charts\",1162,2,38879,1162,30,38907],\n[\"builtin://charts\",1163,2,38911,1163,23,38932],\n[\"builtin://charts\",1130,2,38103,1130,20,38121],\n[\"builtin://charts\",1131,2,38125,1131,29,38152],\n[\"builtin://charts\",1132,2,38156,1132,32,38186],\n[\"builtin://charts\",1133,2,38190,1133,32,38220],\n[\"builtin://charts\",1134,2,38224,1134,26,38248],\n[\"builtin://charts\",1106,2,37406,1106,20,37424],\n[\"builtin://charts\",1107,2,37428,1107,30,37456],\n[\"builtin://charts\",1108,2,37460,1108,29,37487],\n[\"builtin://charts\",1109,2,37491,1109,22,37511],\n[\"builtin://charts\",1110,2,37515,1110,37,37550],\n[\"builtin://charts\",1111,2,37554,1111,39,37591],\n[\"builtin://charts\",1112,2,37596,1112,34,37628],\n[\"builtin://charts\",1113,2,37633,1113,23,37654],\n[\"builtin://charts\",1114,2,37658,1114,51,37707],\n[\"builtin://charts\",1115,2,37711,1115,51,37760],\n[\"builtin://charts\",1116,2,37764,1116,43,37805],\n[\"builtin://charts\",1083,2,36818,1083,20,36836],\n[\"builtin://charts\",1084,2,36840,1084,30,36868],\n[\"builtin://charts\",1085,2,36873,1085,26,36897],\n[\"builtin://charts\",1086,2,36901,1086,37,36936],\n[\"builtin://charts\",1087,2,36940,1087,39,36977],\n[\"builtin://charts\",1088,2,36982,1088,34,37014],\n[\"builtin://charts\",1089,2,37019,1089,23,37040],\n[\"builtin://charts\",1090,2,37044,1090,51,37093],\n[\"builtin://charts\",1091,2,37097,1091,51,37146],\n[\"builtin://charts\",1092,2,37150,1092,43,37191],\n[\"builtin://charts\",1066,2,36507,1066,20,36525],\n[\"builtin://charts\",1067,2,36529,1067,37,36564],\n[\"builtin://charts\",1068,2,36568,1068,19,36585],\n[\"builtin://charts\",1069,2,36589,1069,19,36606],\n[\"builtin://charts\",1070,2,36610,1070,25,36633],\n[\"builtin://charts\",1071,2,36637,1071,29,36664],\n[\"builtin://charts\",1053,2,36293,1053,20,36311],\n[\"builtin://charts\",1054,2,36315,1054,18,36331],\n[\"builtin://charts\",1055,2,36336,1055,23,36357],\n[\"builtin://charts\",1056,2,36361,1056,26,36385],\n[\"builtin://charts\",982,24,34272,982,35,34283],\n[\"builtin://charts\",976,2,34150,976,17,34165],\n[\"builtin://charts\",977,2,34169,977,17,34184],\n[\"builtin://charts\",978,2,34188,978,17,34203],\n[\"builtin://charts\",979,2,34207,979,17,34222],\n[\"builtin://charts\",980,2,34226,980,21,34245],\n[\"builtin://charts\",279,2,9087,279,17,9102],\n[\"builtin://charts\",280,2,9106,280,19,9123],\n[\"builtin://charts\",281,2,9127,281,19,9144],\n[\"builtin://charts\",282,2,9148,282,26,9172],\n[\"builtin://charts\",283,2,9176,283,18,9192],\n[\"builtin://charts\",284,2,9196,284,26,9220],\n[\"builtin://charts\",285,2,9224,285,24,9246],\n[\"builtin://charts\",286,2,9250,286,23,9271],\n[\"builtin://charts\",287,2,9275,287,35,9308],\n[\"builtin://charts\",288,2,9312,288,34,9344],\n[\"builtin://charts\",1,0,0,2892,1,93523]];\nvar $type$Nothing1 = R.getModuleField(\"builtin://global\",\"types\",\"Nothing\");\nvar num$is$integer2 = R.getModuleField(\"builtin://global\",\"values\",\"num-is-integer\");\nvar raw$array$map1 = R.getModuleField(\"builtin://global\",\"values\",\"raw-array-map\");\nvar $type$NumInteger1 = R.getModuleField(\"builtin://global\",\"types\",\"NumInteger\");\nvar num$floor4 = R.getModuleField(\"builtin://global\",\"values\",\"num-floor\");\nvar run$task1 = R.getModuleField(\"builtin://global\",\"values\",\"run-task\");\nvar _times5 = R.getModuleField(\"builtin://global\",\"values\",\"_times\");\nvar raw$array$from$list6 = R.getModuleField(\"builtin://global\",\"values\",\"raw-array-from-list\");\nvar equal$always1 = R.getModuleField(\"builtin://global\",\"values\",\"equal-always\");\nvar raw$array$set7 = R.getModuleField(\"builtin://global\",\"values\",\"raw-array-set\");\nvar num$is$rational3 = R.getModuleField(\"builtin://global\",\"values\",\"num-is-rational\");\nvar num$abs1 = R.getModuleField(\"builtin://global\",\"values\",\"num-abs\");\nvar num$min2 = R.getModuleField(\"builtin://global\",\"values\",\"num-min\");\nvar raise1 = R.getModuleField(\"builtin://global\",\"values\",\"raise\");\nvar tostring1 = R.getModuleField(\"builtin://global\",\"values\",\"tostring\");\nvar num$sqr2 = R.getModuleField(\"builtin://global\",\"values\",\"num-sqr\");\nvar nothing5 = R.getModuleField(\"builtin://global\",\"values\",\"nothing\");\nvar builtins10 = R.getModuleField(\"builtin://global\",\"values\",\"builtins\");\nvar _minus12 = R.getModuleField(\"builtin://global\",\"values\",\"_minus\");\nvar not6 = R.getModuleField(\"builtin://global\",\"values\",\"not\");\nvar raw$array2 = R.getModuleField(\"builtin://global\",\"values\",\"raw-array\");\nvar $type$Number3 = R.getModuleField(\"builtin://global\",\"types\",\"Number\");\nvar exn$unwrap2 = R.getModuleField(\"builtin://global\",\"values\",\"exn-unwrap\");\nvar num$ceiling14 = R.getModuleField(\"builtin://global\",\"values\",\"num-ceiling\");\nvar num$to$string$digits1 = R.getModuleField(\"builtin://global\",\"values\",\"num-to-string-digits\");\nvar raw$array$to$list4 = R.getModuleField(\"builtin://global\",\"values\",\"raw-array-to-list\");\nvar _divide16 = R.getModuleField(\"builtin://global\",\"values\",\"_divide\");\nvar string$equal2 = R.getModuleField(\"builtin://global\",\"values\",\"string-equal\");\nvar _greaterequal2 = R.getModuleField(\"builtin://global\",\"values\",\"_greaterequal\");\nvar _plus5 = R.getModuleField(\"builtin://global\",\"values\",\"_plus\");\nvar _lessthan3 = R.getModuleField(\"builtin://global\",\"values\",\"_lessthan\");\nvar num$to$rational3 = R.getModuleField(\"builtin://global\",\"values\",\"num-to-rational\");\nvar raw$array$fold3 = R.getModuleField(\"builtin://global\",\"values\",\"raw-array-fold\");\nvar _lessequal4 = R.getModuleField(\"builtin://global\",\"values\",\"_lessequal\");\nvar $type$Boolean6 = R.getModuleField(\"builtin://global\",\"types\",\"Boolean\");\nvar num$to$string7 = R.getModuleField(\"builtin://global\",\"values\",\"num-to-string\");\nvar _greaterthan5 = R.getModuleField(\"builtin://global\",\"values\",\"_greaterthan\");\nvar $type$RawArray1 = R.getModuleField(\"builtin://global\",\"types\",\"RawArray\");\nvar $type$String8 = R.getModuleField(\"builtin://global\",\"types\",\"String\");\nvar raw$array$get17 = R.getModuleField(\"builtin://global\",\"values\",\"raw-array-get\");\nvar num$max18 = R.getModuleField(\"builtin://global\",\"values\",\"num-max\");\nvar num$modulo9 = R.getModuleField(\"builtin://global\",\"values\",\"num-modulo\");\nvar num$log4 = R.getModuleField(\"builtin://global\",\"values\",\"num-log\");\nvar num$expt4 = R.getModuleField(\"builtin://global\",\"values\",\"num-expt\");\nvar raw$array$length7 = R.getModuleField(\"builtin://global\",\"values\",\"raw-array-length\");\nvar B39 = $B54;\nvar CL40 = $CL31;\nvar C41 = $C11;\nvar E42 = $E8;\nvar G43 = $G8;\nvar I44 = $I5;\nvar IM45 = $IM55;\nvar $included$146 = $$included$131;\nvar $included$247 = $$included$229;\nvar RED48 = $RED37;\nvar S49 = $S16;\nvar ST50 = $ST56;\nvar SD51 = $SD18;\nvar VS52 = $VS8;\nvar $cases_dispatch6823 = {\"some\":4};\nvar $cases_dispatch6817 = {\"empty\":9};\nvar $cases_dispatch6776 = {\"none\":3,\n\"some\":4};\nvar $cases_dispatch6747 = {\"left\":16,\n\"right\":17};\nvar $cases_dispatch6602 = {\"none\":5,\n\"some\":9};\nvar $cases_dispatch6579 = {\"exact-bound\":4,\n\"inferred-bound\":5,\n\"unknown-bound\":6};\nvar $cases_dispatch6576 = {\"exact-bound\":2,\n\"inferred-bound\":4,\n\"unknown-bound\":8};\nvar $cases_dispatch6564 = {\"exact-bound\":12,\n\"inferred-bound\":13,\n\"unknown-bound\":14};\nvar $cases_dispatch6550 = {\"exact-bound\":2,\n\"inferred-bound\":4,\n\"unknown-bound\":5};\nvar $cases_dispatch6538 = {\"exact-bound\":15,\n\"inferred-bound\":16,\n\"unknown-bound\":17};\nvar $cases_dispatch6523 = {\"exact-bound\":2,\n\"inferred-bound\":3,\n\"unknown-bound\":5};\nvar $cases_dispatch6510 = {\"exact-bound\":18,\n\"inferred-bound\":19,\n\"unknown-bound\":20};\nvar $cases_dispatch6442 = {\"empty\":3,\n\"link\":4};\nvar $cases_dispatch6428 = {\"none\":27,\n\"some\":28};\nvar $cases_dispatch6397 = {\"empty\":33,\n\"link\":34};\nvar $cases_dispatch6378 = {\"empty\":10,\n\"link\":11};\nvar $cases_dispatch6227 = {\"empty\":4,\n\"link\":5};\nvar $cases_dispatch6075 = {\"left\":5,\n\"right\":7};\nvar $cases_dispatch6030 = {\"line-plot-series\":3,\n\"function-plot-series\":5,\n\"scatter-plot-series\":7,\n\"interval-chart-series\":9,\n\"dot-plot-series\":11,\n\"categorical-dot-plot-series\":12,\n\"pie-chart-series\":13,\n\"bar-chart-series\":14,\n\"multi-bar-chart-series\":15,\n\"box-plot-series\":16,\n\"histogram-series\":17};\nvar $cases_dispatch5884 = {\"some\":2};\nvar $cases_dispatch5881 = {\"some\":2};\nvar $cases_dispatch5870 = {\"some\":7};\nvar $cases_dispatch5848 = {\"some\":2};\nvar $cases_dispatch5845 = {\"some\":2};\nvar $cases_dispatch5835 = {\"some\":7};\nvar $cases_dispatch3778 = {\"left\":3,\n\"right\":4};\nvar $cases_dispatch3668 = {\"none\":2,\n\"some\":3};\nvar $cases_dispatch3661 = {\"none\":8,\n\"some\":9};\nvar $cases_dispatch3656 = {\"none\":14,\n\"some\":15};\nvar $cases_dispatch3650 = {\"none\":21,\n\"some\":22};\nvar $cases_dispatch3614 = {\"empty\":3,\n\"link\":4};\nvar $cases_dispatch3140 = {\"none\":3,\n\"some\":4};\nvar $cases_dispatch2935 = {\"none\":3,\n\"some\":4};\nvar $cases_dispatch2348 = {\"circle-shape\":3,\n\"regular-polygon-shape\":5};\nvar $cases_dispatch2225 = {\"no-trendline\":3,\n\"linear\":5,\n\"exponential\":7,\n\"polynomial\":9};\nvar $cases_dispatch1902 = {\"empty\":3,\n\"link\":5};\nvar link5 = R.getModuleField(\"builtin://lists\",\"values\",\"link\");\nvar map6 = R.getModuleField(\"builtin://lists\",\"values\",\"map\");\nvar list7 = R.getModuleField(\"builtin://lists\",\"values\",\"list\");\nvar each38 = R.getModuleField(\"builtin://lists\",\"values\",\"each3\");\nvar map_n9 = R.getModuleField(\"builtin://lists\",\"values\",\"map_n\");\nvar List16 = R.getModuleField(\"builtin://lists\",\"types\",\"List\");\nvar any17 = R.getModuleField(\"builtin://lists\",\"values\",\"any\");\nvar empty18 = R.getModuleField(\"builtin://lists\",\"values\",\"empty\");\nvar is$empty19 = R.getModuleField(\"builtin://lists\",\"values\",\"is-empty\");\nvar filter$map20 = R.getModuleField(\"builtin://lists\",\"values\",\"filter-map\");\nvar range$by21 = R.getModuleField(\"builtin://lists\",\"values\",\"range-by\");\nvar partition22 = R.getModuleField(\"builtin://lists\",\"values\",\"partition\");\nvar map2_n23 = R.getModuleField(\"builtin://lists\",\"values\",\"map2_n\");\nvar fold24 = R.getModuleField(\"builtin://lists\",\"values\",\"fold\");\nvar map3_n1806 = R.getModuleField(\"builtin://lists\",\"values\",\"map3_n\");\nvar each25 = R.getModuleField(\"builtin://lists\",\"values\",\"each\");\nvar map226 = R.getModuleField(\"builtin://lists\",\"values\",\"map2\");\nvar Option27 = R.getModuleField(\"builtin://option\",\"types\",\"Option\");\nvar none28 = R.getModuleField(\"builtin://option\",\"values\",\"none\");\nvar map329 = R.getModuleField(\"builtin://lists\",\"values\",\"map3\");\nvar map430 = R.getModuleField(\"builtin://lists\",\"values\",\"map4\");\nvar filter31 = R.getModuleField(\"builtin://lists\",\"values\",\"filter\");\nvar range32 = R.getModuleField(\"builtin://lists\",\"values\",\"range\");\nvar some33 = R.getModuleField(\"builtin://option\",\"values\",\"some\");\nvar distinct34 = R.getModuleField(\"builtin://lists\",\"values\",\"distinct\");\nvar find35 = R.getModuleField(\"builtin://lists\",\"values\",\"find\");\nvar is$link36 = R.getModuleField(\"builtin://lists\",\"values\",\"is-link\");\nvar fold237 = R.getModuleField(\"builtin://lists\",\"values\",\"fold2\");\nvar each238 = R.getModuleField(\"builtin://lists\",\"values\",\"each2\");\nvar $toplevel96 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2718($$resumer11) {\nvar $step95 = 0;\nvar $elidedFrames333 = 0;\nvar $ans330 = D;\nvar $al331 = L[2718];\nif(R.isAR($$resumer11)) {\n$step95 = $$resumer11.step;\n$al331 = $$resumer11.from;\n$ans330 = $$resumer11.ans;\n$elidedFrames333 = $$resumer11.elidedFrames;\n$resumer11 = $$resumer11.args[0];\nto$table3$n1389 = $$resumer11.vars[0];\ndefault$bar$chart$window$object5977 = $$resumer11.vars[1];\nmulti$bar$chart$series3946 = $$resumer11.vars[2];\ninterval$chart$window4356 = $$resumer11.vars[3];\nTableIntern764 = $$resumer11.vars[4];\ndefault$plot$chart$window$object6795 = $$resumer11.vars[5];\nstyle$method4129 = $$resumer11.vars[6];\nDEFAULT$RANGE6837 = $$resumer11.vars[7];\npie$chart$window4321 = $$resumer11.vars[8];\npercent453 = $$resumer11.vars[9];\nline$plot$series3790 = $$resumer11.vars[10];\nline$width$method4033 = $$resumer11.vars[11];\npie$chart$from$list4869 = $$resumer11.vars[12];\nx$max$method4453 = $$resumer11.vars[13];\nis$multi$bar$chart$series4213 = $$resumer11.vars[14];\nScatterPoint4623 = $$resumer11.vars[15];\ndefault$pie$chart$window$object5961 = $$resumer11.vars[16];\nPlotChartWindowObject4470 = $$resumer11.vars[17];\nexploding$pie$chart$from$list4830 = $$resumer11.vars[18];\nget$bounding$box3618 = $$resumer11.vars[19];\nis$sci$notation396 = $$resumer11.vars[20];\ngridlines$color$method4464 = $$resumer11.vars[21];\nfreq$bar$chart$from$list5748 = $$resumer11.vars[22];\ndashed$line$style$method4039 = $$resumer11.vars[23];\nsprintf5582 = $$resumer11.vars[24];\ncheck$chart$window4239 = $$resumer11.vars[25];\ncollapse$threshold$method4102 = $$resumer11.vars[26];\nlabeled$line$plot$from$list4578 = $$resumer11.vars[27];\ndefault$line$plot$series4542 = $$resumer11.vars[28];\nnum$to$scientific1553 = $$resumer11.vars[29];\nline$plot$edge$cut6446 = $$resumer11.vars[30];\nselect$multiple$method4465 = $$resumer11.vars[31];\ninterval$chart$series3937 = $$resumer11.vars[32];\nimage$line$plot$from$list4608 = $$resumer11.vars[33];\nrender$chart3742 = $$resumer11.vars[34];\nis$dot$chart$window4481 = $$resumer11.vars[35];\nIntervalPoint5483 = $$resumer11.vars[36];\nCategoricalDotPlotSeries4080 = $$resumer11.vars[37];\nin$bound$xy6171 = $$resumer11.vars[38];\nwiden$range6108 = $$resumer11.vars[39];\nIntervalChartSeries4135 = $$resumer11.vars[40];\ntrendline$opacity$method4037 = $$resumer11.vars[41];\nexplode$method4094 = $$resumer11.vars[42];\nlabeled$scatter$plot$from$list4696 = $$resumer11.vars[43];\nlabeled$num$dot$chart$from$list5140 = $$resumer11.vars[44];\nbox$labels$method4155 = $$resumer11.vars[45];\nis$SciNumber394 = $$resumer11.vars[46];\ny$max$method4433 = $$resumer11.vars[47];\ndefault$bar$chart$series4768 = $$resumer11.vars[48];\nLinePlotSeries4049 = $$resumer11.vars[49];\ndot$chart$window4329 = $$resumer11.vars[50];\nSHOW$LENGTH6840 = $$resumer11.vars[51];\nFUNCTION$POINT$SIZE6080 = $$resumer11.vars[52];\nPointShape2349 = $$resumer11.vars[53];\nis$linear507 = $$resumer11.vars[54];\nscatter$plot$series3822 = $$resumer11.vars[55];\nget$list$of$bounding$boxes3677 = $$resumer11.vars[56];\ndist6188 = $$resumer11.vars[57];\nsingle$intervals$method4118 = $$resumer11.vars[58];\nmerge$bounding$box3708 = $$resumer11.vars[59];\ndefault$function$plot$series4505 = $$resumer11.vars[60];\nis$Pointer356 = $$resumer11.vars[61];\nis$categorical$dot$plot$series4192 = $$resumer11.vars[62];\nget$bound$result6606 = $$resumer11.vars[63];\nis$grouped455 = $$resumer11.vars[64];\nis$box$plot$chart$window4484 = $$resumer11.vars[65];\nis$BoundResult6470 = $$resumer11.vars[66];\ncolor$list$method4095 = $$resumer11.vars[67];\npointer$color$method4113 = $$resumer11.vars[68];\nis$circle$shape566 = $$resumer11.vars[69];\nget$box$data1866 = $$resumer11.vars[70];\nis$pie$chart$series4203 = $$resumer11.vars[71];\nexponential513 = $$resumer11.vars[72];\nfunction$plot$series3898 = $$resumer11.vars[73];\nshow$minor$grid$lines$method6835 = $$resumer11.vars[74];\ndefault$interval$chart$window$object6838 = $$resumer11.vars[75];\nmulti$scale$method4143 = $$resumer11.vars[76];\ndefault$histogram$chart$window$object6025 = $$resumer11.vars[77];\nmake$axis$data$method4115 = $$resumer11.vars[78];\naxis$pointer$method4112 = $$resumer11.vars[79];\ncolor$method4030 = $$resumer11.vars[80];\ncheck$image619 = $$resumer11.vars[81];\ntable2$to$list1450 = $$resumer11.vars[82];\npie$chart$series3906 = $$resumer11.vars[83];\ndefault$scatter$plot$series4657 = $$resumer11.vars[84];\nBoundingBox3580 = $$resumer11.vars[85];\nlabels$method4041 = $$resumer11.vars[86];\nis$pointer358 = $$resumer11.vars[87];\nis$function$plot$series4197 = $$resumer11.vars[88];\nsort$method4097 = $$resumer11.vars[89];\nChartWindow5898 = $$resumer11.vars[90];\nChartWindowObject4236 = $$resumer11.vars[91];\nis$relative448 = $$resumer11.vars[92];\nis$AxisData416 = $$resumer11.vars[93];\nChartWindow341 = $$resumer11.vars[94];\nis$PointShape564 = $$resumer11.vars[95];\nunknown$bound6482 = $$resumer11.vars[96];\nsingle$error$bars$method4119 = $$resumer11.vars[97];\nis$line$plot$series4183 = $$resumer11.vars[98];\nAxisData6845 = $$resumer11.vars[99];\ncheck$num588 = $$resumer11.vars[100];\nHistogramChartWindowObject4457 = $$resumer11.vars[101];\nanf_obj3713 = $$resumer11.vars[102];\nDotPlotSeries4071 = $$resumer11.vars[103];\nis$percent451 = $$resumer11.vars[104];\nis$dot$plot$series4189 = $$resumer11.vars[105];\nrelative450 = $$resumer11.vars[106];\ndefault$sort$method4096 = $$resumer11.vars[107];\nfind$pt$on$edge6338 = $$resumer11.vars[108];\nis$StackType443 = $$resumer11.vars[109];\nlabeled$histogram$from$list5793 = $$resumer11.vars[110];\nerror$bars$method4145 = $$resumer11.vars[111];\nregular$polygon$shape572 = $$resumer11.vars[112];\nis$histogram$series4219 = $$resumer11.vars[113];\nthd6836 = $$resumer11.vars[114];\nminor$gridlines$min$spacing$method6839 = $$resumer11.vars[115];\nto$table41424 = $$resumer11.vars[116];\ndefault$dot$chart$window$object5934 = $$resumer11.vars[117];\nis$exact$bound6472 = $$resumer11.vars[118];\nmulti$prep$axis1764 = $$resumer11.vars[119];\nPieChartSeries4107 = $$resumer11.vars[120];\nstring$to$stacktype1576 = $$resumer11.vars[121];\nis$no$trendline504 = $$resumer11.vars[122];\ndefault$box$plot$chart$window$object6007 = $$resumer11.vars[123];\nstacking$type$method4144 = $$resumer11.vars[124];\nis$box$plot$series4216 = $$resumer11.vars[125];\nis$pie$chart$window4477 = $$resumer11.vars[126];\nis$interval$chart$window4490 = $$resumer11.vars[127];\nBoxData1839 = $$resumer11.vars[128];\nDotPoint4964 = $$resumer11.vars[129];\nline$plot$from$list4551 = $$resumer11.vars[130];\nbar$chart$series3915 = $$resumer11.vars[131];\nbar$chart$window4348 = $$resumer11.vars[132];\nTrendlineType2226 = $$resumer11.vars[133];\nBarChartSeries4124 = $$resumer11.vars[134];\nbackground$border$method4389 = $$resumer11.vars[135];\ninterval$color$method4120 = $$resumer11.vars[136];\nx$min$method4452 = $$resumer11.vars[137];\nannotations$method3178 = $$resumer11.vars[138];\nlabeled$box$plot$from$list5585 = $$resumer11.vars[139];\nis$plot$chart$window4496 = $$resumer11.vars[140];\nIntervalChartWindowObject4446 = $$resumer11.vars[141];\nbound$result$to$bounds6584 = $$resumer11.vars[142];\nmax$method4422 = $$resumer11.vars[143];\nCategoricalDotPoint6844 = $$resumer11.vars[144];\nimage$scatter$plot$from$list4733 = $$resumer11.vars[145];\nformat$axis$data$method4114 = $$resumer11.vars[146];\ncheck$positive$sides532 = $$resumer11.vars[147];\nis$exponential512 = $$resumer11.vars[148];\nget$interval$point5487 = $$resumer11.vars[149];\nis$absolute444 = $$resumer11.vars[150];\nis$DataSeries4181 = $$resumer11.vars[151];\ncheck$valid$dent545 = $$resumer11.vars[152];\nimage$histogram$from$list5819 = $$resumer11.vars[153];\nis$bar$chart$series4206 = $$resumer11.vars[154];\nto$table2768 = $$resumer11.vars[155];\nDotChartWindowObject4415 = $$resumer11.vars[156];\nborder$color$method4390 = $$resumer11.vars[157];\nshow$grid$lines$method4463 = $$resumer11.vars[158];\nnearest6231 = $$resumer11.vars[159];\nimage$pie$chart$from$list4908 = $$resumer11.vars[160];\ndefault$box$plot$series5681 = $$resumer11.vars[161];\nhorizontal$method4045 = $$resumer11.vars[162];\nimage$labels$method4042 = $$resumer11.vars[163];\ngridlines$min$spacing$method6842 = $$resumer11.vars[164];\nthreeD$method4099 = $$resumer11.vars[165];\nlist$to$table21438 = $$resumer11.vars[166];\nis$scatter$plot$series4186 = $$resumer11.vars[167];\nMultiBarChartSeries4150 = $$resumer11.vars[168];\nlinear509 = $$resumer11.vars[169];\nlabeled$interval$chart$from$list5538 = $$resumer11.vars[170];\nis$regular$polygon$shape570 = $$resumer11.vars[171];\nis$polynomial515 = $$resumer11.vars[172];\ny$min$method4432 = $$resumer11.vars[173];\nintervals$method3292 = $$resumer11.vars[174];\nBoxChartWindowObject4426 = $$resumer11.vars[175];\ninferred$bound6478 = $$resumer11.vars[176];\nis$bar$chart$window4487 = $$resumer11.vars[177];\ncircle$shape568 = $$resumer11.vars[178];\nposn6278 = $$resumer11.vars[179];\nPieChartWindowObject4404 = $$resumer11.vars[180];\nsci$notation404 = $$resumer11.vars[181];\nstacked$bar$chart$from$list5437 = $$resumer11.vars[182];\nSciNumber6843 = $$resumer11.vars[183];\nmulti$sort$method4142 = $$resumer11.vars[184];\nto$table2$n794 = $$resumer11.vars[185];\ndefault$multi$bar$chart$series5301 = $$resumer11.vars[186];\nunsafe$equal6098 = $$resumer11.vars[187];\ndashed$line$method4038 = $$resumer11.vars[188];\naxis$data419 = $$resumer11.vars[189];\nminor$gridlines$color$method6841 = $$resumer11.vars[190];\nPosn6135 = $$resumer11.vars[191];\ndefault$chart$window$object3728 = $$resumer11.vars[192];\nget$dot$point4968 = $$resumer11.vars[193];\npiehole$method4100 = $$resumer11.vars[194];\nanswer6833 = $$resumer11.vars[195];\nScatterPlotSeries4060 = $$resumer11.vars[196];\nps$to$arr6120 = $$resumer11.vars[197];\nStackType1564 = $$resumer11.vars[198];\nHistogramSeries4176 = $$resumer11.vars[199];\ndefault$multi$sort$method4141 = $$resumer11.vars[200];\ncurve$method4032 = $$resumer11.vars[201];\nsnd3607 = $$resumer11.vars[202];\nrender$charts5900 = $$resumer11.vars[203];\nis$interval$chart$series4209 = $$resumer11.vars[204];\nget$vs$from$img1466 = $$resumer11.vars[205];\ncheck$string604 = $$resumer11.vars[206];\ndot$chart$from$list5195 = $$resumer11.vars[207];\nfst3606 = $$resumer11.vars[208];\nbar$chart$from$list4953 = $$resumer11.vars[209];\ncheck$render$x$axis5853 = $$resumer11.vars[210];\nBoundResult342 = $$resumer11.vars[211];\nexact$bound6474 = $$resumer11.vars[212];\nfunction$plot$from$list4513 = $$resumer11.vars[213];\ngrouped$bar$chart$from$list5321 = $$resumer11.vars[214];\nlegend$method4031 = $$resumer11.vars[215];\npointer362 = $$resumer11.vars[216];\ndefault$categorical$dot$plot$series5186 = $$resumer11.vars[217];\nscatter$plot$from$list4666 = $$resumer11.vars[218];\nscale$method4116 = $$resumer11.vars[219];\nis$TrendlineType503 = $$resumer11.vars[220];\nDataSeries4507 = $$resumer11.vars[221];\ndefault$histogram$series5765 = $$resumer11.vars[222];\ntable$sorter1526 = $$resumer11.vars[223];\nno$trendline506 = $$resumer11.vars[224];\nbox$plot$series3954 = $$resumer11.vars[225];\nmap55457 = $$resumer11.vars[226];\nplot$chart$window4375 = $$resumer11.vars[227];\nlabel$sort$method4098 = $$resumer11.vars[228];\nBoundResult6511 = $$resumer11.vars[229];\nhistogram$chart$window4365 = $$resumer11.vars[230];\nto$table3808 = $$resumer11.vars[231];\npointshape$method4040 = $$resumer11.vars[232];\ncheck$render$y$axis5888 = $$resumer11.vars[233];\nin$bound$y6157 = $$resumer11.vars[234];\nget$scatter$point4522 = $$resumer11.vars[235];\ndot$plot$series3854 = $$resumer11.vars[236];\ntrendline$type$method4034 = $$resumer11.vars[237];\ntrendline$color$method4035 = $$resumer11.vars[238];\nbox$plot$chart$window4339 = $$resumer11.vars[239];\nPlottableFunction4509 = $$resumer11.vars[240];\nhistogram$from$list5772 = $$resumer11.vars[241];\nBarChartWindowObject4437 = $$resumer11.vars[242];\nis$inferred$bound6476 = $$resumer11.vars[243];\ncheck$positive$degree478 = $$resumer11.vars[244];\nis$ChartWindow4475 = $$resumer11.vars[245];\nsingle$annotations$method4117 = $$resumer11.vars[246];\ndefault$pie$chart$series4820 = $$resumer11.vars[247];\nbackground$color$method4388 = $$resumer11.vars[248];\nPointer6846 = $$resumer11.vars[249];\nx$axis$method4410 = $$resumer11.vars[250];\nbox$plot$from$list5592 = $$resumer11.vars[251];\nabsolute446 = $$resumer11.vars[252];\ndefault$dot$plot$series5008 = $$resumer11.vars[253];\nimage$num$dot$chart$from$list5095 = $$resumer11.vars[254];\ny$axis$method4411 = $$resumer11.vars[255];\nstarting$angle$method4101 = $$resumer11.vars[256];\nmin$method4421 = $$resumer11.vars[257];\nhistogram$series3974 = $$resumer11.vars[258];\nis$axis$data418 = $$resumer11.vars[259];\nnum$dot$chart$from$list5017 = $$resumer11.vars[260];\nis$unknown$bound6480 = $$resumer11.vars[261];\nprep$axis1595 = $$resumer11.vars[262];\ngenerate$xy6087 = $$resumer11.vars[263];\npolynomial517 = $$resumer11.vars[264];\ncategorical$dot$plot$series3887 = $$resumer11.vars[265];\nFunctionPlotSeries4089 = $$resumer11.vars[266];\ninterval$chart$from$list5566 = $$resumer11.vars[267];\nsuper$default$multi$sort$method4140 = $$resumer11.vars[268];\ndefault$interval$chart$series5524 = $$resumer11.vars[269];\nfrom$list6832 = $$resumer11.vars[270];\nimage$bar$chart$from$list4786 = $$resumer11.vars[271];\nhistogram$label$method4167 = $$resumer11.vars[272];\nin$bound$x6138 = $$resumer11.vars[273];\ntrendline$width$method4036 = $$resumer11.vars[274];\nis$histogram$chart$window4493 = $$resumer11.vars[275];\nDataSeries340 = $$resumer11.vars[276];\ngrouped457 = $$resumer11.vars[277];\ndefault$bounding$box3582 = $$resumer11.vars[278];\nBoxChartSeries4161 = $$resumer11.vars[279];\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans330 = R.mC();\n}\nwhile(!R.isContinuation($ans330)) {\nswitch($step95) {\ncase 0: var Pointer334 = R.nB(\"Pointer\",L[3]);\nvar Pointer6846 = R.mBA(Pointer334,\"Pointer\");\nvar SciNumber335 = R.nB(\"SciNumber\",L[8]);\nvar SciNumber6843 = R.mBA(SciNumber335,\"SciNumber\");\nvar AxisData336 = R.nB(\"AxisData\",L[13]);\nvar AxisData6845 = R.mBA(AxisData336,\"AxisData\");\nvar StackType337 = R.nB(\"StackType\",L[18]);\nvar StackType1564 = R.mBA(StackType337,\"StackType\");\nvar TrendlineType338 = R.nB(\"TrendlineType\",L[29]);\nvar TrendlineType2226 = R.mBA(TrendlineType338,\"TrendlineType\");\nvar PointShape339 = R.nB(\"PointShape\",L[45]);\nvar PointShape2349 = R.mBA(PointShape339,\"PointShape\");\nvar DataSeries340 = R.nB(\"DataSeries\",L[1384]);\nvar DataSeries4507 = R.mBA(DataSeries340,\"DataSeries\");\nvar ChartWindow341 = R.nB(\"ChartWindow\",L[1464]);\nvar ChartWindow5898 = R.mBA(ChartWindow341,\"ChartWindow\");\nvar BoundResult342 = R.nB(\"BoundResult\",L[2356]);\nvar BoundResult6511 = R.mBA(BoundResult342,\"BoundResult\");\nvar SHOW$LENGTH6840 = (3);\nvar FUNCTION$POINT$SIZE6080 = R.makeNumberFromString(\"1/10\");\nvar DEFAULT$RANGE6837 = R.makeTuple([(-10),(10)]);\nvar PlottableFunction4509 = R.Function;\nvar Posn6135 = $type$RawArray1;\nvar TableIntern764 = $type$RawArray1;\nvar Pointer352 = {\"$var\":D};\nvar is$Pointer356 = {\"$var\":D};\nvar is$pointer358 = {\"$var\":D};\nvar pointer362 = {\"$var\":D};\nvar SciNumber390 = {\"$var\":D};\nvar is$SciNumber394 = {\"$var\":D};\nvar is$sci$notation396 = {\"$var\":D};\nvar sci$notation404 = {\"$var\":D};\nvar AxisData414 = {\"$var\":D};\nvar is$AxisData416 = {\"$var\":D};\nvar is$axis$data418 = {\"$var\":D};\nvar axis$data419 = {\"$var\":D};\nvar StackType441 = {\"$var\":D};\nvar is$StackType443 = {\"$var\":D};\nvar is$absolute444 = {\"$var\":D};\nvar absolute446 = {\"$var\":D};\nvar is$relative448 = {\"$var\":D};\nvar relative450 = {\"$var\":D};\nvar is$percent451 = {\"$var\":D};\nvar percent453 = {\"$var\":D};\nvar is$grouped455 = {\"$var\":D};\nvar grouped457 = {\"$var\":D};\nvar check$positive$degree478 = {\"$var\":D};\nvar TrendlineType501 = {\"$var\":D};\nvar is$TrendlineType503 = {\"$var\":D};\nvar is$no$trendline504 = {\"$var\":D};\nvar no$trendline506 = {\"$var\":D};\nvar is$linear507 = {\"$var\":D};\nvar linear509 = {\"$var\":D};\nvar is$exponential512 = {\"$var\":D};\nvar exponential513 = {\"$var\":D};\nvar is$polynomial515 = {\"$var\":D};\nvar polynomial517 = {\"$var\":D};\nvar check$positive$sides532 = {\"$var\":D};\nvar check$valid$dent545 = {\"$var\":D};\nvar PointShape561 = {\"$var\":D};\nvar is$PointShape564 = {\"$var\":D};\nvar is$circle$shape566 = {\"$var\":D};\nvar circle$shape568 = {\"$var\":D};\nvar is$regular$polygon$shape570 = {\"$var\":D};\nvar regular$polygon$shape572 = {\"$var\":D};\nvar check$num588 = {\"$var\":D};\nvar check$string604 = {\"$var\":D};\nvar check$image619 = {\"$var\":D};\nvar $pointer_getfields347 = function singleton_variant(f) {\nreturn f(this.dict[\"label\"],this.dict[\"value\"]);\n};\nvar $pointer_mutablemask346 = [false,false];\nvar $pointer$base343 = {\"$fieldNames\":[\"label\",\"value\"],\n\"_match\":R.mM(\"pointer\",2)};\nvar $pointer$brander344 = R.nB(\"pointer\",L[0]);\nvar $pointer$brands345 = {};\n$pointer$brands345[Pointer334._brand] = true;\n$pointer$brands345[$pointer$brander344._brand] = true;\nvar pointer348 = R.mVC(L[0],function $synthesizedConstructor_$pointer$base() {\nreturn [$type$String8,$type$Number3];\n},[\"label349\",\"value350\"],[L[1],L[2]],[false,false],[\"label349\",\"value350\"],$pointer_mutablemask346,$pointer$base343,$pointer$brands345,\"pointer\",$pointer_getfields347,$pointer$base343);\nvar anf_assign351 = R.mO({\"Pointer\":G(Pointer334,\"test\",L[3]),\n\"is-pointer\":G($pointer$brander344,\"test\",L[0]),\n\"pointer\":pointer348});\nPointer352.$var = anf_assign351;\nR.nothing;\n$al331 = L[3];\nvar anf_assign355 = G(Pointer352.$var,\"Pointer\",L[3]);\nis$Pointer356.$var = anf_assign355;\nR.nothing;\n$al331 = L[0];\nvar anf_assign357 = G(Pointer352.$var,\"is-pointer\",L[0]);\nis$pointer358.$var = anf_assign357;\nR.nothing;\n$al331 = L[0];\nvar anf_assign361 = G(Pointer352.$var,\"pointer\",L[0]);\npointer362.$var = anf_assign361;\nR.nothing;\nvar $sci$notation_getfields367 = function singleton_variant(f) {\nreturn f(this.dict[\"coeff\"],this.dict[\"exponent\"],this.dict[\"base\"]);\n};\nvar $sci$notation_mutablemask366 = [false,false,false];\nvar $sci$notation$base363 = {\"$fieldNames\":[\"coeff\",\"exponent\",\"base\"],\n\"_match\":R.mM(\"sci-notation\",3)};\nvar $sci$notation$brander364 = R.nB(\"sci-notation\",L[4]);\nvar $sci$notation$brands365 = {};\n$sci$notation$brands365[SciNumber335._brand] = true;\n$sci$notation$brands365[$sci$notation$brander364._brand] = true;\nvar sci$notation368 = R.mVC(L[4],function $synthesizedConstructor_$sci$notation$base() {\nreturn [$type$Number3,$type$Number3,$type$Number3];\n},[\"coeff369\",\"exponent370\",\"base371\"],[L[5],L[6],L[7]],[false,false,false],[\"coeff369\",\"exponent370\",\"base371\"],$sci$notation_mutablemask366,$sci$notation$base363,$sci$notation$brands365,\"sci-notation\",$sci$notation_getfields367,$sci$notation$base363);\nvar anf_assign389 = R.mO({\"SciNumber\":G(SciNumber335,\"test\",L[8]),\n\"is-sci-notation\":G($sci$notation$brander364,\"test\",L[4]),\n\"sci-notation\":sci$notation368});\nSciNumber390.$var = anf_assign389;\nR.nothing;\n$al331 = L[8];\nvar anf_assign393 = G(SciNumber390.$var,\"SciNumber\",L[8]);\nis$SciNumber394.$var = anf_assign393;\nR.nothing;\n$al331 = L[4];\nvar anf_assign395 = G(SciNumber390.$var,\"is-sci-notation\",L[4]);\nis$sci$notation396.$var = anf_assign395;\nR.nothing;\n$al331 = L[4];\nvar anf_assign403 = G(SciNumber390.$var,\"sci-notation\",L[4]);\nsci$notation404.$var = anf_assign403;\nR.nothing;\nvar $axis$data_getfields409 = function singleton_variant(f) {\nreturn f(this.dict[\"axisTop\"],this.dict[\"axisBottom\"],this.dict[\"ticks\"]);\n};\nvar $axis$data_mutablemask408 = [false,false,false];\nvar $axis$data$base405 = {\"$fieldNames\":[\"axisTop\",\"axisBottom\",\"ticks\"],\n\"_match\":R.mM(\"axis-data\",3)};\nvar $axis$data$brander406 = R.nB(\"axis-data\",L[9]);\nvar $axis$data$brands407 = {};\n$axis$data$brands407[AxisData336._brand] = true;\n$axis$data$brands407[$axis$data$brander406._brand] = true;\nvar axis$data410 = R.mVC(L[9],function $synthesizedConstructor_$axis$data$base() {\nreturn [$type$Number3,$type$Number3,$type$RawArray1];\n},[\"axisTop411\",\"axisBottom412\",\"ticks413\"],[L[10],L[11],L[12]],[false,false,false],[\"axisTop411\",\"axisBottom412\",\"ticks413\"],$axis$data_mutablemask408,$axis$data$base405,$axis$data$brands407,\"axis-data\",$axis$data_getfields409,$axis$data$base405);\nvar anf_assign2485 = R.mO({\"AxisData\":G(AxisData336,\"test\",L[13]),\n\"is-axis-data\":G($axis$data$brander406,\"test\",L[9]),\n\"axis-data\":axis$data410});\nAxisData414.$var = anf_assign2485;\nR.nothing;\n$al331 = L[13];\nvar anf_assign415 = G(AxisData414.$var,\"AxisData\",L[13]);\nis$AxisData416.$var = anf_assign415;\nR.nothing;\n$al331 = L[9];\nvar anf_assign417 = G(AxisData414.$var,\"is-axis-data\",L[9]);\nis$axis$data418.$var = anf_assign417;\nR.nothing;\n$al331 = L[9];\nvar anf_assign2524 = G(AxisData414.$var,\"axis-data\",L[9]);\naxis$data419.$var = anf_assign2524;\nR.nothing;\nvar $absolute_getfields424 = function variant(f) {\nreturn f();\n};\nvar $absolute_mutablemask423 = [];\nvar $absolute$base420 = {\"_match\":R.mM(\"absolute\",0)};\nvar $absolute$brander421 = R.nB(\"absolute\",L[14]);\nvar $absolute$brands422 = {};\n$absolute$brands422[StackType337._brand] = true;\n$absolute$brands422[$absolute$brander421._brand] = true;\nvar $relative_getfields429 = function variant(f) {\nreturn f();\n};\nvar $relative_mutablemask428 = [];\nvar $relative$base425 = {\"_match\":R.mM(\"relative\",0)};\nvar $relative$brander426 = R.nB(\"relative\",L[15]);\nvar $relative$brands427 = {};\n$relative$brands427[StackType337._brand] = true;\n$relative$brands427[$relative$brander426._brand] = true;\nvar $percent_getfields434 = function variant(f) {\nreturn f();\n};\nvar $percent_mutablemask433 = [];\nvar $percent$base430 = {\"_match\":R.mM(\"percent\",0)};\nvar $percent$brander431 = R.nB(\"percent\",L[16]);\nvar $percent$brands432 = {};\n$percent$brands432[StackType337._brand] = true;\n$percent$brands432[$percent$brander431._brand] = true;\nvar $grouped_getfields439 = function variant(f) {\nreturn f();\n};\nvar $grouped_mutablemask438 = [];\nvar $grouped$base435 = {\"_match\":R.mM(\"grouped\",0)};\nvar $grouped$brander436 = R.nB(\"grouped\",L[17]);\nvar $grouped$brands437 = {};\n$grouped$brands437[StackType337._brand] = true;\n$grouped$brands437[$grouped$brander436._brand] = true;\nvar anf_assign440 = R.mO({\"StackType\":G(StackType337,\"test\",L[18]),\n\"is-absolute\":G($absolute$brander421,\"test\",L[14]),\n\"absolute\":R.mDV($absolute$base420,$absolute$brands422,\"absolute\",$absolute_getfields424,-1,$absolute_mutablemask423,$absolute$base420,false,L[14]),\n\"is-relative\":G($relative$brander426,\"test\",L[15]),\n\"relative\":R.mDV($relative$base425,$relative$brands427,\"relative\",$relative_getfields429,-1,$relative_mutablemask428,$relative$base425,false,L[15]),\n\"is-percent\":G($percent$brander431,\"test\",L[16]),\n\"percent\":R.mDV($percent$base430,$percent$brands432,\"percent\",$percent_getfields434,-1,$percent_mutablemask433,$percent$base430,false,L[16]),\n\"is-grouped\":G($grouped$brander436,\"test\",L[17]),\n\"grouped\":R.mDV($grouped$base435,$grouped$brands437,\"grouped\",$grouped_getfields439,-1,$grouped_mutablemask438,$grouped$base435,false,L[17])});\nStackType441.$var = anf_assign440;\nR.nothing;\n$al331 = L[18];\nvar anf_assign442 = G(StackType441.$var,\"StackType\",L[18]);\nis$StackType443.$var = anf_assign442;\nR.nothing;\n$al331 = L[14];\nvar anf_assign2557 = G(StackType441.$var,\"is-absolute\",L[14]);\nis$absolute444.$var = anf_assign2557;\nR.nothing;\n$al331 = L[14];\nvar anf_assign445 = G(StackType441.$var,\"absolute\",L[14]);\nabsolute446.$var = anf_assign445;\nR.nothing;\n$al331 = L[15];\nvar anf_assign447 = G(StackType441.$var,\"is-relative\",L[15]);\nis$relative448.$var = anf_assign447;\nR.nothing;\n$al331 = L[15];\nvar anf_assign449 = G(StackType441.$var,\"relative\",L[15]);\nrelative450.$var = anf_assign449;\nR.nothing;\n$al331 = L[16];\nvar anf_assign2600 = G(StackType441.$var,\"is-percent\",L[16]);\nis$percent451.$var = anf_assign2600;\nR.nothing;\n$al331 = L[16];\nvar anf_assign452 = G(StackType441.$var,\"percent\",L[16]);\npercent453.$var = anf_assign452;\nR.nothing;\n$al331 = L[17];\nvar anf_assign454 = G(StackType441.$var,\"is-grouped\",L[17]);\nis$grouped455.$var = anf_assign454;\nR.nothing;\n$al331 = L[17];\nvar anf_assign456 = G(StackType441.$var,\"grouped\",L[17]);\ngrouped457.$var = anf_assign456;\nR.nothing;\nvar $temp_lam461 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__19($v462) {\nvar $step460 = 0;\nvar $elidedFrames470 = 0;\nvar $ans467 = D;\nvar $al468 = L[19];\nif(R.isAR($v462)) {\n$step460 = $v462.step;\n$al468 = $v462.from;\n$ans467 = $v462.ans;\n$elidedFrames470 = $v462.elidedFrames;\nv462 = $v462.args[0];\nann_check_temp471 = $v462.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[19],1,$t,false);\n}\nvar v462 = $v462;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans467 = R.mC();\n}\nwhile(!R.isContinuation($ans467)) {\nswitch($step460) {\ncase 0: $step460 = 1;\n$al468 = L[23];\nR._cA(L[23],$type$Number3,v462);\nbreak;\ncase 1: $step460 = 2;\n$al468 = L[22];\n// omitting isFunction check;\n$ans467 = _lessthan3.app(v462,(0));\nbreak;\ncase 2: var anf_if473 = $ans467;\n$step460 = R.checkPyretTrue(anf_if473)?3:5;\nbreak;\ncase 3: $step460 = 4;\n$al468 = L[21];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al468,raise1);\n}\n$ans467 = raise1.app((\"degree: degree must be non-negative\"));\nbreak;\ncase 4: $step460 = 6;\n$ans467 = nothing5;\nbreak;\ncase 5: $step460 = 6;\n$ans467 = nothing5;\nbreak;\ncase 6: var ann_check_temp471 = (true);\n$step460 = 7;\n$al468 = L[20];\nvar $ann$check472 = R._cA(L[20],$type$Boolean6,ann_check_temp471);\nif(R.isContinuation($ann$check472)) {\n$ans467 = $ann$check472;\n}\nbreak;\ncase 7: $step460 = 8;\n$ans467 = ann_check_temp471;\nbreak;\ncase 8: ++R.GAS;\nreturn $ans467;\ndefault: R.ffi.throwSpinnakerError(L[19],$step460);\n}\n}\nif($step460 !== 8) {\n$ans467.stack[R.EXN_STACKHEIGHT++] = R.mAR($al468,$temp_lam461,$step460,[v462],[ann_check_temp471],$elidedFrames470);\n}\nreturn $ans467;\n};\nvar anf_assign477 = R.mF($temp_lam461,\"check-positive-degree\");\ncheck$positive$degree478.$var = anf_assign477;\nR.nothing;\nvar $no$trendline_getfields483 = function variant(f) {\nreturn f();\n};\nvar $no$trendline_mutablemask482 = [];\nvar $no$trendline$base479 = {\"_match\":R.mM(\"no-trendline\",0)};\nvar $no$trendline$brander480 = R.nB(\"no-trendline\",L[24]);\nvar $no$trendline$brands481 = {};\n$no$trendline$brands481[TrendlineType338._brand] = true;\n$no$trendline$brands481[$no$trendline$brander480._brand] = true;\nvar $linear_getfields488 = function variant(f) {\nreturn f();\n};\nvar $linear_mutablemask487 = [];\nvar $linear$base484 = {\"_match\":R.mM(\"linear\",0)};\nvar $linear$brander485 = R.nB(\"linear\",L[25]);\nvar $linear$brands486 = {};\n$linear$brands486[TrendlineType338._brand] = true;\n$linear$brands486[$linear$brander485._brand] = true;\nvar $exponential_getfields493 = function variant(f) {\nreturn f();\n};\nvar $exponential_mutablemask492 = [];\nvar $exponential$base489 = {\"_match\":R.mM(\"exponential\",0)};\nvar $exponential$brander490 = R.nB(\"exponential\",L[26]);\nvar $exponential$brands491 = {};\n$exponential$brands491[TrendlineType338._brand] = true;\n$exponential$brands491[$exponential$brander490._brand] = true;\nvar $polynomial_getfields498 = function singleton_variant(f) {\nreturn f(this.dict[\"degree\"]);\n};\nvar $polynomial_mutablemask497 = [false];\nvar $polynomial$base494 = {\"$fieldNames\":[\"degree\"],\n\"_match\":R.mM(\"polynomial\",1)};\nvar $polynomial$brander495 = R.nB(\"polynomial\",L[27]);\nvar $polynomial$brands496 = {};\n$polynomial$brands496[TrendlineType338._brand] = true;\n$polynomial$brands496[$polynomial$brander495._brand] = true;\nvar polynomial499 = R.mVC(L[27],function $synthesizedConstructor_$polynomial$base() {\nreturn [R.mPA($type$NumInteger1,check$positive$degree478.$var,\"check-positive-degree\")];\n},[\"degree500\"],[L[28]],[false],[\"degree500\"],$polynomial_mutablemask497,$polynomial$base494,$polynomial$brands496,\"polynomial\",$polynomial_getfields498,$polynomial$base494);\nvar anf_assign2634 = R.mO({\"TrendlineType\":G(TrendlineType338,\"test\",L[29]),\n\"is-no-trendline\":G($no$trendline$brander480,\"test\",L[24]),\n\"no-trendline\":R.mDV($no$trendline$base479,$no$trendline$brands481,\"no-trendline\",$no$trendline_getfields483,-1,$no$trendline_mutablemask482,$no$trendline$base479,false,L[24]),\n\"is-linear\":G($linear$brander485,\"test\",L[25]),\n\"linear\":R.mDV($linear$base484,$linear$brands486,\"linear\",$linear_getfields488,-1,$linear_mutablemask487,$linear$base484,false,L[25]),\n\"is-exponential\":G($exponential$brander490,\"test\",L[26]),\n\"exponential\":R.mDV($exponential$base489,$exponential$brands491,\"exponential\",$exponential_getfields493,-1,$exponential_mutablemask492,$exponential$base489,false,L[26]),\n\"is-polynomial\":G($polynomial$brander495,\"test\",L[27]),\n\"polynomial\":polynomial499});\nTrendlineType501.$var = anf_assign2634;\nR.nothing;\n$al331 = L[29];\nvar anf_assign502 = G(TrendlineType501.$var,\"TrendlineType\",L[29]);\nis$TrendlineType503.$var = anf_assign502;\nR.nothing;\n$al331 = L[24];\nvar anf_assign2647 = G(TrendlineType501.$var,\"is-no-trendline\",L[24]);\nis$no$trendline504.$var = anf_assign2647;\nR.nothing;\n$al331 = L[24];\nvar anf_assign505 = G(TrendlineType501.$var,\"no-trendline\",L[24]);\nno$trendline506.$var = anf_assign505;\nR.nothing;\n$al331 = L[25];\nvar anf_assign2660 = G(TrendlineType501.$var,\"is-linear\",L[25]);\nis$linear507.$var = anf_assign2660;\nR.nothing;\n$al331 = L[25];\nvar anf_assign508 = G(TrendlineType501.$var,\"linear\",L[25]);\nlinear509.$var = anf_assign508;\nR.nothing;\n$al331 = L[26];\nvar anf_assign511 = G(TrendlineType501.$var,\"is-exponential\",L[26]);\nis$exponential512.$var = anf_assign511;\nR.nothing;\n$al331 = L[26];\nvar anf_assign2673 = G(TrendlineType501.$var,\"exponential\",L[26]);\nexponential513.$var = anf_assign2673;\nR.nothing;\n$al331 = L[27];\nvar anf_assign514 = G(TrendlineType501.$var,\"is-polynomial\",L[27]);\nis$polynomial515.$var = anf_assign514;\nR.nothing;\n$al331 = L[27];\nvar anf_assign516 = G(TrendlineType501.$var,\"polynomial\",L[27]);\npolynomial517.$var = anf_assign516;\nR.nothing;\nvar $temp_lam519 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__30($v520) {\nvar $step518 = 0;\nvar $elidedFrames525 = 0;\nvar $ans522 = D;\nvar $al523 = L[30];\nif(R.isAR($v520)) {\n$step518 = $v520.step;\n$al523 = $v520.from;\n$ans522 = $v520.ans;\n$elidedFrames525 = $v520.elidedFrames;\nv520 = $v520.args[0];\nann_check_temp526 = $v520.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[30],1,$t,false);\n}\nvar v520 = $v520;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans522 = R.mC();\n}\nwhile(!R.isContinuation($ans522)) {\nswitch($step518) {\ncase 0: $step518 = 1;\n$al523 = L[34];\nR._cA(L[34],$type$Number3,v520);\nbreak;\ncase 1: $step518 = 2;\n$al523 = L[33];\n// omitting isFunction check;\n$ans522 = _lessthan3.app(v520,(0));\nbreak;\ncase 2: var anf_if528 = $ans522;\n$step518 = R.checkPyretTrue(anf_if528)?3:5;\nbreak;\ncase 3: $step518 = 4;\n$al523 = L[32];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al523,raise1);\n}\n$ans522 = raise1.app((\"regular-polygon-shape: number of sides must be non-negative\"));\nbreak;\ncase 4: $step518 = 6;\n$ans522 = nothing5;\nbreak;\ncase 5: $step518 = 6;\n$ans522 = nothing5;\nbreak;\ncase 6: var ann_check_temp526 = (true);\n$step518 = 7;\n$al523 = L[31];\nvar $ann$check527 = R._cA(L[31],$type$Boolean6,ann_check_temp526);\nif(R.isContinuation($ann$check527)) {\n$ans522 = $ann$check527;\n}\nbreak;\ncase 7: $step518 = 8;\n$ans522 = ann_check_temp526;\nbreak;\ncase 8: ++R.GAS;\nreturn $ans522;\ndefault: R.ffi.throwSpinnakerError(L[30],$step518);\n}\n}\nif($step518 !== 8) {\n$ans522.stack[R.EXN_STACKHEIGHT++] = R.mAR($al523,$temp_lam519,$step518,[v520],[ann_check_temp526],$elidedFrames525);\n}\nreturn $ans522;\n};\nvar anf_assign531 = R.mF($temp_lam519,\"check-positive-sides\");\ncheck$positive$sides532.$var = anf_assign531;\nR.nothing;\nvar $temp_lam534 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__35($v535) {\nvar $step533 = 0;\nvar $elidedFrames539 = 0;\nvar $ans536 = D;\nvar $al537 = L[35];\nif(R.isAR($v535)) {\n$step533 = $v535.step;\n$al537 = $v535.from;\n$ans536 = $v535.ans;\n$elidedFrames539 = $v535.elidedFrames;\nv535 = $v535.args[0];\nann_check_temp540 = $v535.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[35],1,$t,false);\n}\nvar v535 = $v535;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans536 = R.mC();\n}\nwhile(!R.isContinuation($ans536)) {\nswitch($step533) {\ncase 0: $step533 = 1;\n$al537 = L[40];\nR._cA(L[40],$type$Number3,v535);\nbreak;\ncase 1: $step533 = 2;\n$al537 = L[39];\n// omitting isFunction check;\n$ans536 = _lessthan3.app(v535,(0));\nbreak;\ncase 2: var anf_if542 = $ans536;\n$step533 = R.checkPyretTrue(anf_if542)?3:4;\nbreak;\ncase 3: $step533 = 6;\n$ans536 = (true);\nbreak;\ncase 4: $step533 = 5;\n$al537 = L[38];\n// omitting isFunction check;\n$ans536 = _greaterthan5.app(v535,(1));\nbreak;\ncase 5: var anf_arg576 = $ans536;\n$ans536 = R.checkWrapBoolean(anf_arg576);\n$step533 = 6;\nbreak;\ncase 6: var anf_if572 = $ans536;\n$step533 = R.checkPyretTrue(anf_if572)?7:9;\nbreak;\ncase 7: $step533 = 8;\n$al537 = L[37];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al537,raise1);\n}\n$ans536 = raise1.app((\"regular-polygon-shape: dent must be between 0 and 1\"));\nbreak;\ncase 8: $step533 = 10;\n$ans536 = nothing5;\nbreak;\ncase 9: $step533 = 10;\n$ans536 = nothing5;\nbreak;\ncase 10: var ann_check_temp540 = (true);\n$step533 = 11;\n$al537 = L[36];\nvar $ann$check541 = R._cA(L[36],$type$Boolean6,ann_check_temp540);\nif(R.isContinuation($ann$check541)) {\n$ans536 = $ann$check541;\n}\nbreak;\ncase 11: $step533 = 12;\n$ans536 = ann_check_temp540;\nbreak;\ncase 12: ++R.GAS;\nreturn $ans536;\ndefault: R.ffi.throwSpinnakerError(L[35],$step533);\n}\n}\nif($step533 !== 12) {\n$ans536.stack[R.EXN_STACKHEIGHT++] = R.mAR($al537,$temp_lam534,$step533,[v535],[ann_check_temp540],$elidedFrames539);\n}\nreturn $ans536;\n};\nvar anf_assign544 = R.mF($temp_lam534,\"check-valid-dent\");\ncheck$valid$dent545.$var = anf_assign544;\nR.nothing;\nvar $circle$shape_getfields550 = function variant(f) {\nreturn f();\n};\nvar $circle$shape_mutablemask549 = [];\nvar $circle$shape$base546 = {\"_match\":R.mM(\"circle-shape\",0)};\nvar $circle$shape$brander547 = R.nB(\"circle-shape\",L[41]);\nvar $circle$shape$brands548 = {};\n$circle$shape$brands548[PointShape339._brand] = true;\n$circle$shape$brands548[$circle$shape$brander547._brand] = true;\nvar $regular$polygon$shape_getfields555 = function singleton_variant(f) {\nreturn f(this.dict[\"sides\"],this.dict[\"dent\"]);\n};\nvar $regular$polygon$shape_mutablemask554 = [false,false];\nvar $regular$polygon$shape$base551 = {\"$fieldNames\":[\"sides\",\"dent\"],\n\"_match\":R.mM(\"regular-polygon-shape\",2)};\nvar $regular$polygon$shape$brander552 = R.nB(\"regular-polygon-shape\",L[42]);\nvar $regular$polygon$shape$brands553 = {};\n$regular$polygon$shape$brands553[PointShape339._brand] = true;\n$regular$polygon$shape$brands553[$regular$polygon$shape$brander552._brand] = true;\nvar regular$polygon$shape556 = R.mVC(L[42],function $synthesizedConstructor_$regular$polygon$shape$base() {\nreturn [R.mPA($type$NumInteger1,check$positive$sides532.$var,\"check-positive-sides\"),R.mPA($type$Number3,check$valid$dent545.$var,\"check-valid-dent\")];\n},[\"sides557\",\"dent558\"],[L[43],L[44]],[false,false],[\"sides557\",\"dent558\"],$regular$polygon$shape_mutablemask554,$regular$polygon$shape$base551,$regular$polygon$shape$brands553,\"regular-polygon-shape\",$regular$polygon$shape_getfields555,$regular$polygon$shape$base551);\nvar anf_assign560 = R.mO({\"PointShape\":G(PointShape339,\"test\",L[45]),\n\"is-circle-shape\":G($circle$shape$brander547,\"test\",L[41]),\n\"circle-shape\":R.mDV($circle$shape$base546,$circle$shape$brands548,\"circle-shape\",$circle$shape_getfields550,-1,$circle$shape_mutablemask549,$circle$shape$base546,false,L[41]),\n\"is-regular-polygon-shape\":G($regular$polygon$shape$brander552,\"test\",L[42]),\n\"regular-polygon-shape\":regular$polygon$shape556});\nPointShape561.$var = anf_assign560;\nR.nothing;\n$al331 = L[45];\nvar anf_assign563 = G(PointShape561.$var,\"PointShape\",L[45]);\nis$PointShape564.$var = anf_assign563;\nR.nothing;\n$al331 = L[41];\nvar anf_assign565 = G(PointShape561.$var,\"is-circle-shape\",L[41]);\nis$circle$shape566.$var = anf_assign565;\nR.nothing;\n$al331 = L[41];\nvar anf_assign567 = G(PointShape561.$var,\"circle-shape\",L[41]);\ncircle$shape568.$var = anf_assign567;\nR.nothing;\n$al331 = L[42];\nvar anf_assign569 = G(PointShape561.$var,\"is-regular-polygon-shape\",L[42]);\nis$regular$polygon$shape570.$var = anf_assign569;\nR.nothing;\n$al331 = L[42];\nvar anf_assign571 = G(PointShape561.$var,\"regular-polygon-shape\",L[42]);\nregular$polygon$shape572.$var = anf_assign571;\nR.nothing;\nvar $temp_lam574 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__46($v575) {\nvar $step573 = 0;\nvar $elidedFrames579 = 0;\nvar $ans576 = D;\nvar $al577 = L[46];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[46],1,$t,false);\n}\nvar v575 = $v575;\n// callee optimization;\nwhile(!R.isContinuation($ans576)) {\nswitch($step573) {\ncase 0: $step573 = 1;\n$al577 = L[48];\nR._cA(L[48],$type$Number3,v575);\nbreak;\ncase 1: var ann_check_temp580 = nothing5;\n$step573 = 2;\n$al577 = L[47];\nvar $ann$check581 = R._cA(L[47],$type$Nothing1,ann_check_temp580);\nif(R.isContinuation($ann$check581)) {\n$ans576 = $ann$check581;\n}\nbreak;\ncase 2: $step573 = 3;\n$ans576 = ann_check_temp580;\nbreak;\ncase 3: return $ans576;\ndefault: R.ffi.throwSpinnakerError(L[46],$step573);\n}\n}\nreturn $ans576;\n};\nvar anf_assign587 = R.mF($temp_lam574,\"check-num\");\ncheck$num588.$var = anf_assign587;\nR.nothing;\nvar $temp_lam591 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__49($v592) {\nvar $step590 = 0;\nvar $elidedFrames597 = 0;\nvar $ans594 = D;\nvar $al595 = L[49];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[49],1,$t,false);\n}\nvar v592 = $v592;\n// callee optimization;\nwhile(!R.isContinuation($ans594)) {\nswitch($step590) {\ncase 0: $step590 = 1;\n$al595 = L[51];\nR._cA(L[51],$type$String8,v592);\nbreak;\ncase 1: var ann_check_temp598 = nothing5;\n$step590 = 2;\n$al595 = L[50];\nvar $ann$check599 = R._cA(L[50],$type$Nothing1,ann_check_temp598);\nif(R.isContinuation($ann$check599)) {\n$ans594 = $ann$check599;\n}\nbreak;\ncase 2: $step590 = 3;\n$ans594 = ann_check_temp598;\nbreak;\ncase 3: return $ans594;\ndefault: R.ffi.throwSpinnakerError(L[49],$step590);\n}\n}\nreturn $ans594;\n};\nvar anf_assign603 = R.mF($temp_lam591,\"check-string\");\ncheck$string604.$var = anf_assign603;\nR.nothing;\nvar $temp_lam606 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__52($v607) {\nvar $step605 = 0;\nvar $elidedFrames613 = 0;\nvar $ans610 = D;\nvar $al611 = L[52];\nif(R.isAR($v607)) {\n$step605 = $v607.step;\n$al611 = $v607.from;\n$ans610 = $v607.ans;\n$elidedFrames613 = $v607.elidedFrames;\nv607 = $v607.args[0];\nann_check_temp614 = $v607.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[52],1,$t,false);\n}\nvar v607 = $v607;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans610 = R.mC();\n}\nwhile(!R.isContinuation($ans610)) {\nswitch($step605) {\ncase 0: $step605 = 1;\n$al611 = L[54];\nvar $ann$check616 = R._cA(L[54],R.gDA(L[54],\"IM\",IM45.dict.types,\"Image\"),v607);\nif(R.isContinuation($ann$check616)) {\n$ans610 = $ann$check616;\n}\nbreak;\ncase 1: var ann_check_temp614 = nothing5;\n$step605 = 2;\n$al611 = L[53];\nvar $ann$check615 = R._cA(L[53],$type$Nothing1,ann_check_temp614);\nif(R.isContinuation($ann$check615)) {\n$ans610 = $ann$check615;\n}\nbreak;\ncase 2: $step605 = 3;\n$ans610 = ann_check_temp614;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans610;\ndefault: R.ffi.throwSpinnakerError(L[52],$step605);\n}\n}\nif($step605 !== 3) {\n$ans610.stack[R.EXN_STACKHEIGHT++] = R.mAR($al611,$temp_lam606,$step605,[v607],[ann_check_temp614],$elidedFrames613);\n}\nreturn $ans610;\n};\nvar anf_assign618 = R.mF($temp_lam606,\"check-image\");\ncheck$image619.$var = anf_assign618;\nR.nothing;\nvar $temp_lam621 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__55($arg_623) {\nvar $step620 = 0;\nvar $elidedFrames627 = 0;\nvar $ans624 = D;\nvar $al625 = L[55];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[55],1,$t,false);\n}\nvar arg_623 = $arg_623;\n// callee optimization;\nwhile(!R.isContinuation($ans624)) {\nswitch($step620) {\ncase 0: // caller optimization;\n$ans624 = raw$array$get17.app(arg_623,(0));\n$step620 = 1;\nbreak;\ncase 1: return $ans624;\ndefault: R.ffi.throwSpinnakerError(L[55],$step620);\n}\n}\nreturn $ans624;\n};\nvar fst3606 = R.mF($temp_lam621,\"\");\nvar $temp_lam630 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__56($arg_631) {\nvar $step629 = 0;\nvar $elidedFrames635 = 0;\nvar $ans632 = D;\nvar $al633 = L[56];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[56],1,$t,false);\n}\nvar arg_631 = $arg_631;\n// callee optimization;\nwhile(!R.isContinuation($ans632)) {\nswitch($step629) {\ncase 0: // caller optimization;\n$ans632 = raw$array$get17.app(arg_631,(1));\n$step629 = 1;\nbreak;\ncase 1: return $ans632;\ndefault: R.ffi.throwSpinnakerError(L[56],$step629);\n}\n}\nreturn $ans632;\n};\nvar snd3607 = R.mF($temp_lam630,\"\");\nvar $temp_lam639 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__57($arg_640) {\nvar $step638 = 0;\nvar $elidedFrames644 = 0;\nvar $ans641 = D;\nvar $al642 = L[57];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[57],1,$t,false);\n}\nvar arg_640 = $arg_640;\n// callee optimization;\nwhile(!R.isContinuation($ans641)) {\nswitch($step638) {\ncase 0: // caller optimization;\n$ans641 = raw$array$get17.app(arg_640,(2));\n$step638 = 1;\nbreak;\ncase 1: return $ans641;\ndefault: R.ffi.throwSpinnakerError(L[57],$step638);\n}\n}\nreturn $ans641;\n};\nvar thd6836 = R.mF($temp_lam639,\"\");\nvar $temp_lam648 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__58($x649,$y650) {\nvar $step647 = 0;\nvar $elidedFrames655 = 0;\nvar $ans652 = D;\nvar $al653 = L[58];\nif(R.isAR($x649)) {\n$step647 = $x649.step;\n$al653 = $x649.from;\n$ans652 = $x649.ans;\n$elidedFrames655 = $x649.elidedFrames;\nx649 = $x649.args[0];\ny650 = $x649.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[58],2,$t,false);\n}\nvar x649 = $x649;\nvar y650 = $y650;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans652 = R.mC();\n}\nwhile(!R.isContinuation($ans652)) {\nswitch($step647) {\ncase 0: $step647 = 1;\n$al653 = L[61];\nR._cA(L[61],$type$Number3,x649);\nbreak;\ncase 1: $step647 = 2;\n$al653 = L[62];\nR._cA(L[62],$type$Number3,y650);\nbreak;\ncase 2: $ans652 = R.getMaker2(raw$array2,(\"make2\"),L[59],L[60]);\nvar anf_fun657 = $ans652;\n$step647 = 3;\n$al653 = L[60];\nif(typeof(anf_fun657.app) !== \"function\") {\nR.ffi.throwNonFunApp($al653,anf_fun657);\n}\n$ans652 = anf_fun657.app(x649,y650);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans652;\ndefault: R.ffi.throwSpinnakerError(L[58],$step647);\n}\n}\nif($step647 !== 3) {\n$ans652.stack[R.EXN_STACKHEIGHT++] = R.mAR($al653,$temp_lam648,$step647,[x649,y650],[],$elidedFrames655);\n}\nreturn $ans652;\n};\nvar posn6278 = R.mF($temp_lam648,\"\");\nvar $temp_lam660 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__63($arr661) {\nvar $step659 = 0;\nvar $elidedFrames665 = 0;\nvar $ans662 = D;\nvar $al663 = L[63];\nif(R.isAR($arr661)) {\n$step659 = $arr661.step;\n$al663 = $arr661.from;\n$ans662 = $arr661.ans;\n$elidedFrames665 = $arr661.elidedFrames;\narr661 = $arr661.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[63],1,$t,false);\n}\nvar arr661 = $arr661;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans662 = R.mC();\n}\nwhile(!R.isContinuation($ans662)) {\nswitch($step659) {\ncase 0: $step659 = 1;\n$al663 = L[68];\nR._cA(L[68],$type$RawArray1,arr661);\nbreak;\ncase 1: var $temp_lam667 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__64($str668,$elt669,$$underscore670) {\nvar $step666 = 0;\nvar $elidedFrames675 = 0;\nvar $ans672 = D;\nvar $al673 = L[64];\nif(R.isAR($str668)) {\n$step666 = $str668.step;\n$al673 = $str668.from;\n$ans672 = $str668.ans;\n$elidedFrames675 = $str668.elidedFrames;\nstr668 = $str668.args[0];\nelt669 = $str668.args[1];\n$underscore670 = $str668.args[2];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[64],3,$t,false);\n}\nvar str668 = $str668;\nvar elt669 = $elt669;\nvar $underscore670 = $$underscore670;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans672 = R.mC();\n}\nwhile(!R.isContinuation($ans672)) {\nswitch($step666) {\ncase 0: $step666 = 1;\n$al673 = L[66];\nif(typeof(tostring1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al673,tostring1);\n}\n$ans672 = tostring1.app(elt669);\nbreak;\ncase 1: var anf_arg534 = $ans672;\n$step666 = 2;\n$al673 = L[65];\n// omitting isFunction check;\n$ans672 = _plus5.app(str668,anf_arg534);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans672;\ndefault: R.ffi.throwSpinnakerError(L[64],$step666);\n}\n}\nif($step666 !== 2) {\n$ans672.stack[R.EXN_STACKHEIGHT++] = R.mAR($al673,$temp_lam667,$step666,[str668,elt669,$underscore670],[],$elidedFrames675);\n}\nreturn $ans672;\n};\nvar anf_arg527 = R.mF($temp_lam667,\"\");\n$step659 = 2;\n$al663 = L[67];\nif(typeof(raw$array$fold3.app) !== \"function\") {\nR.ffi.throwNonFunApp($al663,raw$array$fold3);\n}\n$ans662 = raw$array$fold3.app(anf_arg527,(\"\"),arr661,(0));\nbreak;\ncase 2: ++R.GAS;\nreturn $ans662;\ndefault: R.ffi.throwSpinnakerError(L[63],$step659);\n}\n}\nif($step659 !== 2) {\n$ans662.stack[R.EXN_STACKHEIGHT++] = R.mAR($al663,$temp_lam660,$step659,[arr661],[],$elidedFrames665);\n}\nreturn $ans662;\n};\nvar generic$sprintf693 = R.mF($temp_lam660,\"\");\nvar $temp_lam679 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__69($a680,$b681,$c682,$d683,$e684) {\nvar $step678 = 0;\nvar $elidedFrames691 = 0;\nvar $ans688 = D;\nvar $al689 = L[69];\nif(R.isAR($a680)) {\n$step678 = $a680.step;\n$al689 = $a680.from;\n$ans688 = $a680.ans;\n$elidedFrames691 = $a680.elidedFrames;\na680 = $a680.args[0];\nb681 = $a680.args[1];\nc682 = $a680.args[2];\nd683 = $a680.args[3];\ne684 = $a680.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[69],5,$t,false);\n}\nvar a680 = $a680;\nvar b681 = $b681;\nvar c682 = $c682;\nvar d683 = $d683;\nvar e684 = $e684;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans688 = R.mC();\n}\nwhile(!R.isContinuation($ans688)) {\nswitch($step678) {\ncase 0: $ans688 = R.getMaker5(raw$array2,(\"make5\"),L[70],L[71]);\nvar anf_fun692 = $ans688;\n$step678 = 1;\n$al689 = L[71];\nif(typeof(anf_fun692.app) !== \"function\") {\nR.ffi.throwNonFunApp($al689,anf_fun692);\n}\n$ans688 = anf_fun692.app(a680,b681,c682,d683,e684);\nbreak;\ncase 1: var anf_arg529 = $ans688;\n$step678 = 2;\n$al689 = L[72];\n// omitting isFunction check;\n$ans688 = generic$sprintf693.app(anf_arg529);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans688;\ndefault: R.ffi.throwSpinnakerError(L[69],$step678);\n}\n}\nif($step678 !== 2) {\n$ans688.stack[R.EXN_STACKHEIGHT++] = R.mAR($al689,$temp_lam679,$step678,[a680,b681,c682,d683,e684],[],$elidedFrames691);\n}\nreturn $ans688;\n};\nvar anf_obj739 = R.mF($temp_lam679,\"\");\nvar $temp_lam698 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__73($a699,$b700,$c701,$d892) {\nvar $step697 = 0;\nvar $elidedFrames706 = 0;\nvar $ans703 = D;\nvar $al704 = L[73];\nif(R.isAR($a699)) {\n$step697 = $a699.step;\n$al704 = $a699.from;\n$ans703 = $a699.ans;\n$elidedFrames706 = $a699.elidedFrames;\na699 = $a699.args[0];\nb700 = $a699.args[1];\nc701 = $a699.args[2];\nd892 = $a699.args[3];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[73],4,$t,false);\n}\nvar a699 = $a699;\nvar b700 = $b700;\nvar c701 = $c701;\nvar d892 = $d892;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans703 = R.mC();\n}\nwhile(!R.isContinuation($ans703)) {\nswitch($step697) {\ncase 0: $ans703 = R.getMaker4(raw$array2,(\"make4\"),L[74],L[75]);\nvar anf_fun707 = $ans703;\n$step697 = 1;\n$al704 = L[75];\nif(typeof(anf_fun707.app) !== \"function\") {\nR.ffi.throwNonFunApp($al704,anf_fun707);\n}\n$ans703 = anf_fun707.app(a699,b700,c701,d892);\nbreak;\ncase 1: var anf_arg542 = $ans703;\n$step697 = 2;\n$al704 = L[76];\n// omitting isFunction check;\n$ans703 = generic$sprintf693.app(anf_arg542);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans703;\ndefault: R.ffi.throwSpinnakerError(L[73],$step697);\n}\n}\nif($step697 !== 2) {\n$ans703.stack[R.EXN_STACKHEIGHT++] = R.mAR($al704,$temp_lam698,$step697,[a699,b700,c701,d892],[],$elidedFrames706);\n}\nreturn $ans703;\n};\nvar anf_obj740 = R.mF($temp_lam698,\"\");\nvar $temp_lam712 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__77($a713,$b714,$c715) {\nvar $step711 = 0;\nvar $elidedFrames719 = 0;\nvar $ans716 = D;\nvar $al717 = L[77];\nif(R.isAR($a713)) {\n$step711 = $a713.step;\n$al717 = $a713.from;\n$ans716 = $a713.ans;\n$elidedFrames719 = $a713.elidedFrames;\na713 = $a713.args[0];\nb714 = $a713.args[1];\nc715 = $a713.args[2];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[77],3,$t,false);\n}\nvar a713 = $a713;\nvar b714 = $b714;\nvar c715 = $c715;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans716 = R.mC();\n}\nwhile(!R.isContinuation($ans716)) {\nswitch($step711) {\ncase 0: $ans716 = R.getMaker3(raw$array2,(\"make3\"),L[78],L[79]);\nvar anf_fun720 = $ans716;\n$step711 = 1;\n$al717 = L[79];\nif(typeof(anf_fun720.app) !== \"function\") {\nR.ffi.throwNonFunApp($al717,anf_fun720);\n}\n$ans716 = anf_fun720.app(a713,b714,c715);\nbreak;\ncase 1: var anf_arg545 = $ans716;\n$step711 = 2;\n$al717 = L[80];\n// omitting isFunction check;\n$ans716 = generic$sprintf693.app(anf_arg545);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans716;\ndefault: R.ffi.throwSpinnakerError(L[77],$step711);\n}\n}\nif($step711 !== 2) {\n$ans716.stack[R.EXN_STACKHEIGHT++] = R.mAR($al717,$temp_lam712,$step711,[a713,b714,c715],[],$elidedFrames719);\n}\nreturn $ans716;\n};\nvar anf_obj741 = R.mF($temp_lam712,\"\");\nvar $temp_lam723 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__81($a724,$b725) {\nvar $step722 = 0;\nvar $elidedFrames729 = 0;\nvar $ans726 = D;\nvar $al727 = L[81];\nif(R.isAR($a724)) {\n$step722 = $a724.step;\n$al727 = $a724.from;\n$ans726 = $a724.ans;\n$elidedFrames729 = $a724.elidedFrames;\na724 = $a724.args[0];\nb725 = $a724.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[81],2,$t,false);\n}\nvar a724 = $a724;\nvar b725 = $b725;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans726 = R.mC();\n}\nwhile(!R.isContinuation($ans726)) {\nswitch($step722) {\ncase 0: $ans726 = R.getMaker2(raw$array2,(\"make2\"),L[82],L[83]);\nvar anf_fun730 = $ans726;\n$step722 = 1;\n$al727 = L[83];\nif(typeof(anf_fun730.app) !== \"function\") {\nR.ffi.throwNonFunApp($al727,anf_fun730);\n}\n$ans726 = anf_fun730.app(a724,b725);\nbreak;\ncase 1: var anf_arg546 = $ans726;\n$step722 = 2;\n$al727 = L[84];\n// omitting isFunction check;\n$ans726 = generic$sprintf693.app(anf_arg546);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans726;\ndefault: R.ffi.throwSpinnakerError(L[81],$step722);\n}\n}\nif($step722 !== 2) {\n$ans726.stack[R.EXN_STACKHEIGHT++] = R.mAR($al727,$temp_lam723,$step722,[a724,b725],[],$elidedFrames729);\n}\nreturn $ans726;\n};\nvar anf_obj742 = R.mF($temp_lam723,\"\");\nvar $temp_lam733 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__85($$resumer11) {\nvar $step732 = 0;\nvar $elidedFrames737 = 0;\nvar $ans734 = D;\nvar $al735 = L[85];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[85],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans734)) {\nswitch($step732) {\ncase 0: $step732 = 1;\n$ans734 = (\"\");\nbreak;\ncase 1: return $ans734;\ndefault: R.ffi.throwSpinnakerError(L[85],$step732);\n}\n}\nreturn $ans734;\n};\nvar anf_obj743 = R.mF($temp_lam733,\"\");\nvar sprintf5582 = R.mO({\"make5\":anf_obj739,\n\"make4\":anf_obj740,\n\"make3\":anf_obj741,\n\"make2\":anf_obj742,\n\"make1\":tostring1,\n\"make0\":anf_obj743,\n\"make\":generic$sprintf693});\nvar $temp_lam745 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__86($x746,$y747) {\nvar $step744 = 0;\nvar $elidedFrames751 = 0;\nvar $ans748 = D;\nvar $al749 = L[86];\nif(R.isAR($x746)) {\n$step744 = $x746.step;\n$al749 = $x746.from;\n$ans748 = $x746.ans;\n$elidedFrames751 = $x746.elidedFrames;\nx746 = $x746.args[0];\ny747 = $x746.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[86],2,$t,false);\n}\nvar x746 = $x746;\nvar y747 = $y747;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans748 = R.mC();\n}\nwhile(!R.isContinuation($ans748)) {\nswitch($step744) {\ncase 0: $step744 = 1;\n$al749 = L[89];\nR._cA(L[89],$type$Number3,x746);\nbreak;\ncase 1: $step744 = 2;\n$al749 = L[90];\nR._cA(L[90],$type$Number3,y747);\nbreak;\ncase 2: $step744 = 3;\n$al749 = L[88];\n// omitting isFunction check;\n$ans748 = _lessequal4.app(x746,y747);\nbreak;\ncase 3: var anf_if752 = $ans748;\n$step744 = R.checkPyretTrue(anf_if752)?4:6;\nbreak;\ncase 4: $step744 = 5;\n$al749 = L[87];\n// omitting isFunction check;\n$ans748 = _lessequal4.app(y747,x746);\nbreak;\ncase 5: var anf_arg557 = $ans748;\n$ans748 = R.checkWrapBoolean(anf_arg557);\n$step744 = 7;\nbreak;\ncase 6: $step744 = 7;\n$ans748 = (false);\nbreak;\ncase 7: ++R.GAS;\nreturn $ans748;\ndefault: R.ffi.throwSpinnakerError(L[86],$step744);\n}\n}\nif($step744 !== 7) {\n$ans748.stack[R.EXN_STACKHEIGHT++] = R.mAR($al749,$temp_lam745,$step744,[x746,y747],[],$elidedFrames751);\n}\nreturn $ans748;\n};\nvar unsafe$equal6098 = R.mF($temp_lam745,\"\");\nvar to$table2768 = {\"$var\":D};\nvar to$table2$n794 = {\"$var\":D};\nvar to$table3808 = {\"$var\":D};\nvar to$table3$n1389 = {\"$var\":D};\nvar to$table41424 = {\"$var\":D};\nvar list$to$table21438 = {\"$var\":D};\nvar table2$to$list1450 = {\"$var\":D};\nvar get$vs$from$img1466 = {\"$var\":D};\nvar table$sorter1526 = {\"$var\":D};\nvar num$to$scientific1553 = {\"$var\":D};\nvar string$to$stacktype1576 = {\"$var\":D};\nvar prep$axis1595 = {\"$var\":D};\nvar multi$prep$axis1764 = {\"$var\":D};\nvar $temp_lam756 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__91($xs757,$ys758) {\nvar $step755 = 0;\nvar $elidedFrames762 = 0;\nvar $ans759 = D;\nvar $al760 = L[91];\nif(R.isAR($xs757)) {\n$step755 = $xs757.step;\n$al760 = $xs757.from;\n$ans759 = $xs757.ans;\n$elidedFrames762 = $xs757.elidedFrames;\nxs757 = $xs757.args[0];\nys758 = $xs757.args[1];\nann_check_temp763 = $xs757.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[91],2,$t,false);\n}\nvar xs757 = $xs757;\nvar ys758 = $ys758;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans759 = R.mC();\n}\nwhile(!R.isContinuation($ans759)) {\nswitch($step755) {\ncase 0: $step755 = 1;\n$al760 = L[96];\nR._cA(L[96],List16,xs757);\nbreak;\ncase 1: $step755 = 2;\n$al760 = L[97];\nR._cA(L[97],List16,ys758);\nbreak;\ncase 2: $al760 = L[92];\nvar anf_arg558 = G(raw$array2,\"make2\",L[92]);\n$step755 = 3;\n$al760 = L[95];\n// omitting isFunction check;\n$ans759 = map226.app(anf_arg558,xs757,ys758);\nbreak;\ncase 3: var anf_arg569 = $ans759;\n$step755 = 4;\n$ans759 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[93],anf_arg569);\nbreak;\ncase 4: var ann_check_temp763 = $ans759;\n$step755 = 5;\n$al760 = L[94];\nvar $ann$check765 = R._cA(L[94],TableIntern764,ann_check_temp763);\nif(R.isContinuation($ann$check765)) {\n$ans759 = $ann$check765;\n}\nbreak;\ncase 5: $step755 = 6;\n$ans759 = ann_check_temp763;\nbreak;\ncase 6: ++R.GAS;\nreturn $ans759;\ndefault: R.ffi.throwSpinnakerError(L[91],$step755);\n}\n}\nif($step755 !== 6) {\n$ans759.stack[R.EXN_STACKHEIGHT++] = R.mAR($al760,$temp_lam756,$step755,[xs757,ys758],[ann_check_temp763],$elidedFrames762);\n}\nreturn $ans759;\n};\nvar anf_assign3416 = R.mF($temp_lam756,\"to-table2\");\nto$table2768.$var = anf_assign3416;\nR.nothing;\nvar $temp_lam770 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__98($xs771,$ys772) {\nvar $step769 = 0;\nvar $elidedFrames776 = 0;\nvar $ans773 = D;\nvar $al774 = L[98];\nif(R.isAR($xs771)) {\n$step769 = $xs771.step;\n$al774 = $xs771.from;\n$ans773 = $xs771.ans;\n$elidedFrames776 = $xs771.elidedFrames;\nxs771 = $xs771.args[0];\nys772 = $xs771.args[1];\nann_check_temp789 = $xs771.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[98],2,$t,false);\n}\nvar xs771 = $xs771;\nvar ys772 = $ys772;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans773 = R.mC();\n}\nwhile(!R.isContinuation($ans773)) {\nswitch($step769) {\ncase 0: $step769 = 1;\n$al774 = L[104];\nR._cA(L[104],List16,xs771);\nbreak;\ncase 1: $step769 = 2;\n$al774 = L[105];\nR._cA(L[105],List16,ys772);\nbreak;\ncase 2: var $temp_lam778 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__99($n779,$x780,$y781) {\nvar $step777 = 0;\nvar $elidedFrames785 = 0;\nvar $ans782 = D;\nvar $al783 = L[99];\nif(R.isAR($n779)) {\n$step777 = $n779.step;\n$al783 = $n779.from;\n$ans782 = $n779.ans;\n$elidedFrames785 = $n779.elidedFrames;\nn779 = $n779.args[0];\nx780 = $n779.args[1];\ny781 = $n779.args[2];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[99],3,$t,false);\n}\nvar n779 = $n779;\nvar x780 = $x780;\nvar y781 = $y781;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans782 = R.mC();\n}\nwhile(!R.isContinuation($ans782)) {\nswitch($step777) {\ncase 0: $step777 = 1;\n$ans782 = R.maybeMethodCall3(raw$array2,\"make3\",L[100],x780,y781,n779);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans782;\ndefault: R.ffi.throwSpinnakerError(L[99],$step777);\n}\n}\nif($step777 !== 1) {\n$ans782.stack[R.EXN_STACKHEIGHT++] = R.mAR($al783,$temp_lam778,$step777,[n779,x780,y781],[],$elidedFrames785);\n}\nreturn $ans782;\n};\nvar anf_arg559 = R.mF($temp_lam778,\"\");\n$step769 = 3;\n$al774 = L[103];\n// omitting isFunction check;\n$ans773 = map2_n23.app(anf_arg559,(0),xs771,ys772);\nbreak;\ncase 3: var anf_arg560 = $ans773;\n$step769 = 4;\n$ans773 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[101],anf_arg560);\nbreak;\ncase 4: var ann_check_temp789 = $ans773;\n$step769 = 5;\n$al774 = L[102];\nvar $ann$check790 = R._cA(L[102],TableIntern764,ann_check_temp789);\nif(R.isContinuation($ann$check790)) {\n$ans773 = $ann$check790;\n}\nbreak;\ncase 5: $step769 = 6;\n$ans773 = ann_check_temp789;\nbreak;\ncase 6: ++R.GAS;\nreturn $ans773;\ndefault: R.ffi.throwSpinnakerError(L[98],$step769);\n}\n}\nif($step769 !== 6) {\n$ans773.stack[R.EXN_STACKHEIGHT++] = R.mAR($al774,$temp_lam770,$step769,[xs771,ys772],[ann_check_temp789],$elidedFrames776);\n}\nreturn $ans773;\n};\nvar anf_assign793 = R.mF($temp_lam770,\"to-table2-n\");\nto$table2$n794.$var = anf_assign793;\nR.nothing;\nvar $temp_lam796 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__106($xs797,$ys798,$zs799) {\nvar $step795 = 0;\nvar $elidedFrames803 = 0;\nvar $ans800 = D;\nvar $al801 = L[106];\nif(R.isAR($xs797)) {\n$step795 = $xs797.step;\n$al801 = $xs797.from;\n$ans800 = $xs797.ans;\n$elidedFrames803 = $xs797.elidedFrames;\nxs797 = $xs797.args[0];\nys798 = $xs797.args[1];\nzs799 = $xs797.args[2];\nann_check_temp804 = $xs797.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[106],3,$t,false);\n}\nvar xs797 = $xs797;\nvar ys798 = $ys798;\nvar zs799 = $zs799;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans800 = R.mC();\n}\nwhile(!R.isContinuation($ans800)) {\nswitch($step795) {\ncase 0: $step795 = 1;\n$al801 = L[111];\nR._cA(L[111],List16,xs797);\nbreak;\ncase 1: $step795 = 2;\n$al801 = L[112];\nR._cA(L[112],List16,ys798);\nbreak;\ncase 2: $step795 = 3;\n$al801 = L[113];\nR._cA(L[113],List16,zs799);\nbreak;\ncase 3: $al801 = L[107];\nvar anf_arg570 = G(raw$array2,\"make3\",L[107]);\n$step795 = 4;\n$al801 = L[110];\n// omitting isFunction check;\n$ans800 = map329.app(anf_arg570,xs797,ys798,zs799);\nbreak;\ncase 4: var anf_arg567 = $ans800;\n$step795 = 5;\n$ans800 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[108],anf_arg567);\nbreak;\ncase 5: var ann_check_temp804 = $ans800;\n$step795 = 6;\n$al801 = L[109];\nvar $ann$check805 = R._cA(L[109],TableIntern764,ann_check_temp804);\nif(R.isContinuation($ann$check805)) {\n$ans800 = $ann$check805;\n}\nbreak;\ncase 6: $step795 = 7;\n$ans800 = ann_check_temp804;\nbreak;\ncase 7: ++R.GAS;\nreturn $ans800;\ndefault: R.ffi.throwSpinnakerError(L[106],$step795);\n}\n}\nif($step795 !== 7) {\n$ans800.stack[R.EXN_STACKHEIGHT++] = R.mAR($al801,$temp_lam796,$step795,[xs797,ys798,zs799],[ann_check_temp804],$elidedFrames803);\n}\nreturn $ans800;\n};\nvar anf_assign807 = R.mF($temp_lam796,\"to-table3\");\nto$table3808.$var = anf_assign807;\nR.nothing;\nvar $temp_lam810 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__114($xs811,$ys812,$zs813) {\nvar $step809 = 0;\nvar $elidedFrames817 = 0;\nvar $ans814 = D;\nvar $al815 = L[114];\nif(R.isAR($xs811)) {\n$step809 = $xs811.step;\n$al815 = $xs811.from;\n$ans814 = $xs811.ans;\n$elidedFrames817 = $xs811.elidedFrames;\nxs811 = $xs811.args[0];\nys812 = $xs811.args[1];\nzs813 = $xs811.args[2];\nann_check_temp1384 = $xs811.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[114],3,$t,false);\n}\nvar xs811 = $xs811;\nvar ys812 = $ys812;\nvar zs813 = $zs813;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans814 = R.mC();\n}\nwhile(!R.isContinuation($ans814)) {\nswitch($step809) {\ncase 0: $step809 = 1;\n$al815 = L[120];\nR._cA(L[120],List16,xs811);\nbreak;\ncase 1: $step809 = 2;\n$al815 = L[121];\nR._cA(L[121],List16,ys812);\nbreak;\ncase 2: $step809 = 3;\n$al815 = L[122];\nR._cA(L[122],List16,zs813);\nbreak;\ncase 3: var $temp_lam820 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__115($n1317,$x2114,$y2115,$z821) {\nvar $step819 = 0;\nvar $elidedFrames827 = 0;\nvar $ans824 = D;\nvar $al825 = L[115];\nif(R.isAR($n1317)) {\n$step819 = $n1317.step;\n$al825 = $n1317.from;\n$ans824 = $n1317.ans;\n$elidedFrames827 = $n1317.elidedFrames;\nn1317 = $n1317.args[0];\nx2114 = $n1317.args[1];\ny2115 = $n1317.args[2];\nz821 = $n1317.args[3];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[115],4,$t,false);\n}\nvar n1317 = $n1317;\nvar x2114 = $x2114;\nvar y2115 = $y2115;\nvar z821 = $z821;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans824 = R.mC();\n}\nwhile(!R.isContinuation($ans824)) {\nswitch($step819) {\ncase 0: $step819 = 1;\n$ans824 = R.maybeMethodCall4(raw$array2,\"make4\",L[116],x2114,y2115,z821,n1317);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans824;\ndefault: R.ffi.throwSpinnakerError(L[115],$step819);\n}\n}\nif($step819 !== 1) {\n$ans824.stack[R.EXN_STACKHEIGHT++] = R.mAR($al825,$temp_lam820,$step819,[n1317,x2114,y2115,z821],[],$elidedFrames827);\n}\nreturn $ans824;\n};\nvar anf_arg1383 = R.mF($temp_lam820,\"\");\n$step809 = 4;\n$al815 = L[119];\n// omitting isFunction check;\n$ans814 = map3_n1806.app(anf_arg1383,(0),xs811,ys812,zs813);\nbreak;\ncase 4: var anf_arg587 = $ans814;\n$step809 = 5;\n$ans814 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[117],anf_arg587);\nbreak;\ncase 5: var ann_check_temp1384 = $ans814;\n$step809 = 6;\n$al815 = L[118];\nvar $ann$check1386 = R._cA(L[118],TableIntern764,ann_check_temp1384);\nif(R.isContinuation($ann$check1386)) {\n$ans814 = $ann$check1386;\n}\nbreak;\ncase 6: $step809 = 7;\n$ans814 = ann_check_temp1384;\nbreak;\ncase 7: ++R.GAS;\nreturn $ans814;\ndefault: R.ffi.throwSpinnakerError(L[114],$step809);\n}\n}\nif($step809 !== 7) {\n$ans814.stack[R.EXN_STACKHEIGHT++] = R.mAR($al815,$temp_lam810,$step809,[xs811,ys812,zs813],[ann_check_temp1384],$elidedFrames817);\n}\nreturn $ans814;\n};\nvar anf_assign1388 = R.mF($temp_lam810,\"to-table3-n\");\nto$table3$n1389.$var = anf_assign1388;\nR.nothing;\nvar $temp_lam1395 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__123($xs1396,$ys1397,$zs1398,$ks1399) {\nvar $step1394 = 0;\nvar $elidedFrames1404 = 0;\nvar $ans1401 = D;\nvar $al1402 = L[123];\nif(R.isAR($xs1396)) {\n$step1394 = $xs1396.step;\n$al1402 = $xs1396.from;\n$ans1401 = $xs1396.ans;\n$elidedFrames1404 = $xs1396.elidedFrames;\nxs1396 = $xs1396.args[0];\nys1397 = $xs1396.args[1];\nzs1398 = $xs1396.args[2];\nks1399 = $xs1396.args[3];\nann_check_temp1405 = $xs1396.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[123],4,$t,false);\n}\nvar xs1396 = $xs1396;\nvar ys1397 = $ys1397;\nvar zs1398 = $zs1398;\nvar ks1399 = $ks1399;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1401 = R.mC();\n}\nwhile(!R.isContinuation($ans1401)) {\nswitch($step1394) {\ncase 0: $step1394 = 1;\n$al1402 = L[128];\nR._cA(L[128],List16,xs1396);\nbreak;\ncase 1: $step1394 = 2;\n$al1402 = L[129];\nR._cA(L[129],List16,ys1397);\nbreak;\ncase 2: $step1394 = 3;\n$al1402 = L[130];\nR._cA(L[130],List16,zs1398);\nbreak;\ncase 3: $step1394 = 4;\n$al1402 = L[131];\nR._cA(L[131],List16,ks1399);\nbreak;\ncase 4: $al1402 = L[124];\nvar anf_arg591 = G(raw$array2,\"make4\",L[124]);\n$step1394 = 5;\n$al1402 = L[127];\n// omitting isFunction check;\n$ans1401 = map430.app(anf_arg591,xs1396,ys1397,zs1398,ks1399);\nbreak;\ncase 5: var anf_arg588 = $ans1401;\n$step1394 = 6;\n$ans1401 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[125],anf_arg588);\nbreak;\ncase 6: var ann_check_temp1405 = $ans1401;\n$step1394 = 7;\n$al1402 = L[126];\nvar $ann$check1406 = R._cA(L[126],TableIntern764,ann_check_temp1405);\nif(R.isContinuation($ann$check1406)) {\n$ans1401 = $ann$check1406;\n}\nbreak;\ncase 7: $step1394 = 8;\n$ans1401 = ann_check_temp1405;\nbreak;\ncase 8: ++R.GAS;\nreturn $ans1401;\ndefault: R.ffi.throwSpinnakerError(L[123],$step1394);\n}\n}\nif($step1394 !== 8) {\n$ans1401.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1402,$temp_lam1395,$step1394,[xs1396,ys1397,zs1398,ks1399],[ann_check_temp1405],$elidedFrames1404);\n}\nreturn $ans1401;\n};\nvar anf_assign1423 = R.mF($temp_lam1395,\"to-table4\");\nto$table41424.$var = anf_assign1423;\nR.nothing;\nvar $temp_lam1428 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__132($table1429) {\nvar $step1427 = 0;\nvar $elidedFrames1433 = 0;\nvar $ans1430 = D;\nvar $al1431 = L[132];\nif(R.isAR($table1429)) {\n$step1427 = $table1429.step;\n$al1431 = $table1429.from;\n$ans1430 = $table1429.ans;\n$elidedFrames1433 = $table1429.elidedFrames;\ntable1429 = $table1429.args[0];\nann_check_temp1434 = $table1429.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[132],1,$t,false);\n}\nvar table1429 = $table1429;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1430 = R.mC();\n}\nwhile(!R.isContinuation($ans1430)) {\nswitch($step1427) {\ncase 0: $step1427 = 1;\n$al1431 = L[137];\nR._cA(L[137],List16,table1429);\nbreak;\ncase 1: $al1431 = L[133];\nvar anf_arg593 = G(builtins10,\"raw-array-from-list\",L[133]);\n$step1427 = 2;\n$ans1430 = R.maybeMethodCall1(table1429,\"map\",L[134],anf_arg593);\nbreak;\ncase 2: var anf_arg597 = $ans1430;\n$step1427 = 3;\n$ans1430 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[135],anf_arg597);\nbreak;\ncase 3: var ann_check_temp1434 = $ans1430;\n$step1427 = 4;\n$al1431 = L[136];\nvar $ann$check1435 = R._cA(L[136],$type$RawArray1,ann_check_temp1434);\nif(R.isContinuation($ann$check1435)) {\n$ans1430 = $ann$check1435;\n}\nbreak;\ncase 4: $step1427 = 5;\n$ans1430 = ann_check_temp1434;\nbreak;\ncase 5: ++R.GAS;\nreturn $ans1430;\ndefault: R.ffi.throwSpinnakerError(L[132],$step1427);\n}\n}\nif($step1427 !== 5) {\n$ans1430.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1431,$temp_lam1428,$step1427,[table1429],[ann_check_temp1434],$elidedFrames1433);\n}\nreturn $ans1430;\n};\nvar anf_assign1437 = R.mF($temp_lam1428,\"list-to-table2\");\nlist$to$table21438.$var = anf_assign1437;\nR.nothing;\nvar $temp_lam1440 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__138($table1441) {\nvar $step1439 = 0;\nvar $elidedFrames1445 = 0;\nvar $ans1442 = D;\nvar $al1443 = L[138];\nif(R.isAR($table1441)) {\n$step1439 = $table1441.step;\n$al1443 = $table1441.from;\n$ans1442 = $table1441.ans;\n$elidedFrames1445 = $table1441.elidedFrames;\ntable1441 = $table1441.args[0];\nann_check_temp1447 = $table1441.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[138],1,$t,false);\n}\nvar table1441 = $table1441;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1442 = R.mC();\n}\nwhile(!R.isContinuation($ans1442)) {\nswitch($step1439) {\ncase 0: $step1439 = 1;\n$al1443 = L[141];\nR._cA(L[141],$type$RawArray1,table1441);\nbreak;\ncase 1: // caller optimization;\n$ans1442 = raw$array$to$list4.app(table1441);\nvar anf_method_obj1446 = $ans1442;\n$step1439 = 2;\n$ans1442 = R.maybeMethodCall1(anf_method_obj1446,\"map\",L[139],raw$array$to$list4);\nbreak;\ncase 2: var ann_check_temp1447 = $ans1442;\n$step1439 = 3;\n$al1443 = L[140];\nvar $ann$check1448 = R._cA(L[140],List16,ann_check_temp1447);\nif(R.isContinuation($ann$check1448)) {\n$ans1442 = $ann$check1448;\n}\nbreak;\ncase 3: $step1439 = 4;\n$ans1442 = ann_check_temp1447;\nbreak;\ncase 4: ++R.GAS;\nreturn $ans1442;\ndefault: R.ffi.throwSpinnakerError(L[138],$step1439);\n}\n}\nif($step1439 !== 4) {\n$ans1442.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1443,$temp_lam1440,$step1439,[table1441],[ann_check_temp1447],$elidedFrames1445);\n}\nreturn $ans1442;\n};\nvar anf_assign3524 = R.mF($temp_lam1440,\"table2-to-list\");\ntable2$to$list1450.$var = anf_assign3524;\nR.nothing;\nvar $temp_lam1452 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__142($s1453,$raw$img1454) {\nvar $step1451 = 0;\nvar $elidedFrames1458 = 0;\nvar $ans1455 = D;\nvar $al1456 = L[142];\nif(R.isAR($s1453)) {\n$step1451 = $s1453.step;\n$al1456 = $s1453.from;\n$ans1455 = $s1453.ans;\n$elidedFrames1458 = $s1453.elidedFrames;\ns1453 = $s1453.args[0];\nraw$img1454 = $s1453.args[1];\nann_check_temp1461 = $s1453.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[142],2,$t,false);\n}\nvar s1453 = $s1453;\nvar raw$img1454 = $raw$img1454;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1455 = R.mC();\n}\nwhile(!R.isContinuation($ans1455)) {\nswitch($step1451) {\ncase 0: $step1451 = 1;\n$al1456 = L[148];\nR._cA(L[148],$type$String8,s1453);\nbreak;\ncase 1: $step1451 = 2;\n$al1456 = L[149];\nvar $ann$check1463 = R._cA(L[149],R.gDA(L[149],\"IM\",IM45.dict.types,\"Image\"),raw$img1454);\nif(R.isContinuation($ann$check1463)) {\n$ans1455 = $ann$check1463;\n}\nbreak;\ncase 2: $step1451 = 3;\n$al1456 = L[147];\nif(typeof(I44.dict.values.dict[\"color\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al1456,I44.dict.values.dict[\"color\"]);\n}\n$ans1455 = I44.dict.values.dict[\"color\"].app((190),(190),(190),R.makeNumberFromString(\"3/4\"));\nbreak;\ncase 3: var arg_1459 = $ans1455;\n$step1451 = 4;\n$al1456 = L[146];\nif(typeof(IM45.dict.values.dict[\"text-font\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al1456,IM45.dict.values.dict[\"text-font\"]);\n}\n$ans1455 = IM45.dict.values.dict[\"text-font\"].app(s1453,(72),arg_1459,(\"\"),(\"modern\"),(\"normal\"),(\"bold\"),(false));\nbreak;\ncase 4: var arg_1460 = $ans1455;\n$step1451 = 5;\n$al1456 = L[145];\nif(typeof(IM45.dict.values.dict[\"overlay-align\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al1456,IM45.dict.values.dict[\"overlay-align\"]);\n}\n$ans1455 = IM45.dict.values.dict[\"overlay-align\"].app((\"center\"),(\"bottom\"),arg_1460,raw$img1454);\nbreak;\ncase 5: var anf_arg1884 = $ans1455;\n$step1451 = 6;\n$al1456 = L[144];\nif(typeof(VS52.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al1456,VS52.dict.values.dict[\"vs-value\"]);\n}\n$ans1455 = VS52.dict.values.dict[\"vs-value\"].app(anf_arg1884);\nbreak;\ncase 6: var ann_check_temp1461 = $ans1455;\n$step1451 = 7;\n$al1456 = L[143];\nvar $ann$check1462 = R._cA(L[143],R.gDA(L[143],\"VS\",VS52.dict.types,\"ValueSkeleton\"),ann_check_temp1461);\nif(R.isContinuation($ann$check1462)) {\n$ans1455 = $ann$check1462;\n}\nbreak;\ncase 7: $step1451 = 8;\n$ans1455 = ann_check_temp1461;\nbreak;\ncase 8: ++R.GAS;\nreturn $ans1455;\ndefault: R.ffi.throwSpinnakerError(L[142],$step1451);\n}\n}\nif($step1451 !== 8) {\n$ans1455.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1456,$temp_lam1452,$step1451,[s1453,raw$img1454],[ann_check_temp1461],$elidedFrames1458);\n}\nreturn $ans1455;\n};\nvar anf_assign1465 = R.mF($temp_lam1452,\"get-vs-from-img\");\nget$vs$from$img1466.$var = anf_assign1465;\nR.nothing;\nvar $temp_lam1468 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__150($t1469,$value$getter1470,$scorer1471,$cmp1472,$eq1473) {\nvar $step1467 = 0;\nvar $elidedFrames1478 = 0;\nvar $ans1475 = D;\nvar $al1476 = L[150];\nif(R.isAR($t1469)) {\n$step1467 = $t1469.step;\n$al1476 = $t1469.from;\n$ans1475 = $t1469.ans;\n$elidedFrames1478 = $t1469.elidedFrames;\nt1469 = $t1469.args[0];\nvalue$getter1470 = $t1469.args[1];\nscorer1471 = $t1469.args[2];\ncmp1472 = $t1469.args[3];\neq1473 = $t1469.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[150],5,$t,false);\n}\nvar t1469 = $t1469;\nvar value$getter1470 = $value$getter1470;\nvar scorer1471 = $scorer1471;\nvar cmp1472 = $cmp1472;\nvar eq1473 = $eq1473;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1475 = R.mC();\n}\nwhile(!R.isContinuation($ans1475)) {\nswitch($step1467) {\ncase 0: $step1467 = 1;\n$al1476 = L[167];\nR._cA(L[167],TableIntern764,t1469);\nbreak;\ncase 1: $step1467 = 2;\n$al1476 = L[168];\nR._cA(L[168],R.Function,value$getter1470);\nbreak;\ncase 2: $step1467 = 3;\n$al1476 = L[169];\nR._cA(L[169],R.Function,scorer1471);\nbreak;\ncase 3: $step1467 = 4;\n$al1476 = L[170];\nR._cA(L[170],R.Function,cmp1472);\nbreak;\ncase 4: $step1467 = 5;\n$al1476 = L[171];\nR._cA(L[171],R.Function,eq1473);\nbreak;\ncase 5: // caller optimization;\n$ans1475 = raw$array$to$list4.app(t1469);\nvar list$of$rows1492 = $ans1475;\nvar $temp_lam1481 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__151($row1482) {\nvar $step1480 = 0;\nvar $elidedFrames1487 = 0;\nvar $ans1484 = D;\nvar $al1485 = L[151];\nif(R.isAR($row1482)) {\n$step1480 = $row1482.step;\n$al1485 = $row1482.from;\n$ans1484 = $row1482.ans;\n$elidedFrames1487 = $row1482.elidedFrames;\nrow1482 = $row1482.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[151],1,$t,false);\n}\nvar row1482 = $row1482;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1484 = R.mC();\n}\nwhile(!R.isContinuation($ans1484)) {\nswitch($step1480) {\ncase 0: $step1480 = 1;\n$al1485 = L[152];\nif(typeof(value$getter1470.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1485,value$getter1470);\n}\n$ans1484 = value$getter1470.app(row1482);\nbreak;\ncase 1: var anf_arg669 = $ans1484;\n$step1480 = 2;\n$al1485 = L[152];\nif(typeof(scorer1471.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1485,scorer1471);\n}\n$ans1484 = scorer1471.app(anf_arg669);\nbreak;\ncase 2: var anf_tuple_fields1488 = $ans1484;\n$step1480 = 3;\n$ans1484 = R.makeTuple([row1482,anf_tuple_fields1488]);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1484;\ndefault: R.ffi.throwSpinnakerError(L[151],$step1480);\n}\n}\nif($step1480 !== 3) {\n$ans1484.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1485,$temp_lam1481,$step1480,[row1482],[],$elidedFrames1487);\n}\nreturn $ans1484;\n};\nvar anf_arg3547 = R.mF($temp_lam1481,\"\");\n$step1467 = 6;\n$al1476 = L[166];\n// omitting isFunction check;\n$ans1475 = map6.app(anf_arg3547,list$of$rows1492);\nbreak;\ncase 6: var scored$values1512 = $ans1475;\nvar $temp_lam1494 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__153($row$score1495,$oth$row$score1496) {\nvar $step1493 = 0;\nvar $elidedFrames1501 = 0;\nvar $ans1498 = D;\nvar $al1499 = L[153];\nif(R.isAR($row$score1495)) {\n$step1493 = $row$score1495.step;\n$al1499 = $row$score1495.from;\n$ans1498 = $row$score1495.ans;\n$elidedFrames1501 = $row$score1495.elidedFrames;\nrow$score1495 = $row$score1495.args[0];\noth$row$score1496 = $row$score1495.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[153],2,$t,false);\n}\nvar row$score1495 = $row$score1495;\nvar oth$row$score1496 = $oth$row$score1496;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1498 = R.mC();\n}\nwhile(!R.isContinuation($ans1498)) {\nswitch($step1493) {\ncase 0: var anf_arg615 = R.getTuple(row$score1495,1,L[154]);\nvar anf_arg647 = R.getTuple(oth$row$score1496,1,L[155]);\n$step1493 = 1;\n$al1499 = L[156];\nif(typeof(cmp1472.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1499,cmp1472);\n}\n$ans1498 = cmp1472.app(anf_arg615,anf_arg647);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1498;\ndefault: R.ffi.throwSpinnakerError(L[153],$step1493);\n}\n}\nif($step1493 !== 1) {\n$ans1498.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1499,$temp_lam1494,$step1493,[row$score1495,oth$row$score1496],[],$elidedFrames1501);\n}\nreturn $ans1498;\n};\nvar anf_arg616 = R.mF($temp_lam1494,\"\");\nvar $temp_lam1504 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__157($row$score1505,$oth$row$score1506) {\nvar $step1503 = 0;\nvar $elidedFrames1510 = 0;\nvar $ans1507 = D;\nvar $al1508 = L[157];\nif(R.isAR($row$score1505)) {\n$step1503 = $row$score1505.step;\n$al1508 = $row$score1505.from;\n$ans1507 = $row$score1505.ans;\n$elidedFrames1510 = $row$score1505.elidedFrames;\nrow$score1505 = $row$score1505.args[0];\noth$row$score1506 = $row$score1505.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[157],2,$t,false);\n}\nvar row$score1505 = $row$score1505;\nvar oth$row$score1506 = $oth$row$score1506;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1507 = R.mC();\n}\nwhile(!R.isContinuation($ans1507)) {\nswitch($step1503) {\ncase 0: var anf_arg648 = R.getTuple(row$score1505,1,L[158]);\nvar anf_arg1892 = R.getTuple(oth$row$score1506,1,L[159]);\n$step1503 = 1;\n$al1508 = L[160];\nif(typeof(eq1473.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1508,eq1473);\n}\n$ans1507 = eq1473.app(anf_arg648,anf_arg1892);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1507;\ndefault: R.ffi.throwSpinnakerError(L[157],$step1503);\n}\n}\nif($step1503 !== 1) {\n$ans1507.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1508,$temp_lam1504,$step1503,[row$score1505,oth$row$score1506],[],$elidedFrames1510);\n}\nreturn $ans1507;\n};\nvar anf_arg640 = R.mF($temp_lam1504,\"\");\n$step1467 = 7;\n$ans1475 = R.maybeMethodCall2(scored$values1512,\"sort-by\",L[161],anf_arg616,anf_arg640);\nbreak;\ncase 7: var sorted$by$score1522 = $ans1475;\nvar $temp_lam1514 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__162($row$score1515) {\nvar $step1513 = 0;\nvar $elidedFrames1519 = 0;\nvar $ans1516 = D;\nvar $al1517 = L[162];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[162],1,$t,false);\n}\nvar row$score1515 = $row$score1515;\n// callee optimization;\nwhile(!R.isContinuation($ans1516)) {\nswitch($step1513) {\ncase 0: $step1513 = 1;\n$ans1516 = R.getTuple(row$score1515,0,L[163]);\nbreak;\ncase 1: return $ans1516;\ndefault: R.ffi.throwSpinnakerError(L[162],$step1513);\n}\n}\nreturn $ans1516;\n};\nvar anf_arg633 = R.mF($temp_lam1514,\"\");\n$step1467 = 8;\n$al1476 = L[165];\n// omitting isFunction check;\n$ans1475 = map6.app(anf_arg633,sorted$by$score1522);\nbreak;\ncase 8: var sorted$rows1523 = $ans1475;\n$step1467 = 9;\n$ans1475 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[164],sorted$rows1523);\nbreak;\ncase 9: ++R.GAS;\nreturn $ans1475;\ndefault: R.ffi.throwSpinnakerError(L[150],$step1467);\n}\n}\nif($step1467 !== 9) {\n$ans1475.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1476,$temp_lam1468,$step1467,[t1469,value$getter1470,scorer1471,cmp1472,eq1473],[],$elidedFrames1478);\n}\nreturn $ans1475;\n};\nvar anf_assign1525 = R.mF($temp_lam1468,\"table-sorter\");\ntable$sorter1526.$var = anf_assign1525;\nR.nothing;\nvar $temp_lam1528 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__172($base1529) {\nvar $step1527 = 0;\nvar $elidedFrames1533 = 0;\nvar $ans1530 = D;\nvar $al1531 = L[172];\nif(R.isAR($base1529)) {\n$step1527 = $base1529.step;\n$al1531 = $base1529.from;\n$ans1530 = $base1529.ans;\n$elidedFrames1533 = $base1529.elidedFrames;\nbase1529 = $base1529.args[0];\nann_check_temp1547 = $base1529.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[172],1,$t,false);\n}\nvar base1529 = $base1529;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1530 = R.mC();\n}\nwhile(!R.isContinuation($ans1530)) {\nswitch($step1527) {\ncase 0: $step1527 = 1;\n$al1531 = L[181];\nR._cA(L[181],$type$Number3,base1529);\nbreak;\ncase 1: $step1527 = 2;\n$al1531 = L[180];\n// omitting isFunction check;\n$ans1530 = _lessequal4.app(base1529,(1));\nbreak;\ncase 2: var anf_if1549 = $ans1530;\n$step1527 = R.checkPyretTrue(anf_if1549)?3:5;\nbreak;\ncase 3: $step1527 = 4;\n$al1531 = L[179];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1531,raise1);\n}\n$ans1530 = raise1.app((\"Num-to-scientific: Only defined on bases > 1\"));\nbreak;\ncase 4: $step1527 = 6;\n$ans1530 = nothing5;\nbreak;\ncase 5: $step1527 = 6;\n$ans1530 = nothing5;\nbreak;\ncase 6: var convert1546 = {\"$var\":D};\nvar $temp_lam1535 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__173($n2984) {\nvar $step1534 = 0;\nvar $elidedFrames1539 = 0;\nvar $ans1536 = D;\nvar $al1537 = L[173];\nif(R.isAR($n2984)) {\n$step1534 = $n2984.step;\n$al1537 = $n2984.from;\n$ans1536 = $n2984.ans;\n$elidedFrames1539 = $n2984.elidedFrames;\nn2984 = $n2984.args[0];\npow1540 = $n2984.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[173],1,$t,false);\n}\nvar n2984 = $n2984;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1536 = R.mC();\n}\nwhile(!R.isContinuation($ans1536)) {\nswitch($step1534) {\ncase 0: $step1534 = 1;\n$al1537 = L[177];\nR._cA(L[177],$type$Number3,n2984);\nbreak;\ncase 1: // caller optimization;\n$ans1536 = num$is$rational3.app(n2984);\nvar anf_if1543 = $ans1536;\n$step1534 = R.checkPyretTrue(anf_if1543)?2:4;\nbreak;\ncase 2: $step1534 = 3;\n$al1537 = L[176];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1537,equal$always1);\n}\n$ans1536 = equal$always1.app(n2984,(0));\nbreak;\ncase 3: var anf_arg624 = $ans1536;\n$ans1536 = R.checkWrapBoolean(anf_arg624);\n$step1534 = 5;\nbreak;\ncase 4: $step1534 = 5;\n$ans1536 = (false);\nbreak;\ncase 5: var anf_if1542 = $ans1536;\n$step1534 = R.checkPyretTrue(anf_if1542)?6:7;\nbreak;\ncase 6: // caller optimization;\n$ans1536 = sci$notation404.$var.app((0),(0),base1529);\n$step1534 = 10;\nbreak;\ncase 7: // caller optimization;\n$ans1536 = num$abs1.app(n2984);\nvar anf_arg626 = $ans1536;\n// caller optimization;\n$ans1536 = num$log4.app(anf_arg626);\nvar anf_arg619 = $ans1536;\n// caller optimization;\n$ans1536 = num$log4.app(base1529);\nvar anf_arg629 = $ans1536;\n$step1534 = 8;\n$al1537 = L[175];\n// omitting isFunction check;\n$ans1536 = _divide16.app(anf_arg619,anf_arg629);\nbreak;\ncase 8: var anf_arg621 = $ans1536;\n// caller optimization;\n$ans1536 = num$floor4.app(anf_arg621);\nvar pow1540 = $ans1536;\n// caller optimization;\n$ans1536 = num$expt4.app(base1529,pow1540);\nvar anf_arg630 = $ans1536;\n$step1534 = 9;\n$al1537 = L[174];\n// omitting isFunction check;\n$ans1536 = _divide16.app(n2984,anf_arg630);\nbreak;\ncase 9: var c1541 = $ans1536;\n// caller optimization;\n$ans1536 = sci$notation404.$var.app(c1541,pow1540,base1529);\n$step1534 = 10;\nbreak;\ncase 10: ++R.GAS;\nreturn $ans1536;\ndefault: R.ffi.throwSpinnakerError(L[173],$step1534);\n}\n}\nif($step1534 !== 10) {\n$ans1536.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1537,$temp_lam1535,$step1534,[n2984],[pow1540],$elidedFrames1539);\n}\nreturn $ans1536;\n};\nvar anf_assign1545 = R.mF($temp_lam1535,\"convert\");\nconvert1546.$var = anf_assign1545;\nR.nothing;\nvar ann_check_temp1547 = convert1546.$var;\n$step1527 = 7;\n$al1531 = L[178];\nvar $ann$check1548 = R._cA(L[178],R.Function,ann_check_temp1547);\nif(R.isContinuation($ann$check1548)) {\n$ans1530 = $ann$check1548;\n}\nbreak;\ncase 7: $step1527 = 8;\n$ans1530 = ann_check_temp1547;\nbreak;\ncase 8: ++R.GAS;\nreturn $ans1530;\ndefault: R.ffi.throwSpinnakerError(L[172],$step1527);\n}\n}\nif($step1527 !== 8) {\n$ans1530.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1531,$temp_lam1528,$step1527,[base1529],[ann_check_temp1547],$elidedFrames1533);\n}\nreturn $ans1530;\n};\nvar anf_assign1552 = R.mF($temp_lam1528,\"num-to-scientific\");\nnum$to$scientific1553.$var = anf_assign1552;\nR.nothing;\nvar $temp_lam1556 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__182($s1557) {\nvar $step1555 = 0;\nvar $elidedFrames1562 = 0;\nvar $ans1559 = D;\nvar $al1560 = L[182];\nif(R.isAR($s1557)) {\n$step1555 = $s1557.step;\n$al1560 = $s1557.from;\n$ans1559 = $s1557.ans;\n$elidedFrames1562 = $s1557.elidedFrames;\ns1557 = $s1557.args[0];\nann_check_temp1563 = $s1557.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[182],1,$t,false);\n}\nvar s1557 = $s1557;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1559 = R.mC();\n}\nwhile(!R.isContinuation($ans1559)) {\nswitch($step1555) {\ncase 0: $step1555 = 1;\n$al1560 = L[185];\nR._cA(L[185],$type$String8,s1557);\nbreak;\ncase 1: // caller optimization;\n$ans1559 = string$equal2.app(s1557,(\"none\"));\nvar anf_if1569 = $ans1559;\n$step1555 = R.checkPyretTrue(anf_if1569)?2:3;\nbreak;\ncase 2: $step1555 = 10;\n$ans1559 = grouped457.$var;\nbreak;\ncase 3: // caller optimization;\n$ans1559 = string$equal2.app(s1557,(\"absolute\"));\nvar anf_if1568 = $ans1559;\n$step1555 = R.checkPyretTrue(anf_if1568)?4:5;\nbreak;\ncase 4: $step1555 = 10;\n$ans1559 = absolute446.$var;\nbreak;\ncase 5: // caller optimization;\n$ans1559 = string$equal2.app(s1557,(\"percent\"));\nvar anf_if1567 = $ans1559;\n$step1555 = R.checkPyretTrue(anf_if1567)?6:7;\nbreak;\ncase 6: $step1555 = 10;\n$ans1559 = percent453.$var;\nbreak;\ncase 7: // caller optimization;\n$ans1559 = string$equal2.app(s1557,(\"relative\"));\nvar anf_if1566 = $ans1559;\n$step1555 = R.checkPyretTrue(anf_if1566)?8:9;\nbreak;\ncase 8: $step1555 = 10;\n$ans1559 = relative450.$var;\nbreak;\ncase 9: $step1555 = 10;\n$al1560 = L[184];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1560,raise1);\n}\n$ans1559 = raise1.app((\"type must be absolute, relative, percent, or none\"));\nbreak;\ncase 10: var ann_check_temp1563 = $ans1559;\n$step1555 = 11;\n$al1560 = L[183];\nvar $ann$check1565 = R._cA(L[183],StackType1564,ann_check_temp1563);\nif(R.isContinuation($ann$check1565)) {\n$ans1559 = $ann$check1565;\n}\nbreak;\ncase 11: $step1555 = 12;\n$ans1559 = ann_check_temp1563;\nbreak;\ncase 12: ++R.GAS;\nreturn $ans1559;\ndefault: R.ffi.throwSpinnakerError(L[182],$step1555);\n}\n}\nif($step1555 !== 12) {\n$ans1559.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1560,$temp_lam1556,$step1555,[s1557],[ann_check_temp1563],$elidedFrames1562);\n}\nreturn $ans1559;\n};\nvar anf_assign1575 = R.mF($temp_lam1556,\"string-to-stacktype\");\nstring$to$stacktype1576.$var = anf_assign1575;\nR.nothing;\nvar $temp_lam1578 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__186($values1579) {\nvar $step1577 = 0;\nvar $elidedFrames1583 = 0;\nvar $ans1580 = D;\nvar $al1581 = L[186];\nif(R.isAR($values1579)) {\n$step1577 = $values1579.step;\n$al1581 = $values1579.from;\n$ans1580 = $values1579.ans;\n$elidedFrames1583 = $values1579.elidedFrames;\nvalues1579 = $values1579.args[0];\nmax$positive$height1584 = $values1579.vars[0];\nann_check_temp1586 = $values1579.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[186],1,$t,false);\n}\nvar values1579 = $values1579;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1580 = R.mC();\n}\nwhile(!R.isContinuation($ans1580)) {\nswitch($step1577) {\ncase 0: $step1577 = 1;\n$al1581 = L[192];\nvar $ann$check1591 = R._cA(L[192],R.gDA(L[192],\"CL\",CL40.dict.types,\"LoN\"),values1579);\nif(R.isContinuation($ann$check1591)) {\n$ans1580 = $ann$check1591;\n}\nbreak;\ncase 1: $step1577 = 2;\n$al1581 = L[191];\n// omitting isFunction check;\n$ans1580 = fold24.app(num$max18,(0),values1579);\nbreak;\ncase 2: var max$positive$height1584 = $ans1580;\n$step1577 = 3;\n$al1581 = L[190];\n// omitting isFunction check;\n$ans1580 = fold24.app(num$min2,(0),values1579);\nbreak;\ncase 3: var max$negative$height1585 = $ans1580;\nvar ann_check_temp1586 = R.makeTuple([max$positive$height1584,max$negative$height1585]);\n$step1577 = 4;\n$al1581 = L[189];\nvar $ann$check1590 = R._cA(L[189],R.mTA([L[187],L[188]],[$type$Number3,$type$Number3],undefined),ann_check_temp1586);\nif(R.isContinuation($ann$check1590)) {\n$ans1580 = $ann$check1590;\n}\nbreak;\ncase 4: $step1577 = 5;\n$ans1580 = ann_check_temp1586;\nbreak;\ncase 5: ++R.GAS;\nreturn $ans1580;\ndefault: R.ffi.throwSpinnakerError(L[186],$step1577);\n}\n}\nif($step1577 !== 5) {\n$ans1580.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1581,$temp_lam1578,$step1577,[values1579],[max$positive$height1584,ann_check_temp1586],$elidedFrames1583);\n}\nreturn $ans1580;\n};\nvar anf_assign1594 = R.mF($temp_lam1578,\"prep-axis\");\nprep$axis1595.$var = anf_assign1594;\nR.nothing;\nvar $temp_lam1597 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__193($stack$type1598,$value$lists1599) {\nvar $step1596 = 0;\nvar $elidedFrames1603 = 0;\nvar $ans1600 = D;\nvar $al1601 = L[193];\nif(R.isAR($stack$type1598)) {\n$step1596 = $stack$type1598.step;\n$al1601 = $stack$type1598.from;\n$ans1600 = $stack$type1598.ans;\n$elidedFrames1603 = $stack$type1598.elidedFrames;\nstack$type1598 = $stack$type1598.args[0];\nvalue$lists1599 = $stack$type1598.args[1];\nnegative$sums1714 = $stack$type1598.vars[0];\nmax$positive$height1646 = $stack$type1598.vars[1];\npositive$sums1713 = $stack$type1598.vars[2];\nmax$positive$height1715 = $stack$type1598.vars[3];\nann_check_temp1604 = $stack$type1598.vars[4];\nhas$pos1756 = $stack$type1598.vars[5];\nhas$neg1755 = $stack$type1598.vars[6];\nnegative$max$groups1645 = $stack$type1598.vars[7];\nnegative$only$sum1712 = $stack$type1598.vars[8];\npositive$max$groups1644 = $stack$type1598.vars[9];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[193],2,$t,false);\n}\nvar stack$type1598 = $stack$type1598;\nvar value$lists1599 = $value$lists1599;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1600 = R.mC();\n}\nwhile(!R.isContinuation($ans1600)) {\nswitch($step1596) {\ncase 0: $step1596 = 1;\n$al1601 = L[240];\nR._cA(L[240],StackType1564,stack$type1598);\nbreak;\ncase 1: $step1596 = 2;\n$al1601 = L[241];\nvar $ann$check1761 = R._cA(L[241],R.gDA(L[241],\"CL\",CL40.dict.types,\"LoLoN\"),value$lists1599);\nif(R.isContinuation($ann$check1761)) {\n$ans1600 = $ann$check1761;\n}\nbreak;\ncase 2: $step1596 = 3;\n$al1601 = L[239];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1601,equal$always1);\n}\n$ans1600 = equal$always1.app(stack$type1598,grouped457.$var);\nbreak;\ncase 3: var anf_if1760 = $ans1600;\n$step1596 = R.checkPyretTrue(anf_if1760)?4:9;\nbreak;\ncase 4: var $temp_lam1608 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__197($l1609) {\nvar $step1607 = 0;\nvar $elidedFrames1613 = 0;\nvar $ans1610 = D;\nvar $al1611 = L[197];\nif(R.isAR($l1609)) {\n$step1607 = $l1609.step;\n$al1611 = $l1609.from;\n$ans1610 = $l1609.ans;\n$elidedFrames1613 = $l1609.elidedFrames;\nl1609 = $l1609.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[197],1,$t,false);\n}\nvar l1609 = $l1609;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1610 = R.mC();\n}\nwhile(!R.isContinuation($ans1610)) {\nswitch($step1607) {\ncase 0: $al1611 = L[198];\nvar anf_arg1632 = G(l1609,\"first\",L[198]);\n$step1607 = 1;\n$al1611 = L[199];\n// omitting isFunction check;\n$ans1610 = fold24.app(num$max18,anf_arg1632,l1609);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1610;\ndefault: R.ffi.throwSpinnakerError(L[197],$step1607);\n}\n}\nif($step1607 !== 1) {\n$ans1610.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1611,$temp_lam1608,$step1607,[l1609],[],$elidedFrames1613);\n}\nreturn $ans1610;\n};\nvar anf_arg651 = R.mF($temp_lam1608,\"\");\n$step1596 = 5;\n$al1601 = L[206];\n// omitting isFunction check;\n$ans1600 = map6.app(anf_arg651,value$lists1599);\nbreak;\ncase 5: var positive$max$groups1644 = $ans1600;\nvar $temp_lam1635 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__200($l1636) {\nvar $step1634 = 0;\nvar $elidedFrames1640 = 0;\nvar $ans1637 = D;\nvar $al1638 = L[200];\nif(R.isAR($l1636)) {\n$step1634 = $l1636.step;\n$al1638 = $l1636.from;\n$ans1637 = $l1636.ans;\n$elidedFrames1640 = $l1636.elidedFrames;\nl1636 = $l1636.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[200],1,$t,false);\n}\nvar l1636 = $l1636;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1637 = R.mC();\n}\nwhile(!R.isContinuation($ans1637)) {\nswitch($step1634) {\ncase 0: $al1638 = L[201];\nvar anf_arg662 = G(l1636,\"first\",L[201]);\n$step1634 = 1;\n$al1638 = L[202];\n// omitting isFunction check;\n$ans1637 = fold24.app(num$min2,anf_arg662,l1636);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1637;\ndefault: R.ffi.throwSpinnakerError(L[200],$step1634);\n}\n}\nif($step1634 !== 1) {\n$ans1637.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1638,$temp_lam1635,$step1634,[l1636],[],$elidedFrames1640);\n}\nreturn $ans1637;\n};\nvar anf_arg1963 = R.mF($temp_lam1635,\"\");\n$step1596 = 6;\n$al1601 = L[205];\n// omitting isFunction check;\n$ans1600 = map6.app(anf_arg1963,value$lists1599);\nbreak;\ncase 6: var negative$max$groups1645 = $ans1600;\n$step1596 = 7;\n$al1601 = L[204];\n// omitting isFunction check;\n$ans1600 = fold24.app(num$max18,(0),positive$max$groups1644);\nbreak;\ncase 7: var max$positive$height1646 = $ans1600;\n$step1596 = 8;\n$al1601 = L[203];\n// omitting isFunction check;\n$ans1600 = fold24.app(num$min2,(0),negative$max$groups1645);\nbreak;\ncase 8: var max$negative$height1647 = $ans1600;\n$step1596 = 28;\n$ans1600 = R.makeTuple([max$positive$height1646,max$negative$height1647]);\nbreak;\ncase 9: $step1596 = 10;\n$al1601 = L[238];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1601,equal$always1);\n}\n$ans1600 = equal$always1.app(stack$type1598,absolute446.$var);\nbreak;\ncase 10: var anf_if1759 = $ans1600;\n$step1596 = R.checkPyretTrue(anf_if1759)?11:16;\nbreak;\ncase 11: var $temp_lam1649 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__207($l1650) {\nvar $step1648 = 0;\nvar $elidedFrames1656 = 0;\nvar $ans1653 = D;\nvar $al1654 = L[207];\nif(R.isAR($l1650)) {\n$step1648 = $l1650.step;\n$al1654 = $l1650.from;\n$ans1653 = $l1650.ans;\n$elidedFrames1656 = $l1650.elidedFrames;\nl1650 = $l1650.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[207],1,$t,false);\n}\nvar l1650 = $l1650;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1653 = R.mC();\n}\nwhile(!R.isContinuation($ans1653)) {\nswitch($step1648) {\ncase 0: $step1648 = 1;\n$al1654 = L[211];\nR._cA(L[211],List16,l1650);\nbreak;\ncase 1: var $temp_lam1662 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__208($acc1663,$elm1664) {\nvar $step1661 = 0;\nvar $elidedFrames1671 = 0;\nvar $ans1668 = D;\nvar $al1669 = L[208];\nif(R.isAR($acc1663)) {\n$step1661 = $acc1663.step;\n$al1669 = $acc1663.from;\n$ans1668 = $acc1663.ans;\n$elidedFrames1671 = $acc1663.elidedFrames;\nacc1663 = $acc1663.args[0];\nelm1664 = $acc1663.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[208],2,$t,false);\n}\nvar acc1663 = $acc1663;\nvar elm1664 = $elm1664;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1668 = R.mC();\n}\nwhile(!R.isContinuation($ans1668)) {\nswitch($step1661) {\ncase 0: $step1661 = 1;\n$al1669 = L[209];\n// omitting isFunction check;\n$ans1668 = _plus5.app(acc1663,elm1664);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1668;\ndefault: R.ffi.throwSpinnakerError(L[208],$step1661);\n}\n}\nif($step1661 !== 1) {\n$ans1668.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1669,$temp_lam1662,$step1661,[acc1663,elm1664],[],$elidedFrames1671);\n}\nreturn $ans1668;\n};\nvar anf_arg652 = R.mF($temp_lam1662,\"\");\n$step1648 = 2;\n$al1654 = L[210];\n// omitting isFunction check;\n$ans1653 = fold24.app(anf_arg652,(0),l1650);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans1653;\ndefault: R.ffi.throwSpinnakerError(L[207],$step1648);\n}\n}\nif($step1648 !== 2) {\n$ans1653.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1654,$temp_lam1649,$step1648,[l1650],[],$elidedFrames1656);\n}\nreturn $ans1653;\n};\nvar sum1690 = R.mF($temp_lam1649,\"\");\nvar $temp_lam1675 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__212($l1676) {\nvar $step1674 = 0;\nvar $elidedFrames1680 = 0;\nvar $ans1677 = D;\nvar $al1678 = L[212];\nif(R.isAR($l1676)) {\n$step1674 = $l1676.step;\n$al1678 = $l1676.from;\n$ans1677 = $l1676.ans;\n$elidedFrames1680 = $l1676.elidedFrames;\nl1676 = $l1676.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[212],1,$t,false);\n}\nvar l1676 = $l1676;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1677 = R.mC();\n}\nwhile(!R.isContinuation($ans1677)) {\nswitch($step1674) {\ncase 0: $step1674 = 1;\n$al1678 = L[217];\nR._cA(L[217],List16,l1676);\nbreak;\ncase 1: var $temp_lam1682 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__213($e1537) {\nvar $step1681 = 0;\nvar $elidedFrames1686 = 0;\nvar $ans1683 = D;\nvar $al1684 = L[213];\nif(R.isAR($e1537)) {\n$step1681 = $e1537.step;\n$al1684 = $e1537.from;\n$ans1683 = $e1537.ans;\n$elidedFrames1686 = $e1537.elidedFrames;\ne1537 = $e1537.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[213],1,$t,false);\n}\nvar e1537 = $e1537;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1683 = R.mC();\n}\nwhile(!R.isContinuation($ans1683)) {\nswitch($step1681) {\ncase 0: $step1681 = 1;\n$al1684 = L[214];\n// omitting isFunction check;\n$ans1683 = _greaterequal2.app(e1537,(0));\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1683;\ndefault: R.ffi.throwSpinnakerError(L[213],$step1681);\n}\n}\nif($step1681 !== 1) {\n$ans1683.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1684,$temp_lam1682,$step1681,[e1537],[],$elidedFrames1686);\n}\nreturn $ans1683;\n};\nvar anf_arg655 = R.mF($temp_lam1682,\"\");\n$step1674 = 2;\n$al1678 = L[216];\n// omitting isFunction check;\n$ans1677 = filter31.app(anf_arg655,l1676);\nbreak;\ncase 2: var anf_arg658 = $ans1677;\n$step1674 = 3;\n$al1678 = L[215];\n// omitting isFunction check;\n$ans1677 = sum1690.app(anf_arg658);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1677;\ndefault: R.ffi.throwSpinnakerError(L[212],$step1674);\n}\n}\nif($step1674 !== 3) {\n$ans1677.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1678,$temp_lam1675,$step1674,[l1676],[],$elidedFrames1680);\n}\nreturn $ans1677;\n};\nvar positive$only$sum1711 = R.mF($temp_lam1675,\"\");\nvar $temp_lam1694 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__218($l1695) {\nvar $step1693 = 0;\nvar $elidedFrames1701 = 0;\nvar $ans1698 = D;\nvar $al1699 = L[218];\nif(R.isAR($l1695)) {\n$step1693 = $l1695.step;\n$al1699 = $l1695.from;\n$ans1698 = $l1695.ans;\n$elidedFrames1701 = $l1695.elidedFrames;\nl1695 = $l1695.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[218],1,$t,false);\n}\nvar l1695 = $l1695;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1698 = R.mC();\n}\nwhile(!R.isContinuation($ans1698)) {\nswitch($step1693) {\ncase 0: $step1693 = 1;\n$al1699 = L[223];\nR._cA(L[223],List16,l1695);\nbreak;\ncase 1: var $temp_lam1703 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__219($e1545) {\nvar $step1702 = 0;\nvar $elidedFrames1707 = 0;\nvar $ans1704 = D;\nvar $al1705 = L[219];\nif(R.isAR($e1545)) {\n$step1702 = $e1545.step;\n$al1705 = $e1545.from;\n$ans1704 = $e1545.ans;\n$elidedFrames1707 = $e1545.elidedFrames;\ne1545 = $e1545.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[219],1,$t,false);\n}\nvar e1545 = $e1545;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1704 = R.mC();\n}\nwhile(!R.isContinuation($ans1704)) {\nswitch($step1702) {\ncase 0: $step1702 = 1;\n$al1705 = L[220];\n// omitting isFunction check;\n$ans1704 = _lessequal4.app(e1545,(0));\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1704;\ndefault: R.ffi.throwSpinnakerError(L[219],$step1702);\n}\n}\nif($step1702 !== 1) {\n$ans1704.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1705,$temp_lam1703,$step1702,[e1545],[],$elidedFrames1707);\n}\nreturn $ans1704;\n};\nvar anf_arg659 = R.mF($temp_lam1703,\"\");\n$step1693 = 2;\n$al1699 = L[222];\n// omitting isFunction check;\n$ans1698 = filter31.app(anf_arg659,l1695);\nbreak;\ncase 2: var anf_arg663 = $ans1698;\n$step1693 = 3;\n$al1699 = L[221];\n// omitting isFunction check;\n$ans1698 = sum1690.app(anf_arg663);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1698;\ndefault: R.ffi.throwSpinnakerError(L[218],$step1693);\n}\n}\nif($step1693 !== 3) {\n$ans1698.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1699,$temp_lam1694,$step1693,[l1695],[],$elidedFrames1701);\n}\nreturn $ans1698;\n};\nvar negative$only$sum1712 = R.mF($temp_lam1694,\"\");\n$step1596 = 12;\n$al1601 = L[227];\n// omitting isFunction check;\n$ans1600 = map6.app(positive$only$sum1711,value$lists1599);\nbreak;\ncase 12: var positive$sums1713 = $ans1600;\n$step1596 = 13;\n$al1601 = L[226];\n// omitting isFunction check;\n$ans1600 = map6.app(negative$only$sum1712,value$lists1599);\nbreak;\ncase 13: var negative$sums1714 = $ans1600;\n$step1596 = 14;\n$al1601 = L[225];\n// omitting isFunction check;\n$ans1600 = fold24.app(num$max18,(0),positive$sums1713);\nbreak;\ncase 14: var max$positive$height1715 = $ans1600;\n$step1596 = 15;\n$al1601 = L[224];\n// omitting isFunction check;\n$ans1600 = fold24.app(num$min2,(0),negative$sums1714);\nbreak;\ncase 15: var max$negative$height1716 = $ans1600;\n$step1596 = 28;\n$ans1600 = R.makeTuple([max$positive$height1715,max$negative$height1716]);\nbreak;\ncase 16: var $temp_lam1718 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__228($l1719) {\nvar $step1717 = 0;\nvar $elidedFrames1723 = 0;\nvar $ans1720 = D;\nvar $al1721 = L[228];\nif(R.isAR($l1719)) {\n$step1717 = $l1719.step;\n$al1721 = $l1719.from;\n$ans1720 = $l1719.ans;\n$elidedFrames1723 = $l1719.elidedFrames;\nl1719 = $l1719.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[228],1,$t,false);\n}\nvar l1719 = $l1719;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1720 = R.mC();\n}\nwhile(!R.isContinuation($ans1720)) {\nswitch($step1717) {\ncase 0: var $temp_lam1725 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__229($e1726) {\nvar $step1724 = 0;\nvar $elidedFrames1730 = 0;\nvar $ans1727 = D;\nvar $al1728 = L[229];\nif(R.isAR($e1726)) {\n$step1724 = $e1726.step;\n$al1728 = $e1726.from;\n$ans1727 = $e1726.ans;\n$elidedFrames1730 = $e1726.elidedFrames;\ne1726 = $e1726.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[229],1,$t,false);\n}\nvar e1726 = $e1726;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1727 = R.mC();\n}\nwhile(!R.isContinuation($ans1727)) {\nswitch($step1724) {\ncase 0: $step1724 = 1;\n$al1728 = L[230];\n// omitting isFunction check;\n$ans1727 = _greaterthan5.app(e1726,(0));\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1727;\ndefault: R.ffi.throwSpinnakerError(L[229],$step1724);\n}\n}\nif($step1724 !== 1) {\n$ans1727.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1728,$temp_lam1725,$step1724,[e1726],[],$elidedFrames1730);\n}\nreturn $ans1727;\n};\nvar anf_arg660 = R.mF($temp_lam1725,\"\");\n$step1717 = 1;\n$al1721 = L[231];\n// omitting isFunction check;\n$ans1720 = any17.app(anf_arg660,l1719);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1720;\ndefault: R.ffi.throwSpinnakerError(L[228],$step1717);\n}\n}\nif($step1717 !== 1) {\n$ans1720.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1721,$temp_lam1718,$step1717,[l1719],[],$elidedFrames1723);\n}\nreturn $ans1720;\n};\nvar anf_arg666 = R.mF($temp_lam1718,\"\");\n$step1596 = 17;\n$al1601 = L[237];\n// omitting isFunction check;\n$ans1600 = any17.app(anf_arg666,value$lists1599);\nbreak;\ncase 17: var has$pos1756 = $ans1600;\nvar $temp_lam1738 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__232($l1739) {\nvar $step1737 = 0;\nvar $elidedFrames1744 = 0;\nvar $ans1741 = D;\nvar $al1742 = L[232];\nif(R.isAR($l1739)) {\n$step1737 = $l1739.step;\n$al1742 = $l1739.from;\n$ans1741 = $l1739.ans;\n$elidedFrames1744 = $l1739.elidedFrames;\nl1739 = $l1739.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[232],1,$t,false);\n}\nvar l1739 = $l1739;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1741 = R.mC();\n}\nwhile(!R.isContinuation($ans1741)) {\nswitch($step1737) {\ncase 0: var $temp_lam1747 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__233($e1748) {\nvar $step1746 = 0;\nvar $elidedFrames1752 = 0;\nvar $ans1749 = D;\nvar $al1750 = L[233];\nif(R.isAR($e1748)) {\n$step1746 = $e1748.step;\n$al1750 = $e1748.from;\n$ans1749 = $e1748.ans;\n$elidedFrames1752 = $e1748.elidedFrames;\ne1748 = $e1748.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[233],1,$t,false);\n}\nvar e1748 = $e1748;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1749 = R.mC();\n}\nwhile(!R.isContinuation($ans1749)) {\nswitch($step1746) {\ncase 0: $step1746 = 1;\n$al1750 = L[234];\n// omitting isFunction check;\n$ans1749 = _lessthan3.app(e1748,(0));\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1749;\ndefault: R.ffi.throwSpinnakerError(L[233],$step1746);\n}\n}\nif($step1746 !== 1) {\n$ans1749.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1750,$temp_lam1747,$step1746,[e1748],[],$elidedFrames1752);\n}\nreturn $ans1749;\n};\nvar anf_arg1982 = R.mF($temp_lam1747,\"\");\n$step1737 = 1;\n$al1742 = L[235];\n// omitting isFunction check;\n$ans1741 = any17.app(anf_arg1982,l1739);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1741;\ndefault: R.ffi.throwSpinnakerError(L[232],$step1737);\n}\n}\nif($step1737 !== 1) {\n$ans1741.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1742,$temp_lam1738,$step1737,[l1739],[],$elidedFrames1744);\n}\nreturn $ans1741;\n};\nvar anf_arg1987 = R.mF($temp_lam1738,\"\");\n$step1596 = 18;\n$al1601 = L[236];\n// omitting isFunction check;\n$ans1600 = any17.app(anf_arg1987,value$lists1599);\nbreak;\ncase 18: var has$neg1755 = $ans1600;\n$step1596 = R.checkPyretTrue(has$pos1756)?19:20;\nbreak;\ncase 19: $ans1600 = R.checkWrapBoolean(has$neg1755);\n$step1596 = 21;\nbreak;\ncase 20: $step1596 = 21;\n$ans1600 = (false);\nbreak;\ncase 21: var anf_if1757 = $ans1600;\n$step1596 = R.checkPyretTrue(anf_if1757)?22:23;\nbreak;\ncase 22: $step1596 = 28;\n$ans1600 = R.makeTuple([(1),(-1)]);\nbreak;\ncase 23: $step1596 = R.checkPyretTrue(has$pos1756)?24:25;\nbreak;\ncase 24: $step1596 = 28;\n$ans1600 = R.makeTuple([(1),(0)]);\nbreak;\ncase 25: $step1596 = R.checkPyretTrue(has$neg1755)?26:27;\nbreak;\ncase 26: $step1596 = 28;\n$ans1600 = R.makeTuple([(0),(-1)]);\nbreak;\ncase 27: $step1596 = 28;\n$ans1600 = R.makeTuple([(1),(-1)]);\nbreak;\ncase 28: var ann_check_temp1604 = $ans1600;\n$step1596 = 29;\n$al1601 = L[196];\nvar $ann$check1606 = R._cA(L[196],R.mTA([L[194],L[195]],[$type$Number3,$type$Number3],undefined),ann_check_temp1604);\nif(R.isContinuation($ann$check1606)) {\n$ans1600 = $ann$check1606;\n}\nbreak;\ncase 29: $step1596 = 30;\n$ans1600 = ann_check_temp1604;\nbreak;\ncase 30: ++R.GAS;\nreturn $ans1600;\ndefault: R.ffi.throwSpinnakerError(L[193],$step1596);\n}\n}\nif($step1596 !== 30) {\n$ans1600.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1601,$temp_lam1597,$step1596,[stack$type1598,value$lists1599],[negative$sums1714,max$positive$height1646,positive$sums1713,max$positive$height1715,ann_check_temp1604,has$pos1756,has$neg1755,negative$max$groups1645,negative$only$sum1712,positive$max$groups1644],$elidedFrames1603);\n}\nreturn $ans1600;\n};\nvar anf_assign1763 = R.mF($temp_lam1597,\"multi-prep-axis\");\nmulti$prep$axis1764.$var = anf_assign1763;\nR.nothing;\nvar BoxData1839 = R.mRA([\"label\",\"max-val\",\"min-val\",\"first-quartile\",\"median\",\"third-quartile\",\"high-whisker\",\"low-whisker\",\"high-outliers\",\"low-outliers\"],[L[2708],L[2709],L[2710],L[2711],L[2712],L[2713],L[2714],L[2715],L[2716],L[2717]],{\"label\":$type$String8,\n\"max-val\":$type$Number3,\n\"min-val\":$type$Number3,\n\"first-quartile\":$type$Number3,\n\"median\":$type$Number3,\n\"third-quartile\":$type$Number3,\n\"high-whisker\":$type$Number3,\n\"low-whisker\":$type$Number3,\n\"high-outliers\":$type$RawArray1,\n\"low-outliers\":$type$RawArray1},\"BoxData\");\nvar get$box$data1866 = {\"$var\":D};\nvar $temp_lam1768 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__242($label1769,$lst1770) {\nvar $step1767 = 0;\nvar $elidedFrames1775 = 0;\nvar $ans1772 = D;\nvar $al1773 = L[242];\nif(R.isAR($label1769)) {\n$step1767 = $label1769.step;\n$al1773 = $label1769.from;\n$ans1772 = $label1769.ans;\n$elidedFrames1775 = $label1769.elidedFrames;\nlabel1769 = $label1769.args[0];\nlst1770 = $label1769.args[1];\nhigh$whisker1836 = $label1769.vars[0];\nfirst$quartile1778 = $label1769.vars[1];\nsplitted1847 = $label1769.vars[2];\nanf_tuple_fields1845 = $label1769.vars[3];\ntup3265 = $label1769.vars[4];\nanf_tuple_fields1849 = $label1769.vars[5];\nlst1562 = $label1769.vars[6];\nanf_obj3846 = $label1769.vars[7];\nlow$outliers1831 = $label1769.vars[8];\nn1776 = $label1769.vars[9];\nmin$val1834 = $label1769.vars[10];\nmedian1835 = $label1769.vars[11];\niqr1787 = $label1769.vars[12];\nlow$whisker1837 = $label1769.vars[13];\nann_check_temp1838 = $label1769.vars[14];\nthird$quartile1777 = $label1769.vars[15];\nmax$val1833 = $label1769.vars[16];\nhigh$outliers1832 = $label1769.vars[17];\nsplitted1844 = $label1769.vars[18];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[242],2,$t,false);\n}\nvar label1769 = $label1769;\nvar lst1770 = $lst1770;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1772 = R.mC();\n}\nwhile(!R.isContinuation($ans1772)) {\nswitch($step1767) {\ncase 0: $step1767 = 1;\n$al1773 = L[284];\nR._cA(L[284],$type$String8,label1769);\nbreak;\ncase 1: $step1767 = 2;\n$al1773 = L[285];\nR._cA(L[285],List16,lst1770);\nbreak;\ncase 2: $step1767 = 3;\n$ans1772 = R.maybeMethodCall0(lst1770,\"length\",L[243]);\nbreak;\ncase 3: var n1776 = $ans1772;\n$step1767 = 4;\n$ans1772 = R.maybeMethodCall0(lst1770,\"sort\",L[244]);\nbreak;\ncase 4: var lst1562 = $ans1772;\n$step1767 = 5;\n$al1773 = L[283];\nif(typeof(ST50.dict.values.dict[\"median\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al1773,ST50.dict.values.dict[\"median\"]);\n}\n$ans1772 = ST50.dict.values.dict[\"median\"].app(lst1562);\nbreak;\ncase 5: var median1835 = $ans1772;\n// caller optimization;\n$ans1772 = num$modulo9.app(n1776,(2));\nvar anf_arg683 = $ans1772;\n$step1767 = 6;\n$al1773 = L[282];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1773,equal$always1);\n}\n$ans1772 = equal$always1.app(anf_arg683,(0));\nbreak;\ncase 6: var anf_if1855 = $ans1772;\n$step1767 = R.checkPyretTrue(anf_if1855)?7:12;\nbreak;\ncase 7: $step1767 = 8;\n$al1773 = L[273];\n// omitting isFunction check;\n$ans1772 = _divide16.app(n1776,(2));\nbreak;\ncase 8: var anf_arg681 = $ans1772;\n$step1767 = 9;\n$ans1772 = R.maybeMethodCall1(lst1562,\"split-at\",L[268],anf_arg681);\nbreak;\ncase 9: var splitted1844 = $ans1772;\n$al1773 = L[269];\nvar anf_arg684 = G(splitted1844,\"prefix\",L[269]);\n$step1767 = 10;\n$al1773 = L[272];\nif(typeof(ST50.dict.values.dict[\"median\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al1773,ST50.dict.values.dict[\"median\"]);\n}\n$ans1772 = ST50.dict.values.dict[\"median\"].app(anf_arg684);\nbreak;\ncase 10: var anf_tuple_fields1845 = $ans1772;\n$al1773 = L[270];\nvar anf_arg691 = G(splitted1844,\"suffix\",L[270]);\n$step1767 = 11;\n$al1773 = L[271];\nif(typeof(ST50.dict.values.dict[\"median\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al1773,ST50.dict.values.dict[\"median\"]);\n}\n$ans1772 = ST50.dict.values.dict[\"median\"].app(anf_arg691);\nbreak;\ncase 11: var anf_tuple_fields1846 = $ans1772;\n$step1767 = 18;\n$ans1772 = R.makeTuple([anf_tuple_fields1845,anf_tuple_fields1846]);\nbreak;\ncase 12: $step1767 = 13;\n$al1773 = L[281];\n// omitting isFunction check;\n$ans1772 = _minus12.app(n1776,(1));\nbreak;\ncase 13: var anf_arg692 = $ans1772;\n$step1767 = 14;\n$al1773 = L[280];\n// omitting isFunction check;\n$ans1772 = _divide16.app(anf_arg692,(2));\nbreak;\ncase 14: var anf_arg2014 = $ans1772;\n$step1767 = 15;\n$ans1772 = R.maybeMethodCall1(lst1562,\"split-at\",L[274],anf_arg2014);\nbreak;\ncase 15: var splitted1847 = $ans1772;\n$al1773 = L[275];\nvar anf_arg2041 = G(splitted1847,\"prefix\",L[275]);\n$step1767 = 16;\n$al1773 = L[279];\nif(typeof(ST50.dict.values.dict[\"median\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al1773,ST50.dict.values.dict[\"median\"]);\n}\n$ans1772 = ST50.dict.values.dict[\"median\"].app(anf_arg2041);\nbreak;\ncase 16: var anf_tuple_fields1849 = $ans1772;\n$al1773 = L[276];\nvar anf_bracket1848 = G(splitted1847,\"suffix\",L[276]);\n$al1773 = L[277];\nvar anf_arg705 = G(anf_bracket1848,\"rest\",L[277]);\n$step1767 = 17;\n$al1773 = L[278];\nif(typeof(ST50.dict.values.dict[\"median\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al1773,ST50.dict.values.dict[\"median\"]);\n}\n$ans1772 = ST50.dict.values.dict[\"median\"].app(anf_arg705);\nbreak;\ncase 17: var anf_tuple_fields1850 = $ans1772;\n$step1767 = 18;\n$ans1772 = R.makeTuple([anf_tuple_fields1849,anf_tuple_fields1850]);\nbreak;\ncase 18: var tup3265 = $ans1772;\n$step1767 = 19;\n$al1773 = L[267];\nR.checkTupleBind(tup3265,2,L[267]);\nbreak;\ncase 19: var first$quartile1778 = R.getTuple(tup3265,0,L[245]);\nvar third$quartile1777 = R.getTuple(tup3265,1,L[246]);\n$step1767 = 20;\n$al1773 = L[266];\n// omitting isFunction check;\n$ans1772 = _minus12.app(third$quartile1777,first$quartile1778);\nbreak;\ncase 20: var iqr1787 = $ans1772;\nvar $temp_lam1780 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__247($n1781) {\nvar $step1779 = 0;\nvar $elidedFrames1786 = 0;\nvar $ans1783 = D;\nvar $al1784 = L[247];\nif(R.isAR($n1781)) {\n$step1779 = $n1781.step;\n$al1784 = $n1781.from;\n$ans1783 = $n1781.ans;\n$elidedFrames1786 = $n1781.elidedFrames;\nn1781 = $n1781.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[247],1,$t,false);\n}\nvar n1781 = $n1781;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1783 = R.mC();\n}\nwhile(!R.isContinuation($ans1783)) {\nswitch($step1779) {\ncase 0: $step1779 = 1;\n$al1784 = L[250];\n// omitting isFunction check;\n$ans1783 = _times5.app(R.makeNumberFromString(\"3/2\"),iqr1787);\nbreak;\ncase 1: var anf_arg1817 = $ans1783;\n$step1779 = 2;\n$al1784 = L[249];\n// omitting isFunction check;\n$ans1783 = _plus5.app(third$quartile1777,anf_arg1817);\nbreak;\ncase 2: var anf_arg709 = $ans1783;\n$step1779 = 3;\n$al1784 = L[248];\n// omitting isFunction check;\n$ans1783 = _greaterthan5.app(n1781,anf_arg709);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1783;\ndefault: R.ffi.throwSpinnakerError(L[247],$step1779);\n}\n}\nif($step1779 !== 3) {\n$ans1783.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1784,$temp_lam1780,$step1779,[n1781],[],$elidedFrames1786);\n}\nreturn $ans1783;\n};\nvar anf_arg706 = R.mF($temp_lam1780,\"for-body<line 303, column 20>\");\n$step1767 = 21;\n$al1773 = L[247];\n// omitting isFunction check;\n$ans1772 = filter31.app(anf_arg706,lst1562);\nbreak;\ncase 21: var high$outliers1832 = $ans1772;\nvar $temp_lam1821 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__251($n1822) {\nvar $step1820 = 0;\nvar $elidedFrames1827 = 0;\nvar $ans1824 = D;\nvar $al1825 = L[251];\nif(R.isAR($n1822)) {\n$step1820 = $n1822.step;\n$al1825 = $n1822.from;\n$ans1824 = $n1822.ans;\n$elidedFrames1827 = $n1822.elidedFrames;\nn1822 = $n1822.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[251],1,$t,false);\n}\nvar n1822 = $n1822;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1824 = R.mC();\n}\nwhile(!R.isContinuation($ans1824)) {\nswitch($step1820) {\ncase 0: $step1820 = 1;\n$al1825 = L[254];\n// omitting isFunction check;\n$ans1824 = _times5.app(R.makeNumberFromString(\"3/2\"),iqr1787);\nbreak;\ncase 1: var anf_arg707 = $ans1824;\n$step1820 = 2;\n$al1825 = L[253];\n// omitting isFunction check;\n$ans1824 = _minus12.app(first$quartile1778,anf_arg707);\nbreak;\ncase 2: var anf_arg710 = $ans1824;\n$step1820 = 3;\n$al1825 = L[252];\n// omitting isFunction check;\n$ans1824 = _lessthan3.app(n1822,anf_arg710);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1824;\ndefault: R.ffi.throwSpinnakerError(L[251],$step1820);\n}\n}\nif($step1820 !== 3) {\n$ans1824.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1825,$temp_lam1821,$step1820,[n1822],[],$elidedFrames1827);\n}\nreturn $ans1824;\n};\nvar anf_arg711 = R.mF($temp_lam1821,\"for-body<line 306, column 19>\");\n$step1767 = 22;\n$al1773 = L[251];\n// omitting isFunction check;\n$ans1772 = filter31.app(anf_arg711,lst1562);\nbreak;\ncase 22: var low$outliers1831 = $ans1772;\n$al1773 = L[255];\nvar min$val1834 = G(lst1562,\"first\",L[255]);\n$step1767 = 23;\n$ans1772 = R.maybeMethodCall0(lst1562,\"last\",L[256]);\nbreak;\ncase 23: var max$val1833 = $ans1772;\n$step1767 = 24;\n$ans1772 = R.maybeMethodCall0(low$outliers1831,\"length\",L[257]);\nbreak;\ncase 24: var anf_arg715 = $ans1772;\n$step1767 = 25;\n$ans1772 = R.maybeMethodCall1(lst1562,\"get\",L[258],anf_arg715);\nbreak;\ncase 25: var low$whisker1837 = $ans1772;\n$step1767 = 26;\n$ans1772 = R.maybeMethodCall0(high$outliers1832,\"length\",L[259]);\nbreak;\ncase 26: var anf_arg712 = $ans1772;\n$step1767 = 27;\n$al1773 = L[265];\n// omitting isFunction check;\n$ans1772 = _minus12.app(n1776,anf_arg712);\nbreak;\ncase 27: var anf_arg716 = $ans1772;\n$step1767 = 28;\n$al1773 = L[264];\n// omitting isFunction check;\n$ans1772 = _minus12.app(anf_arg716,(1));\nbreak;\ncase 28: var anf_arg2024 = $ans1772;\n$step1767 = 29;\n$ans1772 = R.maybeMethodCall1(lst1562,\"get\",L[260],anf_arg2024);\nbreak;\ncase 29: var high$whisker1836 = $ans1772;\n$step1767 = 30;\n$ans1772 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[261],high$outliers1832);\nbreak;\ncase 30: var anf_obj3846 = $ans1772;\n$step1767 = 31;\n$ans1772 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[262],low$outliers1831);\nbreak;\ncase 31: var anf_obj3847 = $ans1772;\nvar ann_check_temp1838 = R.mO({\"label\":label1769,\n\"max-val\":max$val1833,\n\"min-val\":min$val1834,\n\"first-quartile\":first$quartile1778,\n\"median\":median1835,\n\"third-quartile\":third$quartile1777,\n\"high-whisker\":high$whisker1836,\n\"low-whisker\":low$whisker1837,\n\"high-outliers\":anf_obj3846,\n\"low-outliers\":anf_obj3847});\n$step1767 = 32;\n$al1773 = L[263];\nvar $ann$check1843 = R._cA(L[263],BoxData1839,ann_check_temp1838);\nif(R.isContinuation($ann$check1843)) {\n$ans1772 = $ann$check1843;\n}\nbreak;\ncase 32: $step1767 = 33;\n$ans1772 = ann_check_temp1838;\nbreak;\ncase 33: ++R.GAS;\nreturn $ans1772;\ndefault: R.ffi.throwSpinnakerError(L[242],$step1767);\n}\n}\nif($step1767 !== 33) {\n$ans1772.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1773,$temp_lam1768,$step1767,[label1769,lst1770],[high$whisker1836,first$quartile1778,splitted1847,anf_tuple_fields1845,tup3265,anf_tuple_fields1849,lst1562,anf_obj3846,low$outliers1831,n1776,min$val1834,median1835,iqr1787,low$whisker1837,ann_check_temp1838,third$quartile1777,max$val1833,high$outliers1832,splitted1844],$elidedFrames1775);\n}\nreturn $ans1772;\n};\nvar anf_assign1865 = R.mF($temp_lam1768,\"get-box-data\");\nget$box$data1866.$var = anf_assign1865;\nR.nothing;\nvar $temp_full1868 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__286($self1309,$color1869) {\nvar $step1867 = 0;\nvar $elidedFrames1873 = 0;\nvar $ans1870 = D;\nvar $al1871 = L[286];\nif(R.isAR($self1309)) {\n$step1867 = $self1309.step;\n$al1871 = $self1309.from;\n$ans1870 = $self1309.ans;\n$elidedFrames1873 = $self1309.elidedFrames;\nself1309 = $self1309.args[0];\ncolor1869 = $self1309.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[286],2,$t,true);\n}\nvar self1309 = $self1309;\nvar color1869 = $color1869;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1870 = R.mC();\n}\nwhile(!R.isContinuation($ans1870)) {\nswitch($step1867) {\ncase 0: $step1867 = 1;\n$al1871 = L[291];\nR._cA(L[291],R.gDA(L[291],\"I\",I44.dict.types,\"Color\"),color1869);\nbreak;\ncase 1: $step1867 = 2;\n$ans1870 = R.maybeMethodCall0(self1309,\"constr\",L[287]);\nbreak;\ncase 2: var anf_fun1876 = $ans1870;\n$al1871 = L[288];\nvar anf_extend1874 = G(self1309,\"obj\",L[288]);\n// caller optimization;\n$ans1870 = some33.app(color1869);\nvar anf_extend1875 = $ans1870;\nvar anf_arg737 = R.extendObj(L[289],anf_extend1874,{\"color\":anf_extend1875});\n$step1867 = 3;\n$al1871 = L[290];\nif(typeof(anf_fun1876.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1871,anf_fun1876);\n}\n$ans1870 = anf_fun1876.app(anf_arg737);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1870;\ndefault: R.ffi.throwSpinnakerError(L[286],$step1867);\n}\n}\nif($step1867 !== 3) {\n$ans1870.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1871,$temp_full1868,$step1867,[self1309,color1869],[],$elidedFrames1873);\n}\nreturn $ans1870;\n};\nvar color$method4030 = R.makeMethod1($temp_full1868,\"\");\nvar $temp_full1879 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__292($self704,$colors1880) {\nvar $step1878 = 0;\nvar $elidedFrames1884 = 0;\nvar $ans1881 = D;\nvar $al1882 = L[292];\nif(R.isAR($self704)) {\n$step1878 = $self704.step;\n$al1882 = $self704.from;\n$ans1881 = $self704.ans;\n$elidedFrames1884 = $self704.elidedFrames;\nself704 = $self704.args[0];\ncolors1880 = $self704.args[1];\nanf_extend1895 = $self704.vars[0];\ncases1885 = $self704.vars[1];\nanf_fun3831 = $self704.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[292],2,$t,true);\n}\nvar self704 = $self704;\nvar colors1880 = $colors1880;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1881 = R.mC();\n}\nwhile(!R.isContinuation($ans1881)) {\nswitch($step1878) {\ncase 0: $step1878 = 1;\n$al1882 = L[309];\nvar $ann$check1906 = R._cA(L[309],R.gDA(L[309],\"CL\",CL40.dict.types,\"LoC\"),colors1880);\nif(R.isContinuation($ann$check1906)) {\n$ans1881 = $ann$check1906;\n}\nbreak;\ncase 1: var cases1885 = colors1880;\n$step1878 = 2;\n$al1882 = L[308];\nvar $ann$check1903 = R._cA(L[308],List16,cases1885);\nif(R.isContinuation($ann$check1903)) {\n$ans1881 = $ann$check1903;\n}\nbreak;\ncase 2: $al1882 = L[298];\n$step1878 = $cases_dispatch1902[cases1885.$name] || 9;\nbreak;\ncase 3: if(cases1885.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[297],false,L[298],cases1885.$loc);\n}\n$step1878 = 4;\n$ans1881 = R.maybeMethodCall0(self704,\"constr\",L[293]);\nbreak;\ncase 4: var anf_fun733 = $ans1881;\n$al1882 = L[294];\nvar anf_extend1886 = G(self704,\"obj\",L[294]);\nvar anf_arg726 = R.extendObj(L[295],anf_extend1886,{\"colors\":none28});\n$step1878 = 10;\n$al1882 = L[296];\nif(typeof(anf_fun733.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1882,anf_fun733);\n}\n$ans1881 = anf_fun733.app(anf_arg726);\nbreak;\ncase 5: if(cases1885.$arity !== 2) {\nif(cases1885.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[307],2,cases1885.$arity,L[298],cases1885.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[307],true,L[298],cases1885.$loc);\n}\n}\nvar $fn1899 = cases1885.$constructor.$fieldNames;\nR.dF(cases1885.dict[$fn1899[0]],cases1885.$mut_fields_mask[0],false);\nR.dF(cases1885.dict[$fn1899[1]],cases1885.$mut_fields_mask[1],false);\nvar $temp_lam1888 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__299($c1889) {\nvar $step1887 = 0;\nvar $elidedFrames1893 = 0;\nvar $ans1890 = D;\nvar $al1891 = L[299];\nif(R.isAR($c1889)) {\n$step1887 = $c1889.step;\n$al1891 = $c1889.from;\n$ans1890 = $c1889.ans;\n$elidedFrames1893 = $c1889.elidedFrames;\nc1889 = $c1889.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[299],1,$t,false);\n}\nvar c1889 = $c1889;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1890 = R.mC();\n}\nwhile(!R.isContinuation($ans1890)) {\nswitch($step1887) {\ncase 0: $step1887 = 1;\n$al1891 = L[300];\nR._cA(L[300],R.gDA(L[300],\"I\",I44.dict.types,\"Color\"),c1889);\nbreak;\ncase 1: $step1887 = 2;\n$ans1890 = c1889;\nbreak;\ncase 2: ++R.GAS;\nreturn $ans1890;\ndefault: R.ffi.throwSpinnakerError(L[299],$step1887);\n}\n}\nif($step1887 !== 2) {\n$ans1890.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1891,$temp_lam1888,$step1887,[c1889],[],$elidedFrames1893);\n}\nreturn $ans1890;\n};\nvar anf_arg727 = R.mF($temp_lam1888,\"\");\n$step1878 = 6;\n$al1882 = L[306];\n// omitting isFunction check;\n$ans1881 = each25.app(anf_arg727,colors1880);\nbreak;\ncase 6: $step1878 = 7;\n$ans1881 = R.maybeMethodCall0(self704,\"constr\",L[301]);\nbreak;\ncase 7: var anf_fun3831 = $ans1881;\n$al1882 = L[302];\nvar anf_extend1895 = G(self704,\"obj\",L[302]);\n$step1878 = 8;\n$ans1881 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[303],colors1880);\nbreak;\ncase 8: var anf_arg730 = $ans1881;\n// caller optimization;\n$ans1881 = some33.app(anf_arg730);\nvar anf_extend1896 = $ans1881;\nvar anf_arg731 = R.extendObj(L[304],anf_extend1895,{\"colors\":anf_extend1896});\n$step1878 = 10;\n$al1882 = L[305];\nif(typeof(anf_fun3831.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1882,anf_fun3831);\n}\n$ans1881 = anf_fun3831.app(anf_arg731);\nbreak;\ncase 9: $ans1881 = R.throwNoCasesMatched(L[298],cases1885);\n$step1878 = 10;\nbreak;\ncase 10: ++R.GAS;\nreturn $ans1881;\ndefault: R.ffi.throwSpinnakerError(L[292],$step1878);\n}\n}\nif($step1878 !== 10) {\n$ans1881.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1882,$temp_full1879,$step1878,[self704,colors1880],[anf_extend1895,cases1885,anf_fun3831],$elidedFrames1884);\n}\nreturn $ans1881;\n};\nvar color$list$method4095 = R.makeMethod1($temp_full1879,\"\");\nvar $temp_full1910 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__310($self981,$color1911) {\nvar $step1909 = 0;\nvar $elidedFrames1915 = 0;\nvar $ans1912 = D;\nvar $al1913 = L[310];\nif(R.isAR($self981)) {\n$step1909 = $self981.step;\n$al1913 = $self981.from;\n$ans1912 = $self981.ans;\n$elidedFrames1915 = $self981.elidedFrames;\nself981 = $self981.args[0];\ncolor1911 = $self981.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[310],2,$t,true);\n}\nvar self981 = $self981;\nvar color1911 = $color1911;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1912 = R.mC();\n}\nwhile(!R.isContinuation($ans1912)) {\nswitch($step1909) {\ncase 0: $step1909 = 1;\n$al1913 = L[315];\nR._cA(L[315],R.gDA(L[315],\"I\",I44.dict.types,\"Color\"),color1911);\nbreak;\ncase 1: $step1909 = 2;\n$ans1912 = R.maybeMethodCall0(self981,\"constr\",L[311]);\nbreak;\ncase 2: var anf_fun1918 = $ans1912;\n$al1913 = L[312];\nvar anf_extend1916 = G(self981,\"obj\",L[312]);\n// caller optimization;\n$ans1912 = some33.app(color1911);\nvar anf_extend1917 = $ans1912;\nvar anf_arg738 = R.extendObj(L[313],anf_extend1916,{\"pointer-color\":anf_extend1917});\n$step1909 = 3;\n$al1913 = L[314];\nif(typeof(anf_fun1918.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1913,anf_fun1918);\n}\n$ans1912 = anf_fun1918.app(anf_arg738);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1912;\ndefault: R.ffi.throwSpinnakerError(L[310],$step1909);\n}\n}\nif($step1909 !== 3) {\n$ans1912.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1913,$temp_full1910,$step1909,[self981,color1911],[],$elidedFrames1915);\n}\nreturn $ans1912;\n};\nvar pointer$color$method4113 = R.makeMethod1($temp_full1910,\"\");\nvar $temp_full1925 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__316($self1254,$color1926) {\nvar $step1924 = 0;\nvar $elidedFrames1932 = 0;\nvar $ans1929 = D;\nvar $al1930 = L[316];\nif(R.isAR($self1254)) {\n$step1924 = $self1254.step;\n$al1930 = $self1254.from;\n$ans1929 = $self1254.ans;\n$elidedFrames1932 = $self1254.elidedFrames;\nself1254 = $self1254.args[0];\ncolor1926 = $self1254.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[316],2,$t,true);\n}\nvar self1254 = $self1254;\nvar color1926 = $color1926;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1929 = R.mC();\n}\nwhile(!R.isContinuation($ans1929)) {\nswitch($step1924) {\ncase 0: $step1924 = 1;\n$al1930 = L[321];\nR._cA(L[321],R.gDA(L[321],\"I\",I44.dict.types,\"Color\"),color1926);\nbreak;\ncase 1: $step1924 = 2;\n$ans1929 = R.maybeMethodCall0(self1254,\"constr\",L[317]);\nbreak;\ncase 2: var anf_fun1935 = $ans1929;\n$al1930 = L[318];\nvar anf_extend1933 = G(self1254,\"obj\",L[318]);\n// caller optimization;\n$ans1929 = some33.app(color1926);\nvar anf_extend1934 = $ans1929;\nvar anf_arg1936 = R.extendObj(L[319],anf_extend1933,{\"default-interval-color\":anf_extend1934});\n$step1924 = 3;\n$al1930 = L[320];\nif(typeof(anf_fun1935.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1930,anf_fun1935);\n}\n$ans1929 = anf_fun1935.app(anf_arg1936);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1929;\ndefault: R.ffi.throwSpinnakerError(L[316],$step1924);\n}\n}\nif($step1924 !== 3) {\n$ans1929.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1930,$temp_full1925,$step1924,[self1254,color1926],[],$elidedFrames1932);\n}\nreturn $ans1929;\n};\nvar interval$color$method4120 = R.makeMethod1($temp_full1925,\"\");\nvar $temp_full1939 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__322($self1507,$lineWidth1940) {\nvar $step1938 = 0;\nvar $elidedFrames1944 = 0;\nvar $ans1941 = D;\nvar $al1942 = L[322];\nif(R.isAR($self1507)) {\n$step1938 = $self1507.step;\n$al1942 = $self1507.from;\n$ans1941 = $self1507.ans;\n$elidedFrames1944 = $self1507.elidedFrames;\nself1507 = $self1507.args[0];\nlineWidth1940 = $self1507.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[322],2,$t,true);\n}\nvar self1507 = $self1507;\nvar lineWidth1940 = $lineWidth1940;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1941 = R.mC();\n}\nwhile(!R.isContinuation($ans1941)) {\nswitch($step1938) {\ncase 0: $step1938 = 1;\n$al1942 = L[329];\nR._cA(L[329],$type$Number3,lineWidth1940);\nbreak;\ncase 1: $step1938 = 2;\n$al1942 = L[328];\n// omitting isFunction check;\n$ans1941 = _lessthan3.app(lineWidth1940,(0));\nbreak;\ncase 2: var anf_if1948 = $ans1941;\n$step1938 = R.checkPyretTrue(anf_if1948)?3:5;\nbreak;\ncase 3: $step1938 = 4;\n$al1942 = L[327];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1942,raise1);\n}\n$ans1941 = raise1.app((\"line-width: Line Width must be non-negative\"));\nbreak;\ncase 4: $step1938 = 6;\n$ans1941 = nothing5;\nbreak;\ncase 5: $step1938 = 6;\n$ans1941 = nothing5;\nbreak;\ncase 6: $step1938 = 7;\n$ans1941 = R.maybeMethodCall0(self1507,\"constr\",L[323]);\nbreak;\ncase 7: var anf_fun1946 = $ans1941;\n$al1942 = L[324];\nvar anf_extend1945 = G(self1507,\"obj\",L[324]);\nvar anf_arg755 = R.extendObj(L[325],anf_extend1945,{\"lineWidth\":lineWidth1940});\n$step1938 = 8;\n$al1942 = L[326];\nif(typeof(anf_fun1946.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1942,anf_fun1946);\n}\n$ans1941 = anf_fun1946.app(anf_arg755);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans1941;\ndefault: R.ffi.throwSpinnakerError(L[322],$step1938);\n}\n}\nif($step1938 !== 8) {\n$ans1941.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1942,$temp_full1939,$step1938,[self1507,lineWidth1940],[],$elidedFrames1944);\n}\nreturn $ans1941;\n};\nvar line$width$method4033 = R.makeMethod1($temp_full1939,\"\");\nvar $temp_full1954 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__330($self1530,$style1955) {\nvar $step1953 = 0;\nvar $elidedFrames1962 = 0;\nvar $ans1959 = D;\nvar $al1960 = L[330];\nif(R.isAR($self1530)) {\n$step1953 = $self1530.step;\n$al1960 = $self1530.from;\n$ans1959 = $self1530.ans;\n$elidedFrames1962 = $self1530.elidedFrames;\nself1530 = $self1530.args[0];\nstyle1955 = $self1530.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[330],2,$t,true);\n}\nvar self1530 = $self1530;\nvar style1955 = $style1955;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1959 = R.mC();\n}\nwhile(!R.isContinuation($ans1959)) {\nswitch($step1953) {\ncase 0: $step1953 = 1;\n$al1960 = L[339];\nR._cA(L[339],$type$String8,style1955);\nbreak;\ncase 1: // caller optimization;\n$ans1959 = string$equal2.app(style1955,(\"sticks\"));\nvar anf_arg751 = $ans1959;\n$step1953 = 2;\n$al1960 = L[338];\nif(typeof(not6.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1960,not6);\n}\n$ans1959 = not6.app(anf_arg751);\nbreak;\ncase 2: var anf_if1967 = $ans1959;\n$step1953 = R.checkPyretTrue(anf_if1967)?3:8;\nbreak;\ncase 3: // caller optimization;\n$ans1959 = string$equal2.app(style1955,(\"bars\"));\nvar anf_arg3902 = $ans1959;\n$step1953 = 4;\n$al1960 = L[337];\nif(typeof(not6.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1960,not6);\n}\n$ans1959 = not6.app(anf_arg3902);\nbreak;\ncase 4: var anf_if1966 = $ans1959;\n$step1953 = R.checkPyretTrue(anf_if1966)?5:7;\nbreak;\ncase 5: // caller optimization;\n$ans1959 = string$equal2.app(style1955,(\"boxes\"));\nvar anf_arg766 = $ans1959;\n$step1953 = 6;\n$al1960 = L[336];\nif(typeof(not6.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1960,not6);\n}\n$ans1959 = not6.app(anf_arg766);\nbreak;\ncase 6: var anf_arg778 = $ans1959;\n$ans1959 = R.checkWrapBoolean(anf_arg778);\n$step1953 = 9;\nbreak;\ncase 7: $step1953 = 9;\n$ans1959 = (false);\nbreak;\ncase 8: $step1953 = 9;\n$ans1959 = (false);\nbreak;\ncase 9: var anf_if3947 = $ans1959;\n$step1953 = R.checkPyretTrue(anf_if3947)?10:12;\nbreak;\ncase 10: $step1953 = 11;\n$al1960 = L[335];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1960,raise1);\n}\n$ans1959 = raise1.app((\"style: must be either sticks, bars, or boxes\"));\nbreak;\ncase 11: $step1953 = 13;\n$ans1959 = nothing5;\nbreak;\ncase 12: $step1953 = 13;\n$ans1959 = nothing5;\nbreak;\ncase 13: $step1953 = 14;\n$ans1959 = R.maybeMethodCall0(self1530,\"constr\",L[331]);\nbreak;\ncase 14: var anf_fun1965 = $ans1959;\n$al1960 = L[332];\nvar anf_extend1963 = G(self1530,\"obj\",L[332]);\nvar anf_arg768 = R.extendObj(L[333],anf_extend1963,{\"style\":style1955});\n$step1953 = 15;\n$al1960 = L[334];\nif(typeof(anf_fun1965.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1960,anf_fun1965);\n}\n$ans1959 = anf_fun1965.app(anf_arg768);\nbreak;\ncase 15: ++R.GAS;\nreturn $ans1959;\ndefault: R.ffi.throwSpinnakerError(L[330],$step1953);\n}\n}\nif($step1953 !== 15) {\n$ans1959.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1960,$temp_full1954,$step1953,[self1530,style1955],[],$elidedFrames1962);\n}\nreturn $ans1959;\n};\nvar style$method4129 = R.makeMethod1($temp_full1954,\"\");\nvar $temp_full1973 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__340($self1417,$curved1974) {\nvar $step1972 = 0;\nvar $elidedFrames1978 = 0;\nvar $ans1975 = D;\nvar $al1976 = L[340];\nif(R.isAR($self1417)) {\n$step1972 = $self1417.step;\n$al1976 = $self1417.from;\n$ans1975 = $self1417.ans;\n$elidedFrames1978 = $self1417.elidedFrames;\nself1417 = $self1417.args[0];\ncurved1974 = $self1417.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[340],2,$t,true);\n}\nvar self1417 = $self1417;\nvar curved1974 = $curved1974;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1975 = R.mC();\n}\nwhile(!R.isContinuation($ans1975)) {\nswitch($step1972) {\ncase 0: $step1972 = 1;\n$al1976 = L[349];\nR._cA(L[349],$type$Boolean6,curved1974);\nbreak;\ncase 1: $step1972 = R.checkPyretTrue(curved1974)?2:4;\nbreak;\ncase 2: $step1972 = 3;\n$ans1975 = R.maybeMethodCall0(self1417,\"constr\",L[341]);\nbreak;\ncase 3: var anf_fun1980 = $ans1975;\n$al1976 = L[342];\nvar anf_extend1979 = G(self1417,\"obj\",L[342]);\nvar anf_arg779 = R.extendObj(L[343],anf_extend1979,{\"curved\":(\"function\")});\n$step1972 = 6;\n$al1976 = L[344];\nif(typeof(anf_fun1980.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1976,anf_fun1980);\n}\n$ans1975 = anf_fun1980.app(anf_arg779);\nbreak;\ncase 4: $step1972 = 5;\n$ans1975 = R.maybeMethodCall0(self1417,\"constr\",L[345]);\nbreak;\ncase 5: var anf_fun1982 = $ans1975;\n$al1976 = L[346];\nvar anf_extend1981 = G(self1417,\"obj\",L[346]);\nvar anf_arg2111 = R.extendObj(L[347],anf_extend1981,{\"curved\":(\"none\")});\n$step1972 = 6;\n$al1976 = L[348];\nif(typeof(anf_fun1982.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1976,anf_fun1982);\n}\n$ans1975 = anf_fun1982.app(anf_arg2111);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1975;\ndefault: R.ffi.throwSpinnakerError(L[340],$step1972);\n}\n}\nif($step1972 !== 6) {\n$ans1975.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1976,$temp_full1973,$step1972,[self1417,curved1974],[],$elidedFrames1978);\n}\nreturn $ans1975;\n};\nvar curve$method4032 = R.makeMethod1($temp_full1973,\"\");\nvar $temp_full1988 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__350($self1540,$labels1989) {\nvar $step1987 = 0;\nvar $elidedFrames1994 = 0;\nvar $ans1991 = D;\nvar $al1992 = L[350];\nif(R.isAR($self1540)) {\n$step1987 = $self1540.step;\n$al1992 = $self1540.from;\n$ans1991 = $self1540.ans;\n$elidedFrames1994 = $self1540.elidedFrames;\nself1540 = $self1540.args[0];\nlabels1989 = $self1540.args[1];\nanf_arg882 = $self1540.vars[0];\nanf_extend2007 = $self1540.vars[1];\nanf_fun797 = $self1540.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[350],2,$t,true);\n}\nvar self1540 = $self1540;\nvar labels1989 = $labels1989;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1991 = R.mC();\n}\nwhile(!R.isContinuation($ans1991)) {\nswitch($step1987) {\ncase 0: $step1987 = 1;\n$al1992 = L[365];\nvar $ann$check2009 = R._cA(L[365],R.gDA(L[365],\"CL\",CL40.dict.types,\"LoS\"),labels1989);\nif(R.isContinuation($ann$check2009)) {\n$ans1991 = $ann$check2009;\n}\nbreak;\ncase 1: $al1992 = L[351];\nvar anf_get_bang1995 = G(self1540,\"obj\",L[351]);\nvar anf_method_obj1996 = R.gFR(anf_get_bang1995,\"ps\",L[352]);\n$step1987 = 2;\n$ans1991 = R.maybeMethodCall0(anf_method_obj1996,\"length\",L[353]);\nbreak;\ncase 2: var anf_arg882 = $ans1991;\n$step1987 = 3;\n$ans1991 = R.maybeMethodCall0(labels1989,\"length\",L[354]);\nbreak;\ncase 3: var anf_arg883 = $ans1991;\n$step1987 = 4;\n$al1992 = L[364];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1992,equal$always1);\n}\n$ans1991 = equal$always1.app(anf_arg882,anf_arg883);\nbreak;\ncase 4: var anf_arg884 = $ans1991;\n$ans1991 = R.not(anf_arg884);\nvar anf_if879 = $ans1991;\n$step1987 = R.checkPyretTrue(anf_if879)?5:7;\nbreak;\ncase 5: $step1987 = 6;\n$al1992 = L[363];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1992,raise1);\n}\n$ans1991 = raise1.app((\"plot: xs and labels should have the same length\"));\nbreak;\ncase 6: $step1987 = 8;\n$ans1991 = nothing5;\nbreak;\ncase 7: $step1987 = 8;\n$ans1991 = nothing5;\nbreak;\ncase 8: $step1987 = 9;\n$ans1991 = R.maybeMethodCall0(self1540,\"constr\",L[355]);\nbreak;\ncase 9: var anf_fun797 = $ans1991;\n$al1992 = L[356];\nvar anf_extend2007 = G(self1540,\"obj\",L[356]);\nvar $temp_lam1998 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__357($arr1999,$label2000) {\nvar $step1997 = 0;\nvar $elidedFrames2004 = 0;\nvar $ans2001 = D;\nvar $al2002 = L[357];\nif(R.isAR($arr1999)) {\n$step1997 = $arr1999.step;\n$al2002 = $arr1999.from;\n$ans2001 = $arr1999.ans;\n$elidedFrames2004 = $arr1999.elidedFrames;\narr1999 = $arr1999.args[0];\nlabel2000 = $arr1999.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[357],2,$t,false);\n}\nvar arr1999 = $arr1999;\nvar label2000 = $label2000;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2001 = R.mC();\n}\nwhile(!R.isContinuation($ans2001)) {\nswitch($step1997) {\ncase 0: // caller optimization;\n$ans2001 = raw$array$set7.app(arr1999,(2),label2000);\n$step1997 = 1;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2001;\ndefault: R.ffi.throwSpinnakerError(L[357],$step1997);\n}\n}\nif($step1997 !== 1) {\n$ans2001.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2002,$temp_lam1998,$step1997,[arr1999,label2000],[],$elidedFrames2004);\n}\nreturn $ans2001;\n};\nvar anf_arg798 = R.mF($temp_lam1998,\"\");\n$al1992 = L[358];\nvar anf_get_bang2006 = G(self1540,\"obj\",L[358]);\nvar anf_arg795 = R.gFR(anf_get_bang2006,\"ps\",L[359]);\n$step1987 = 10;\n$al1992 = L[362];\n// omitting isFunction check;\n$ans1991 = map226.app(anf_arg798,anf_arg795,labels1989);\nbreak;\ncase 10: var anf_extend2008 = $ans1991;\nvar anf_arg796 = R.extendObj(L[360],anf_extend2007,{\"ps\":anf_extend2008});\n$step1987 = 11;\n$al1992 = L[361];\nif(typeof(anf_fun797.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1992,anf_fun797);\n}\n$ans1991 = anf_fun797.app(anf_arg796);\nbreak;\ncase 11: ++R.GAS;\nreturn $ans1991;\ndefault: R.ffi.throwSpinnakerError(L[350],$step1987);\n}\n}\nif($step1987 !== 11) {\n$ans1991.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1992,$temp_full1988,$step1987,[self1540,labels1989],[anf_arg882,anf_extend2007,anf_fun797],$elidedFrames1994);\n}\nreturn $ans1991;\n};\nvar labels$method4041 = R.makeMethod1($temp_full1988,\"\");\nvar $temp_full2014 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__366($self2015,$images2016) {\nvar $step2013 = 0;\nvar $elidedFrames2021 = 0;\nvar $ans2018 = D;\nvar $al2019 = L[366];\nif(R.isAR($self2015)) {\n$step2013 = $self2015.step;\n$al2019 = $self2015.from;\n$ans2018 = $self2015.ans;\n$elidedFrames2021 = $self2015.elidedFrames;\nself2015 = $self2015.args[0];\nimages2016 = $self2015.args[1];\nanf_arg2128 = $self2015.vars[0];\nanf_extend2033 = $self2015.vars[1];\nanf_fun2036 = $self2015.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[366],2,$t,true);\n}\nvar self2015 = $self2015;\nvar images2016 = $images2016;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2018 = R.mC();\n}\nwhile(!R.isContinuation($ans2018)) {\nswitch($step2013) {\ncase 0: $step2013 = 1;\n$al2019 = L[381];\nvar $ann$check2050 = R._cA(L[381],R.gDA(L[381],\"CL\",CL40.dict.types,\"LoI\"),images2016);\nif(R.isContinuation($ann$check2050)) {\n$ans2018 = $ann$check2050;\n}\nbreak;\ncase 1: $al2019 = L[367];\nvar anf_get_bang2022 = G(self2015,\"obj\",L[367]);\nvar anf_method_obj3999 = R.gFR(anf_get_bang2022,\"ps\",L[368]);\n$step2013 = 2;\n$ans2018 = R.maybeMethodCall0(anf_method_obj3999,\"length\",L[369]);\nbreak;\ncase 2: var anf_arg2128 = $ans2018;\n$step2013 = 3;\n$ans2018 = R.maybeMethodCall0(images2016,\"length\",L[370]);\nbreak;\ncase 3: var anf_arg805 = $ans2018;\n$step2013 = 4;\n$al2019 = L[380];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2019,equal$always1);\n}\n$ans2018 = equal$always1.app(anf_arg2128,anf_arg805);\nbreak;\ncase 4: var anf_arg2130 = $ans2018;\n$ans2018 = R.not(anf_arg2130);\nvar anf_if2048 = $ans2018;\n$step2013 = R.checkPyretTrue(anf_if2048)?5:7;\nbreak;\ncase 5: $step2013 = 6;\n$al2019 = L[379];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2019,raise1);\n}\n$ans2018 = raise1.app((\"plot: xs and images should have the same length\"));\nbreak;\ncase 6: $step2013 = 8;\n$ans2018 = nothing5;\nbreak;\ncase 7: $step2013 = 8;\n$ans2018 = nothing5;\nbreak;\ncase 8: $step2013 = 9;\n$ans2018 = R.maybeMethodCall0(self2015,\"constr\",L[371]);\nbreak;\ncase 9: var anf_fun2036 = $ans2018;\n$al2019 = L[372];\nvar anf_extend2033 = G(self2015,\"obj\",L[372]);\nvar $temp_lam2024 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__373($arr2025,$image2026) {\nvar $step2023 = 0;\nvar $elidedFrames2030 = 0;\nvar $ans2027 = D;\nvar $al2028 = L[373];\nif(R.isAR($arr2025)) {\n$step2023 = $arr2025.step;\n$al2028 = $arr2025.from;\n$ans2027 = $arr2025.ans;\n$elidedFrames2030 = $arr2025.elidedFrames;\narr2025 = $arr2025.args[0];\nimage2026 = $arr2025.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[373],2,$t,false);\n}\nvar arr2025 = $arr2025;\nvar image2026 = $image2026;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2027 = R.mC();\n}\nwhile(!R.isContinuation($ans2027)) {\nswitch($step2023) {\ncase 0: // caller optimization;\n$ans2027 = raw$array$set7.app(arr2025,(3),image2026);\n$step2023 = 1;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2027;\ndefault: R.ffi.throwSpinnakerError(L[373],$step2023);\n}\n}\nif($step2023 !== 1) {\n$ans2027.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2028,$temp_lam2024,$step2023,[arr2025,image2026],[],$elidedFrames2030);\n}\nreturn $ans2027;\n};\nvar anf_arg838 = R.mF($temp_lam2024,\"\");\n$al2019 = L[374];\nvar anf_get_bang2032 = G(self2015,\"obj\",L[374]);\nvar anf_arg828 = R.gFR(anf_get_bang2032,\"ps\",L[375]);\n$step2013 = 10;\n$al2019 = L[378];\n// omitting isFunction check;\n$ans2018 = map226.app(anf_arg838,anf_arg828,images2016);\nbreak;\ncase 10: var anf_extend2034 = $ans2018;\nvar anf_arg2047 = R.extendObj(L[376],anf_extend2033,{\"ps\":anf_extend2034});\n$step2013 = 11;\n$al2019 = L[377];\nif(typeof(anf_fun2036.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2019,anf_fun2036);\n}\n$ans2018 = anf_fun2036.app(anf_arg2047);\nbreak;\ncase 11: ++R.GAS;\nreturn $ans2018;\ndefault: R.ffi.throwSpinnakerError(L[366],$step2013);\n}\n}\nif($step2013 !== 11) {\n$ans2018.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2019,$temp_full2014,$step2013,[self2015,images2016],[anf_arg2128,anf_extend2033,anf_fun2036],$elidedFrames2021);\n}\nreturn $ans2018;\n};\nvar image$labels$method4042 = R.makeMethod1($temp_full2014,\"\");\nvar $temp_full2053 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__382($self1754,$offsets2054) {\nvar $step2052 = 0;\nvar $elidedFrames2058 = 0;\nvar $ans2055 = D;\nvar $al2056 = L[382];\nif(R.isAR($self1754)) {\n$step2052 = $self1754.step;\n$al2056 = $self1754.from;\n$ans2055 = $self1754.ans;\n$elidedFrames2058 = $self1754.elidedFrames;\nself1754 = $self1754.args[0];\noffsets2054 = $self1754.args[1];\nanf_extend2080 = $self1754.vars[0];\nanf_fun2083 = $self1754.vars[1];\nanf_arg829 = $self1754.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[382],2,$t,true);\n}\nvar self1754 = $self1754;\nvar offsets2054 = $offsets2054;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2055 = R.mC();\n}\nwhile(!R.isContinuation($ans2055)) {\nswitch($step2052) {\ncase 0: $step2052 = 1;\n$al2056 = L[400];\nvar $ann$check2085 = R._cA(L[400],R.gDA(L[400],\"CL\",CL40.dict.types,\"LoN\"),offsets2054);\nif(R.isContinuation($ann$check2085)) {\n$ans2055 = $ann$check2085;\n}\nbreak;\ncase 1: $al2056 = L[383];\nvar anf_get_bang2059 = G(self1754,\"obj\",L[383]);\nvar anf_arg821 = R.gFR(anf_get_bang2059,\"tab\",L[384]);\n// caller optimization;\n$ans2055 = raw$array$length7.app(anf_arg821);\nvar anf_arg829 = $ans2055;\n$step2052 = 2;\n$ans2055 = R.maybeMethodCall0(offsets2054,\"length\",L[385]);\nbreak;\ncase 2: var anf_arg830 = $ans2055;\n$step2052 = 3;\n$al2056 = L[399];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2056,equal$always1);\n}\n$ans2055 = equal$always1.app(anf_arg829,anf_arg830);\nbreak;\ncase 3: var anf_arg825 = $ans2055;\n$ans2055 = R.not(anf_arg825);\nvar anf_if2084 = $ans2055;\n$step2052 = R.checkPyretTrue(anf_if2084)?4:6;\nbreak;\ncase 4: $step2052 = 5;\n$al2056 = L[398];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2056,raise1);\n}\n$ans2055 = raise1.app((\"exploding-pie-chart: labels and offsets should have the same length\"));\nbreak;\ncase 5: $step2052 = 7;\n$ans2055 = nothing5;\nbreak;\ncase 6: $step2052 = 7;\n$ans2055 = nothing5;\nbreak;\ncase 7: var $temp_lam2062 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__386($offset2063) {\nvar $step2061 = 0;\nvar $elidedFrames2067 = 0;\nvar $ans2064 = D;\nvar $al2065 = L[386];\nif(R.isAR($offset2063)) {\n$step2061 = $offset2063.step;\n$al2065 = $offset2063.from;\n$ans2064 = $offset2063.ans;\n$elidedFrames2067 = $offset2063.elidedFrames;\noffset2063 = $offset2063.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[386],1,$t,false);\n}\nvar offset2063 = $offset2063;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2064 = R.mC();\n}\nwhile(!R.isContinuation($ans2064)) {\nswitch($step2061) {\ncase 0: $step2061 = 1;\n$al2065 = L[389];\n// omitting isFunction check;\n$ans2064 = _lessthan3.app(offset2063,(0));\nbreak;\ncase 1: var anf_if2068 = $ans2064;\n$step2061 = R.checkPyretTrue(anf_if2068)?2:3;\nbreak;\ncase 2: $step2061 = 5;\n$ans2064 = (true);\nbreak;\ncase 3: $step2061 = 4;\n$al2065 = L[388];\n// omitting isFunction check;\n$ans2064 = _greaterthan5.app(offset2063,(1));\nbreak;\ncase 4: var anf_arg824 = $ans2064;\n$ans2064 = R.checkWrapBoolean(anf_arg824);\n$step2061 = 5;\nbreak;\ncase 5: var anf_if2191 = $ans2064;\n$step2061 = R.checkPyretTrue(anf_if2191)?6:8;\nbreak;\ncase 6: $step2061 = 7;\n$al2065 = L[387];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2065,raise1);\n}\n$ans2064 = raise1.app((\"exploding-pie-chart: offset must be between 0 and 1\"));\nbreak;\ncase 7: $step2061 = 9;\n$ans2064 = nothing5;\nbreak;\ncase 8: $step2061 = 9;\n$ans2064 = nothing5;\nbreak;\ncase 9: ++R.GAS;\nreturn $ans2064;\ndefault: R.ffi.throwSpinnakerError(L[386],$step2061);\n}\n}\nif($step2061 !== 9) {\n$ans2064.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2065,$temp_lam2062,$step2061,[offset2063],[],$elidedFrames2067);\n}\nreturn $ans2064;\n};\nvar anf_arg831 = R.mF($temp_lam2062,\"for-body<line 396, column 2>\");\n$step2052 = 8;\n$al2056 = L[386];\n// omitting isFunction check;\n$ans2055 = each25.app(anf_arg831,offsets2054);\nbreak;\ncase 8: $step2052 = 9;\n$ans2055 = R.maybeMethodCall0(self1754,\"constr\",L[390]);\nbreak;\ncase 9: var anf_fun2083 = $ans2055;\n$al2056 = L[391];\nvar anf_extend2080 = G(self1754,\"obj\",L[391]);\nvar $temp_lam2071 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__392($arr2072,$offset2073) {\nvar $step2070 = 0;\nvar $elidedFrames2077 = 0;\nvar $ans2074 = D;\nvar $al2075 = L[392];\nif(R.isAR($arr2072)) {\n$step2070 = $arr2072.step;\n$al2075 = $arr2072.from;\n$ans2074 = $arr2072.ans;\n$elidedFrames2077 = $arr2072.elidedFrames;\narr2072 = $arr2072.args[0];\noffset2073 = $arr2072.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[392],2,$t,false);\n}\nvar arr2072 = $arr2072;\nvar offset2073 = $offset2073;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2074 = R.mC();\n}\nwhile(!R.isContinuation($ans2074)) {\nswitch($step2070) {\ncase 0: // caller optimization;\n$ans2074 = raw$array$set7.app(arr2072,(2),offset2073);\n$step2070 = 1;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2074;\ndefault: R.ffi.throwSpinnakerError(L[392],$step2070);\n}\n}\nif($step2070 !== 1) {\n$ans2074.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2075,$temp_lam2071,$step2070,[arr2072,offset2073],[],$elidedFrames2077);\n}\nreturn $ans2074;\n};\nvar anf_arg834 = R.mF($temp_lam2071,\"\");\n$al2056 = L[393];\nvar anf_get_bang2079 = G(self1754,\"obj\",L[393]);\nvar anf_arg4078 = R.gFR(anf_get_bang2079,\"tab\",L[394]);\n// caller optimization;\n$ans2055 = raw$array$to$list4.app(anf_arg4078);\nvar anf_arg856 = $ans2055;\n$step2052 = 10;\n$al2056 = L[397];\n// omitting isFunction check;\n$ans2055 = map226.app(anf_arg834,anf_arg856,offsets2054);\nbreak;\ncase 10: var anf_arg862 = $ans2055;\n// caller optimization;\n$ans2055 = raw$array$from$list6.app(anf_arg862);\nvar anf_extend2081 = $ans2055;\nvar anf_arg864 = R.extendObj(L[395],anf_extend2080,{\"tab\":anf_extend2081});\n$step2052 = 11;\n$al2056 = L[396];\nif(typeof(anf_fun2083.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2056,anf_fun2083);\n}\n$ans2055 = anf_fun2083.app(anf_arg864);\nbreak;\ncase 11: ++R.GAS;\nreturn $ans2055;\ndefault: R.ffi.throwSpinnakerError(L[382],$step2052);\n}\n}\nif($step2052 !== 11) {\n$ans2055.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2056,$temp_full2053,$step2052,[self1754,offsets2054],[anf_extend2080,anf_fun2083,anf_arg829],$elidedFrames2058);\n}\nreturn $ans2055;\n};\nvar explode$method4094 = R.makeMethod1($temp_full2053,\"\");\nvar $temp_full2088 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__401($self2089,$labels2090) {\nvar $step2087 = 0;\nvar $elidedFrames2094 = 0;\nvar $ans2091 = D;\nvar $al2092 = L[401];\nif(R.isAR($self2089)) {\n$step2087 = $self2089.step;\n$al2092 = $self2089.from;\n$ans2091 = $self2089.ans;\n$elidedFrames2094 = $self2089.elidedFrames;\nself2089 = $self2089.args[0];\nlabels2090 = $self2089.args[1];\nanf_arg867 = $self2089.vars[0];\nanf_extend2108 = $self2089.vars[1];\nanf_fun899 = $self2089.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[401],2,$t,true);\n}\nvar self2089 = $self2089;\nvar labels2090 = $labels2090;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2091 = R.mC();\n}\nwhile(!R.isContinuation($ans2091)) {\nswitch($step2087) {\ncase 0: $step2087 = 1;\n$al2092 = L[415];\nvar $ann$check2111 = R._cA(L[415],R.gDA(L[415],\"CL\",CL40.dict.types,\"LoS\"),labels2090);\nif(R.isContinuation($ann$check2111)) {\n$ans2091 = $ann$check2111;\n}\nbreak;\ncase 1: $al2092 = L[402];\nvar anf_get_bang2095 = G(self2089,\"obj\",L[402]);\nvar anf_arg859 = R.gFR(anf_get_bang2095,\"tab\",L[403]);\n// caller optimization;\n$ans2091 = raw$array$length7.app(anf_arg859);\nvar anf_arg867 = $ans2091;\n$step2087 = 2;\n$ans2091 = R.maybeMethodCall0(labels2090,\"length\",L[404]);\nbreak;\ncase 2: var anf_arg860 = $ans2091;\n$step2087 = 3;\n$al2092 = L[414];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2092,equal$always1);\n}\n$ans2091 = equal$always1.app(anf_arg867,anf_arg860);\nbreak;\ncase 3: var anf_arg868 = $ans2091;\n$ans2091 = R.not(anf_arg868);\nvar anf_if2110 = $ans2091;\n$step2087 = R.checkPyretTrue(anf_if2110)?4:6;\nbreak;\ncase 4: $step2087 = 5;\n$al2092 = L[413];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2092,raise1);\n}\n$ans2091 = raise1.app((\"histogram: xs and labels should have the same length\"));\nbreak;\ncase 5: $step2087 = 7;\n$ans2091 = nothing5;\nbreak;\ncase 6: $step2087 = 7;\n$ans2091 = nothing5;\nbreak;\ncase 7: $step2087 = 8;\n$ans2091 = R.maybeMethodCall0(self2089,\"constr\",L[405]);\nbreak;\ncase 8: var anf_fun899 = $ans2091;\n$al2092 = L[406];\nvar anf_extend2108 = G(self2089,\"obj\",L[406]);\nvar $temp_lam2099 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__407($arr2206,$label2100) {\nvar $step2098 = 0;\nvar $elidedFrames2105 = 0;\nvar $ans2102 = D;\nvar $al2103 = L[407];\nif(R.isAR($arr2206)) {\n$step2098 = $arr2206.step;\n$al2103 = $arr2206.from;\n$ans2102 = $arr2206.ans;\n$elidedFrames2105 = $arr2206.elidedFrames;\narr2206 = $arr2206.args[0];\nlabel2100 = $arr2206.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[407],2,$t,false);\n}\nvar arr2206 = $arr2206;\nvar label2100 = $label2100;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2102 = R.mC();\n}\nwhile(!R.isContinuation($ans2102)) {\nswitch($step2098) {\ncase 0: // caller optimization;\n$ans2102 = raw$array$set7.app(arr2206,(0),label2100);\n$step2098 = 1;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2102;\ndefault: R.ffi.throwSpinnakerError(L[407],$step2098);\n}\n}\nif($step2098 !== 1) {\n$ans2102.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2103,$temp_lam2099,$step2098,[arr2206,label2100],[],$elidedFrames2105);\n}\nreturn $ans2102;\n};\nvar anf_arg900 = R.mF($temp_lam2099,\"\");\n$al2092 = L[408];\nvar anf_get_bang2107 = G(self2089,\"obj\",L[408]);\nvar anf_arg897 = R.gFR(anf_get_bang2107,\"tab\",L[409]);\n// caller optimization;\n$ans2091 = raw$array$to$list4.app(anf_arg897);\nvar anf_arg901 = $ans2091;\n$step2087 = 9;\n$al2092 = L[412];\n// omitting isFunction check;\n$ans2091 = map226.app(anf_arg900,anf_arg901,labels2090);\nbreak;\ncase 9: var anf_arg898 = $ans2091;\n// caller optimization;\n$ans2091 = raw$array$from$list6.app(anf_arg898);\nvar anf_extend2109 = $ans2091;\nvar anf_arg2225 = R.extendObj(L[410],anf_extend2108,{\"tab\":anf_extend2109});\n$step2087 = 10;\n$al2092 = L[411];\nif(typeof(anf_fun899.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2092,anf_fun899);\n}\n$ans2091 = anf_fun899.app(anf_arg2225);\nbreak;\ncase 10: ++R.GAS;\nreturn $ans2091;\ndefault: R.ffi.throwSpinnakerError(L[401],$step2087);\n}\n}\nif($step2087 !== 10) {\n$ans2091.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2092,$temp_full2088,$step2087,[self2089,labels2090],[anf_arg867,anf_extend2108,anf_fun899],$elidedFrames2094);\n}\nreturn $ans2091;\n};\nvar histogram$label$method4167 = R.makeMethod1($temp_full2088,\"\");\nvar $temp_full2114 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__416($self340,$labels2115) {\nvar $step2113 = 0;\nvar $elidedFrames2122 = 0;\nvar $ans2119 = D;\nvar $al2120 = L[416];\nif(R.isAR($self340)) {\n$step2113 = $self340.step;\n$al2120 = $self340.from;\n$ans2119 = $self340.ans;\n$elidedFrames2122 = $self340.elidedFrames;\nself340 = $self340.args[0];\nlabels2115 = $self340.args[1];\nanf_arg2233 = $self340.vars[0];\nanf_extend2129 = $self340.vars[1];\nanf_fun2131 = $self340.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[416],2,$t,true);\n}\nvar self340 = $self340;\nvar labels2115 = $labels2115;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2119 = R.mC();\n}\nwhile(!R.isContinuation($ans2119)) {\nswitch($step2113) {\ncase 0: $step2113 = 1;\n$al2120 = L[434];\nvar $ann$check2137 = R._cA(L[434],R.gDA(L[434],\"CL\",CL40.dict.types,\"LoS\"),labels2115);\nif(R.isContinuation($ann$check2137)) {\n$ans2119 = $ann$check2137;\n}\nbreak;\ncase 1: $step2113 = 2;\n$ans2119 = R.maybeMethodCall0(labels2115,\"length\",L[417]);\nbreak;\ncase 2: var anf_arg2233 = $ans2119;\n$al2120 = L[418];\nvar anf_get_bang2123 = G(self340,\"obj\",L[418]);\nvar anf_method_obj2124 = R.gFR(anf_get_bang2123,\"values\",L[419]);\n$step2113 = 3;\n$ans2119 = R.maybeMethodCall0(anf_method_obj2124,\"length\",L[420]);\nbreak;\ncase 3: var anf_arg939 = $ans2119;\n$step2113 = 4;\n$al2120 = L[433];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2120,equal$always1);\n}\n$ans2119 = equal$always1.app(anf_arg2233,anf_arg939);\nbreak;\ncase 4: var anf_arg942 = $ans2119;\n$ans2119 = R.not(anf_arg942);\nvar anf_if937 = $ans2119;\n$step2113 = R.checkPyretTrue(anf_if937)?5:7;\nbreak;\ncase 5: $step2113 = 6;\n$al2120 = L[432];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2120,raise1);\n}\n$ans2119 = raise1.app((\"labeled-box-plot: labels and values should have the same length\"));\nbreak;\ncase 6: $step2113 = 8;\n$ans2119 = nothing5;\nbreak;\ncase 7: $step2113 = 8;\n$ans2119 = nothing5;\nbreak;\ncase 8: $step2113 = 9;\n$ans2119 = R.maybeMethodCall0(labels2115,\"length\",L[421]);\nbreak;\ncase 9: var anf_arg2127 = $ans2119;\n$step2113 = 10;\n$al2120 = L[431];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2120,equal$always1);\n}\n$ans2119 = equal$always1.app(anf_arg2127,(0));\nbreak;\ncase 10: var anf_if2134 = $ans2119;\n$step2113 = R.checkPyretTrue(anf_if2134)?11:13;\nbreak;\ncase 11: $step2113 = 12;\n$al2120 = L[430];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2120,raise1);\n}\n$ans2119 = raise1.app((\"labeled-box-plot: expect at least one box\"));\nbreak;\ncase 12: $step2113 = 14;\n$ans2119 = nothing5;\nbreak;\ncase 13: $step2113 = 14;\n$ans2119 = nothing5;\nbreak;\ncase 14: $step2113 = 15;\n$ans2119 = R.maybeMethodCall0(self340,\"constr\",L[422]);\nbreak;\ncase 15: var anf_fun2131 = $ans2119;\n$al2120 = L[423];\nvar anf_extend2129 = G(self340,\"obj\",L[423]);\n$al2120 = L[424];\nvar anf_get_bang2128 = G(self340,\"obj\",L[424]);\nvar anf_arg919 = R.gFR(anf_get_bang2128,\"values\",L[425]);\n$step2113 = 16;\n$al2120 = L[429];\n// omitting isFunction check;\n$ans2119 = map226.app(get$box$data1866.$var,labels2115,anf_arg919);\nbreak;\ncase 16: var anf_arg927 = $ans2119;\n$step2113 = 17;\n$ans2119 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[426],anf_arg927);\nbreak;\ncase 17: var anf_extend2130 = $ans2119;\nvar anf_arg921 = R.extendObj(L[427],anf_extend2129,{\"tab\":anf_extend2130});\n$step2113 = 18;\n$al2120 = L[428];\nif(typeof(anf_fun2131.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2120,anf_fun2131);\n}\n$ans2119 = anf_fun2131.app(anf_arg921);\nbreak;\ncase 18: ++R.GAS;\nreturn $ans2119;\ndefault: R.ffi.throwSpinnakerError(L[416],$step2113);\n}\n}\nif($step2113 !== 18) {\n$ans2119.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2120,$temp_full2114,$step2113,[self340,labels2115],[anf_arg2233,anf_extend2129,anf_fun2131],$elidedFrames2122);\n}\nreturn $ans2119;\n};\nvar box$labels$method4155 = R.makeMethod1($temp_full2114,\"\");\nvar $temp_full2140 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__435($self370,$threeD2141) {\nvar $step2139 = 0;\nvar $elidedFrames2146 = 0;\nvar $ans2143 = D;\nvar $al2144 = L[435];\nif(R.isAR($self370)) {\n$step2139 = $self370.step;\n$al2144 = $self370.from;\n$ans2143 = $self370.ans;\n$elidedFrames2146 = $self370.elidedFrames;\nself370 = $self370.args[0];\nthreeD2141 = $self370.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[435],2,$t,true);\n}\nvar self370 = $self370;\nvar threeD2141 = $threeD2141;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2143 = R.mC();\n}\nwhile(!R.isContinuation($ans2143)) {\nswitch($step2139) {\ncase 0: $step2139 = 1;\n$al2144 = L[440];\nR._cA(L[440],$type$Boolean6,threeD2141);\nbreak;\ncase 1: $step2139 = 2;\n$ans2143 = R.maybeMethodCall0(self370,\"constr\",L[436]);\nbreak;\ncase 2: var anf_fun2148 = $ans2143;\n$al2144 = L[437];\nvar anf_extend2147 = G(self370,\"obj\",L[437]);\nvar anf_arg929 = R.extendObj(L[438],anf_extend2147,{\"threeD\":threeD2141});\n$step2139 = 3;\n$al2144 = L[439];\nif(typeof(anf_fun2148.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2144,anf_fun2148);\n}\n$ans2143 = anf_fun2148.app(anf_arg929);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2143;\ndefault: R.ffi.throwSpinnakerError(L[435],$step2139);\n}\n}\nif($step2139 !== 3) {\n$ans2143.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2144,$temp_full2140,$step2139,[self370,threeD2141],[],$elidedFrames2146);\n}\nreturn $ans2143;\n};\nvar threeD$method4099 = R.makeMethod1($temp_full2140,\"\");\nvar $temp_full2153 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__441($self2154,$piehole2155) {\nvar $step2152 = 0;\nvar $elidedFrames2159 = 0;\nvar $ans2156 = D;\nvar $al2157 = L[441];\nif(R.isAR($self2154)) {\n$step2152 = $self2154.step;\n$al2157 = $self2154.from;\n$ans2156 = $self2154.ans;\n$elidedFrames2159 = $self2154.elidedFrames;\nself2154 = $self2154.args[0];\npiehole2155 = $self2154.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[441],2,$t,true);\n}\nvar self2154 = $self2154;\nvar piehole2155 = $piehole2155;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2156 = R.mC();\n}\nwhile(!R.isContinuation($ans2156)) {\nswitch($step2152) {\ncase 0: $step2152 = 1;\n$al2157 = L[449];\nR._cA(L[449],$type$Number3,piehole2155);\nbreak;\ncase 1: $step2152 = 2;\n$al2157 = L[448];\n// omitting isFunction check;\n$ans2156 = _lessthan3.app(piehole2155,(0));\nbreak;\ncase 2: var anf_if2162 = $ans2156;\n$step2152 = R.checkPyretTrue(anf_if2162)?3:4;\nbreak;\ncase 3: $step2152 = 6;\n$ans2156 = (true);\nbreak;\ncase 4: $step2152 = 5;\n$al2157 = L[447];\n// omitting isFunction check;\n$ans2156 = _greaterthan5.app(piehole2155,(1));\nbreak;\ncase 5: var anf_arg931 = $ans2156;\n$ans2156 = R.checkWrapBoolean(anf_arg931);\n$step2152 = 6;\nbreak;\ncase 6: var anf_if2161 = $ans2156;\n$step2152 = R.checkPyretTrue(anf_if2161)?7:8;\nbreak;\ncase 7: $step2152 = 10;\n$al2157 = L[442];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2157,raise1);\n}\n$ans2156 = raise1.app((\"piehole: Value must be between 0 and 1\"));\nbreak;\ncase 8: $step2152 = 9;\n$ans2156 = R.maybeMethodCall0(self2154,\"constr\",L[443]);\nbreak;\ncase 9: var anf_fun932 = $ans2156;\n$al2157 = L[444];\nvar anf_extend2160 = G(self2154,\"obj\",L[444]);\nvar anf_arg936 = R.extendObj(L[445],anf_extend2160,{\"piehole\":piehole2155});\n$step2152 = 10;\n$al2157 = L[446];\nif(typeof(anf_fun932.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2157,anf_fun932);\n}\n$ans2156 = anf_fun932.app(anf_arg936);\nbreak;\ncase 10: ++R.GAS;\nreturn $ans2156;\ndefault: R.ffi.throwSpinnakerError(L[441],$step2152);\n}\n}\nif($step2152 !== 10) {\n$ans2156.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2157,$temp_full2153,$step2152,[self2154,piehole2155],[],$elidedFrames2159);\n}\nreturn $ans2156;\n};\nvar piehole$method4100 = R.makeMethod1($temp_full2153,\"\");\nvar $temp_full2166 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__450($self2414,$startingAngle2167) {\nvar $step2165 = 0;\nvar $elidedFrames2171 = 0;\nvar $ans2168 = D;\nvar $al2169 = L[450];\nif(R.isAR($self2414)) {\n$step2165 = $self2414.step;\n$al2169 = $self2414.from;\n$ans2168 = $self2414.ans;\n$elidedFrames2171 = $self2414.elidedFrames;\nself2414 = $self2414.args[0];\nstartingAngle2167 = $self2414.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[450],2,$t,true);\n}\nvar self2414 = $self2414;\nvar startingAngle2167 = $startingAngle2167;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2168 = R.mC();\n}\nwhile(!R.isContinuation($ans2168)) {\nswitch($step2165) {\ncase 0: $step2165 = 1;\n$al2169 = L[455];\nR._cA(L[455],$type$Number3,startingAngle2167);\nbreak;\ncase 1: $step2165 = 2;\n$ans2168 = R.maybeMethodCall0(self2414,\"constr\",L[451]);\nbreak;\ncase 2: var anf_fun2173 = $ans2168;\n$al2169 = L[452];\nvar anf_extend2172 = G(self2414,\"obj\",L[452]);\nvar anf_arg952 = R.extendObj(L[453],anf_extend2172,{\"startingAngle\":startingAngle2167});\n$step2165 = 3;\n$al2169 = L[454];\nif(typeof(anf_fun2173.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2169,anf_fun2173);\n}\n$ans2168 = anf_fun2173.app(anf_arg952);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2168;\ndefault: R.ffi.throwSpinnakerError(L[450],$step2165);\n}\n}\nif($step2165 !== 3) {\n$ans2168.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2169,$temp_full2166,$step2165,[self2414,startingAngle2167],[],$elidedFrames2171);\n}\nreturn $ans2168;\n};\nvar starting$angle$method4101 = R.makeMethod1($temp_full2166,\"\");\nvar $temp_full2181 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__456($self2182,$collapseThreshold2183) {\nvar $step2180 = 0;\nvar $elidedFrames2187 = 0;\nvar $ans2184 = D;\nvar $al2185 = L[456];\nif(R.isAR($self2182)) {\n$step2180 = $self2182.step;\n$al2185 = $self2182.from;\n$ans2184 = $self2182.ans;\n$elidedFrames2187 = $self2182.elidedFrames;\nself2182 = $self2182.args[0];\ncollapseThreshold2183 = $self2182.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[456],2,$t,true);\n}\nvar self2182 = $self2182;\nvar collapseThreshold2183 = $collapseThreshold2183;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2184 = R.mC();\n}\nwhile(!R.isContinuation($ans2184)) {\nswitch($step2180) {\ncase 0: $step2180 = 1;\n$al2185 = L[464];\nR._cA(L[464],$type$Number3,collapseThreshold2183);\nbreak;\ncase 1: $step2180 = 2;\n$al2185 = L[463];\n// omitting isFunction check;\n$ans2184 = _lessthan3.app(collapseThreshold2183,(0));\nbreak;\ncase 2: var anf_if2190 = $ans2184;\n$step2180 = R.checkPyretTrue(anf_if2190)?3:4;\nbreak;\ncase 3: $step2180 = 6;\n$ans2184 = (true);\nbreak;\ncase 4: $step2180 = 5;\n$al2185 = L[462];\n// omitting isFunction check;\n$ans2184 = _greaterthan5.app(collapseThreshold2183,(1));\nbreak;\ncase 5: var anf_arg957 = $ans2184;\n$ans2184 = R.checkWrapBoolean(anf_arg957);\n$step2180 = 6;\nbreak;\ncase 6: var anf_if2189 = $ans2184;\n$step2180 = R.checkPyretTrue(anf_if2189)?7:9;\nbreak;\ncase 7: $step2180 = 8;\n$al2185 = L[461];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2185,raise1);\n}\n$ans2184 = raise1.app((\"collapse-threshold: Threshold must be between 0 and 1\"));\nbreak;\ncase 8: $step2180 = 10;\n$ans2184 = nothing5;\nbreak;\ncase 9: $step2180 = 10;\n$ans2184 = nothing5;\nbreak;\ncase 10: $step2180 = 11;\n$ans2184 = R.maybeMethodCall0(self2182,\"constr\",L[457]);\nbreak;\ncase 11: var anf_fun958 = $ans2184;\n$al2185 = L[458];\nvar anf_extend2188 = G(self2182,\"obj\",L[458]);\nvar anf_arg962 = R.extendObj(L[459],anf_extend2188,{\"collapseThreshold\":collapseThreshold2183});\n$step2180 = 12;\n$al2185 = L[460];\nif(typeof(anf_fun958.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2185,anf_fun958);\n}\n$ans2184 = anf_fun958.app(anf_arg962);\nbreak;\ncase 12: ++R.GAS;\nreturn $ans2184;\ndefault: R.ffi.throwSpinnakerError(L[456],$step2180);\n}\n}\nif($step2180 !== 12) {\n$ans2184.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2185,$temp_full2181,$step2180,[self2182,collapseThreshold2183],[],$elidedFrames2187);\n}\nreturn $ans2184;\n};\nvar collapse$threshold$method4102 = R.makeMethod1($temp_full2181,\"\");\nvar $temp_full2196 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__465($self2470,$trendlineType2197) {\nvar $step2195 = 0;\nvar $elidedFrames2202 = 0;\nvar $ans2199 = D;\nvar $al2200 = L[465];\nif(R.isAR($self2470)) {\n$step2195 = $self2470.step;\n$al2200 = $self2470.from;\n$ans2199 = $self2470.ans;\n$elidedFrames2202 = $self2470.elidedFrames;\nself2470 = $self2470.args[0];\ntrendlineType2197 = $self2470.args[1];\ndegree2220 = $self2470.vars[0];\ncases2205 = $self2470.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[465],2,$t,true);\n}\nvar self2470 = $self2470;\nvar trendlineType2197 = $trendlineType2197;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2199 = R.mC();\n}\nwhile(!R.isContinuation($ans2199)) {\nswitch($step2195) {\ncase 0: $step2195 = 1;\n$al2200 = L[488];\nR._cA(L[488],TrendlineType2226,trendlineType2197);\nbreak;\ncase 1: var cases2205 = trendlineType2197;\n$step2195 = 2;\n$al2200 = L[487];\nvar $ann$check2227 = R._cA(L[487],TrendlineType2226,cases2205);\nif(R.isContinuation($ann$check2227)) {\n$ans2199 = $ann$check2227;\n}\nbreak;\ncase 2: $al2200 = L[471];\n$step2195 = $cases_dispatch2225[cases2205.$name] || 11;\nbreak;\ncase 3: if(cases2205.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[470],false,L[471],cases2205.$loc);\n}\n$step2195 = 4;\n$ans2199 = R.maybeMethodCall0(self2470,\"constr\",L[466]);\nbreak;\ncase 4: var anf_fun2207 = $ans2199;\n$al2200 = L[467];\nvar anf_extend2206 = G(self2470,\"obj\",L[467]);\nvar anf_arg2212 = R.extendObj(L[468],anf_extend2206,{\"trendlineType\":none28});\n$step2195 = 12;\n$al2200 = L[469];\nif(typeof(anf_fun2207.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2200,anf_fun2207);\n}\n$ans2199 = anf_fun2207.app(anf_arg2212);\nbreak;\ncase 5: if(cases2205.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[476],false,L[471],cases2205.$loc);\n}\n$step2195 = 6;\n$ans2199 = R.maybeMethodCall0(self2470,\"constr\",L[472]);\nbreak;\ncase 6: var anf_fun983 = $ans2199;\n$al2200 = L[473];\nvar anf_extend2213 = G(self2470,\"obj\",L[473]);\n// caller optimization;\n$ans2199 = some33.app((\"poly\"));\nvar anf_extend2214 = $ans2199;\nvar anf_arg985 = R.extendObj(L[474],anf_extend2213,{\"trendlineType\":anf_extend2214,\n\"trendlineDegree\":(1)});\n$step2195 = 12;\n$al2200 = L[475];\nif(typeof(anf_fun983.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2200,anf_fun983);\n}\n$ans2199 = anf_fun983.app(anf_arg985);\nbreak;\ncase 7: if(cases2205.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[481],false,L[471],cases2205.$loc);\n}\n$step2195 = 8;\n$ans2199 = R.maybeMethodCall0(self2470,\"constr\",L[477]);\nbreak;\ncase 8: var anf_fun2217 = $ans2199;\n$al2200 = L[478];\nvar anf_extend2215 = G(self2470,\"obj\",L[478]);\n// caller optimization;\n$ans2199 = some33.app((\"exp\"));\nvar anf_extend2216 = $ans2199;\nvar anf_arg991 = R.extendObj(L[479],anf_extend2215,{\"trendlineType\":anf_extend2216});\n$step2195 = 12;\n$al2200 = L[480];\nif(typeof(anf_fun2217.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2200,anf_fun2217);\n}\n$ans2199 = anf_fun2217.app(anf_arg991);\nbreak;\ncase 9: if(cases2205.$arity !== 1) {\nif(cases2205.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[486],1,cases2205.$arity,L[471],cases2205.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[486],true,L[471],cases2205.$loc);\n}\n}\nvar $fn2224 = cases2205.$constructor.$fieldNames;\nvar degree2220 = R.dF(cases2205.dict[$fn2224[0]],cases2205.$mut_fields_mask[0],false);\n$step2195 = 10;\n$ans2199 = R.maybeMethodCall0(self2470,\"constr\",L[482]);\nbreak;\ncase 10: var anf_fun2222 = $ans2199;\n$al2200 = L[483];\nvar anf_extend2218 = G(self2470,\"obj\",L[483]);\n// caller optimization;\n$ans2199 = some33.app((\"poly\"));\nvar anf_extend2219 = $ans2199;\nvar anf_arg2313 = R.extendObj(L[484],anf_extend2218,{\"trendlineType\":anf_extend2219,\n\"trendlineDegree\":degree2220});\n$step2195 = 12;\n$al2200 = L[485];\nif(typeof(anf_fun2222.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2200,anf_fun2222);\n}\n$ans2199 = anf_fun2222.app(anf_arg2313);\nbreak;\ncase 11: $ans2199 = R.throwNoCasesMatched(L[471],cases2205);\n$step2195 = 12;\nbreak;\ncase 12: ++R.GAS;\nreturn $ans2199;\ndefault: R.ffi.throwSpinnakerError(L[465],$step2195);\n}\n}\nif($step2195 !== 12) {\n$ans2199.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2200,$temp_full2196,$step2195,[self2470,trendlineType2197],[degree2220,cases2205],$elidedFrames2202);\n}\nreturn $ans2199;\n};\nvar trendline$type$method4034 = R.makeMethod1($temp_full2196,\"\");\nvar $temp_full2232 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__489($self1966,$color2233) {\nvar $step2231 = 0;\nvar $elidedFrames2237 = 0;\nvar $ans2234 = D;\nvar $al2235 = L[489];\nif(R.isAR($self1966)) {\n$step2231 = $self1966.step;\n$al2235 = $self1966.from;\n$ans2234 = $self1966.ans;\n$elidedFrames2237 = $self1966.elidedFrames;\nself1966 = $self1966.args[0];\ncolor2233 = $self1966.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[489],2,$t,true);\n}\nvar self1966 = $self1966;\nvar color2233 = $color2233;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2234 = R.mC();\n}\nwhile(!R.isContinuation($ans2234)) {\nswitch($step2231) {\ncase 0: $step2231 = 1;\n$al2235 = L[494];\nR._cA(L[494],R.gDA(L[494],\"I\",I44.dict.types,\"Color\"),color2233);\nbreak;\ncase 1: $step2231 = 2;\n$ans2234 = R.maybeMethodCall0(self1966,\"constr\",L[490]);\nbreak;\ncase 2: var anf_fun1019 = $ans2234;\n$al2235 = L[491];\nvar anf_extend2238 = G(self1966,\"obj\",L[491]);\n// caller optimization;\n$ans2234 = some33.app(color2233);\nvar anf_extend2239 = $ans2234;\nvar anf_arg1013 = R.extendObj(L[492],anf_extend2238,{\"trendlineColor\":anf_extend2239});\n$step2231 = 3;\n$al2235 = L[493];\nif(typeof(anf_fun1019.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2235,anf_fun1019);\n}\n$ans2234 = anf_fun1019.app(anf_arg1013);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2234;\ndefault: R.ffi.throwSpinnakerError(L[489],$step2231);\n}\n}\nif($step2231 !== 3) {\n$ans2234.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2235,$temp_full2232,$step2231,[self1966,color2233],[],$elidedFrames2237);\n}\nreturn $ans2234;\n};\nvar trendline$color$method4035 = R.makeMethod1($temp_full2232,\"\");\nvar $temp_full2242 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__495($self2243,$lineWidth2244) {\nvar $step2241 = 0;\nvar $elidedFrames2248 = 0;\nvar $ans2245 = D;\nvar $al2246 = L[495];\nif(R.isAR($self2243)) {\n$step2241 = $self2243.step;\n$al2246 = $self2243.from;\n$ans2245 = $self2243.ans;\n$elidedFrames2248 = $self2243.elidedFrames;\nself2243 = $self2243.args[0];\nlineWidth2244 = $self2243.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[495],2,$t,true);\n}\nvar self2243 = $self2243;\nvar lineWidth2244 = $lineWidth2244;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2245 = R.mC();\n}\nwhile(!R.isContinuation($ans2245)) {\nswitch($step2241) {\ncase 0: $step2241 = 1;\n$al2246 = L[502];\nR._cA(L[502],$type$Number3,lineWidth2244);\nbreak;\ncase 1: $step2241 = 2;\n$al2246 = L[501];\n// omitting isFunction check;\n$ans2245 = _lessthan3.app(lineWidth2244,(0));\nbreak;\ncase 2: var anf_if2250 = $ans2245;\n$step2241 = R.checkPyretTrue(anf_if2250)?3:5;\nbreak;\ncase 3: $step2241 = 4;\n$al2246 = L[500];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2246,raise1);\n}\n$ans2245 = raise1.app((\"trendline-width: Trendline Width must be non-negative\"));\nbreak;\ncase 4: $step2241 = 6;\n$ans2245 = nothing5;\nbreak;\ncase 5: $step2241 = 6;\n$ans2245 = nothing5;\nbreak;\ncase 6: $step2241 = 7;\n$ans2245 = R.maybeMethodCall0(self2243,\"constr\",L[496]);\nbreak;\ncase 7: var anf_fun2324 = $ans2245;\n$al2246 = L[497];\nvar anf_extend2249 = G(self2243,\"obj\",L[497]);\nvar anf_arg1020 = R.extendObj(L[498],anf_extend2249,{\"trendlineWidth\":lineWidth2244});\n$step2241 = 8;\n$al2246 = L[499];\nif(typeof(anf_fun2324.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2246,anf_fun2324);\n}\n$ans2245 = anf_fun2324.app(anf_arg1020);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans2245;\ndefault: R.ffi.throwSpinnakerError(L[495],$step2241);\n}\n}\nif($step2241 !== 8) {\n$ans2245.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2246,$temp_full2242,$step2241,[self2243,lineWidth2244],[],$elidedFrames2248);\n}\nreturn $ans2245;\n};\nvar trendline$width$method4036 = R.makeMethod1($temp_full2242,\"\");\nvar $temp_full2255 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__503($self2256,$opacity2257) {\nvar $step2254 = 0;\nvar $elidedFrames2262 = 0;\nvar $ans2259 = D;\nvar $al2260 = L[503];\nif(R.isAR($self2256)) {\n$step2254 = $self2256.step;\n$al2260 = $self2256.from;\n$ans2259 = $self2256.ans;\n$elidedFrames2262 = $self2256.elidedFrames;\nself2256 = $self2256.args[0];\nopacity2257 = $self2256.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[503],2,$t,true);\n}\nvar self2256 = $self2256;\nvar opacity2257 = $opacity2257;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2259 = R.mC();\n}\nwhile(!R.isContinuation($ans2259)) {\nswitch($step2254) {\ncase 0: $step2254 = 1;\n$al2260 = L[511];\nR._cA(L[511],$type$Number3,opacity2257);\nbreak;\ncase 1: $step2254 = 2;\n$al2260 = L[510];\n// omitting isFunction check;\n$ans2259 = _lessthan3.app(opacity2257,(0));\nbreak;\ncase 2: var anf_if2279 = $ans2259;\n$step2254 = R.checkPyretTrue(anf_if2279)?3:4;\nbreak;\ncase 3: $step2254 = 6;\n$ans2259 = (true);\nbreak;\ncase 4: $step2254 = 5;\n$al2260 = L[509];\n// omitting isFunction check;\n$ans2259 = _greaterthan5.app(opacity2257,(1));\nbreak;\ncase 5: var anf_arg1021 = $ans2259;\n$ans2259 = R.checkWrapBoolean(anf_arg1021);\n$step2254 = 6;\nbreak;\ncase 6: var anf_if2277 = $ans2259;\n$step2254 = R.checkPyretTrue(anf_if2277)?7:8;\nbreak;\ncase 7: $step2254 = 10;\n$al2260 = L[504];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2260,raise1);\n}\n$ans2259 = raise1.app((\"Trendline opacity: Value must be between 0 and 1\"));\nbreak;\ncase 8: $step2254 = 9;\n$ans2259 = R.maybeMethodCall0(self2256,\"constr\",L[505]);\nbreak;\ncase 9: var anf_fun2267 = $ans2259;\n$al2260 = L[506];\nvar anf_extend2263 = G(self2256,\"obj\",L[506]);\nvar anf_arg2273 = R.extendObj(L[507],anf_extend2263,{\"trendlineOpacity\":opacity2257});\n$step2254 = 10;\n$al2260 = L[508];\nif(typeof(anf_fun2267.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2260,anf_fun2267);\n}\n$ans2259 = anf_fun2267.app(anf_arg2273);\nbreak;\ncase 10: ++R.GAS;\nreturn $ans2259;\ndefault: R.ffi.throwSpinnakerError(L[503],$step2254);\n}\n}\nif($step2254 !== 10) {\n$ans2259.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2260,$temp_full2255,$step2254,[self2256,opacity2257],[],$elidedFrames2262);\n}\nreturn $ans2259;\n};\nvar trendline$opacity$method4037 = R.makeMethod1($temp_full2255,\"\");\nvar $temp_full2285 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__512($self2286,$dashed2287) {\nvar $step2284 = 0;\nvar $elidedFrames2292 = 0;\nvar $ans2289 = D;\nvar $al2290 = L[512];\nif(R.isAR($self2286)) {\n$step2284 = $self2286.step;\n$al2290 = $self2286.from;\n$ans2289 = $self2286.ans;\n$elidedFrames2292 = $self2286.elidedFrames;\nself2286 = $self2286.args[0];\ndashed2287 = $self2286.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[512],2,$t,true);\n}\nvar self2286 = $self2286;\nvar dashed2287 = $dashed2287;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2289 = R.mC();\n}\nwhile(!R.isContinuation($ans2289)) {\nswitch($step2284) {\ncase 0: $step2284 = 1;\n$al2290 = L[517];\nR._cA(L[517],$type$Boolean6,dashed2287);\nbreak;\ncase 1: $step2284 = 2;\n$ans2289 = R.maybeMethodCall0(self2286,\"constr\",L[513]);\nbreak;\ncase 2: var anf_fun2294 = $ans2289;\n$al2290 = L[514];\nvar anf_extend2293 = G(self2286,\"obj\",L[514]);\nvar anf_arg1052 = R.extendObj(L[515],anf_extend2293,{\"dashedLine\":dashed2287});\n$step2284 = 3;\n$al2290 = L[516];\nif(typeof(anf_fun2294.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2290,anf_fun2294);\n}\n$ans2289 = anf_fun2294.app(anf_arg1052);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2289;\ndefault: R.ffi.throwSpinnakerError(L[512],$step2284);\n}\n}\nif($step2284 !== 3) {\n$ans2289.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2290,$temp_full2285,$step2284,[self2286,dashed2287],[],$elidedFrames2292);\n}\nreturn $ans2289;\n};\nvar dashed$line$method4038 = R.makeMethod1($temp_full2285,\"\");\nvar $temp_full2304 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__518($self2305,$dashed$line$style2306) {\nvar $step2303 = 0;\nvar $elidedFrames2311 = 0;\nvar $ans2308 = D;\nvar $al2309 = L[518];\nif(R.isAR($self2305)) {\n$step2303 = $self2305.step;\n$al2309 = $self2305.from;\n$ans2308 = $self2305.ans;\n$elidedFrames2311 = $self2305.elidedFrames;\nself2305 = $self2305.args[0];\ndashed$line$style2306 = $self2305.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[518],2,$t,true);\n}\nvar self2305 = $self2305;\nvar dashed$line$style2306 = $dashed$line$style2306;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2308 = R.mC();\n}\nwhile(!R.isContinuation($ans2308)) {\nswitch($step2303) {\ncase 0: $step2303 = 1;\n$al2309 = L[527];\nvar $ann$check2326 = R._cA(L[527],R.gDA(L[527],\"CL\",CL40.dict.types,\"LoNi\"),dashed$line$style2306);\nif(R.isContinuation($ann$check2326)) {\n$ans2308 = $ann$check2326;\n}\nbreak;\ncase 1: var $temp_lam2313 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__519($n2314) {\nvar $step2312 = 0;\nvar $elidedFrames2318 = 0;\nvar $ans2315 = D;\nvar $al2316 = L[519];\nif(R.isAR($n2314)) {\n$step2312 = $n2314.step;\n$al2316 = $n2314.from;\n$ans2315 = $n2314.ans;\n$elidedFrames2318 = $n2314.elidedFrames;\nn2314 = $n2314.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[519],1,$t,false);\n}\nvar n2314 = $n2314;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2315 = R.mC();\n}\nwhile(!R.isContinuation($ans2315)) {\nswitch($step2312) {\ncase 0: $step2312 = 1;\n$al2316 = L[520];\n// omitting isFunction check;\n$ans2315 = _lessthan3.app(n2314,(0));\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2315;\ndefault: R.ffi.throwSpinnakerError(L[519],$step2312);\n}\n}\nif($step2312 !== 1) {\n$ans2315.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2316,$temp_lam2313,$step2312,[n2314],[],$elidedFrames2318);\n}\nreturn $ans2315;\n};\nvar anf_arg2320 = R.mF($temp_lam2313,\"\");\n$step2303 = 2;\n$al2309 = L[526];\n// omitting isFunction check;\n$ans2308 = any17.app(anf_arg2320,dashed$line$style2306);\nbreak;\ncase 2: var anf_if2323 = $ans2308;\n$step2303 = R.checkPyretTrue(anf_if2323)?3:5;\nbreak;\ncase 3: $step2303 = 4;\n$al2309 = L[525];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2309,raise1);\n}\n$ans2308 = raise1.app((\"Dashed Line Style: Values must be non-negative\"));\nbreak;\ncase 4: $step2303 = 6;\n$ans2308 = nothing5;\nbreak;\ncase 5: $step2303 = 6;\n$ans2308 = nothing5;\nbreak;\ncase 6: $step2303 = 7;\n$ans2308 = R.maybeMethodCall0(self2305,\"constr\",L[521]);\nbreak;\ncase 7: var anf_fun2348 = $ans2308;\n$al2309 = L[522];\nvar anf_extend2321 = G(self2305,\"obj\",L[522]);\n// caller optimization;\n$ans2308 = raw$array$from$list6.app(dashed$line$style2306);\nvar anf_extend2322 = $ans2308;\nvar anf_arg1037 = R.extendObj(L[523],anf_extend2321,{\"dashedLine\":(true),\n\"dashlineStyle\":anf_extend2322});\n$step2303 = 8;\n$al2309 = L[524];\nif(typeof(anf_fun2348.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2309,anf_fun2348);\n}\n$ans2308 = anf_fun2348.app(anf_arg1037);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans2308;\ndefault: R.ffi.throwSpinnakerError(L[518],$step2303);\n}\n}\nif($step2303 !== 8) {\n$ans2308.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2309,$temp_full2304,$step2303,[self2305,dashed$line$style2306],[],$elidedFrames2311);\n}\nreturn $ans2308;\n};\nvar dashed$line$style$method4039 = R.makeMethod1($temp_full2304,\"\");\nvar $temp_full2331 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__528($self2332,$pointshape2333) {\nvar $step2330 = 0;\nvar $elidedFrames2337 = 0;\nvar $ans2334 = D;\nvar $al2335 = L[528];\nif(R.isAR($self2332)) {\n$step2330 = $self2332.step;\n$al2335 = $self2332.from;\n$ans2334 = $self2332.ans;\n$elidedFrames2337 = $self2332.elidedFrames;\nself2332 = $self2332.args[0];\npointshape2333 = $self2332.args[1];\ndent2343 = $self2332.vars[0];\ncases2338 = $self2332.vars[1];\nsides2342 = $self2332.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[528],2,$t,true);\n}\nvar self2332 = $self2332;\nvar pointshape2333 = $pointshape2333;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2334 = R.mC();\n}\nwhile(!R.isContinuation($ans2334)) {\nswitch($step2330) {\ncase 0: $step2330 = 1;\n$al2335 = L[541];\nR._cA(L[541],PointShape2349,pointshape2333);\nbreak;\ncase 1: var cases2338 = pointshape2333;\n$step2330 = 2;\n$al2335 = L[540];\nvar $ann$check2350 = R._cA(L[540],PointShape2349,cases2338);\nif(R.isContinuation($ann$check2350)) {\n$ans2334 = $ann$check2350;\n}\nbreak;\ncase 2: $al2335 = L[534];\n$step2330 = $cases_dispatch2348[cases2338.$name] || 7;\nbreak;\ncase 3: if(cases2338.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[533],false,L[534],cases2338.$loc);\n}\n$step2330 = 4;\n$ans2334 = R.maybeMethodCall0(self2332,\"constr\",L[529]);\nbreak;\ncase 4: var anf_fun2340 = $ans2334;\n$al2335 = L[530];\nvar anf_extend2339 = G(self2332,\"obj\",L[530]);\nvar anf_arg1041 = R.extendObj(L[531],anf_extend2339,{\"pointshapeType\":(\"circle\")});\n$step2330 = 8;\n$al2335 = L[532];\nif(typeof(anf_fun2340.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2335,anf_fun2340);\n}\n$ans2334 = anf_fun2340.app(anf_arg1041);\nbreak;\ncase 5: if(cases2338.$arity !== 2) {\nif(cases2338.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[539],2,cases2338.$arity,L[534],cases2338.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[539],true,L[534],cases2338.$loc);\n}\n}\nvar $fn2347 = cases2338.$constructor.$fieldNames;\nvar sides2342 = R.dF(cases2338.dict[$fn2347[0]],cases2338.$mut_fields_mask[0],false);\nvar dent2343 = R.dF(cases2338.dict[$fn2347[1]],cases2338.$mut_fields_mask[1],false);\n$step2330 = 6;\n$ans2334 = R.maybeMethodCall0(self2332,\"constr\",L[535]);\nbreak;\ncase 6: var anf_fun2345 = $ans2334;\n$al2335 = L[536];\nvar anf_extend2341 = G(self2332,\"obj\",L[536]);\nvar anf_arg1047 = R.extendObj(L[537],anf_extend2341,{\"pointshapeType\":(\"polygon\"),\n\"pointshapeSides\":sides2342,\n\"pointshapeDent\":dent2343});\n$step2330 = 8;\n$al2335 = L[538];\nif(typeof(anf_fun2345.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2335,anf_fun2345);\n}\n$ans2334 = anf_fun2345.app(anf_arg1047);\nbreak;\ncase 7: $ans2334 = R.throwNoCasesMatched(L[534],cases2338);\n$step2330 = 8;\nbreak;\ncase 8: ++R.GAS;\nreturn $ans2334;\ndefault: R.ffi.throwSpinnakerError(L[528],$step2330);\n}\n}\nif($step2330 !== 8) {\n$ans2334.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2335,$temp_full2331,$step2330,[self2332,pointshape2333],[dent2343,cases2338,sides2342],$elidedFrames2337);\n}\nreturn $ans2334;\n};\nvar pointshape$method4040 = R.makeMethod1($temp_full2331,\"\");\nvar $temp_full2353 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__542($self2354,$multiple2355) {\nvar $step2352 = 0;\nvar $elidedFrames2359 = 0;\nvar $ans2356 = D;\nvar $al2357 = L[542];\nif(R.isAR($self2354)) {\n$step2352 = $self2354.step;\n$al2357 = $self2354.from;\n$ans2356 = $self2354.ans;\n$elidedFrames2359 = $self2354.elidedFrames;\nself2354 = $self2354.args[0];\nmultiple2355 = $self2354.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[542],2,$t,true);\n}\nvar self2354 = $self2354;\nvar multiple2355 = $multiple2355;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2356 = R.mC();\n}\nwhile(!R.isContinuation($ans2356)) {\nswitch($step2352) {\ncase 0: $step2352 = 1;\n$al2357 = L[547];\nR._cA(L[547],$type$Boolean6,multiple2355);\nbreak;\ncase 1: $step2352 = 2;\n$ans2356 = R.maybeMethodCall0(self2354,\"constr\",L[543]);\nbreak;\ncase 2: var anf_fun1043 = $ans2356;\n$al2357 = L[544];\nvar anf_extend2360 = G(self2354,\"obj\",L[544]);\nvar anf_arg1048 = R.extendObj(L[545],anf_extend2360,{\"multiple\":multiple2355});\n$step2352 = 3;\n$al2357 = L[546];\nif(typeof(anf_fun1043.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2357,anf_fun1043);\n}\n$ans2356 = anf_fun1043.app(anf_arg1048);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2356;\ndefault: R.ffi.throwSpinnakerError(L[542],$step2352);\n}\n}\nif($step2352 !== 3) {\n$ans2356.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2357,$temp_full2353,$step2352,[self2354,multiple2355],[],$elidedFrames2359);\n}\nreturn $ans2356;\n};\nvar select$multiple$method4465 = R.makeMethod1($temp_full2353,\"\");\nvar $temp_full2364 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__548($self2365,$color2366) {\nvar $step2363 = 0;\nvar $elidedFrames2370 = 0;\nvar $ans2367 = D;\nvar $al2368 = L[548];\nif(R.isAR($self2365)) {\n$step2363 = $self2365.step;\n$al2368 = $self2365.from;\n$ans2367 = $self2365.ans;\n$elidedFrames2370 = $self2365.elidedFrames;\nself2365 = $self2365.args[0];\ncolor2366 = $self2365.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[548],2,$t,true);\n}\nvar self2365 = $self2365;\nvar color2366 = $color2366;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2367 = R.mC();\n}\nwhile(!R.isContinuation($ans2367)) {\nswitch($step2363) {\ncase 0: $step2363 = 1;\n$al2368 = L[553];\nR._cA(L[553],R.gDA(L[553],\"I\",I44.dict.types,\"Color\"),color2366);\nbreak;\ncase 1: $step2363 = 2;\n$ans2367 = R.maybeMethodCall0(self2365,\"constr\",L[549]);\nbreak;\ncase 2: var anf_fun2373 = $ans2367;\n$al2368 = L[550];\nvar anf_extend2371 = G(self2365,\"obj\",L[550]);\n// caller optimization;\n$ans2367 = some33.app(color2366);\nvar anf_extend2372 = $ans2367;\nvar anf_arg1066 = R.extendObj(L[551],anf_extend2371,{\"backgroundColor\":anf_extend2372});\n$step2363 = 3;\n$al2368 = L[552];\nif(typeof(anf_fun2373.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2368,anf_fun2373);\n}\n$ans2367 = anf_fun2373.app(anf_arg1066);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2367;\ndefault: R.ffi.throwSpinnakerError(L[548],$step2363);\n}\n}\nif($step2363 !== 3) {\n$ans2367.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2368,$temp_full2364,$step2363,[self2365,color2366],[],$elidedFrames2370);\n}\nreturn $ans2367;\n};\nvar background$color$method4388 = R.makeMethod1($temp_full2364,\"\");\nvar $temp_full2382 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__554($self2383,$border$size2384) {\nvar $step2381 = 0;\nvar $elidedFrames2388 = 0;\nvar $ans2385 = D;\nvar $al2386 = L[554];\nif(R.isAR($self2383)) {\n$step2381 = $self2383.step;\n$al2386 = $self2383.from;\n$ans2385 = $self2383.ans;\n$elidedFrames2388 = $self2383.elidedFrames;\nself2383 = $self2383.args[0];\nborder$size2384 = $self2383.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[554],2,$t,true);\n}\nvar self2383 = $self2383;\nvar border$size2384 = $border$size2384;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2385 = R.mC();\n}\nwhile(!R.isContinuation($ans2385)) {\nswitch($step2381) {\ncase 0: $step2381 = 1;\n$al2386 = L[561];\nR._cA(L[561],$type$Number3,border$size2384);\nbreak;\ncase 1: $step2381 = 2;\n$al2386 = L[560];\n// omitting isFunction check;\n$ans2385 = _lessthan3.app(border$size2384,(0));\nbreak;\ncase 2: var anf_if2402 = $ans2385;\n$step2381 = R.checkPyretTrue(anf_if2402)?3:5;\nbreak;\ncase 3: $step2381 = 4;\n$al2386 = L[559];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2386,raise1);\n}\n$ans2385 = raise1.app((\"border-size: Border Size must be non-negative\"));\nbreak;\ncase 4: $step2381 = 6;\n$ans2385 = nothing5;\nbreak;\ncase 5: $step2381 = 6;\n$ans2385 = nothing5;\nbreak;\ncase 6: $step2381 = 7;\n$ans2385 = R.maybeMethodCall0(self2383,\"constr\",L[555]);\nbreak;\ncase 7: var anf_fun2391 = $ans2385;\n$al2386 = L[556];\nvar anf_extend2389 = G(self2383,\"obj\",L[556]);\nvar anf_arg2401 = R.extendObj(L[557],anf_extend2389,{\"borderSize\":border$size2384});\n$step2381 = 8;\n$al2386 = L[558];\nif(typeof(anf_fun2391.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2386,anf_fun2391);\n}\n$ans2385 = anf_fun2391.app(anf_arg2401);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans2385;\ndefault: R.ffi.throwSpinnakerError(L[554],$step2381);\n}\n}\nif($step2381 !== 8) {\n$ans2385.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2386,$temp_full2382,$step2381,[self2383,border$size2384],[],$elidedFrames2388);\n}\nreturn $ans2385;\n};\nvar background$border$method4389 = R.makeMethod1($temp_full2382,\"\");\nvar $temp_full2406 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__562($self2407,$border$color2408) {\nvar $step2405 = 0;\nvar $elidedFrames2412 = 0;\nvar $ans2409 = D;\nvar $al2410 = L[562];\nif(R.isAR($self2407)) {\n$step2405 = $self2407.step;\n$al2410 = $self2407.from;\n$ans2409 = $self2407.ans;\n$elidedFrames2412 = $self2407.elidedFrames;\nself2407 = $self2407.args[0];\nborder$color2408 = $self2407.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[562],2,$t,true);\n}\nvar self2407 = $self2407;\nvar border$color2408 = $border$color2408;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2409 = R.mC();\n}\nwhile(!R.isContinuation($ans2409)) {\nswitch($step2405) {\ncase 0: $step2405 = 1;\n$al2410 = L[567];\nR._cA(L[567],R.gDA(L[567],\"I\",I44.dict.types,\"Color\"),border$color2408);\nbreak;\ncase 1: $step2405 = 2;\n$ans2409 = R.maybeMethodCall0(self2407,\"constr\",L[563]);\nbreak;\ncase 2: var anf_fun2415 = $ans2409;\n$al2410 = L[564];\nvar anf_extend2413 = G(self2407,\"obj\",L[564]);\n// caller optimization;\n$ans2409 = some33.app(border$color2408);\nvar anf_extend2414 = $ans2409;\nvar anf_arg1185 = R.extendObj(L[565],anf_extend2413,{\"borderColor\":anf_extend2414});\n$step2405 = 3;\n$al2410 = L[566];\nif(typeof(anf_fun2415.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2410,anf_fun2415);\n}\n$ans2409 = anf_fun2415.app(anf_arg1185);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2409;\ndefault: R.ffi.throwSpinnakerError(L[562],$step2405);\n}\n}\nif($step2405 !== 3) {\n$ans2409.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2410,$temp_full2406,$step2405,[self2407,border$color2408],[],$elidedFrames2412);\n}\nreturn $ans2409;\n};\nvar border$color$method4390 = R.makeMethod1($temp_full2406,\"\");\nvar $temp_full2421 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__568($self2422,$legend2423) {\nvar $step2420 = 0;\nvar $elidedFrames2428 = 0;\nvar $ans2425 = D;\nvar $al2426 = L[568];\nif(R.isAR($self2422)) {\n$step2420 = $self2422.step;\n$al2426 = $self2422.from;\n$ans2425 = $self2422.ans;\n$elidedFrames2428 = $self2422.elidedFrames;\nself2422 = $self2422.args[0];\nlegend2423 = $self2422.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[568],2,$t,true);\n}\nvar self2422 = $self2422;\nvar legend2423 = $legend2423;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2425 = R.mC();\n}\nwhile(!R.isContinuation($ans2425)) {\nswitch($step2420) {\ncase 0: $step2420 = 1;\n$al2426 = L[573];\nR._cA(L[573],$type$String8,legend2423);\nbreak;\ncase 1: $step2420 = 2;\n$ans2425 = R.maybeMethodCall0(self2422,\"constr\",L[569]);\nbreak;\ncase 2: var anf_fun2430 = $ans2425;\n$al2426 = L[570];\nvar anf_extend2429 = G(self2422,\"obj\",L[570]);\nvar anf_arg2435 = R.extendObj(L[571],anf_extend2429,{\"legend\":legend2423});\n$step2420 = 3;\n$al2426 = L[572];\nif(typeof(anf_fun2430.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2426,anf_fun2430);\n}\n$ans2425 = anf_fun2430.app(anf_arg2435);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2425;\ndefault: R.ffi.throwSpinnakerError(L[568],$step2420);\n}\n}\nif($step2420 !== 3) {\n$ans2425.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2426,$temp_full2421,$step2420,[self2422,legend2423],[],$elidedFrames2428);\n}\nreturn $ans2425;\n};\nvar legend$method4031 = R.makeMethod1($temp_full2421,\"\");\nvar $temp_full2442 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__574($self2443,$is$showing2444) {\nvar $step2441 = 0;\nvar $elidedFrames2448 = 0;\nvar $ans2445 = D;\nvar $al2446 = L[574];\nif(R.isAR($self2443)) {\n$step2441 = $self2443.step;\n$al2446 = $self2443.from;\n$ans2445 = $self2443.ans;\n$elidedFrames2448 = $self2443.elidedFrames;\nself2443 = $self2443.args[0];\nis$showing2444 = $self2443.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[574],2,$t,true);\n}\nvar self2443 = $self2443;\nvar is$showing2444 = $is$showing2444;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2445 = R.mC();\n}\nwhile(!R.isContinuation($ans2445)) {\nswitch($step2441) {\ncase 0: $step2441 = 1;\n$al2446 = L[579];\nR._cA(L[579],$type$Boolean6,is$showing2444);\nbreak;\ncase 1: $step2441 = 2;\n$ans2445 = R.maybeMethodCall0(self2443,\"constr\",L[575]);\nbreak;\ncase 2: var anf_fun2410 = $ans2445;\n$al2446 = L[576];\nvar anf_extend2449 = G(self2443,\"obj\",L[576]);\nvar anf_arg2408 = R.extendObj(L[577],anf_extend2449,{\"show-minor-grid-lines\":is$showing2444});\n$step2441 = 3;\n$al2446 = L[578];\nif(typeof(anf_fun2410.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2446,anf_fun2410);\n}\n$ans2445 = anf_fun2410.app(anf_arg2408);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2445;\ndefault: R.ffi.throwSpinnakerError(L[574],$step2441);\n}\n}\nif($step2441 !== 3) {\n$ans2445.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2446,$temp_full2442,$step2441,[self2443,is$showing2444],[],$elidedFrames2448);\n}\nreturn $ans2445;\n};\nvar show$minor$grid$lines$method6835 = R.makeMethod1($temp_full2442,\"\");\nvar $temp_full2455 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__580($self2456,$is$showing2457) {\nvar $step2454 = 0;\nvar $elidedFrames2461 = 0;\nvar $ans2458 = D;\nvar $al2459 = L[580];\nif(R.isAR($self2456)) {\n$step2454 = $self2456.step;\n$al2459 = $self2456.from;\n$ans2458 = $self2456.ans;\n$elidedFrames2461 = $self2456.elidedFrames;\nself2456 = $self2456.args[0];\nis$showing2457 = $self2456.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[580],2,$t,true);\n}\nvar self2456 = $self2456;\nvar is$showing2457 = $is$showing2457;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2458 = R.mC();\n}\nwhile(!R.isContinuation($ans2458)) {\nswitch($step2454) {\ncase 0: $step2454 = 1;\n$al2459 = L[585];\nR._cA(L[585],$type$Boolean6,is$showing2457);\nbreak;\ncase 1: $step2454 = 2;\n$ans2458 = R.maybeMethodCall0(self2456,\"constr\",L[581]);\nbreak;\ncase 2: var anf_fun2463 = $ans2458;\n$al2459 = L[582];\nvar anf_extend2462 = G(self2456,\"obj\",L[582]);\nvar anf_arg1082 = R.extendObj(L[583],anf_extend2462,{\"show-grid-lines\":is$showing2457});\n$step2454 = 3;\n$al2459 = L[584];\nif(typeof(anf_fun2463.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2459,anf_fun2463);\n}\n$ans2458 = anf_fun2463.app(anf_arg1082);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2458;\ndefault: R.ffi.throwSpinnakerError(L[580],$step2454);\n}\n}\nif($step2454 !== 3) {\n$ans2458.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2459,$temp_full2455,$step2454,[self2456,is$showing2457],[],$elidedFrames2461);\n}\nreturn $ans2458;\n};\nvar show$grid$lines$method4463 = R.makeMethod1($temp_full2455,\"\");\nvar $temp_full2466 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__586($self2467,$color2468) {\nvar $step2465 = 0;\nvar $elidedFrames2472 = 0;\nvar $ans2469 = D;\nvar $al2470 = L[586];\nif(R.isAR($self2467)) {\n$step2465 = $self2467.step;\n$al2470 = $self2467.from;\n$ans2469 = $self2467.ans;\n$elidedFrames2472 = $self2467.elidedFrames;\nself2467 = $self2467.args[0];\ncolor2468 = $self2467.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[586],2,$t,true);\n}\nvar self2467 = $self2467;\nvar color2468 = $color2468;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2469 = R.mC();\n}\nwhile(!R.isContinuation($ans2469)) {\nswitch($step2465) {\ncase 0: $step2465 = 1;\n$al2470 = L[591];\nR._cA(L[591],R.gDA(L[591],\"I\",I44.dict.types,\"Color\"),color2468);\nbreak;\ncase 1: $step2465 = 2;\n$ans2469 = R.maybeMethodCall0(self2467,\"constr\",L[587]);\nbreak;\ncase 2: var anf_fun2475 = $ans2469;\n$al2470 = L[588];\nvar anf_extend2473 = G(self2467,\"obj\",L[588]);\n// caller optimization;\n$ans2469 = some33.app(color2468);\nvar anf_extend2474 = $ans2469;\nvar anf_arg1090 = R.extendObj(L[589],anf_extend2473,{\"show-grid-lines\":(true),\n\"gridlineColor\":anf_extend2474});\n$step2465 = 3;\n$al2470 = L[590];\nif(typeof(anf_fun2475.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2470,anf_fun2475);\n}\n$ans2469 = anf_fun2475.app(anf_arg1090);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2469;\ndefault: R.ffi.throwSpinnakerError(L[586],$step2465);\n}\n}\nif($step2465 !== 3) {\n$ans2469.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2470,$temp_full2466,$step2465,[self2467,color2468],[],$elidedFrames2472);\n}\nreturn $ans2469;\n};\nvar gridlines$color$method4464 = R.makeMethod1($temp_full2466,\"\");\nvar $temp_full2479 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__592($self2480,$color2481) {\nvar $step2478 = 0;\nvar $elidedFrames2485 = 0;\nvar $ans2482 = D;\nvar $al2483 = L[592];\nif(R.isAR($self2480)) {\n$step2478 = $self2480.step;\n$al2483 = $self2480.from;\n$ans2482 = $self2480.ans;\n$elidedFrames2485 = $self2480.elidedFrames;\nself2480 = $self2480.args[0];\ncolor2481 = $self2480.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[592],2,$t,true);\n}\nvar self2480 = $self2480;\nvar color2481 = $color2481;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2482 = R.mC();\n}\nwhile(!R.isContinuation($ans2482)) {\nswitch($step2478) {\ncase 0: $step2478 = 1;\n$al2483 = L[597];\nR._cA(L[597],R.gDA(L[597],\"I\",I44.dict.types,\"Color\"),color2481);\nbreak;\ncase 1: $step2478 = 2;\n$ans2482 = R.maybeMethodCall0(self2480,\"constr\",L[593]);\nbreak;\ncase 2: var anf_fun2488 = $ans2482;\n$al2483 = L[594];\nvar anf_extend2486 = G(self2480,\"obj\",L[594]);\n// caller optimization;\n$ans2482 = some33.app(color2481);\nvar anf_extend2487 = $ans2482;\nvar anf_arg1095 = R.extendObj(L[595],anf_extend2486,{\"show-minor-grid-lines\":(true),\n\"minorGridlineColor\":anf_extend2487});\n$step2478 = 3;\n$al2483 = L[596];\nif(typeof(anf_fun2488.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2483,anf_fun2488);\n}\n$ans2482 = anf_fun2488.app(anf_arg1095);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2482;\ndefault: R.ffi.throwSpinnakerError(L[592],$step2478);\n}\n}\nif($step2478 !== 3) {\n$ans2482.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2483,$temp_full2479,$step2478,[self2480,color2481],[],$elidedFrames2485);\n}\nreturn $ans2482;\n};\nvar minor$gridlines$color$method6841 = R.makeMethod1($temp_full2479,\"\");\nvar $temp_full2493 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__598($self3017,$minspacing2494) {\nvar $step2492 = 0;\nvar $elidedFrames2499 = 0;\nvar $ans2496 = D;\nvar $al2497 = L[598];\nif(R.isAR($self3017)) {\n$step2492 = $self3017.step;\n$al2497 = $self3017.from;\n$ans2496 = $self3017.ans;\n$elidedFrames2499 = $self3017.elidedFrames;\nself3017 = $self3017.args[0];\nminspacing2494 = $self3017.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[598],2,$t,true);\n}\nvar self3017 = $self3017;\nvar minspacing2494 = $minspacing2494;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2496 = R.mC();\n}\nwhile(!R.isContinuation($ans2496)) {\nswitch($step2492) {\ncase 0: $step2492 = 1;\n$al2497 = L[605];\nR._cA(L[605],$type$Number3,minspacing2494);\nbreak;\ncase 1: $step2492 = 2;\n$al2497 = L[604];\n// omitting isFunction check;\n$ans2496 = _lessthan3.app(minspacing2494,(0));\nbreak;\ncase 2: var anf_if2502 = $ans2496;\n$step2492 = R.checkPyretTrue(anf_if2502)?3:5;\nbreak;\ncase 3: $step2492 = 4;\n$al2497 = L[603];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2497,raise1);\n}\n$ans2496 = raise1.app((\"gridlines-minspacing: Min spacing must be non-negative\"));\nbreak;\ncase 4: $step2492 = 6;\n$ans2496 = nothing5;\nbreak;\ncase 5: $step2492 = 6;\n$ans2496 = nothing5;\nbreak;\ncase 6: $step2492 = 7;\n$ans2496 = R.maybeMethodCall0(self3017,\"constr\",L[599]);\nbreak;\ncase 7: var anf_fun2428 = $ans2496;\n$al2497 = L[600];\nvar anf_extend2500 = G(self3017,\"obj\",L[600]);\n// caller optimization;\n$ans2496 = some33.app(minspacing2494);\nvar anf_extend2501 = $ans2496;\nvar anf_arg1113 = R.extendObj(L[601],anf_extend2500,{\"gridlineMinspacing\":anf_extend2501});\n$step2492 = 8;\n$al2497 = L[602];\nif(typeof(anf_fun2428.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2497,anf_fun2428);\n}\n$ans2496 = anf_fun2428.app(anf_arg1113);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans2496;\ndefault: R.ffi.throwSpinnakerError(L[598],$step2492);\n}\n}\nif($step2492 !== 8) {\n$ans2496.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2497,$temp_full2493,$step2492,[self3017,minspacing2494],[],$elidedFrames2499);\n}\nreturn $ans2496;\n};\nvar gridlines$min$spacing$method6842 = R.makeMethod1($temp_full2493,\"\");\nvar $temp_full2505 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__606($self2506,$minspacing2507) {\nvar $step2504 = 0;\nvar $elidedFrames2511 = 0;\nvar $ans2508 = D;\nvar $al2509 = L[606];\nif(R.isAR($self2506)) {\n$step2504 = $self2506.step;\n$al2509 = $self2506.from;\n$ans2508 = $self2506.ans;\n$elidedFrames2511 = $self2506.elidedFrames;\nself2506 = $self2506.args[0];\nminspacing2507 = $self2506.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[606],2,$t,true);\n}\nvar self2506 = $self2506;\nvar minspacing2507 = $minspacing2507;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2508 = R.mC();\n}\nwhile(!R.isContinuation($ans2508)) {\nswitch($step2504) {\ncase 0: $step2504 = 1;\n$al2509 = L[613];\nR._cA(L[613],$type$Number3,minspacing2507);\nbreak;\ncase 1: $step2504 = 2;\n$al2509 = L[612];\n// omitting isFunction check;\n$ans2508 = _lessthan3.app(minspacing2507,(0));\nbreak;\ncase 2: var anf_if2513 = $ans2508;\n$step2504 = R.checkPyretTrue(anf_if2513)?3:5;\nbreak;\ncase 3: $step2504 = 4;\n$al2509 = L[611];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2509,raise1);\n}\n$ans2508 = raise1.app((\"minor-gridlines-minspacing: Min spacing must be non-negative\"));\nbreak;\ncase 4: $step2504 = 6;\n$ans2508 = nothing5;\nbreak;\ncase 5: $step2504 = 6;\n$ans2508 = nothing5;\nbreak;\ncase 6: $step2504 = 7;\n$ans2508 = R.maybeMethodCall0(self2506,\"constr\",L[607]);\nbreak;\ncase 7: var anf_fun1099 = $ans2508;\n$al2509 = L[608];\nvar anf_extend2512 = G(self2506,\"obj\",L[608]);\nvar anf_arg1100 = R.extendObj(L[609],anf_extend2512,{\"show-minor-grid-lines\":(true),\n\"minorGridlineMinspacing\":minspacing2507});\n$step2504 = 8;\n$al2509 = L[610];\nif(typeof(anf_fun1099.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2509,anf_fun1099);\n}\n$ans2508 = anf_fun1099.app(anf_arg1100);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans2508;\ndefault: R.ffi.throwSpinnakerError(L[606],$step2504);\n}\n}\nif($step2504 !== 8) {\n$ans2508.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2509,$temp_full2505,$step2504,[self2506,minspacing2507],[],$elidedFrames2511);\n}\nreturn $ans2508;\n};\nvar minor$gridlines$min$spacing$method6839 = R.makeMethod1($temp_full2505,\"\");\nvar $temp_full2516 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__614($self2517,$x$axis2518) {\nvar $step2515 = 0;\nvar $elidedFrames2524 = 0;\nvar $ans2521 = D;\nvar $al2522 = L[614];\nif(R.isAR($self2517)) {\n$step2515 = $self2517.step;\n$al2522 = $self2517.from;\n$ans2521 = $self2517.ans;\n$elidedFrames2524 = $self2517.elidedFrames;\nself2517 = $self2517.args[0];\nx$axis2518 = $self2517.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[614],2,$t,true);\n}\nvar self2517 = $self2517;\nvar x$axis2518 = $x$axis2518;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2521 = R.mC();\n}\nwhile(!R.isContinuation($ans2521)) {\nswitch($step2515) {\ncase 0: $step2515 = 1;\n$al2522 = L[619];\nR._cA(L[619],$type$String8,x$axis2518);\nbreak;\ncase 1: $step2515 = 2;\n$ans2521 = R.maybeMethodCall0(self2517,\"constr\",L[615]);\nbreak;\ncase 2: var anf_fun2527 = $ans2521;\n$al2522 = L[616];\nvar anf_extend2525 = G(self2517,\"obj\",L[616]);\nvar anf_arg1115 = R.extendObj(L[617],anf_extend2525,{\"x-axis\":x$axis2518});\n$step2515 = 3;\n$al2522 = L[618];\nif(typeof(anf_fun2527.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2522,anf_fun2527);\n}\n$ans2521 = anf_fun2527.app(anf_arg1115);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2521;\ndefault: R.ffi.throwSpinnakerError(L[614],$step2515);\n}\n}\nif($step2515 !== 3) {\n$ans2521.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2522,$temp_full2516,$step2515,[self2517,x$axis2518],[],$elidedFrames2524);\n}\nreturn $ans2521;\n};\nvar x$axis$method4410 = R.makeMethod1($temp_full2516,\"\");\nvar $temp_full2531 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__620($self2532,$y$axis2533) {\nvar $step2530 = 0;\nvar $elidedFrames2537 = 0;\nvar $ans2534 = D;\nvar $al2535 = L[620];\nif(R.isAR($self2532)) {\n$step2530 = $self2532.step;\n$al2535 = $self2532.from;\n$ans2534 = $self2532.ans;\n$elidedFrames2537 = $self2532.elidedFrames;\nself2532 = $self2532.args[0];\ny$axis2533 = $self2532.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[620],2,$t,true);\n}\nvar self2532 = $self2532;\nvar y$axis2533 = $y$axis2533;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2534 = R.mC();\n}\nwhile(!R.isContinuation($ans2534)) {\nswitch($step2530) {\ncase 0: $step2530 = 1;\n$al2535 = L[625];\nR._cA(L[625],$type$String8,y$axis2533);\nbreak;\ncase 1: $step2530 = 2;\n$ans2534 = R.maybeMethodCall0(self2532,\"constr\",L[621]);\nbreak;\ncase 2: var anf_fun1105 = $ans2534;\n$al2535 = L[622];\nvar anf_extend2538 = G(self2532,\"obj\",L[622]);\nvar anf_arg1103 = R.extendObj(L[623],anf_extend2538,{\"y-axis\":y$axis2533});\n$step2530 = 3;\n$al2535 = L[624];\nif(typeof(anf_fun1105.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2535,anf_fun1105);\n}\n$ans2534 = anf_fun1105.app(anf_arg1103);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2534;\ndefault: R.ffi.throwSpinnakerError(L[620],$step2530);\n}\n}\nif($step2530 !== 3) {\n$ans2534.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2535,$temp_full2531,$step2530,[self2532,y$axis2533],[],$elidedFrames2537);\n}\nreturn $ans2534;\n};\nvar y$axis$method4411 = R.makeMethod1($temp_full2531,\"\");\nvar $temp_full2541 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__626($self2542,$x$min2543) {\nvar $step2540 = 0;\nvar $elidedFrames2547 = 0;\nvar $ans2544 = D;\nvar $al2545 = L[626];\nif(R.isAR($self2542)) {\n$step2540 = $self2542.step;\n$al2545 = $self2542.from;\n$ans2544 = $self2542.ans;\n$elidedFrames2547 = $self2542.elidedFrames;\nself2542 = $self2542.args[0];\nx$min2543 = $self2542.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[626],2,$t,true);\n}\nvar self2542 = $self2542;\nvar x$min2543 = $x$min2543;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2544 = R.mC();\n}\nwhile(!R.isContinuation($ans2544)) {\nswitch($step2540) {\ncase 0: $step2540 = 1;\n$al2545 = L[631];\nR._cA(L[631],$type$Number3,x$min2543);\nbreak;\ncase 1: $step2540 = 2;\n$ans2544 = R.maybeMethodCall0(self2542,\"constr\",L[627]);\nbreak;\ncase 2: var anf_fun2550 = $ans2544;\n$al2545 = L[628];\nvar anf_extend2548 = G(self2542,\"obj\",L[628]);\n// caller optimization;\n$ans2544 = some33.app(x$min2543);\nvar anf_extend2549 = $ans2544;\nvar anf_arg2433 = R.extendObj(L[629],anf_extend2548,{\"x-min\":anf_extend2549});\n$step2540 = 3;\n$al2545 = L[630];\nif(typeof(anf_fun2550.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2545,anf_fun2550);\n}\n$ans2544 = anf_fun2550.app(anf_arg2433);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2544;\ndefault: R.ffi.throwSpinnakerError(L[626],$step2540);\n}\n}\nif($step2540 !== 3) {\n$ans2544.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2545,$temp_full2541,$step2540,[self2542,x$min2543],[],$elidedFrames2547);\n}\nreturn $ans2544;\n};\nvar x$min$method4452 = R.makeMethod1($temp_full2541,\"\");\nvar $temp_full2554 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__632($self2555,$x$max2556) {\nvar $step2553 = 0;\nvar $elidedFrames2560 = 0;\nvar $ans2557 = D;\nvar $al2558 = L[632];\nif(R.isAR($self2555)) {\n$step2553 = $self2555.step;\n$al2558 = $self2555.from;\n$ans2557 = $self2555.ans;\n$elidedFrames2560 = $self2555.elidedFrames;\nself2555 = $self2555.args[0];\nx$max2556 = $self2555.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[632],2,$t,true);\n}\nvar self2555 = $self2555;\nvar x$max2556 = $x$max2556;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2557 = R.mC();\n}\nwhile(!R.isContinuation($ans2557)) {\nswitch($step2553) {\ncase 0: $step2553 = 1;\n$al2558 = L[637];\nR._cA(L[637],$type$Number3,x$max2556);\nbreak;\ncase 1: $step2553 = 2;\n$ans2557 = R.maybeMethodCall0(self2555,\"constr\",L[633]);\nbreak;\ncase 2: var anf_fun2563 = $ans2557;\n$al2558 = L[634];\nvar anf_extend2561 = G(self2555,\"obj\",L[634]);\n// caller optimization;\n$ans2557 = some33.app(x$max2556);\nvar anf_extend2562 = $ans2557;\nvar anf_arg1117 = R.extendObj(L[635],anf_extend2561,{\"x-max\":anf_extend2562});\n$step2553 = 3;\n$al2558 = L[636];\nif(typeof(anf_fun2563.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2558,anf_fun2563);\n}\n$ans2557 = anf_fun2563.app(anf_arg1117);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2557;\ndefault: R.ffi.throwSpinnakerError(L[632],$step2553);\n}\n}\nif($step2553 !== 3) {\n$ans2557.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2558,$temp_full2554,$step2553,[self2555,x$max2556],[],$elidedFrames2560);\n}\nreturn $ans2557;\n};\nvar x$max$method4453 = R.makeMethod1($temp_full2554,\"\");\nvar $temp_full2567 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__638($self2568,$y$min2569) {\nvar $step2566 = 0;\nvar $elidedFrames2573 = 0;\nvar $ans2570 = D;\nvar $al2571 = L[638];\nif(R.isAR($self2568)) {\n$step2566 = $self2568.step;\n$al2571 = $self2568.from;\n$ans2570 = $self2568.ans;\n$elidedFrames2573 = $self2568.elidedFrames;\nself2568 = $self2568.args[0];\ny$min2569 = $self2568.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[638],2,$t,true);\n}\nvar self2568 = $self2568;\nvar y$min2569 = $y$min2569;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2570 = R.mC();\n}\nwhile(!R.isContinuation($ans2570)) {\nswitch($step2566) {\ncase 0: $step2566 = 1;\n$al2571 = L[643];\nR._cA(L[643],$type$Number3,y$min2569);\nbreak;\ncase 1: $step2566 = 2;\n$ans2570 = R.maybeMethodCall0(self2568,\"constr\",L[639]);\nbreak;\ncase 2: var anf_fun2576 = $ans2570;\n$al2571 = L[640];\nvar anf_extend2574 = G(self2568,\"obj\",L[640]);\n// caller optimization;\n$ans2570 = some33.app(y$min2569);\nvar anf_extend2575 = $ans2570;\nvar anf_arg2449 = R.extendObj(L[641],anf_extend2574,{\"y-min\":anf_extend2575});\n$step2566 = 3;\n$al2571 = L[642];\nif(typeof(anf_fun2576.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2571,anf_fun2576);\n}\n$ans2570 = anf_fun2576.app(anf_arg2449);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2570;\ndefault: R.ffi.throwSpinnakerError(L[638],$step2566);\n}\n}\nif($step2566 !== 3) {\n$ans2570.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2571,$temp_full2567,$step2566,[self2568,y$min2569],[],$elidedFrames2573);\n}\nreturn $ans2570;\n};\nvar y$min$method4432 = R.makeMethod1($temp_full2567,\"\");\nvar $temp_full2579 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__644($self3094,$y$max2580) {\nvar $step2578 = 0;\nvar $elidedFrames2584 = 0;\nvar $ans2581 = D;\nvar $al2582 = L[644];\nif(R.isAR($self3094)) {\n$step2578 = $self3094.step;\n$al2582 = $self3094.from;\n$ans2581 = $self3094.ans;\n$elidedFrames2584 = $self3094.elidedFrames;\nself3094 = $self3094.args[0];\ny$max2580 = $self3094.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[644],2,$t,true);\n}\nvar self3094 = $self3094;\nvar y$max2580 = $y$max2580;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2581 = R.mC();\n}\nwhile(!R.isContinuation($ans2581)) {\nswitch($step2578) {\ncase 0: $step2578 = 1;\n$al2582 = L[649];\nR._cA(L[649],$type$Number3,y$max2580);\nbreak;\ncase 1: $step2578 = 2;\n$ans2581 = R.maybeMethodCall0(self3094,\"constr\",L[645]);\nbreak;\ncase 2: var anf_fun2587 = $ans2581;\n$al2582 = L[646];\nvar anf_extend2585 = G(self3094,\"obj\",L[646]);\n// caller optimization;\n$ans2581 = some33.app(y$max2580);\nvar anf_extend2586 = $ans2581;\nvar anf_arg1158 = R.extendObj(L[647],anf_extend2585,{\"y-max\":anf_extend2586});\n$step2578 = 3;\n$al2582 = L[648];\nif(typeof(anf_fun2587.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2582,anf_fun2587);\n}\n$ans2581 = anf_fun2587.app(anf_arg1158);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2581;\ndefault: R.ffi.throwSpinnakerError(L[644],$step2578);\n}\n}\nif($step2578 !== 3) {\n$ans2581.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2582,$temp_full2579,$step2578,[self3094,y$max2580],[],$elidedFrames2584);\n}\nreturn $ans2581;\n};\nvar y$max$method4433 = R.makeMethod1($temp_full2579,\"\");\nvar $temp_full2590 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__650($self2591,$cmp2592,$eq2593) {\nvar $step2589 = 0;\nvar $elidedFrames2598 = 0;\nvar $ans2595 = D;\nvar $al2596 = L[650];\nif(R.isAR($self2591)) {\n$step2589 = $self2591.step;\n$al2596 = $self2591.from;\n$ans2595 = $self2591.ans;\n$elidedFrames2598 = $self2591.elidedFrames;\nself2591 = $self2591.args[0];\ncmp2592 = $self2591.args[1];\neq2593 = $self2591.args[2];\nsorted$table2623 = $self2591.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[650],3,$t,true);\n}\nvar self2591 = $self2591;\nvar cmp2592 = $cmp2592;\nvar eq2593 = $eq2593;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2595 = R.mC();\n}\nwhile(!R.isContinuation($ans2595)) {\nswitch($step2589) {\ncase 0: $step2589 = 1;\n$al2596 = L[662];\nR._cA(L[662],R.Function,cmp2592);\nbreak;\ncase 1: $step2589 = 2;\n$al2596 = L[663];\nR._cA(L[663],R.Function,eq2593);\nbreak;\ncase 2: var get$value2611 = {\"$var\":D};\nvar $temp_lam2600 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__651($row2601) {\nvar $step2599 = 0;\nvar $elidedFrames2605 = 0;\nvar $ans2602 = D;\nvar $al2603 = L[651];\nif(R.isAR($row2601)) {\n$step2599 = $row2601.step;\n$al2603 = $row2601.from;\n$ans2602 = $row2601.ans;\n$elidedFrames2605 = $row2601.elidedFrames;\nrow2601 = $row2601.args[0];\nann_check_temp2606 = $row2601.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[651],1,$t,false);\n}\nvar row2601 = $row2601;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2602 = R.mC();\n}\nwhile(!R.isContinuation($ans2602)) {\nswitch($step2599) {\ncase 0: $step2599 = 1;\n$al2603 = L[653];\nR._cA(L[653],$type$RawArray1,row2601);\nbreak;\ncase 1: // caller optimization;\n$ans2602 = raw$array$get17.app(row2601,(1));\nvar ann_check_temp2606 = $ans2602;\n$step2599 = 2;\n$al2603 = L[652];\nvar $ann$check2607 = R._cA(L[652],$type$Number3,ann_check_temp2606);\nif(R.isContinuation($ann$check2607)) {\n$ans2602 = $ann$check2607;\n}\nbreak;\ncase 2: $step2599 = 3;\n$ans2602 = ann_check_temp2606;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2602;\ndefault: R.ffi.throwSpinnakerError(L[651],$step2599);\n}\n}\nif($step2599 !== 3) {\n$ans2602.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2603,$temp_lam2600,$step2599,[row2601],[ann_check_temp2606],$elidedFrames2605);\n}\nreturn $ans2602;\n};\nvar anf_assign2610 = R.mF($temp_lam2600,\"get-value\");\nget$value2611.$var = anf_assign2610;\nR.nothing;\nvar $temp_lam2613 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__654($x2614) {\nvar $step2612 = 0;\nvar $elidedFrames2618 = 0;\nvar $ans2615 = D;\nvar $al2616 = L[654];\nif(R.isAR($x2614)) {\n$step2612 = $x2614.step;\n$al2616 = $x2614.from;\n$ans2615 = $x2614.ans;\n$elidedFrames2618 = $x2614.elidedFrames;\nx2614 = $x2614.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[654],1,$t,false);\n}\nvar x2614 = $x2614;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2615 = R.mC();\n}\nwhile(!R.isContinuation($ans2615)) {\nswitch($step2612) {\ncase 0: $step2612 = 1;\n$ans2615 = x2614;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2615;\ndefault: R.ffi.throwSpinnakerError(L[654],$step2612);\n}\n}\nif($step2612 !== 1) {\n$ans2615.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2616,$temp_lam2613,$step2612,[x2614],[],$elidedFrames2618);\n}\nreturn $ans2615;\n};\nvar identity2621 = R.mF($temp_lam2613,\"\");\n$al2596 = L[655];\nvar anf_get_bang2620 = G(self2591,\"obj\",L[655]);\nvar anf_arg1150 = R.gFR(anf_get_bang2620,\"tab\",L[656]);\n$step2589 = 3;\n$al2596 = L[661];\n// omitting isFunction check;\n$ans2595 = table$sorter1526.$var.app(anf_arg1150,get$value2611.$var,identity2621,cmp2592,eq2593);\nbreak;\ncase 3: var sorted$table2623 = $ans2595;\n$step2589 = 4;\n$ans2595 = R.maybeMethodCall0(self2591,\"constr\",L[657]);\nbreak;\ncase 4: var anf_fun2625 = $ans2595;\n$al2596 = L[658];\nvar anf_extend2622 = G(self2591,\"obj\",L[658]);\nvar anf_arg1159 = R.extendObj(L[659],anf_extend2622,{\"tab\":sorted$table2623});\n$step2589 = 5;\n$al2596 = L[660];\nif(typeof(anf_fun2625.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2596,anf_fun2625);\n}\n$ans2595 = anf_fun2625.app(anf_arg1159);\nbreak;\ncase 5: ++R.GAS;\nreturn $ans2595;\ndefault: R.ffi.throwSpinnakerError(L[650],$step2589);\n}\n}\nif($step2589 !== 5) {\n$ans2595.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2596,$temp_full2590,$step2589,[self2591,cmp2592,eq2593],[sorted$table2623],$elidedFrames2598);\n}\nreturn $ans2595;\n};\nvar sort$method4097 = R.makeMethod2($temp_full2590,\"\");\nvar $temp_full2628 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__664($self2629) {\nvar $step2627 = 0;\nvar $elidedFrames2633 = 0;\nvar $ans2630 = D;\nvar $al2631 = L[664];\nif(R.isAR($self2629)) {\n$step2627 = $self2629.step;\n$al2631 = $self2629.from;\n$ans2630 = $self2629.ans;\n$elidedFrames2633 = $self2629.elidedFrames;\nself2629 = $self2629.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[664],1,$t,true);\n}\nvar self2629 = $self2629;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2630 = R.mC();\n}\nwhile(!R.isContinuation($ans2630)) {\nswitch($step2627) {\ncase 0: var $temp_lam2635 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__665($a2636,$b2637) {\nvar $step2634 = 0;\nvar $elidedFrames2641 = 0;\nvar $ans2638 = D;\nvar $al2639 = L[665];\nif(R.isAR($a2636)) {\n$step2634 = $a2636.step;\n$al2639 = $a2636.from;\n$ans2638 = $a2636.ans;\n$elidedFrames2641 = $a2636.elidedFrames;\na2636 = $a2636.args[0];\nb2637 = $a2636.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[665],2,$t,false);\n}\nvar a2636 = $a2636;\nvar b2637 = $b2637;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2638 = R.mC();\n}\nwhile(!R.isContinuation($ans2638)) {\nswitch($step2634) {\ncase 0: $step2634 = 1;\n$al2639 = L[666];\n// omitting isFunction check;\n$ans2638 = _lessthan3.app(a2636,b2637);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2638;\ndefault: R.ffi.throwSpinnakerError(L[665],$step2634);\n}\n}\nif($step2634 !== 1) {\n$ans2638.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2639,$temp_lam2635,$step2634,[a2636,b2637],[],$elidedFrames2641);\n}\nreturn $ans2638;\n};\nvar anf_arg1155 = R.mF($temp_lam2635,\"\");\nvar $temp_lam2645 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__667($a2646,$b2647) {\nvar $step2644 = 0;\nvar $elidedFrames2651 = 0;\nvar $ans2648 = D;\nvar $al2649 = L[667];\nif(R.isAR($a2646)) {\n$step2644 = $a2646.step;\n$al2649 = $a2646.from;\n$ans2648 = $a2646.ans;\n$elidedFrames2651 = $a2646.elidedFrames;\na2646 = $a2646.args[0];\nb2647 = $a2646.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[667],2,$t,false);\n}\nvar a2646 = $a2646;\nvar b2647 = $b2647;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2648 = R.mC();\n}\nwhile(!R.isContinuation($ans2648)) {\nswitch($step2644) {\ncase 0: $step2644 = 1;\n$al2649 = L[668];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2649,equal$always1);\n}\n$ans2648 = equal$always1.app(a2646,b2647);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2648;\ndefault: R.ffi.throwSpinnakerError(L[667],$step2644);\n}\n}\nif($step2644 !== 1) {\n$ans2648.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2649,$temp_lam2645,$step2644,[a2646,b2647],[],$elidedFrames2651);\n}\nreturn $ans2648;\n};\nvar anf_arg1160 = R.mF($temp_lam2645,\"\");\n$step2627 = 1;\n$ans2630 = R.maybeMethodCall2(self2629,\"sort-by\",L[669],anf_arg1155,anf_arg1160);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2630;\ndefault: R.ffi.throwSpinnakerError(L[664],$step2627);\n}\n}\nif($step2627 !== 1) {\n$ans2630.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2631,$temp_full2628,$step2627,[self2629],[],$elidedFrames2633);\n}\nreturn $ans2630;\n};\nvar default$sort$method4096 = R.makeMethod0($temp_full2628,\"\");\nvar $temp_full2655 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__670($self2656,$cmp2657,$eq2658) {\nvar $step2654 = 0;\nvar $elidedFrames2662 = 0;\nvar $ans2659 = D;\nvar $al2660 = L[670];\nif(R.isAR($self2656)) {\n$step2654 = $self2656.step;\n$al2660 = $self2656.from;\n$ans2659 = $self2656.ans;\n$elidedFrames2662 = $self2656.elidedFrames;\nself2656 = $self2656.args[0];\ncmp2657 = $self2656.args[1];\neq2658 = $self2656.args[2];\nsorted$table2687 = $self2656.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[670],3,$t,true);\n}\nvar self2656 = $self2656;\nvar cmp2657 = $cmp2657;\nvar eq2658 = $eq2658;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2659 = R.mC();\n}\nwhile(!R.isContinuation($ans2659)) {\nswitch($step2654) {\ncase 0: $step2654 = 1;\n$al2660 = L[682];\nR._cA(L[682],R.Function,cmp2657);\nbreak;\ncase 1: $step2654 = 2;\n$al2660 = L[683];\nR._cA(L[683],R.Function,eq2658);\nbreak;\ncase 2: var get$label2675 = {\"$var\":D};\nvar $temp_lam2664 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__671($row2665) {\nvar $step2663 = 0;\nvar $elidedFrames2670 = 0;\nvar $ans2667 = D;\nvar $al2668 = L[671];\nif(R.isAR($row2665)) {\n$step2663 = $row2665.step;\n$al2668 = $row2665.from;\n$ans2667 = $row2665.ans;\n$elidedFrames2670 = $row2665.elidedFrames;\nrow2665 = $row2665.args[0];\nann_check_temp2671 = $row2665.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[671],1,$t,false);\n}\nvar row2665 = $row2665;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2667 = R.mC();\n}\nwhile(!R.isContinuation($ans2667)) {\nswitch($step2663) {\ncase 0: $step2663 = 1;\n$al2668 = L[673];\nR._cA(L[673],$type$RawArray1,row2665);\nbreak;\ncase 1: // caller optimization;\n$ans2667 = raw$array$get17.app(row2665,(0));\nvar ann_check_temp2671 = $ans2667;\n$step2663 = 2;\n$al2668 = L[672];\nvar $ann$check2672 = R._cA(L[672],$type$String8,ann_check_temp2671);\nif(R.isContinuation($ann$check2672)) {\n$ans2667 = $ann$check2672;\n}\nbreak;\ncase 2: $step2663 = 3;\n$ans2667 = ann_check_temp2671;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2667;\ndefault: R.ffi.throwSpinnakerError(L[671],$step2663);\n}\n}\nif($step2663 !== 3) {\n$ans2667.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2668,$temp_lam2664,$step2663,[row2665],[ann_check_temp2671],$elidedFrames2670);\n}\nreturn $ans2667;\n};\nvar anf_assign2674 = R.mF($temp_lam2664,\"get-label\");\nget$label2675.$var = anf_assign2674;\nR.nothing;\nvar $temp_lam2677 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__674($x2678) {\nvar $step2676 = 0;\nvar $elidedFrames2682 = 0;\nvar $ans2679 = D;\nvar $al2680 = L[674];\nif(R.isAR($x2678)) {\n$step2676 = $x2678.step;\n$al2680 = $x2678.from;\n$ans2679 = $x2678.ans;\n$elidedFrames2682 = $x2678.elidedFrames;\nx2678 = $x2678.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[674],1,$t,false);\n}\nvar x2678 = $x2678;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2679 = R.mC();\n}\nwhile(!R.isContinuation($ans2679)) {\nswitch($step2676) {\ncase 0: $step2676 = 1;\n$ans2679 = x2678;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2679;\ndefault: R.ffi.throwSpinnakerError(L[674],$step2676);\n}\n}\nif($step2676 !== 1) {\n$ans2679.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2680,$temp_lam2677,$step2676,[x2678],[],$elidedFrames2682);\n}\nreturn $ans2679;\n};\nvar identity2685 = R.mF($temp_lam2677,\"\");\n$al2660 = L[675];\nvar anf_get_bang2684 = G(self2656,\"obj\",L[675]);\nvar anf_arg2489 = R.gFR(anf_get_bang2684,\"tab\",L[676]);\n$step2654 = 3;\n$al2660 = L[681];\n// omitting isFunction check;\n$ans2659 = table$sorter1526.$var.app(anf_arg2489,get$label2675.$var,identity2685,cmp2657,eq2658);\nbreak;\ncase 3: var sorted$table2687 = $ans2659;\n$step2654 = 4;\n$ans2659 = R.maybeMethodCall0(self2656,\"constr\",L[677]);\nbreak;\ncase 4: var anf_fun2480 = $ans2659;\n$al2660 = L[678];\nvar anf_extend2686 = G(self2656,\"obj\",L[678]);\nvar anf_arg1172 = R.extendObj(L[679],anf_extend2686,{\"tab\":sorted$table2687});\n$step2654 = 5;\n$al2660 = L[680];\nif(typeof(anf_fun2480.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2660,anf_fun2480);\n}\n$ans2659 = anf_fun2480.app(anf_arg1172);\nbreak;\ncase 5: ++R.GAS;\nreturn $ans2659;\ndefault: R.ffi.throwSpinnakerError(L[670],$step2654);\n}\n}\nif($step2654 !== 5) {\n$ans2659.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2660,$temp_full2655,$step2654,[self2656,cmp2657,eq2658],[sorted$table2687],$elidedFrames2662);\n}\nreturn $ans2659;\n};\nvar label$sort$method4098 = R.makeMethod2($temp_full2655,\"\");\nvar $temp_full2690 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__684($self2691,$scorer2692,$cmp2693,$eq2694) {\nvar $step2689 = 0;\nvar $elidedFrames2698 = 0;\nvar $ans2695 = D;\nvar $al2696 = L[684];\nif(R.isAR($self2691)) {\n$step2689 = $self2691.step;\n$al2696 = $self2691.from;\n$ans2695 = $self2691.ans;\n$elidedFrames2698 = $self2691.elidedFrames;\nself2691 = $self2691.args[0];\nscorer2692 = $self2691.args[1];\ncmp2693 = $self2691.args[2];\neq2694 = $self2691.args[3];\nsorted$table2713 = $self2691.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[684],4,$t,true);\n}\nvar self2691 = $self2691;\nvar scorer2692 = $scorer2692;\nvar cmp2693 = $cmp2693;\nvar eq2694 = $eq2694;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2695 = R.mC();\n}\nwhile(!R.isContinuation($ans2695)) {\nswitch($step2689) {\ncase 0: $step2689 = 1;\n$al2696 = L[695];\nR._cA(L[695],R.Function,scorer2692);\nbreak;\ncase 1: $step2689 = 2;\n$al2696 = L[696];\nR._cA(L[696],R.Function,cmp2693);\nbreak;\ncase 2: $step2689 = 3;\n$al2696 = L[697];\nR._cA(L[697],R.Function,eq2694);\nbreak;\ncase 3: var get$values2710 = {\"$var\":D};\nvar $temp_lam2700 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__685($row2701) {\nvar $step2699 = 0;\nvar $elidedFrames2705 = 0;\nvar $ans2702 = D;\nvar $al2703 = L[685];\nif(R.isAR($row2701)) {\n$step2699 = $row2701.step;\n$al2703 = $row2701.from;\n$ans2702 = $row2701.ans;\n$elidedFrames2705 = $row2701.elidedFrames;\nrow2701 = $row2701.args[0];\nann_check_temp2706 = $row2701.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[685],1,$t,false);\n}\nvar row2701 = $row2701;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2702 = R.mC();\n}\nwhile(!R.isContinuation($ans2702)) {\nswitch($step2699) {\ncase 0: $step2699 = 1;\n$al2703 = L[687];\nR._cA(L[687],$type$RawArray1,row2701);\nbreak;\ncase 1: // caller optimization;\n$ans2702 = raw$array$get17.app(row2701,(1));\nvar anf_arg1176 = $ans2702;\n// caller optimization;\n$ans2702 = raw$array$to$list4.app(anf_arg1176);\nvar ann_check_temp2706 = $ans2702;\n$step2699 = 2;\n$al2703 = L[686];\nvar $ann$check2707 = R._cA(L[686],List16,ann_check_temp2706);\nif(R.isContinuation($ann$check2707)) {\n$ans2702 = $ann$check2707;\n}\nbreak;\ncase 2: $step2699 = 3;\n$ans2702 = ann_check_temp2706;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2702;\ndefault: R.ffi.throwSpinnakerError(L[685],$step2699);\n}\n}\nif($step2699 !== 3) {\n$ans2702.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2703,$temp_lam2700,$step2699,[row2701],[ann_check_temp2706],$elidedFrames2705);\n}\nreturn $ans2702;\n};\nvar anf_assign2709 = R.mF($temp_lam2700,\"get-values\");\nget$values2710.$var = anf_assign2709;\nR.nothing;\n$al2696 = L[688];\nvar anf_get_bang2711 = G(self2691,\"obj\",L[688]);\nvar anf_arg1181 = R.gFR(anf_get_bang2711,\"tab\",L[689]);\n$step2689 = 4;\n$al2696 = L[694];\n// omitting isFunction check;\n$ans2695 = table$sorter1526.$var.app(anf_arg1181,get$values2710.$var,scorer2692,cmp2693,eq2694);\nbreak;\ncase 4: var sorted$table2713 = $ans2695;\n$step2689 = 5;\n$ans2695 = R.maybeMethodCall0(self2691,\"constr\",L[690]);\nbreak;\ncase 5: var anf_fun2714 = $ans2695;\n$al2696 = L[691];\nvar anf_extend2712 = G(self2691,\"obj\",L[691]);\nvar anf_arg1196 = R.extendObj(L[692],anf_extend2712,{\"tab\":sorted$table2713});\n$step2689 = 6;\n$al2696 = L[693];\nif(typeof(anf_fun2714.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2696,anf_fun2714);\n}\n$ans2695 = anf_fun2714.app(anf_arg1196);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans2695;\ndefault: R.ffi.throwSpinnakerError(L[684],$step2689);\n}\n}\nif($step2689 !== 6) {\n$ans2695.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2696,$temp_full2690,$step2689,[self2691,scorer2692,cmp2693,eq2694],[sorted$table2713],$elidedFrames2698);\n}\nreturn $ans2695;\n};\nvar multi$sort$method4142 = R.makeMethod3($temp_full2690,\"\");\nvar $temp_full2717 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__698($self3198,$cmp2718,$eq2719) {\nvar $step2716 = 0;\nvar $elidedFrames2723 = 0;\nvar $ans2720 = D;\nvar $al2721 = L[698];\nif(R.isAR($self3198)) {\n$step2716 = $self3198.step;\n$al2721 = $self3198.from;\n$ans2720 = $self3198.ans;\n$elidedFrames2723 = $self3198.elidedFrames;\nself3198 = $self3198.args[0];\ncmp2718 = $self3198.args[1];\neq2719 = $self3198.args[2];\nsorted$table2758 = $self3198.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[698],3,$t,true);\n}\nvar self3198 = $self3198;\nvar cmp2718 = $cmp2718;\nvar eq2719 = $eq2719;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2720 = R.mC();\n}\nwhile(!R.isContinuation($ans2720)) {\nswitch($step2716) {\ncase 0: $step2716 = 1;\n$al2721 = L[714];\nR._cA(L[714],R.Function,cmp2718);\nbreak;\ncase 1: $step2716 = 2;\n$al2721 = L[715];\nR._cA(L[715],R.Function,eq2719);\nbreak;\ncase 2: var get$values2736 = {\"$var\":D};\nvar $temp_lam2726 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__699($row2727) {\nvar $step2725 = 0;\nvar $elidedFrames2731 = 0;\nvar $ans2728 = D;\nvar $al2729 = L[699];\nif(R.isAR($row2727)) {\n$step2725 = $row2727.step;\n$al2729 = $row2727.from;\n$ans2728 = $row2727.ans;\n$elidedFrames2731 = $row2727.elidedFrames;\nrow2727 = $row2727.args[0];\nann_check_temp2732 = $row2727.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[699],1,$t,false);\n}\nvar row2727 = $row2727;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2728 = R.mC();\n}\nwhile(!R.isContinuation($ans2728)) {\nswitch($step2725) {\ncase 0: $step2725 = 1;\n$al2729 = L[701];\nR._cA(L[701],$type$RawArray1,row2727);\nbreak;\ncase 1: // caller optimization;\n$ans2728 = raw$array$get17.app(row2727,(1));\nvar anf_arg2514 = $ans2728;\n// caller optimization;\n$ans2728 = raw$array$to$list4.app(anf_arg2514);\nvar ann_check_temp2732 = $ans2728;\n$step2725 = 2;\n$al2729 = L[700];\nvar $ann$check2733 = R._cA(L[700],List16,ann_check_temp2732);\nif(R.isContinuation($ann$check2733)) {\n$ans2728 = $ann$check2733;\n}\nbreak;\ncase 2: $step2725 = 3;\n$ans2728 = ann_check_temp2732;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans2728;\ndefault: R.ffi.throwSpinnakerError(L[699],$step2725);\n}\n}\nif($step2725 !== 3) {\n$ans2728.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2729,$temp_lam2726,$step2725,[row2727],[ann_check_temp2732],$elidedFrames2731);\n}\nreturn $ans2728;\n};\nvar anf_assign2735 = R.mF($temp_lam2726,\"get-values\");\nget$values2736.$var = anf_assign2735;\nR.nothing;\nvar $temp_lam2738 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__702($l2739) {\nvar $step2737 = 0;\nvar $elidedFrames2743 = 0;\nvar $ans2740 = D;\nvar $al2741 = L[702];\nif(R.isAR($l2739)) {\n$step2737 = $l2739.step;\n$al2741 = $l2739.from;\n$ans2740 = $l2739.ans;\n$elidedFrames2743 = $l2739.elidedFrames;\nl2739 = $l2739.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[702],1,$t,false);\n}\nvar l2739 = $l2739;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2740 = R.mC();\n}\nwhile(!R.isContinuation($ans2740)) {\nswitch($step2737) {\ncase 0: $step2737 = 1;\n$al2741 = L[706];\nR._cA(L[706],List16,l2739);\nbreak;\ncase 1: var $temp_lam2745 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__703($acc2746,$elm2747) {\nvar $step2744 = 0;\nvar $elidedFrames2751 = 0;\nvar $ans2748 = D;\nvar $al2749 = L[703];\nif(R.isAR($acc2746)) {\n$step2744 = $acc2746.step;\n$al2749 = $acc2746.from;\n$ans2748 = $acc2746.ans;\n$elidedFrames2751 = $acc2746.elidedFrames;\nacc2746 = $acc2746.args[0];\nelm2747 = $acc2746.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[703],2,$t,false);\n}\nvar acc2746 = $acc2746;\nvar elm2747 = $elm2747;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2748 = R.mC();\n}\nwhile(!R.isContinuation($ans2748)) {\nswitch($step2744) {\ncase 0: $step2744 = 1;\n$al2749 = L[704];\n// omitting isFunction check;\n$ans2748 = _plus5.app(acc2746,elm2747);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2748;\ndefault: R.ffi.throwSpinnakerError(L[703],$step2744);\n}\n}\nif($step2744 !== 1) {\n$ans2748.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2749,$temp_lam2745,$step2744,[acc2746,elm2747],[],$elidedFrames2751);\n}\nreturn $ans2748;\n};\nvar anf_arg1197 = R.mF($temp_lam2745,\"\");\n$step2737 = 2;\n$al2741 = L[705];\n// omitting isFunction check;\n$ans2740 = fold24.app(anf_arg1197,(0),l2739);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans2740;\ndefault: R.ffi.throwSpinnakerError(L[702],$step2737);\n}\n}\nif($step2737 !== 2) {\n$ans2740.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2741,$temp_lam2738,$step2737,[l2739],[],$elidedFrames2743);\n}\nreturn $ans2740;\n};\nvar sum2756 = R.mF($temp_lam2738,\"\");\n$al2721 = L[707];\nvar anf_get_bang2755 = G(self3198,\"obj\",L[707]);\nvar anf_arg1201 = R.gFR(anf_get_bang2755,\"tab\",L[708]);\n$step2716 = 3;\n$al2721 = L[713];\n// omitting isFunction check;\n$ans2720 = table$sorter1526.$var.app(anf_arg1201,get$values2736.$var,sum2756,cmp2718,eq2719);\nbreak;\ncase 3: var sorted$table2758 = $ans2720;\n$step2716 = 4;\n$ans2720 = R.maybeMethodCall0(self3198,\"constr\",L[709]);\nbreak;\ncase 4: var anf_fun2759 = $ans2720;\n$al2721 = L[710];\nvar anf_extend2757 = G(self3198,\"obj\",L[710]);\nvar anf_arg1203 = R.extendObj(L[711],anf_extend2757,{\"tab\":sorted$table2758});\n$step2716 = 5;\n$al2721 = L[712];\nif(typeof(anf_fun2759.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2721,anf_fun2759);\n}\n$ans2720 = anf_fun2759.app(anf_arg1203);\nbreak;\ncase 5: ++R.GAS;\nreturn $ans2720;\ndefault: R.ffi.throwSpinnakerError(L[698],$step2716);\n}\n}\nif($step2716 !== 5) {\n$ans2720.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2721,$temp_full2717,$step2716,[self3198,cmp2718,eq2719],[sorted$table2758],$elidedFrames2723);\n}\nreturn $ans2720;\n};\nvar default$multi$sort$method4141 = R.makeMethod2($temp_full2717,\"\");\nvar $temp_full2762 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__716($self2763) {\nvar $step2761 = 0;\nvar $elidedFrames2767 = 0;\nvar $ans2764 = D;\nvar $al2765 = L[716];\nif(R.isAR($self2763)) {\n$step2761 = $self2763.step;\n$al2765 = $self2763.from;\n$ans2764 = $self2763.ans;\n$elidedFrames2767 = $self2763.elidedFrames;\nself2763 = $self2763.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[716],1,$t,true);\n}\nvar self2763 = $self2763;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2764 = R.mC();\n}\nwhile(!R.isContinuation($ans2764)) {\nswitch($step2761) {\ncase 0: var $temp_lam2769 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__717($a2770,$b2771) {\nvar $step2768 = 0;\nvar $elidedFrames2775 = 0;\nvar $ans2772 = D;\nvar $al2773 = L[717];\nif(R.isAR($a2770)) {\n$step2768 = $a2770.step;\n$al2773 = $a2770.from;\n$ans2772 = $a2770.ans;\n$elidedFrames2775 = $a2770.elidedFrames;\na2770 = $a2770.args[0];\nb2771 = $a2770.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[717],2,$t,false);\n}\nvar a2770 = $a2770;\nvar b2771 = $b2771;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2772 = R.mC();\n}\nwhile(!R.isContinuation($ans2772)) {\nswitch($step2768) {\ncase 0: $step2768 = 1;\n$al2773 = L[718];\n// omitting isFunction check;\n$ans2772 = _lessthan3.app(a2770,b2771);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2772;\ndefault: R.ffi.throwSpinnakerError(L[717],$step2768);\n}\n}\nif($step2768 !== 1) {\n$ans2772.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2773,$temp_lam2769,$step2768,[a2770,b2771],[],$elidedFrames2775);\n}\nreturn $ans2772;\n};\nvar anf_arg1207 = R.mF($temp_lam2769,\"\");\nvar $temp_lam2778 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__719($a2779,$b2780) {\nvar $step2777 = 0;\nvar $elidedFrames2784 = 0;\nvar $ans2781 = D;\nvar $al2782 = L[719];\nif(R.isAR($a2779)) {\n$step2777 = $a2779.step;\n$al2782 = $a2779.from;\n$ans2781 = $a2779.ans;\n$elidedFrames2784 = $a2779.elidedFrames;\na2779 = $a2779.args[0];\nb2780 = $a2779.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[719],2,$t,false);\n}\nvar a2779 = $a2779;\nvar b2780 = $b2780;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2781 = R.mC();\n}\nwhile(!R.isContinuation($ans2781)) {\nswitch($step2777) {\ncase 0: $step2777 = 1;\n$al2782 = L[720];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2782,equal$always1);\n}\n$ans2781 = equal$always1.app(a2779,b2780);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2781;\ndefault: R.ffi.throwSpinnakerError(L[719],$step2777);\n}\n}\nif($step2777 !== 1) {\n$ans2781.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2782,$temp_lam2778,$step2777,[a2779,b2780],[],$elidedFrames2784);\n}\nreturn $ans2781;\n};\nvar anf_arg2522 = R.mF($temp_lam2778,\"\");\n$step2761 = 1;\n$ans2764 = R.maybeMethodCall2(self2763,\"sort-by\",L[721],anf_arg1207,anf_arg2522);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2764;\ndefault: R.ffi.throwSpinnakerError(L[716],$step2761);\n}\n}\nif($step2761 !== 1) {\n$ans2764.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2765,$temp_full2762,$step2761,[self2763],[],$elidedFrames2767);\n}\nreturn $ans2764;\n};\nvar super$default$multi$sort$method4140 = R.makeMethod0($temp_full2762,\"\");\nvar $temp_full2788 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__722($self2789,$tickValues2790,$tickLabels2791) {\nvar $step2787 = 0;\nvar $elidedFrames2796 = 0;\nvar $ans2793 = D;\nvar $al2794 = L[722];\nif(R.isAR($self2789)) {\n$step2787 = $self2789.step;\n$al2794 = $self2789.from;\n$ans2793 = $self2789.ans;\n$elidedFrames2796 = $self2789.elidedFrames;\nself2789 = $self2789.args[0];\ntickValues2790 = $self2789.args[1];\ntickLabels2791 = $self2789.args[2];\nTLLen2802 = $self2789.vars[0];\nanf_fun2526 = $self2789.vars[1];\nTVLen2798 = $self2789.vars[2];\nticks2816 = $self2789.vars[3];\nanf_extend2817 = $self2789.vars[4];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[722],3,$t,true);\n}\nvar self2789 = $self2789;\nvar tickValues2790 = $tickValues2790;\nvar tickLabels2791 = $tickLabels2791;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2793 = R.mC();\n}\nwhile(!R.isContinuation($ans2793)) {\nswitch($step2787) {\ncase 0: $step2787 = 1;\n$al2794 = L[741];\nvar $ann$check2821 = R._cA(L[741],R.gDA(L[741],\"CL\",CL40.dict.types,\"LoN\"),tickValues2790);\nif(R.isContinuation($ann$check2821)) {\n$ans2793 = $ann$check2821;\n}\nbreak;\ncase 1: $step2787 = 2;\n$al2794 = L[742];\nvar $ann$check2822 = R._cA(L[742],R.gDA(L[742],\"CL\",CL40.dict.types,\"LoS\"),tickLabels2791);\nif(R.isContinuation($ann$check2822)) {\n$ans2793 = $ann$check2822;\n}\nbreak;\ncase 2: $step2787 = 3;\n$ans2793 = R.maybeMethodCall0(tickValues2790,\"length\",L[723]);\nbreak;\ncase 3: var TVLen2798 = $ans2793;\n$step2787 = 4;\n$ans2793 = R.maybeMethodCall0(tickLabels2791,\"length\",L[724]);\nbreak;\ncase 4: var TLLen2802 = $ans2793;\n$step2787 = 5;\n$al2794 = L[740];\n// omitting isFunction check;\n$ans2793 = distinct34.app(tickValues2790);\nbreak;\ncase 5: var anf_method_obj1219 = $ans2793;\n$step2787 = 6;\n$ans2793 = R.maybeMethodCall0(anf_method_obj1219,\"length\",L[725]);\nbreak;\ncase 6: var distinctTVLen2797 = $ans2793;\n$step2787 = 7;\n$al2794 = L[739];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2794,equal$always1);\n}\n$ans2793 = equal$always1.app(distinctTVLen2797,TVLen2798);\nbreak;\ncase 7: var anf_arg2801 = $ans2793;\n$step2787 = 8;\n$al2794 = L[738];\nif(typeof(not6.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2794,not6);\n}\n$ans2793 = not6.app(anf_arg2801);\nbreak;\ncase 8: var anf_if2820 = $ans2793;\n$step2787 = R.checkPyretTrue(anf_if2820)?9:11;\nbreak;\ncase 9: $step2787 = 10;\n$al2794 = L[737];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2794,raise1);\n}\n$ans2793 = raise1.app((\"add-pointers: pointers cannot overlap\"));\nbreak;\ncase 10: $step2787 = 12;\n$ans2793 = nothing5;\nbreak;\ncase 11: $step2787 = 12;\n$ans2793 = nothing5;\nbreak;\ncase 12: $step2787 = 13;\n$al2794 = L[736];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2794,equal$always1);\n}\n$ans2793 = equal$always1.app(TVLen2798,TLLen2802);\nbreak;\ncase 13: var anf_arg1244 = $ans2793;\n$step2787 = 14;\n$al2794 = L[735];\nif(typeof(not6.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2794,not6);\n}\n$ans2793 = not6.app(anf_arg1244);\nbreak;\ncase 14: var anf_if2819 = $ans2793;\n$step2787 = R.checkPyretTrue(anf_if2819)?15:17;\nbreak;\ncase 15: $step2787 = 16;\n$al2794 = L[734];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2794,raise1);\n}\n$ans2793 = raise1.app((\"add-pointers: pointers values and names should have the same length\"));\nbreak;\ncase 16: $step2787 = 18;\n$ans2793 = nothing5;\nbreak;\ncase 17: $step2787 = 18;\n$ans2793 = nothing5;\nbreak;\ncase 18: var $temp_lam2807 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__726($acc2808,$e12809,$e22810) {\nvar $step2806 = 0;\nvar $elidedFrames2814 = 0;\nvar $ans2811 = D;\nvar $al2812 = L[726];\nif(R.isAR($acc2808)) {\n$step2806 = $acc2808.step;\n$al2812 = $acc2808.from;\n$ans2811 = $acc2808.ans;\n$elidedFrames2814 = $acc2808.elidedFrames;\nacc2808 = $acc2808.args[0];\ne12809 = $acc2808.args[1];\ne22810 = $acc2808.args[2];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[726],3,$t,false);\n}\nvar acc2808 = $acc2808;\nvar e12809 = $e12809;\nvar e22810 = $e22810;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2811 = R.mC();\n}\nwhile(!R.isContinuation($ans2811)) {\nswitch($step2806) {\ncase 0: // caller optimization;\n$ans2811 = pointer362.$var.app(e12809,e22810);\nvar anf_arg2525 = $ans2811;\n// caller optimization;\n$ans2811 = link5.app(anf_arg2525,acc2808);\n$step2806 = 1;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2811;\ndefault: R.ffi.throwSpinnakerError(L[726],$step2806);\n}\n}\nif($step2806 !== 1) {\n$ans2811.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2812,$temp_lam2807,$step2806,[acc2808,e12809,e22810],[],$elidedFrames2814);\n}\nreturn $ans2811;\n};\nvar anf_arg2535 = R.mF($temp_lam2807,\"\");\n$step2787 = 19;\n$al2794 = L[733];\n// omitting isFunction check;\n$ans2793 = fold237.app(anf_arg2535,empty18,tickLabels2791,tickValues2790);\nbreak;\ncase 19: var ticks2816 = $ans2793;\n$step2787 = 20;\n$ans2793 = R.maybeMethodCall0(self2789,\"constr\",L[727]);\nbreak;\ncase 20: var anf_fun2526 = $ans2793;\n$al2794 = L[728];\nvar anf_extend2817 = G(self2789,\"obj\",L[728]);\n$step2787 = 21;\n$al2794 = L[732];\n// omitting isFunction check;\n$ans2793 = distinct34.app(ticks2816);\nbreak;\ncase 21: var anf_arg1221 = $ans2793;\n$step2787 = 22;\n$ans2793 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[729],anf_arg1221);\nbreak;\ncase 22: var anf_arg1226 = $ans2793;\n// caller optimization;\n$ans2793 = some33.app(anf_arg1226);\nvar anf_extend2818 = $ans2793;\nvar anf_arg1223 = R.extendObj(L[730],anf_extend2817,{\"pointers\":anf_extend2818});\n$step2787 = 23;\n$al2794 = L[731];\nif(typeof(anf_fun2526.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2794,anf_fun2526);\n}\n$ans2793 = anf_fun2526.app(anf_arg1223);\nbreak;\ncase 23: ++R.GAS;\nreturn $ans2793;\ndefault: R.ffi.throwSpinnakerError(L[722],$step2787);\n}\n}\nif($step2787 !== 23) {\n$ans2793.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2794,$temp_full2788,$step2787,[self2789,tickValues2790,tickLabels2791],[TLLen2802,anf_fun2526,TVLen2798,ticks2816,anf_extend2817],$elidedFrames2796);\n}\nreturn $ans2793;\n};\nvar axis$pointer$method4112 = R.makeMethod2($temp_full2788,\"\");\nvar $temp_full2825 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__743($self2826,$pos$bar$height2827,$neg$bar$height2828) {\nvar $step2824 = 0;\nvar $elidedFrames2833 = 0;\nvar $ans2830 = D;\nvar $al2831 = L[743];\nif(R.isAR($self2826)) {\n$step2824 = $self2826.step;\n$al2831 = $self2826.from;\n$ans2830 = $self2826.ans;\n$elidedFrames2833 = $self2826.elidedFrames;\nself2826 = $self2826.args[0];\npos$bar$height2827 = $self2826.args[1];\nneg$bar$height2828 = $self2826.args[2];\naxisTop2881 = $self2826.vars[0];\naxisBottom2883 = $self2826.vars[1];\nstep2863 = $self2826.vars[2];\nanf_arg2885 = $self2826.vars[3];\npos$sci2844 = $self2826.vars[4];\nscientific$b102835 = $self2826.vars[5];\npos$ticks2886 = $self2826.vars[6];\npos$step2861 = $self2826.vars[7];\nneg$sci2857 = $self2826.vars[8];\nstep$types2846 = $self2826.vars[9];\nticks2891 = $self2826.vars[10];\nname$tick2882 = $self2826.vars[11];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[743],3,$t,true);\n}\nvar self2826 = $self2826;\nvar pos$bar$height2827 = $pos$bar$height2827;\nvar neg$bar$height2828 = $neg$bar$height2828;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2830 = R.mC();\n}\nwhile(!R.isContinuation($ans2830)) {\nswitch($step2824) {\ncase 0: $step2824 = 1;\n$al2831 = L[795];\nR._cA(L[795],$type$Number3,pos$bar$height2827);\nbreak;\ncase 1: $step2824 = 2;\n$al2831 = L[796];\nR._cA(L[796],$type$Number3,neg$bar$height2828);\nbreak;\ncase 2: $ans2830 = R.getMaker(list7,(\"make\"),L[744],L[745]);\nvar anf_fun2549 = $ans2830;\n$ans2830 = R.makeArrayN((6));\nvar anf_array2834 = $ans2830;\nanf_array2834[0] = (0);\nanf_array2834[1] = R.makeNumberFromString(\"1/5\");\nanf_array2834[2] = R.makeNumberFromString(\"1/4\");\nanf_array2834[3] = R.makeNumberFromString(\"1/2\");\nanf_array2834[4] = (1);\nanf_array2834[5] = (2);\n$step2824 = 3;\n$al2831 = L[745];\nif(typeof(anf_fun2549.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2831,anf_fun2549);\n}\n$ans2830 = anf_fun2549.app(anf_array2834);\nbreak;\ncase 3: var step$types2846 = $ans2830;\n$step2824 = 4;\n$al2831 = L[794];\n// omitting isFunction check;\n$ans2830 = num$to$scientific1553.$var.app((10));\nbreak;\ncase 4: var scientific$b102835 = $ans2830;\n$step2824 = 5;\n$al2831 = L[793];\nif(typeof(scientific$b102835.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2831,scientific$b102835);\n}\n$ans2830 = scientific$b102835.app(pos$bar$height2827);\nbreak;\ncase 5: var pos$sci2844 = $ans2830;\n$step2824 = 6;\n$al2831 = L[792];\nif(typeof(scientific$b102835.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2831,scientific$b102835);\n}\n$ans2830 = scientific$b102835.app(neg$bar$height2828);\nbreak;\ncase 6: var neg$sci2857 = $ans2830;\nvar $temp_lam2838 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__746($n2839) {\nvar $step2837 = 0;\nvar $elidedFrames2843 = 0;\nvar $ans2840 = D;\nvar $al2841 = L[746];\nif(R.isAR($n2839)) {\n$step2837 = $n2839.step;\n$al2841 = $n2839.from;\n$ans2840 = $n2839.ans;\n$elidedFrames2843 = $n2839.elidedFrames;\nn2839 = $n2839.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[746],1,$t,false);\n}\nvar n2839 = $n2839;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2840 = R.mC();\n}\nwhile(!R.isContinuation($ans2840)) {\nswitch($step2837) {\ncase 0: $al2841 = L[747];\nvar anf_arg1228 = G(pos$sci2844,\"coeff\",L[747]);\n$step2837 = 1;\n$al2841 = L[749];\n// omitting isFunction check;\n$ans2840 = _divide16.app(anf_arg1228,(9));\nbreak;\ncase 1: var anf_arg1239 = $ans2840;\n// caller optimization;\n$ans2840 = num$abs1.app(anf_arg1239);\nvar anf_arg1229 = $ans2840;\n$step2837 = 2;\n$al2841 = L[748];\n// omitting isFunction check;\n$ans2840 = _greaterequal2.app(n2839,anf_arg1229);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans2840;\ndefault: R.ffi.throwSpinnakerError(L[746],$step2837);\n}\n}\nif($step2837 !== 2) {\n$ans2840.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2841,$temp_lam2838,$step2837,[n2839],[],$elidedFrames2843);\n}\nreturn $ans2840;\n};\nvar anf_arg1240 = R.mF($temp_lam2838,\"\");\n$step2824 = 7;\n$ans2830 = R.maybeMethodCall1(step$types2846,\"filter\",L[750],anf_arg1240);\nbreak;\ncase 7: var anf_method_obj2847 = $ans2830;\n$step2824 = 8;\n$ans2830 = R.maybeMethodCall1(anf_method_obj2847,\"get\",L[751],(0));\nbreak;\ncase 8: var anf_arg1235 = $ans2830;\n$al2831 = L[752];\nvar anf_arg1232 = G(pos$sci2844,\"exponent\",L[752]);\n// caller optimization;\n$ans2830 = num$expt4.app((10),anf_arg1232);\nvar anf_arg2848 = $ans2830;\n$step2824 = 9;\n$al2831 = L[791];\n// omitting isFunction check;\n$ans2830 = _times5.app(anf_arg1235,anf_arg2848);\nbreak;\ncase 9: var pos$step2861 = $ans2830;\nvar $temp_lam2851 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__753($n2852) {\nvar $step2850 = 0;\nvar $elidedFrames2856 = 0;\nvar $ans2853 = D;\nvar $al2854 = L[753];\nif(R.isAR($n2852)) {\n$step2850 = $n2852.step;\n$al2854 = $n2852.from;\n$ans2853 = $n2852.ans;\n$elidedFrames2856 = $n2852.elidedFrames;\nn2852 = $n2852.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[753],1,$t,false);\n}\nvar n2852 = $n2852;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2853 = R.mC();\n}\nwhile(!R.isContinuation($ans2853)) {\nswitch($step2850) {\ncase 0: $al2854 = L[754];\nvar anf_arg1231 = G(neg$sci2857,\"coeff\",L[754]);\n$step2850 = 1;\n$al2854 = L[756];\n// omitting isFunction check;\n$ans2853 = _divide16.app(anf_arg1231,(9));\nbreak;\ncase 1: var anf_arg1233 = $ans2853;\n// caller optimization;\n$ans2853 = num$abs1.app(anf_arg1233);\nvar anf_arg1236 = $ans2853;\n$step2850 = 2;\n$al2854 = L[755];\n// omitting isFunction check;\n$ans2853 = _greaterequal2.app(n2852,anf_arg1236);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans2853;\ndefault: R.ffi.throwSpinnakerError(L[753],$step2850);\n}\n}\nif($step2850 !== 2) {\n$ans2853.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2854,$temp_lam2851,$step2850,[n2852],[],$elidedFrames2856);\n}\nreturn $ans2853;\n};\nvar anf_arg1237 = R.mF($temp_lam2851,\"\");\n$step2824 = 10;\n$ans2830 = R.maybeMethodCall1(step$types2846,\"filter\",L[757],anf_arg1237);\nbreak;\ncase 10: var anf_method_obj2859 = $ans2830;\n$step2824 = 11;\n$ans2830 = R.maybeMethodCall1(anf_method_obj2859,\"get\",L[758],(0));\nbreak;\ncase 11: var anf_arg2550 = $ans2830;\n$al2831 = L[759];\nvar anf_arg2860 = G(neg$sci2857,\"exponent\",L[759]);\n// caller optimization;\n$ans2830 = num$expt4.app((10),anf_arg2860);\nvar anf_arg1255 = $ans2830;\n$step2824 = 12;\n$al2831 = L[790];\n// omitting isFunction check;\n$ans2830 = _times5.app(anf_arg2550,anf_arg1255);\nbreak;\ncase 12: var neg$step2862 = $ans2830;\n// caller optimization;\n$ans2830 = num$max18.app(pos$step2861,neg$step2862);\nvar step2863 = $ans2830;\n$step2824 = 13;\n$al2831 = L[789];\nif(typeof(scientific$b102835.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2831,scientific$b102835);\n}\n$ans2830 = scientific$b102835.app(step2863);\nbreak;\ncase 13: var step$sci2871 = $ans2830;\nvar $temp_lam2865 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__760($n2866) {\nvar $step2864 = 0;\nvar $elidedFrames2870 = 0;\nvar $ans2867 = D;\nvar $al2868 = L[760];\nif(R.isAR($n2866)) {\n$step2864 = $n2866.step;\n$al2868 = $n2866.from;\n$ans2867 = $n2866.ans;\n$elidedFrames2870 = $n2866.elidedFrames;\nn2866 = $n2866.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[760],1,$t,false);\n}\nvar n2866 = $n2866;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2867 = R.mC();\n}\nwhile(!R.isContinuation($ans2867)) {\nswitch($step2864) {\ncase 0: $al2868 = L[761];\nvar anf_arg1259 = G(step$sci2871,\"coeff\",L[761]);\n$step2864 = 1;\n$al2868 = L[770];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2868,equal$always1);\n}\n$ans2867 = equal$always1.app(anf_arg1259,R.makeNumberFromString(\"5/2\"));\nbreak;\ncase 1: var anf_if2877 = $ans2867;\n$step2864 = R.checkPyretTrue(anf_if2877)?2:4;\nbreak;\ncase 2: $al2868 = L[768];\nvar anf_arg1257 = G(step$sci2871,\"exponent\",L[768]);\n$step2864 = 3;\n$al2868 = L[769];\n// omitting isFunction check;\n$ans2867 = _lessequal4.app(anf_arg1257,(0));\nbreak;\ncase 3: var anf_arg1260 = $ans2867;\n$ans2867 = R.checkWrapBoolean(anf_arg1260);\n$step2864 = 5;\nbreak;\ncase 4: $step2864 = 5;\n$ans2867 = (false);\nbreak;\ncase 5: var anf_if2876 = $ans2867;\n$step2864 = R.checkPyretTrue(anf_if2876)?6:8;\nbreak;\ncase 6: $al2868 = L[762];\nvar anf_arg2582 = G(step$sci2871,\"exponent\",L[762]);\n$step2864 = 7;\n$al2868 = L[763];\n// omitting isFunction check;\n$ans2867 = _minus12.app((2),anf_arg2582);\nbreak;\ncase 7: var anf_arg2588 = $ans2867;\n// caller optimization;\n$ans2867 = num$to$string$digits1.app(n2866,anf_arg2588);\nvar anf_arg1288 = $ans2867;\n// caller optimization;\n$ans2867 = pointer362.$var.app(anf_arg1288,n2866);\n$step2864 = 13;\nbreak;\ncase 8: $al2868 = L[764];\nvar anf_arg1289 = G(step$sci2871,\"exponent\",L[764]);\n$step2864 = 9;\n$al2868 = L[767];\n// omitting isFunction check;\n$ans2867 = _lessthan3.app(anf_arg1289,(0));\nbreak;\ncase 9: var anf_if2875 = $ans2867;\n$step2864 = R.checkPyretTrue(anf_if2875)?10:12;\nbreak;\ncase 10: $al2868 = L[765];\nvar anf_arg2872 = G(step$sci2871,\"exponent\",L[765]);\n$step2864 = 11;\n$al2868 = L[766];\n// omitting isFunction check;\n$ans2867 = _minus12.app((1),anf_arg2872);\nbreak;\ncase 11: var anf_arg2873 = $ans2867;\n// caller optimization;\n$ans2867 = num$to$string$digits1.app(n2866,anf_arg2873);\nvar anf_arg1273 = $ans2867;\n// caller optimization;\n$ans2867 = pointer362.$var.app(anf_arg1273,n2866);\n$step2864 = 13;\nbreak;\ncase 12: // caller optimization;\n$ans2867 = num$to$string7.app(n2866);\nvar anf_arg1277 = $ans2867;\n// caller optimization;\n$ans2867 = pointer362.$var.app(anf_arg1277,n2866);\n$step2864 = 13;\nbreak;\ncase 13: ++R.GAS;\nreturn $ans2867;\ndefault: R.ffi.throwSpinnakerError(L[760],$step2864);\n}\n}\nif($step2864 !== 13) {\n$ans2867.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2868,$temp_lam2865,$step2864,[n2866],[],$elidedFrames2870);\n}\nreturn $ans2867;\n};\nvar name$tick2882 = R.mF($temp_lam2865,\"\");\n$step2824 = 14;\n$al2831 = L[788];\n// omitting isFunction check;\n$ans2830 = _divide16.app(pos$bar$height2827,step2863);\nbreak;\ncase 14: var anf_arg2879 = $ans2830;\n// caller optimization;\n$ans2830 = num$ceiling14.app(anf_arg2879);\nvar anf_arg1275 = $ans2830;\n$step2824 = 15;\n$al2831 = L[787];\n// omitting isFunction check;\n$ans2830 = _times5.app(step2863,anf_arg1275);\nbreak;\ncase 15: var anf_arg1278 = $ans2830;\n// caller optimization;\n$ans2830 = num$max18.app((0),anf_arg1278);\nvar axisTop2881 = $ans2830;\n$step2824 = 16;\n$al2831 = L[786];\n// omitting isFunction check;\n$ans2830 = _divide16.app(neg$bar$height2828,step2863);\nbreak;\ncase 16: var anf_arg2880 = $ans2830;\n// caller optimization;\n$ans2830 = num$floor4.app(anf_arg2880);\nvar anf_arg1279 = $ans2830;\n$step2824 = 17;\n$al2831 = L[785];\n// omitting isFunction check;\n$ans2830 = _times5.app(step2863,anf_arg1279);\nbreak;\ncase 17: var anf_arg1284 = $ans2830;\n// caller optimization;\n$ans2830 = num$min2.app((0),anf_arg1284);\nvar axisBottom2883 = $ans2830;\n$step2824 = 18;\n$al2831 = L[784];\n// omitting isFunction check;\n$ans2830 = _plus5.app(axisTop2881,step2863);\nbreak;\ncase 18: var anf_arg1280 = $ans2830;\n$step2824 = 19;\n$al2831 = L[783];\n// omitting isFunction check;\n$ans2830 = range$by21.app((0),anf_arg1280,step2863);\nbreak;\ncase 19: var anf_arg1285 = $ans2830;\n$step2824 = 20;\n$al2831 = L[782];\n// omitting isFunction check;\n$ans2830 = map6.app(name$tick2882,anf_arg1285);\nbreak;\ncase 20: var pos$ticks2886 = $ans2830;\n$step2824 = 21;\n$al2831 = L[781];\n// omitting isFunction check;\n$ans2830 = _minus12.app(axisBottom2883,step2863);\nbreak;\ncase 21: var anf_arg2885 = $ans2830;\n$step2824 = 22;\n$al2831 = L[780];\n// omitting isFunction check;\n$ans2830 = _times5.app((-1),step2863);\nbreak;\ncase 22: var anf_arg1282 = $ans2830;\n$step2824 = 23;\n$al2831 = L[779];\n// omitting isFunction check;\n$ans2830 = range$by21.app((0),anf_arg2885,anf_arg1282);\nbreak;\ncase 23: var anf_arg1286 = $ans2830;\n$step2824 = 24;\n$al2831 = L[778];\n// omitting isFunction check;\n$ans2830 = map6.app(name$tick2882,anf_arg1286);\nbreak;\ncase 24: var neg$ticks2887 = $ans2830;\n$step2824 = 25;\n$al2831 = L[777];\n// omitting isFunction check;\n$ans2830 = _plus5.app(pos$ticks2886,neg$ticks2887);\nbreak;\ncase 25: var anf_arg2889 = $ans2830;\n$step2824 = 26;\n$al2831 = L[776];\n// omitting isFunction check;\n$ans2830 = distinct34.app(anf_arg2889);\nbreak;\ncase 26: var anf_arg2890 = $ans2830;\n$step2824 = 27;\n$ans2830 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[771],anf_arg2890);\nbreak;\ncase 27: var ticks2891 = $ans2830;\n$step2824 = 28;\n$ans2830 = R.maybeMethodCall0(self2826,\"constr\",L[772]);\nbreak;\ncase 28: var anf_fun2901 = $ans2830;\n$al2831 = L[773];\nvar anf_extend2899 = G(self2826,\"obj\",L[773]);\n// caller optimization;\n$ans2830 = axis$data419.$var.app(axisTop2881,axisBottom2883,ticks2891);\nvar anf_arg2898 = $ans2830;\n// caller optimization;\n$ans2830 = some33.app(anf_arg2898);\nvar anf_extend2900 = $ans2830;\nvar anf_arg1305 = R.extendObj(L[774],anf_extend2899,{\"axisdata\":anf_extend2900});\n$step2824 = 29;\n$al2831 = L[775];\nif(typeof(anf_fun2901.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2831,anf_fun2901);\n}\n$ans2830 = anf_fun2901.app(anf_arg1305);\nbreak;\ncase 29: ++R.GAS;\nreturn $ans2830;\ndefault: R.ffi.throwSpinnakerError(L[743],$step2824);\n}\n}\nif($step2824 !== 29) {\n$ans2830.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2831,$temp_full2825,$step2824,[self2826,pos$bar$height2827,neg$bar$height2828],[axisTop2881,axisBottom2883,step2863,anf_arg2885,pos$sci2844,scientific$b102835,pos$ticks2886,pos$step2861,neg$sci2857,step$types2846,ticks2891,name$tick2882],$elidedFrames2833);\n}\nreturn $ans2830;\n};\nvar make$axis$data$method4115 = R.makeMethod2($temp_full2825,\"\");\nvar $temp_full2904 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__797($self2905,$format$func2906) {\nvar $step2903 = 0;\nvar $elidedFrames2910 = 0;\nvar $ans2907 = D;\nvar $al2908 = L[797];\nif(R.isAR($self2905)) {\n$step2903 = $self2905.step;\n$al2908 = $self2905.from;\n$ans2907 = $self2905.ans;\n$elidedFrames2910 = $self2905.elidedFrames;\nself2905 = $self2905.args[0];\nformat$func2906 = $self2905.args[1];\nnew$ticks2929 = $self2905.vars[0];\nad2913 = $self2905.vars[1];\ncases2912 = $self2905.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[797],2,$t,true);\n}\nvar self2905 = $self2905;\nvar format$func2906 = $format$func2906;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2907 = R.mC();\n}\nwhile(!R.isContinuation($ans2907)) {\nswitch($step2903) {\ncase 0: $step2903 = 1;\n$al2908 = L[818];\nR._cA(L[818],R.Function,format$func2906);\nbreak;\ncase 1: $al2908 = L[798];\nvar anf_get_bang2911 = G(self2905,\"obj\",L[798]);\nvar cases2912 = R.gFR(anf_get_bang2911,\"axisdata\",L[799]);\n$step2903 = 2;\n$al2908 = L[817];\nvar $ann$check2936 = R._cA(L[817],Option27,cases2912);\nif(R.isContinuation($ann$check2936)) {\n$ans2907 = $ann$check2936;\n}\nbreak;\ncase 2: $al2908 = L[802];\n$step2903 = $cases_dispatch2935[cases2912.$name] || 8;\nbreak;\ncase 3: if(cases2912.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[801],false,L[802],cases2912.$loc);\n}\n$step2903 = 9;\n$al2908 = L[800];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2908,raise1);\n}\n$ans2907 = raise1.app((\"Axis properties initialized improperly. Please report as a bug!\"));\nbreak;\ncase 4: if(cases2912.$arity !== 1) {\nif(cases2912.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[816],1,cases2912.$arity,L[802],cases2912.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[816],true,L[802],cases2912.$loc);\n}\n}\nvar $fn2934 = cases2912.$constructor.$fieldNames;\nvar ad2913 = R.dF(cases2912.dict[$fn2934[0]],cases2912.$mut_fields_mask[0],false);\n$al2908 = L[803];\nvar anf_arg2914 = G(ad2913,\"ticks\",L[803]);\n// caller optimization;\n$ans2907 = raw$array$to$list4.app(anf_arg2914);\nvar ad$tick$list2927 = $ans2907;\nvar $temp_lam2916 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__804($p2917) {\nvar $step2915 = 0;\nvar $elidedFrames2922 = 0;\nvar $ans2919 = D;\nvar $al2920 = L[804];\nif(R.isAR($p2917)) {\n$step2915 = $p2917.step;\n$al2920 = $p2917.from;\n$ans2919 = $p2917.ans;\n$elidedFrames2922 = $p2917.elidedFrames;\np2917 = $p2917.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[804],1,$t,false);\n}\nvar p2917 = $p2917;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2919 = R.mC();\n}\nwhile(!R.isContinuation($ans2919)) {\nswitch($step2915) {\ncase 0: $al2920 = L[805];\nvar anf_arg2924 = G(p2917,\"value\",L[805]);\n$step2915 = 1;\n$al2920 = L[807];\nif(typeof(format$func2906.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2920,format$func2906);\n}\n$ans2919 = format$func2906.app(anf_arg2924);\nbreak;\ncase 1: var anf_arg2925 = $ans2919;\n$al2920 = L[806];\nvar anf_arg1318 = G(p2917,\"value\",L[806]);\n// caller optimization;\n$ans2919 = pointer362.$var.app(anf_arg2925,anf_arg1318);\n$step2915 = 2;\nbreak;\ncase 2: ++R.GAS;\nreturn $ans2919;\ndefault: R.ffi.throwSpinnakerError(L[804],$step2915);\n}\n}\nif($step2915 !== 2) {\n$ans2919.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2920,$temp_lam2916,$step2915,[p2917],[],$elidedFrames2922);\n}\nreturn $ans2919;\n};\nvar anf_arg1323 = R.mF($temp_lam2916,\"\");\n$step2903 = 5;\n$al2908 = L[815];\n// omitting isFunction check;\n$ans2907 = map6.app(anf_arg1323,ad$tick$list2927);\nbreak;\ncase 5: var anf_arg2928 = $ans2907;\n$step2903 = 6;\n$ans2907 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[808],anf_arg2928);\nbreak;\ncase 6: var new$ticks2929 = $ans2907;\n$step2903 = 7;\n$ans2907 = R.maybeMethodCall0(self2905,\"constr\",L[809]);\nbreak;\ncase 7: var anf_fun2932 = $ans2907;\n$al2908 = L[810];\nvar anf_extend2930 = G(self2905,\"obj\",L[810]);\n$al2908 = L[811];\nvar anf_arg1321 = G(ad2913,\"axisTop\",L[811]);\n$al2908 = L[812];\nvar anf_arg1325 = G(ad2913,\"axisBottom\",L[812]);\n// caller optimization;\n$ans2907 = axis$data419.$var.app(anf_arg1321,anf_arg1325,new$ticks2929);\nvar anf_arg1326 = $ans2907;\n// caller optimization;\n$ans2907 = some33.app(anf_arg1326);\nvar anf_extend2931 = $ans2907;\nvar anf_arg1327 = R.extendObj(L[813],anf_extend2930,{\"axisdata\":anf_extend2931});\n$step2903 = 9;\n$al2908 = L[814];\nif(typeof(anf_fun2932.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2908,anf_fun2932);\n}\n$ans2907 = anf_fun2932.app(anf_arg1327);\nbreak;\ncase 8: $ans2907 = R.throwNoCasesMatched(L[802],cases2912);\n$step2903 = 9;\nbreak;\ncase 9: ++R.GAS;\nreturn $ans2907;\ndefault: R.ffi.throwSpinnakerError(L[797],$step2903);\n}\n}\nif($step2903 !== 9) {\n$ans2907.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2908,$temp_full2904,$step2903,[self2905,format$func2906],[new$ticks2929,ad2913,cases2912],$elidedFrames2910);\n}\nreturn $ans2907;\n};\nvar format$axis$data$method4114 = R.makeMethod1($temp_full2904,\"\");\nvar $temp_full2939 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__819($self2940,$scale$fun2941) {\nvar $step2938 = 0;\nvar $elidedFrames2945 = 0;\nvar $ans2942 = D;\nvar $al2943 = L[819];\nif(R.isAR($self2940)) {\n$step2938 = $self2940.step;\n$al2943 = $self2940.from;\n$ans2942 = $self2940.ans;\n$elidedFrames2945 = $self2940.elidedFrames;\nself2940 = $self2940.args[0];\nscale$fun2941 = $self2940.args[1];\ntup3311 = $self2940.vars[0];\nscaled$tab2969 = $self2940.vars[1];\nlist$of$rows2967 = $self2940.vars[2];\nexact$sf2962 = $self2940.vars[3];\nscaled$self2980 = $self2940.vars[4];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[819],2,$t,true);\n}\nvar self2940 = $self2940;\nvar scale$fun2941 = $scale$fun2941;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2942 = R.mC();\n}\nwhile(!R.isContinuation($ans2942)) {\nswitch($step2938) {\ncase 0: $step2938 = 1;\n$al2943 = L[842];\nR._cA(L[842],R.Function,scale$fun2941);\nbreak;\ncase 1: var $temp_lam2947 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__820($n2948) {\nvar $step2946 = 0;\nvar $elidedFrames2952 = 0;\nvar $ans2949 = D;\nvar $al2950 = L[820];\nif(R.isAR($n2948)) {\n$step2946 = $n2948.step;\n$al2950 = $n2948.from;\n$ans2949 = $n2948.ans;\n$elidedFrames2952 = $n2948.elidedFrames;\nn2948 = $n2948.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[820],1,$t,false);\n}\nvar n2948 = $n2948;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2949 = R.mC();\n}\nwhile(!R.isContinuation($ans2949)) {\nswitch($step2946) {\ncase 0: $step2946 = 1;\n$al2950 = L[821];\nif(typeof(scale$fun2941.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2950,scale$fun2941);\n}\n$ans2949 = scale$fun2941.app(n2948);\nbreak;\ncase 1: var anf_arg2877 = $ans2949;\n// caller optimization;\n$ans2949 = num$to$rational3.app(anf_arg2877);\n$step2946 = 2;\nbreak;\ncase 2: ++R.GAS;\nreturn $ans2949;\ndefault: R.ffi.throwSpinnakerError(L[820],$step2946);\n}\n}\nif($step2946 !== 2) {\n$ans2949.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2950,$temp_lam2947,$step2946,[n2948],[],$elidedFrames2952);\n}\nreturn $ans2949;\n};\nvar exact$sf2962 = R.mF($temp_lam2947,\"\");\n$al2943 = L[822];\nvar anf_get_bang2954 = G(self2940,\"obj\",L[822]);\nvar anf_arg1343 = R.gFR(anf_get_bang2954,\"tab\",L[823]);\n// caller optimization;\n$ans2942 = raw$array$to$list4.app(anf_arg1343);\nvar list$of$rows2967 = $ans2942;\nvar $temp_lam2956 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__824($row2957) {\nvar $step2955 = 0;\nvar $elidedFrames2961 = 0;\nvar $ans2958 = D;\nvar $al2959 = L[824];\nif(R.isAR($row2957)) {\n$step2955 = $row2957.step;\n$al2959 = $row2957.from;\n$ans2958 = $row2957.ans;\n$elidedFrames2961 = $row2957.elidedFrames;\nrow2957 = $row2957.args[0];\nanf_fun2883 = $row2957.vars[0];\nanf_arg1344 = $row2957.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[824],1,$t,false);\n}\nvar row2957 = $row2957;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2958 = R.mC();\n}\nwhile(!R.isContinuation($ans2958)) {\nswitch($step2955) {\ncase 0: $ans2958 = R.getMaker2(raw$array2,(\"make2\"),L[825],L[826]);\nvar anf_fun2883 = $ans2958;\n// caller optimization;\n$ans2958 = raw$array$get17.app(row2957,(0));\nvar anf_arg1344 = $ans2958;\n// caller optimization;\n$ans2958 = raw$array$get17.app(row2957,(1));\nvar anf_arg2964 = $ans2958;\n$step2955 = 1;\n$al2959 = L[827];\nif(typeof(exact$sf2962.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2959,exact$sf2962);\n}\n$ans2958 = exact$sf2962.app(anf_arg2964);\nbreak;\ncase 1: var anf_arg1338 = $ans2958;\n$step2955 = 2;\n$al2959 = L[826];\nif(typeof(anf_fun2883.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2959,anf_fun2883);\n}\n$ans2958 = anf_fun2883.app(anf_arg1344,anf_arg1338);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans2958;\ndefault: R.ffi.throwSpinnakerError(L[824],$step2955);\n}\n}\nif($step2955 !== 2) {\n$ans2958.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2959,$temp_lam2956,$step2955,[row2957],[anf_fun2883,anf_arg1344],$elidedFrames2961);\n}\nreturn $ans2958;\n};\nvar scale$row2966 = R.mF($temp_lam2956,\"\");\n$step2938 = 2;\n$al2943 = L[841];\n// omitting isFunction check;\n$ans2942 = map6.app(scale$row2966,list$of$rows2967);\nbreak;\ncase 2: var anf_arg1335 = $ans2942;\n$step2938 = 3;\n$ans2942 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[828],anf_arg1335);\nbreak;\ncase 3: var scaled$tab2969 = $ans2942;\n$step2938 = 4;\n$ans2942 = R.maybeMethodCall0(self2940,\"constr\",L[829]);\nbreak;\ncase 4: var anf_fun1333 = $ans2942;\n$al2943 = L[830];\nvar anf_extend2968 = G(self2940,\"obj\",L[830]);\nvar anf_arg1334 = R.extendObj(L[831],anf_extend2968,{\"tab\":scaled$tab2969});\n$step2938 = 5;\n$al2943 = L[840];\nif(typeof(anf_fun1333.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2943,anf_fun1333);\n}\n$ans2942 = anf_fun1333.app(anf_arg1334);\nbreak;\ncase 5: var scaled$self2980 = $ans2942;\nvar $temp_lam2971 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__832($row2972) {\nvar $step2970 = 0;\nvar $elidedFrames2976 = 0;\nvar $ans2973 = D;\nvar $al2974 = L[832];\nif(R.isAR($row2972)) {\n$step2970 = $row2972.step;\n$al2974 = $row2972.from;\n$ans2973 = $row2972.ans;\n$elidedFrames2976 = $row2972.elidedFrames;\nrow2972 = $row2972.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[832],1,$t,false);\n}\nvar row2972 = $row2972;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2973 = R.mC();\n}\nwhile(!R.isContinuation($ans2973)) {\nswitch($step2970) {\ncase 0: // caller optimization;\n$ans2973 = raw$array$get17.app(row2972,(1));\nvar anf_arg1336 = $ans2973;\n$step2970 = 1;\n$al2974 = L[833];\nif(typeof(exact$sf2962.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2974,exact$sf2962);\n}\n$ans2973 = exact$sf2962.app(anf_arg1336);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans2973;\ndefault: R.ffi.throwSpinnakerError(L[832],$step2970);\n}\n}\nif($step2970 !== 1) {\n$ans2973.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2974,$temp_lam2971,$step2970,[row2972],[],$elidedFrames2976);\n}\nreturn $ans2973;\n};\nvar anf_arg1339 = R.mF($temp_lam2971,\"\");\n$step2938 = 6;\n$al2943 = L[839];\n// omitting isFunction check;\n$ans2942 = map6.app(anf_arg1339,list$of$rows2967);\nbreak;\ncase 6: var scaled$values2979 = $ans2942;\n$step2938 = 7;\n$al2943 = L[838];\n// omitting isFunction check;\n$ans2942 = prep$axis1595.$var.app(scaled$values2979);\nbreak;\ncase 7: var tup3311 = $ans2942;\n$step2938 = 8;\n$al2943 = L[837];\nR.checkTupleBind(tup3311,2,L[837]);\nbreak;\ncase 8: var max$positive$height2981 = R.getTuple(tup3311,0,L[834]);\nvar max$negative$height2982 = R.getTuple(tup3311,1,L[835]);\n$step2938 = 9;\n$ans2942 = R.maybeMethodCall2(scaled$self2980,\"make-axis\",L[836],max$positive$height2981,max$negative$height2982);\nbreak;\ncase 9: ++R.GAS;\nreturn $ans2942;\ndefault: R.ffi.throwSpinnakerError(L[819],$step2938);\n}\n}\nif($step2938 !== 9) {\n$ans2942.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2943,$temp_full2939,$step2938,[self2940,scale$fun2941],[tup3311,scaled$tab2969,list$of$rows2967,exact$sf2962,scaled$self2980],$elidedFrames2945);\n}\nreturn $ans2942;\n};\nvar scale$method4116 = R.makeMethod1($temp_full2939,\"\");\nvar $temp_full2985 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__843($self2986,$scale$fun2987) {\nvar $step2984 = 0;\nvar $elidedFrames2991 = 0;\nvar $ans2988 = D;\nvar $al2989 = L[843];\nif(R.isAR($self2986)) {\n$step2984 = $self2986.step;\n$al2989 = $self2986.from;\n$ans2988 = $self2986.ans;\n$elidedFrames2991 = $self2986.elidedFrames;\nself2986 = $self2986.args[0];\nscale$fun2987 = $self2986.args[1];\nscaled$self3049 = $self2986.vars[0];\nscaled$values3051 = $self2986.vars[1];\nscaled$tab3028 = $self2986.vars[2];\ntup3614 = $self2986.vars[3];\nlist$of$rows3026 = $self2986.vars[4];\nexact$sf3022 = $self2986.vars[5];\nget$values3021 = $self2986.vars[6];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[843],2,$t,true);\n}\nvar self2986 = $self2986;\nvar scale$fun2987 = $scale$fun2987;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2988 = R.mC();\n}\nwhile(!R.isContinuation($ans2988)) {\nswitch($step2984) {\ncase 0: $step2984 = 1;\n$al2989 = L[873];\nR._cA(L[873],R.Function,scale$fun2987);\nbreak;\ncase 1: var $temp_lam2994 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__844($n2995) {\nvar $step2993 = 0;\nvar $elidedFrames2999 = 0;\nvar $ans2996 = D;\nvar $al2997 = L[844];\nif(R.isAR($n2995)) {\n$step2993 = $n2995.step;\n$al2997 = $n2995.from;\n$ans2996 = $n2995.ans;\n$elidedFrames2999 = $n2995.elidedFrames;\nn2995 = $n2995.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[844],1,$t,false);\n}\nvar n2995 = $n2995;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans2996 = R.mC();\n}\nwhile(!R.isContinuation($ans2996)) {\nswitch($step2993) {\ncase 0: $step2993 = 1;\n$al2997 = L[845];\nif(typeof(scale$fun2987.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2997,scale$fun2987);\n}\n$ans2996 = scale$fun2987.app(n2995);\nbreak;\ncase 1: var anf_arg1340 = $ans2996;\n// caller optimization;\n$ans2996 = num$to$rational3.app(anf_arg1340);\n$step2993 = 2;\nbreak;\ncase 2: ++R.GAS;\nreturn $ans2996;\ndefault: R.ffi.throwSpinnakerError(L[844],$step2993);\n}\n}\nif($step2993 !== 2) {\n$ans2996.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2997,$temp_lam2994,$step2993,[n2995],[],$elidedFrames2999);\n}\nreturn $ans2996;\n};\nvar exact$sf3022 = R.mF($temp_lam2994,\"\");\n$al2989 = L[846];\nvar anf_get_bang3004 = G(self2986,\"obj\",L[846]);\nvar anf_arg1341 = R.gFR(anf_get_bang3004,\"tab\",L[847]);\n// caller optimization;\n$ans2988 = raw$array$to$list4.app(anf_arg1341);\nvar list$of$rows3026 = $ans2988;\nvar $temp_lam3006 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__848($row3007) {\nvar $step3005 = 0;\nvar $elidedFrames3011 = 0;\nvar $ans3008 = D;\nvar $al3009 = L[848];\nif(R.isAR($row3007)) {\n$step3005 = $row3007.step;\n$al3009 = $row3007.from;\n$ans3008 = $row3007.ans;\n$elidedFrames3011 = $row3007.elidedFrames;\nrow3007 = $row3007.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[848],1,$t,false);\n}\nvar row3007 = $row3007;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3008 = R.mC();\n}\nwhile(!R.isContinuation($ans3008)) {\nswitch($step3005) {\ncase 0: // caller optimization;\n$ans3008 = raw$array$get17.app(row3007,(1));\nvar anf_arg1346 = $ans3008;\n// caller optimization;\n$ans3008 = raw$array$to$list4.app(anf_arg1346);\n$step3005 = 1;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans3008;\ndefault: R.ffi.throwSpinnakerError(L[848],$step3005);\n}\n}\nif($step3005 !== 1) {\n$ans3008.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3009,$temp_lam3006,$step3005,[row3007],[],$elidedFrames3011);\n}\nreturn $ans3008;\n};\nvar get$values3021 = R.mF($temp_lam3006,\"\");\nvar $temp_lam3015 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__849($row3016) {\nvar $step3014 = 0;\nvar $elidedFrames3020 = 0;\nvar $ans3017 = D;\nvar $al3018 = L[849];\nif(R.isAR($row3016)) {\n$step3014 = $row3016.step;\n$al3018 = $row3016.from;\n$ans3017 = $row3016.ans;\n$elidedFrames3020 = $row3016.elidedFrames;\nrow3016 = $row3016.args[0];\nanf_fun1359 = $row3016.vars[0];\nanf_arg1354 = $row3016.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[849],1,$t,false);\n}\nvar row3016 = $row3016;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3017 = R.mC();\n}\nwhile(!R.isContinuation($ans3017)) {\nswitch($step3014) {\ncase 0: $ans3017 = R.getMaker2(raw$array2,(\"make2\"),L[850],L[851]);\nvar anf_fun1359 = $ans3017;\n// caller optimization;\n$ans3017 = raw$array$get17.app(row3016,(0));\nvar anf_arg1354 = $ans3017;\n$step3014 = 1;\n$al3018 = L[854];\nif(typeof(get$values3021.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3018,get$values3021);\n}\n$ans3017 = get$values3021.app(row3016);\nbreak;\ncase 1: var anf_arg1360 = $ans3017;\n$step3014 = 2;\n$al3018 = L[853];\n// omitting isFunction check;\n$ans3017 = map6.app(exact$sf3022,anf_arg1360);\nbreak;\ncase 2: var anf_arg1355 = $ans3017;\n$step3014 = 3;\n$ans3017 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[852],anf_arg1355);\nbreak;\ncase 3: var anf_arg1361 = $ans3017;\n$step3014 = 4;\n$al3018 = L[851];\nif(typeof(anf_fun1359.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3018,anf_fun1359);\n}\n$ans3017 = anf_fun1359.app(anf_arg1354,anf_arg1361);\nbreak;\ncase 4: ++R.GAS;\nreturn $ans3017;\ndefault: R.ffi.throwSpinnakerError(L[849],$step3014);\n}\n}\nif($step3014 !== 4) {\n$ans3017.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3018,$temp_lam3015,$step3014,[row3016],[anf_fun1359,anf_arg1354],$elidedFrames3020);\n}\nreturn $ans3017;\n};\nvar scale$row3025 = R.mF($temp_lam3015,\"\");\n$step2984 = 2;\n$al2989 = L[872];\n// omitting isFunction check;\n$ans2988 = map6.app(scale$row3025,list$of$rows3026);\nbreak;\ncase 2: var anf_arg2923 = $ans2988;\n$step2984 = 3;\n$ans2988 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[855],anf_arg2923);\nbreak;\ncase 3: var scaled$tab3028 = $ans2988;\n$step2984 = 4;\n$ans2988 = R.maybeMethodCall0(self2986,\"constr\",L[856]);\nbreak;\ncase 4: var anf_fun3029 = $ans2988;\n$al2989 = L[857];\nvar anf_extend3027 = G(self2986,\"obj\",L[857]);\nvar anf_arg1358 = R.extendObj(L[858],anf_extend3027,{\"tab\":scaled$tab3028});\n$step2984 = 5;\n$al2989 = L[871];\nif(typeof(anf_fun3029.app) !== \"function\") {\nR.ffi.throwNonFunApp($al2989,anf_fun3029);\n}\n$ans2988 = anf_fun3029.app(anf_arg1358);\nbreak;\ncase 5: var scaled$self3049 = $ans2988;\nvar $temp_lam3031 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__859($row3032) {\nvar $step3030 = 0;\nvar $elidedFrames3036 = 0;\nvar $ans3033 = D;\nvar $al3034 = L[859];\nif(R.isAR($row3032)) {\n$step3030 = $row3032.step;\n$al3034 = $row3032.from;\n$ans3033 = $row3032.ans;\n$elidedFrames3036 = $row3032.elidedFrames;\nrow3032 = $row3032.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[859],1,$t,false);\n}\nvar row3032 = $row3032;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3033 = R.mC();\n}\nwhile(!R.isContinuation($ans3033)) {\nswitch($step3030) {\ncase 0: $step3030 = 1;\n$al3034 = L[861];\nif(typeof(get$values3021.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3034,get$values3021);\n}\n$ans3033 = get$values3021.app(row3032);\nbreak;\ncase 1: var anf_arg1363 = $ans3033;\n$step3030 = 2;\n$al3034 = L[860];\n// omitting isFunction check;\n$ans3033 = map6.app(exact$sf3022,anf_arg1363);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans3033;\ndefault: R.ffi.throwSpinnakerError(L[859],$step3030);\n}\n}\nif($step3030 !== 2) {\n$ans3033.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3034,$temp_lam3031,$step3030,[row3032],[],$elidedFrames3036);\n}\nreturn $ans3033;\n};\nvar anf_arg3048 = R.mF($temp_lam3031,\"\");\n$step2984 = 6;\n$al2989 = L[870];\n// omitting isFunction check;\n$ans2988 = map6.app(anf_arg3048,list$of$rows3026);\nbreak;\ncase 6: var scaled$values3051 = $ans2988;\n$al2989 = L[862];\nvar anf_get_bang3050 = G(scaled$self3049,\"obj\",L[862]);\nvar anf_arg1378 = R.gFR(anf_get_bang3050,\"is-stacked\",L[863]);\n$step2984 = 7;\n$al2989 = L[869];\n// omitting isFunction check;\n$ans2988 = string$to$stacktype1576.$var.app(anf_arg1378);\nbreak;\ncase 7: var anf_arg2952 = $ans2988;\n$step2984 = 8;\n$al2989 = L[868];\n// omitting isFunction check;\n$ans2988 = multi$prep$axis1764.$var.app(anf_arg2952,scaled$values3051);\nbreak;\ncase 8: var tup3614 = $ans2988;\n$step2984 = 9;\n$al2989 = L[867];\nR.checkTupleBind(tup3614,2,L[867]);\nbreak;\ncase 9: var max$positive$height3052 = R.getTuple(tup3614,0,L[864]);\nvar max$negative$height3053 = R.getTuple(tup3614,1,L[865]);\n$step2984 = 10;\n$ans2988 = R.maybeMethodCall2(scaled$self3049,\"make-axis\",L[866],max$positive$height3052,max$negative$height3053);\nbreak;\ncase 10: ++R.GAS;\nreturn $ans2988;\ndefault: R.ffi.throwSpinnakerError(L[843],$step2984);\n}\n}\nif($step2984 !== 10) {\n$ans2988.stack[R.EXN_STACKHEIGHT++] = R.mAR($al2989,$temp_full2985,$step2984,[self2986,scale$fun2987],[scaled$self3049,scaled$values3051,scaled$tab3028,tup3614,list$of$rows3026,exact$sf3022,get$values3021],$elidedFrames2991);\n}\nreturn $ans2988;\n};\nvar multi$scale$method4143 = R.makeMethod1($temp_full2985,\"\");\nvar $temp_full3058 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__874($self3059,$stack$type3060) {\nvar $step3057 = 0;\nvar $elidedFrames3064 = 0;\nvar $ans3061 = D;\nvar $al3062 = L[874];\nif(R.isAR($self3059)) {\n$step3057 = $self3059.step;\n$al3062 = $self3059.from;\n$ans3061 = $self3059.ans;\n$elidedFrames3064 = $self3059.elidedFrames;\nself3059 = $self3059.args[0];\nstack$type3060 = $self3059.args[1];\nnew$self3102 = $self3059.vars[0];\ntup3684 = $self3059.vars[1];\ntup3730 = $self3059.vars[2];\ntup3664 = $self3059.vars[3];\ntup3646 = $self3059.vars[4];\nvalue$lists3076 = $self3059.vars[5];\nnew$self3082 = $self3059.vars[6];\nnew$self3077 = $self3059.vars[7];\nnew$self3088 = $self3059.vars[8];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[874],2,$t,true);\n}\nvar self3059 = $self3059;\nvar stack$type3060 = $stack$type3060;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3061 = R.mC();\n}\nwhile(!R.isContinuation($ans3061)) {\nswitch($step3057) {\ncase 0: $step3057 = 1;\n$al3062 = L[924];\nR._cA(L[924],StackType1564,stack$type3060);\nbreak;\ncase 1: var $temp_lam3066 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__875($row3067) {\nvar $step3065 = 0;\nvar $elidedFrames3071 = 0;\nvar $ans3068 = D;\nvar $al3069 = L[875];\nif(R.isAR($row3067)) {\n$step3065 = $row3067.step;\n$al3069 = $row3067.from;\n$ans3068 = $row3067.ans;\n$elidedFrames3071 = $row3067.elidedFrames;\nrow3067 = $row3067.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[875],1,$t,false);\n}\nvar row3067 = $row3067;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3068 = R.mC();\n}\nwhile(!R.isContinuation($ans3068)) {\nswitch($step3065) {\ncase 0: // caller optimization;\n$ans3068 = raw$array$get17.app(row3067,(1));\nvar anf_arg1375 = $ans3068;\n// caller optimization;\n$ans3068 = raw$array$to$list4.app(anf_arg1375);\n$step3065 = 1;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans3068;\ndefault: R.ffi.throwSpinnakerError(L[875],$step3065);\n}\n}\nif($step3065 !== 1) {\n$ans3068.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3069,$temp_lam3066,$step3065,[row3067],[],$elidedFrames3071);\n}\nreturn $ans3068;\n};\nvar get$values3074 = R.mF($temp_lam3066,\"\");\n$al3062 = L[876];\nvar anf_get_bang3073 = G(self3059,\"obj\",L[876]);\nvar anf_arg1376 = R.gFR(anf_get_bang3073,\"tab\",L[877]);\n// caller optimization;\n$ans3061 = raw$array$to$list4.app(anf_arg1376);\nvar anf_arg1380 = $ans3061;\n$step3057 = 2;\n$al3062 = L[923];\n// omitting isFunction check;\n$ans3061 = map6.app(get$values3074,anf_arg1380);\nbreak;\ncase 2: var value$lists3076 = $ans3061;\n$step3057 = 3;\n$al3062 = L[922];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3062,equal$always1);\n}\n$ans3061 = equal$always1.app(stack$type3060,absolute446.$var);\nbreak;\ncase 3: var anf_if3108 = $ans3061;\n$step3057 = R.checkPyretTrue(anf_if3108)?4:9;\nbreak;\ncase 4: $step3057 = 5;\n$ans3061 = R.maybeMethodCall0(self3059,\"constr\",L[878]);\nbreak;\ncase 5: var anf_fun1395 = $ans3061;\n$al3062 = L[879];\nvar anf_extend3075 = G(self3059,\"obj\",L[879]);\nvar anf_arg1396 = R.extendObj(L[880],anf_extend3075,{\"is-stacked\":(\"absolute\")});\n$step3057 = 6;\n$al3062 = L[886];\nif(typeof(anf_fun1395.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3062,anf_fun1395);\n}\n$ans3061 = anf_fun1395.app(anf_arg1396);\nbreak;\ncase 6: var new$self3077 = $ans3061;\n$step3057 = 7;\n$al3062 = L[885];\n// omitting isFunction check;\n$ans3061 = multi$prep$axis1764.$var.app(absolute446.$var,value$lists3076);\nbreak;\ncase 7: var tup3646 = $ans3061;\n$step3057 = 8;\n$al3062 = L[884];\nR.checkTupleBind(tup3646,2,L[884]);\nbreak;\ncase 8: var max$positive$height3078 = R.getTuple(tup3646,0,L[881]);\nvar max$negative$height3079 = R.getTuple(tup3646,1,L[882]);\n$step3057 = 32;\n$ans3061 = R.maybeMethodCall2(new$self3077,\"make-axis\",L[883],max$positive$height3078,max$negative$height3079);\nbreak;\ncase 9: $step3057 = 10;\n$al3062 = L[921];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3062,equal$always1);\n}\n$ans3061 = equal$always1.app(stack$type3060,relative450.$var);\nbreak;\ncase 10: var anf_if2968 = $ans3061;\n$step3057 = R.checkPyretTrue(anf_if2968)?11:16;\nbreak;\ncase 11: $step3057 = 12;\n$ans3061 = R.maybeMethodCall0(self3059,\"constr\",L[887]);\nbreak;\ncase 12: var anf_fun3081 = $ans3061;\n$al3062 = L[888];\nvar anf_extend3080 = G(self3059,\"obj\",L[888]);\nvar anf_arg1394 = R.extendObj(L[889],anf_extend3080,{\"is-stacked\":(\"relative\")});\n$step3057 = 13;\n$al3062 = L[895];\nif(typeof(anf_fun3081.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3062,anf_fun3081);\n}\n$ans3061 = anf_fun3081.app(anf_arg1394);\nbreak;\ncase 13: var new$self3082 = $ans3061;\n$step3057 = 14;\n$al3062 = L[894];\n// omitting isFunction check;\n$ans3061 = multi$prep$axis1764.$var.app(relative450.$var,value$lists3076);\nbreak;\ncase 14: var tup3664 = $ans3061;\n$step3057 = 15;\n$al3062 = L[893];\nR.checkTupleBind(tup3664,2,L[893]);\nbreak;\ncase 15: var max$positive$height3083 = R.getTuple(tup3664,0,L[890]);\nvar max$negative$height3084 = R.getTuple(tup3664,1,L[891]);\n$step3057 = 32;\n$ans3061 = R.maybeMethodCall2(new$self3082,\"make-axis\",L[892],max$positive$height3083,max$negative$height3084);\nbreak;\ncase 16: $step3057 = 17;\n$al3062 = L[920];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3062,equal$always1);\n}\n$ans3061 = equal$always1.app(stack$type3060,percent453.$var);\nbreak;\ncase 17: var anf_if3107 = $ans3061;\n$step3057 = R.checkPyretTrue(anf_if3107)?18:24;\nbreak;\ncase 18: $step3057 = 19;\n$ans3061 = R.maybeMethodCall0(self3059,\"constr\",L[896]);\nbreak;\ncase 19: var anf_fun3086 = $ans3061;\n$al3062 = L[897];\nvar anf_extend3085 = G(self3059,\"obj\",L[897]);\nvar anf_arg3087 = R.extendObj(L[898],anf_extend3085,{\"is-stacked\":(\"percent\")});\n$step3057 = 20;\n$al3062 = L[908];\nif(typeof(anf_fun3086.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3062,anf_fun3086);\n}\n$ans3061 = anf_fun3086.app(anf_arg3087);\nbreak;\ncase 20: var new$self3088 = $ans3061;\n$step3057 = 21;\n$al3062 = L[907];\n// omitting isFunction check;\n$ans3061 = multi$prep$axis1764.$var.app(percent453.$var,value$lists3076);\nbreak;\ncase 21: var tup3684 = $ans3061;\n$step3057 = 22;\n$al3062 = L[906];\nR.checkTupleBind(tup3684,2,L[906]);\nbreak;\ncase 22: var max$positive$height3089 = R.getTuple(tup3684,0,L[899]);\nvar max$negative$height3090 = R.getTuple(tup3684,1,L[900]);\n$step3057 = 23;\n$ans3061 = R.maybeMethodCall2(new$self3088,\"make-axis\",L[901],max$positive$height3089,max$negative$height3090);\nbreak;\ncase 23: var anf_method_obj3099 = $ans3061;\nvar $temp_lam3092 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__902($n3093) {\nvar $step3091 = 0;\nvar $elidedFrames3097 = 0;\nvar $ans3094 = D;\nvar $al3095 = L[902];\nif(R.isAR($n3093)) {\n$step3091 = $n3093.step;\n$al3095 = $n3093.from;\n$ans3094 = $n3093.ans;\n$elidedFrames3097 = $n3093.elidedFrames;\nn3093 = $n3093.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[902],1,$t,false);\n}\nvar n3093 = $n3093;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3094 = R.mC();\n}\nwhile(!R.isContinuation($ans3094)) {\nswitch($step3091) {\ncase 0: $step3091 = 1;\n$al3095 = L[904];\n// omitting isFunction check;\n$ans3094 = _times5.app(n3093,(100));\nbreak;\ncase 1: var anf_arg1411 = $ans3094;\n// caller optimization;\n$ans3094 = num$to$string7.app(anf_arg1411);\nvar anf_arg1423 = $ans3094;\n$step3091 = 2;\n$al3095 = L[903];\n// omitting isFunction check;\n$ans3094 = _plus5.app(anf_arg1423,(\"%\"));\nbreak;\ncase 2: ++R.GAS;\nreturn $ans3094;\ndefault: R.ffi.throwSpinnakerError(L[902],$step3091);\n}\n}\nif($step3091 !== 2) {\n$ans3094.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3095,$temp_lam3092,$step3091,[n3093],[],$elidedFrames3097);\n}\nreturn $ans3094;\n};\nvar anf_arg2987 = R.mF($temp_lam3092,\"\");\n$step3057 = 32;\n$ans3061 = R.maybeMethodCall1(anf_method_obj3099,\"format-axis\",L[905],anf_arg2987);\nbreak;\ncase 24: $step3057 = 25;\n$al3062 = L[919];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3062,equal$always1);\n}\n$ans3061 = equal$always1.app(stack$type3060,grouped457.$var);\nbreak;\ncase 25: var anf_if3105 = $ans3061;\n$step3057 = R.checkPyretTrue(anf_if3105)?26:31;\nbreak;\ncase 26: $step3057 = 27;\n$ans3061 = R.maybeMethodCall0(self3059,\"constr\",L[909]);\nbreak;\ncase 27: var anf_fun3101 = $ans3061;\n$al3062 = L[910];\nvar anf_extend3100 = G(self3059,\"obj\",L[910]);\nvar anf_arg1419 = R.extendObj(L[911],anf_extend3100,{\"is-stacked\":(\"none\")});\n$step3057 = 28;\n$al3062 = L[917];\nif(typeof(anf_fun3101.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3062,anf_fun3101);\n}\n$ans3061 = anf_fun3101.app(anf_arg1419);\nbreak;\ncase 28: var new$self3102 = $ans3061;\n$step3057 = 29;\n$al3062 = L[916];\n// omitting isFunction check;\n$ans3061 = multi$prep$axis1764.$var.app(grouped457.$var,value$lists3076);\nbreak;\ncase 29: var tup3730 = $ans3061;\n$step3057 = 30;\n$al3062 = L[915];\nR.checkTupleBind(tup3730,2,L[915]);\nbreak;\ncase 30: var max$positive$height3103 = R.getTuple(tup3730,0,L[912]);\nvar max$negative$height3104 = R.getTuple(tup3730,1,L[913]);\n$step3057 = 32;\n$ans3061 = R.maybeMethodCall2(new$self3102,\"make-axis\",L[914],max$positive$height3103,max$negative$height3104);\nbreak;\ncase 31: $step3057 = 32;\n$al3062 = L[918];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3062,raise1);\n}\n$ans3061 = raise1.app((\"stacking-type: type must be absolute, relative, percent, or grouped\"));\nbreak;\ncase 32: ++R.GAS;\nreturn $ans3061;\ndefault: R.ffi.throwSpinnakerError(L[874],$step3057);\n}\n}\nif($step3057 !== 32) {\n$ans3061.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3062,$temp_full3058,$step3057,[self3059,stack$type3060],[new$self3102,tup3684,tup3730,tup3664,tup3646,value$lists3076,new$self3082,new$self3077,new$self3088],$elidedFrames3064);\n}\nreturn $ans3061;\n};\nvar stacking$type$method4144 = R.makeMethod1($temp_full3058,\"\");\nvar $temp_full3111 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__925($self3112,$annotations3113) {\nvar $step3110 = 0;\nvar $elidedFrames3117 = 0;\nvar $ans3114 = D;\nvar $al3115 = L[925];\nif(R.isAR($self3112)) {\n$step3110 = $self3112.step;\n$al3115 = $self3112.from;\n$ans3114 = $self3112.ans;\n$elidedFrames3117 = $self3112.elidedFrames;\nself3112 = $self3112.args[0];\nannotations3113 = $self3112.args[1];\nanf_arg3076 = $self3112.vars[0];\ngiven$length3119 = $self3112.vars[1];\nanf_arg1436 = $self3112.vars[2];\nanf_extend3159 = $self3112.vars[3];\nanf_fun3161 = $self3112.vars[4];\nexpected$length3120 = $self3112.vars[5];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[925],2,$t,true);\n}\nvar self3112 = $self3112;\nvar annotations3113 = $annotations3113;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3114 = R.mC();\n}\nwhile(!R.isContinuation($ans3114)) {\nswitch($step3110) {\ncase 0: $step3110 = 1;\n$al3115 = L[963];\nvar $ann$check3165 = R._cA(L[963],R.gDA(L[963],\"CL\",CL40.dict.types,\"LoLoOoS\"),annotations3113);\nif(R.isContinuation($ann$check3165)) {\n$ans3114 = $ann$check3165;\n}\nbreak;\ncase 1: $al3115 = L[926];\nvar anf_bracket3118 = G(self3112,\"obj\",L[926]);\n$al3115 = L[927];\nvar anf_arg1414 = G(anf_bracket3118,\"annotations\",L[927]);\n// caller optimization;\n$ans3114 = raw$array$length7.app(anf_arg1414);\nvar expected$length3120 = $ans3114;\n$step3110 = 2;\n$ans3114 = R.maybeMethodCall0(annotations3113,\"length\",L[928]);\nbreak;\ncase 2: var given$length3119 = $ans3114;\n$step3110 = 3;\n$al3115 = L[962];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3115,equal$always1);\n}\n$ans3114 = equal$always1.app(given$length3119,expected$length3120);\nbreak;\ncase 3: var anf_arg1415 = $ans3114;\n$ans3114 = R.not(anf_arg1415);\nvar anf_if3163 = $ans3114;\n$step3110 = R.checkPyretTrue(anf_if3163)?4:9;\nbreak;\ncase 4: // caller optimization;\n$ans3114 = num$to$string7.app(expected$length3120);\nvar anf_arg1424 = $ans3114;\n$step3110 = 5;\n$al3115 = L[961];\n// omitting isFunction check;\n$ans3114 = _plus5.app((\"annotations: input dimensions mismatch. Expected length \"),anf_arg1424);\nbreak;\ncase 5: var anf_arg1421 = $ans3114;\n$step3110 = 6;\n$al3115 = L[960];\n// omitting isFunction check;\n$ans3114 = _plus5.app(anf_arg1421,(\", received \"));\nbreak;\ncase 6: var anf_arg1425 = $ans3114;\n// caller optimization;\n$ans3114 = num$to$string7.app(given$length3119);\nvar anf_arg1426 = $ans3114;\n$step3110 = 7;\n$al3115 = L[959];\n// omitting isFunction check;\n$ans3114 = _plus5.app(anf_arg1425,anf_arg1426);\nbreak;\ncase 7: var anf_arg3162 = $ans3114;\n$step3110 = 8;\n$al3115 = L[958];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3115,raise1);\n}\n$ans3114 = raise1.app(anf_arg3162);\nbreak;\ncase 8: $step3110 = 10;\n$ans3114 = nothing5;\nbreak;\ncase 9: $step3110 = 10;\n$ans3114 = nothing5;\nbreak;\ncase 10: var $temp_lam3122 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__929($l3123) {\nvar $step3121 = 0;\nvar $elidedFrames3127 = 0;\nvar $ans3124 = D;\nvar $al3125 = L[929];\nif(R.isAR($l3123)) {\n$step3121 = $l3123.step;\n$al3125 = $l3123.from;\n$ans3124 = $l3123.ans;\n$elidedFrames3127 = $l3123.elidedFrames;\nl3123 = $l3123.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[929],1,$t,false);\n}\nvar l3123 = $l3123;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3124 = R.mC();\n}\nwhile(!R.isContinuation($ans3124)) {\nswitch($step3121) {\ncase 0: $step3121 = 1;\n$al3125 = L[938];\nR._cA(L[938],List16,l3123);\nbreak;\ncase 1: var $temp_lam3129 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__930($o3130) {\nvar $step3128 = 0;\nvar $elidedFrames3134 = 0;\nvar $ans3131 = D;\nvar $al3132 = L[930];\nif(R.isAR($o3130)) {\n$step3128 = $o3130.step;\n$al3132 = $o3130.from;\n$ans3131 = $o3130.ans;\n$elidedFrames3134 = $o3130.elidedFrames;\no3130 = $o3130.args[0];\ncases3135 = $o3130.vars[0];\ns3136 = $o3130.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[930],1,$t,false);\n}\nvar o3130 = $o3130;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3131 = R.mC();\n}\nwhile(!R.isContinuation($ans3131)) {\nswitch($step3128) {\ncase 0: $step3128 = 1;\n$al3132 = L[936];\nR._cA(L[936],Option27,o3130);\nbreak;\ncase 1: var cases3135 = o3130;\n$step3128 = 2;\n$al3132 = L[935];\nvar $ann$check3141 = R._cA(L[935],Option27,cases3135);\nif(R.isContinuation($ann$check3141)) {\n$ans3131 = $ann$check3141;\n}\nbreak;\ncase 2: $al3132 = L[932];\n$step3128 = $cases_dispatch3140[cases3135.$name] || 7;\nbreak;\ncase 3: if(cases3135.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[931],false,L[932],cases3135.$loc);\n}\n$step3128 = 8;\n$ans3131 = (true);\nbreak;\ncase 4: if(cases3135.$arity !== 1) {\nif(cases3135.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[933],1,cases3135.$arity,L[932],cases3135.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[933],true,L[932],cases3135.$loc);\n}\n}\nvar $fn3138 = cases3135.$constructor.$fieldNames;\nvar s3136 = R.dF(cases3135.dict[$fn3138[0]],cases3135.$mut_fields_mask[0],false);\n$step3128 = 5;\nbreak;\ncase 5: $step3128 = 6;\n$al3132 = L[934];\nR._cA(L[934],$type$String8,s3136);\nbreak;\ncase 6: $step3128 = 8;\n$ans3131 = (true);\nbreak;\ncase 7: $ans3131 = R.throwNoCasesMatched(L[932],cases3135);\n$step3128 = 8;\nbreak;\ncase 8: ++R.GAS;\nreturn $ans3131;\ndefault: R.ffi.throwSpinnakerError(L[930],$step3128);\n}\n}\nif($step3128 !== 8) {\n$ans3131.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3132,$temp_lam3129,$step3128,[o3130],[cases3135,s3136],$elidedFrames3134);\n}\nreturn $ans3131;\n};\nvar anf_arg1427 = R.mF($temp_lam3129,\"\");\n$step3121 = 2;\n$al3125 = L[937];\n// omitting isFunction check;\n$ans3124 = each25.app(anf_arg1427,l3123);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans3124;\ndefault: R.ffi.throwSpinnakerError(L[929],$step3121);\n}\n}\nif($step3121 !== 2) {\n$ans3124.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3125,$temp_lam3122,$step3121,[l3123],[],$elidedFrames3127);\n}\nreturn $ans3124;\n};\nvar anf_arg3035 = R.mF($temp_lam3122,\"\");\n$step3110 = 11;\n$al3115 = L[957];\n// omitting isFunction check;\n$ans3114 = each25.app(anf_arg3035,annotations3113);\nbreak;\ncase 11: var $temp_lam3146 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__939($expected3147,$given3148,$index3149) {\nvar $step3145 = 0;\nvar $elidedFrames3153 = 0;\nvar $ans3150 = D;\nvar $al3151 = L[939];\nif(R.isAR($expected3147)) {\n$step3145 = $expected3147.step;\n$al3151 = $expected3147.from;\n$ans3150 = $expected3147.ans;\n$elidedFrames3153 = $expected3147.elidedFrames;\nexpected3147 = $expected3147.args[0];\ngiven3148 = $expected3147.args[1];\nindex3149 = $expected3147.args[2];\nexpected$length3155 = $expected3147.vars[0];\ngiven$length3154 = $expected3147.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[939],3,$t,false);\n}\nvar expected3147 = $expected3147;\nvar given3148 = $given3148;\nvar index3149 = $index3149;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3150 = R.mC();\n}\nwhile(!R.isContinuation($ans3150)) {\nswitch($step3145) {\ncase 0: // caller optimization;\n$ans3150 = raw$array$length7.app(expected3147);\nvar expected$length3155 = $ans3150;\n$step3145 = 1;\n$ans3150 = R.maybeMethodCall0(given3148,\"length\",L[940]);\nbreak;\ncase 1: var given$length3154 = $ans3150;\n$step3145 = 2;\n$al3151 = L[947];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3151,equal$always1);\n}\n$ans3150 = equal$always1.app(given$length3154,expected$length3155);\nbreak;\ncase 2: var anf_arg1429 = $ans3150;\n$ans3150 = R.not(anf_arg1429);\nvar anf_if3156 = $ans3150;\n$step3145 = R.checkPyretTrue(anf_if3156)?3:10;\nbreak;\ncase 3: // caller optimization;\n$ans3150 = num$to$string7.app(index3149);\nvar anf_arg1430 = $ans3150;\n$step3145 = 4;\n$al3151 = L[946];\n// omitting isFunction check;\n$ans3150 = _plus5.app((\"annotations: length mismatch on row \"),anf_arg1430);\nbreak;\ncase 4: var anf_arg1451 = $ans3150;\n$step3145 = 5;\n$al3151 = L[945];\n// omitting isFunction check;\n$ans3150 = _plus5.app(anf_arg1451,(\". Expected \"));\nbreak;\ncase 5: var anf_arg3040 = $ans3150;\n// caller optimization;\n$ans3150 = num$to$string7.app(expected$length3155);\nvar anf_arg3044 = $ans3150;\n$step3145 = 6;\n$al3151 = L[944];\n// omitting isFunction check;\n$ans3150 = _plus5.app(anf_arg3040,anf_arg3044);\nbreak;\ncase 6: var anf_arg1435 = $ans3150;\n$step3145 = 7;\n$al3151 = L[943];\n// omitting isFunction check;\n$ans3150 = _plus5.app(anf_arg1435,(\", received \"));\nbreak;\ncase 7: var anf_arg3046 = $ans3150;\n// caller optimization;\n$ans3150 = num$to$string7.app(given$length3154);\nvar anf_arg3047 = $ans3150;\n$step3145 = 8;\n$al3151 = L[942];\n// omitting isFunction check;\n$ans3150 = _plus5.app(anf_arg3046,anf_arg3047);\nbreak;\ncase 8: var anf_arg1434 = $ans3150;\n$step3145 = 9;\n$al3151 = L[941];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3151,raise1);\n}\n$ans3150 = raise1.app(anf_arg1434);\nbreak;\ncase 9: $step3145 = 11;\n$ans3150 = nothing5;\nbreak;\ncase 10: $step3145 = 11;\n$ans3150 = nothing5;\nbreak;\ncase 11: ++R.GAS;\nreturn $ans3150;\ndefault: R.ffi.throwSpinnakerError(L[939],$step3145);\n}\n}\nif($step3145 !== 11) {\n$ans3150.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3151,$temp_lam3146,$step3145,[expected3147,given3148,index3149],[expected$length3155,given$length3154],$elidedFrames3153);\n}\nreturn $ans3150;\n};\nvar anf_arg1436 = R.mF($temp_lam3146,\"for-body<line 783, column 4>\");\n$al3115 = L[948];\nvar anf_bracket3158 = G(self3112,\"obj\",L[948]);\n$al3115 = L[949];\nvar anf_arg1440 = G(anf_bracket3158,\"annotations\",L[949]);\n// caller optimization;\n$ans3114 = raw$array$to$list4.app(anf_arg1440);\nvar anf_arg3076 = $ans3114;\n$step3110 = 12;\n$ans3114 = R.maybeMethodCall0(annotations3113,\"length\",L[950]);\nbreak;\ncase 12: var anf_arg1439 = $ans3114;\n$step3110 = 13;\n$al3115 = L[956];\n// omitting isFunction check;\n$ans3114 = range32.app((0),anf_arg1439);\nbreak;\ncase 13: var anf_arg1441 = $ans3114;\n$step3110 = 14;\n$al3115 = L[939];\n// omitting isFunction check;\n$ans3114 = each38.app(anf_arg1436,anf_arg3076,annotations3113,anf_arg1441);\nbreak;\ncase 14: $step3110 = 15;\n$ans3114 = R.maybeMethodCall0(self3112,\"constr\",L[951]);\nbreak;\ncase 15: var anf_fun3161 = $ans3114;\n$al3115 = L[952];\nvar anf_extend3159 = G(self3112,\"obj\",L[952]);\n$step3110 = 16;\n$al3115 = L[955];\n// omitting isFunction check;\n$ans3114 = list$to$table21438.$var.app(annotations3113);\nbreak;\ncase 16: var anf_extend3160 = $ans3114;\nvar anf_arg1445 = R.extendObj(L[953],anf_extend3159,{\"annotations\":anf_extend3160});\n$step3110 = 17;\n$al3115 = L[954];\nif(typeof(anf_fun3161.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3115,anf_fun3161);\n}\n$ans3114 = anf_fun3161.app(anf_arg1445);\nbreak;\ncase 17: ++R.GAS;\nreturn $ans3114;\ndefault: R.ffi.throwSpinnakerError(L[925],$step3110);\n}\n}\nif($step3110 !== 17) {\n$ans3114.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3115,$temp_full3111,$step3110,[self3112,annotations3113],[anf_arg3076,given$length3119,anf_arg1436,anf_extend3159,anf_fun3161,expected$length3120],$elidedFrames3117);\n}\nreturn $ans3114;\n};\nvar annotations$method3178 = R.makeMethod1($temp_full3111,\"\");\nvar $temp_full3171 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__964($self3657,$annotations3172) {\nvar $step3170 = 0;\nvar $elidedFrames3177 = 0;\nvar $ans3174 = D;\nvar $al3175 = L[964];\nif(R.isAR($self3657)) {\n$step3170 = $self3657.step;\n$al3175 = $self3657.from;\n$ans3174 = $self3657.ans;\n$elidedFrames3177 = $self3657.elidedFrames;\nself3657 = $self3657.args[0];\nannotations3172 = $self3657.args[1];\nanf_method_obj3188 = $self3657.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[964],2,$t,true);\n}\nvar self3657 = $self3657;\nvar annotations3172 = $annotations3172;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3174 = R.mC();\n}\nwhile(!R.isContinuation($ans3174)) {\nswitch($step3170) {\ncase 0: $step3170 = 1;\n$al3175 = L[969];\nvar $ann$check3189 = R._cA(L[969],R.gDA(L[969],\"CL\",CL40.dict.types,\"LoOoS\"),annotations3172);\nif(R.isContinuation($ann$check3189)) {\n$ans3174 = $ann$check3189;\n}\nbreak;\ncase 1: var anf_method_obj3188 = R.extendObj(L[965],self3657,{\"annotations-method\":annotations$method3178});\nvar $temp_lam3180 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__966($arg_3181) {\nvar $step3179 = 0;\nvar $elidedFrames3185 = 0;\nvar $ans3182 = D;\nvar $al3183 = L[966];\nif(R.isAR($arg_3181)) {\n$step3179 = $arg_3181.step;\n$al3183 = $arg_3181.from;\n$ans3182 = $arg_3181.ans;\n$elidedFrames3185 = $arg_3181.elidedFrames;\narg_3181 = $arg_3181.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[966],1,$t,false);\n}\nvar arg_3181 = $arg_3181;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3182 = R.mC();\n}\nwhile(!R.isContinuation($ans3182)) {\nswitch($step3179) {\ncase 0: // caller optimization;\n$ans3182 = link5.app(arg_3181,empty18);\n$step3179 = 1;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans3182;\ndefault: R.ffi.throwSpinnakerError(L[966],$step3179);\n}\n}\nif($step3179 !== 1) {\n$ans3182.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3183,$temp_lam3180,$step3179,[arg_3181],[],$elidedFrames3185);\n}\nreturn $ans3182;\n};\nvar anf_arg1448 = R.mF($temp_lam3180,\"\");\n$step3170 = 2;\n$ans3174 = R.maybeMethodCall1(annotations3172,\"map\",L[967],anf_arg1448);\nbreak;\ncase 2: var anf_arg1453 = $ans3174;\n$step3170 = 3;\n$ans3174 = R.maybeMethodCall1(anf_method_obj3188,\"annotations-method\",L[968],anf_arg1453);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans3174;\ndefault: R.ffi.throwSpinnakerError(L[964],$step3170);\n}\n}\nif($step3170 !== 3) {\n$ans3174.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3175,$temp_full3171,$step3170,[self3657,annotations3172],[anf_method_obj3188],$elidedFrames3177);\n}\nreturn $ans3174;\n};\nvar single$annotations$method4117 = R.makeMethod1($temp_full3171,\"\");\nvar $temp_full3192 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__970($self3193,$intervals3194) {\nvar $step3191 = 0;\nvar $elidedFrames3199 = 0;\nvar $ans3196 = D;\nvar $al3197 = L[970];\nif(R.isAR($self3193)) {\n$step3191 = $self3193.step;\n$al3197 = $self3193.from;\n$ans3196 = $self3193.ans;\n$elidedFrames3199 = $self3193.elidedFrames;\nself3193 = $self3193.args[0];\nintervals3194 = $self3193.args[1];\nraw$intervals3275 = $self3193.vars[0];\ncurr$axis3277 = $self3193.vars[1];\nexpected$length3202 = $self3193.vars[2];\ngiven$length3201 = $self3193.vars[3];\nanf_arg1488 = $self3193.vars[4];\nanf_arg1489 = $self3193.vars[5];\nflatten3272 = $self3193.vars[6];\ninterval$max3278 = $self3193.vars[7];\ninterval$min3279 = $self3193.vars[8];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[970],2,$t,true);\n}\nvar self3193 = $self3193;\nvar intervals3194 = $intervals3194;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3196 = R.mC();\n}\nwhile(!R.isContinuation($ans3196)) {\nswitch($step3191) {\ncase 0: $step3191 = 1;\n$al3197 = L[1024];\nvar $ann$check3282 = R._cA(L[1024],R.gDA(L[1024],\"CL\",CL40.dict.types,\"LoLoLoN\"),intervals3194);\nif(R.isContinuation($ann$check3282)) {\n$ans3196 = $ann$check3282;\n}\nbreak;\ncase 1: $al3197 = L[971];\nvar anf_bracket3200 = G(self3193,\"obj\",L[971]);\n$al3197 = L[972];\nvar anf_arg1461 = G(anf_bracket3200,\"intervals\",L[972]);\n// caller optimization;\n$ans3196 = raw$array$length7.app(anf_arg1461);\nvar expected$length3202 = $ans3196;\n$step3191 = 2;\n$ans3196 = R.maybeMethodCall0(intervals3194,\"length\",L[973]);\nbreak;\ncase 2: var given$length3201 = $ans3196;\n$step3191 = 3;\n$al3197 = L[1023];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3197,equal$always1);\n}\n$ans3196 = equal$always1.app(given$length3201,expected$length3202);\nbreak;\ncase 3: var anf_arg1474 = $ans3196;\n$ans3196 = R.not(anf_arg1474);\nvar anf_if3281 = $ans3196;\n$step3191 = R.checkPyretTrue(anf_if3281)?4:9;\nbreak;\ncase 4: // caller optimization;\n$ans3196 = num$to$string7.app(expected$length3202);\nvar anf_arg1475 = $ans3196;\n$step3191 = 5;\n$al3197 = L[1022];\n// omitting isFunction check;\n$ans3196 = _plus5.app((\"intervals: input dimensions mismatch. Expected length \"),anf_arg1475);\nbreak;\ncase 5: var anf_arg3180 = $ans3196;\n$step3191 = 6;\n$al3197 = L[1021];\n// omitting isFunction check;\n$ans3196 = _plus5.app(anf_arg3180,(\", received \"));\nbreak;\ncase 6: var anf_arg1468 = $ans3196;\n// caller optimization;\n$ans3196 = num$to$string7.app(given$length3201);\nvar anf_arg1463 = $ans3196;\n$step3191 = 7;\n$al3197 = L[1020];\n// omitting isFunction check;\n$ans3196 = _plus5.app(anf_arg1468,anf_arg1463);\nbreak;\ncase 7: var anf_arg1469 = $ans3196;\n$step3191 = 8;\n$al3197 = L[1019];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3197,raise1);\n}\n$ans3196 = raise1.app(anf_arg1469);\nbreak;\ncase 8: $step3191 = 10;\n$ans3196 = nothing5;\nbreak;\ncase 9: $step3191 = 10;\n$ans3196 = nothing5;\nbreak;\ncase 10: var $temp_lam3206 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__974($l3207) {\nvar $step3205 = 0;\nvar $elidedFrames3211 = 0;\nvar $ans3208 = D;\nvar $al3209 = L[974];\nif(R.isAR($l3207)) {\n$step3205 = $l3207.step;\n$al3209 = $l3207.from;\n$ans3208 = $l3207.ans;\n$elidedFrames3211 = $l3207.elidedFrames;\nl3207 = $l3207.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[974],1,$t,false);\n}\nvar l3207 = $l3207;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3208 = R.mC();\n}\nwhile(!R.isContinuation($ans3208)) {\nswitch($step3205) {\ncase 0: $step3205 = 1;\n$al3209 = L[981];\nR._cA(L[981],List16,l3207);\nbreak;\ncase 1: var $temp_lam3213 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__975($l13214) {\nvar $step3212 = 0;\nvar $elidedFrames3218 = 0;\nvar $ans3215 = D;\nvar $al3216 = L[975];\nif(R.isAR($l13214)) {\n$step3212 = $l13214.step;\n$al3216 = $l13214.from;\n$ans3215 = $l13214.ans;\n$elidedFrames3218 = $l13214.elidedFrames;\nl13214 = $l13214.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[975],1,$t,false);\n}\nvar l13214 = $l13214;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3215 = R.mC();\n}\nwhile(!R.isContinuation($ans3215)) {\nswitch($step3212) {\ncase 0: $step3212 = 1;\n$al3216 = L[979];\nR._cA(L[979],List16,l13214);\nbreak;\ncase 1: var $temp_lam3220 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__976($n3221) {\nvar $step3219 = 0;\nvar $elidedFrames3225 = 0;\nvar $ans3222 = D;\nvar $al3223 = L[976];\nif(R.isAR($n3221)) {\n$step3219 = $n3221.step;\n$al3223 = $n3221.from;\n$ans3222 = $n3221.ans;\n$elidedFrames3225 = $n3221.elidedFrames;\nn3221 = $n3221.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[976],1,$t,false);\n}\nvar n3221 = $n3221;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3222 = R.mC();\n}\nwhile(!R.isContinuation($ans3222)) {\nswitch($step3219) {\ncase 0: $step3219 = 1;\n$al3223 = L[977];\nR._cA(L[977],$type$Number3,n3221);\nbreak;\ncase 1: $step3219 = 2;\n$ans3222 = (true);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans3222;\ndefault: R.ffi.throwSpinnakerError(L[976],$step3219);\n}\n}\nif($step3219 !== 2) {\n$ans3222.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3223,$temp_lam3220,$step3219,[n3221],[],$elidedFrames3225);\n}\nreturn $ans3222;\n};\nvar anf_arg1470 = R.mF($temp_lam3220,\"\");\n$step3212 = 2;\n$al3216 = L[978];\n// omitting isFunction check;\n$ans3215 = each25.app(anf_arg1470,l13214);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans3215;\ndefault: R.ffi.throwSpinnakerError(L[975],$step3212);\n}\n}\nif($step3212 !== 2) {\n$ans3215.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3216,$temp_lam3213,$step3212,[l13214],[],$elidedFrames3218);\n}\nreturn $ans3215;\n};\nvar anf_arg1464 = R.mF($temp_lam3213,\"\");\n$step3205 = 2;\n$al3209 = L[980];\n// omitting isFunction check;\n$ans3208 = each25.app(anf_arg1464,l3207);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans3208;\ndefault: R.ffi.throwSpinnakerError(L[974],$step3205);\n}\n}\nif($step3205 !== 2) {\n$ans3208.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3209,$temp_lam3206,$step3205,[l3207],[],$elidedFrames3211);\n}\nreturn $ans3208;\n};\nvar anf_arg1465 = R.mF($temp_lam3206,\"\");\n$step3191 = 11;\n$al3197 = L[1018];\n// omitting isFunction check;\n$ans3196 = each25.app(anf_arg1465,intervals3194);\nbreak;\ncase 11: var $temp_lam3231 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__982($expected3232,$given3233,$index3234) {\nvar $step3230 = 0;\nvar $elidedFrames3238 = 0;\nvar $ans3235 = D;\nvar $al3236 = L[982];\nif(R.isAR($expected3232)) {\n$step3230 = $expected3232.step;\n$al3236 = $expected3232.from;\n$ans3235 = $expected3232.ans;\n$elidedFrames3238 = $expected3232.elidedFrames;\nexpected3232 = $expected3232.args[0];\ngiven3233 = $expected3232.args[1];\nindex3234 = $expected3232.args[2];\ngiven$length3239 = $expected3232.vars[0];\nexpected$length3240 = $expected3232.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[982],3,$t,false);\n}\nvar expected3232 = $expected3232;\nvar given3233 = $given3233;\nvar index3234 = $index3234;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3235 = R.mC();\n}\nwhile(!R.isContinuation($ans3235)) {\nswitch($step3230) {\ncase 0: // caller optimization;\n$ans3235 = raw$array$length7.app(expected3232);\nvar expected$length3240 = $ans3235;\n$step3230 = 1;\n$ans3235 = R.maybeMethodCall0(given3233,\"length\",L[983]);\nbreak;\ncase 1: var given$length3239 = $ans3235;\n$step3230 = 2;\n$al3236 = L[990];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3236,equal$always1);\n}\n$ans3235 = equal$always1.app(given$length3239,expected$length3240);\nbreak;\ncase 2: var anf_arg1466 = $ans3235;\n$ans3235 = R.not(anf_arg1466);\nvar anf_if3242 = $ans3235;\n$step3230 = R.checkPyretTrue(anf_if3242)?3:10;\nbreak;\ncase 3: // caller optimization;\n$ans3235 = num$to$string7.app(index3234);\nvar anf_arg1476 = $ans3235;\n$step3230 = 4;\n$al3236 = L[989];\n// omitting isFunction check;\n$ans3235 = _plus5.app((\"intervals: length mismatch on row \"),anf_arg1476);\nbreak;\ncase 4: var anf_arg1472 = $ans3235;\n$step3230 = 5;\n$al3236 = L[988];\n// omitting isFunction check;\n$ans3235 = _plus5.app(anf_arg1472,(\". Expected \"));\nbreak;\ncase 5: var anf_arg1477 = $ans3235;\n// caller optimization;\n$ans3235 = num$to$string7.app(expected$length3240);\nvar anf_arg3244 = $ans3235;\n$step3230 = 6;\n$al3236 = L[987];\n// omitting isFunction check;\n$ans3235 = _plus5.app(anf_arg1477,anf_arg3244);\nbreak;\ncase 6: var anf_arg1487 = $ans3235;\n$step3230 = 7;\n$al3236 = L[986];\n// omitting isFunction check;\n$ans3235 = _plus5.app(anf_arg1487,(\", received \"));\nbreak;\ncase 7: var anf_arg1499 = $ans3235;\n// caller optimization;\n$ans3235 = num$to$string7.app(given$length3239);\nvar anf_arg3241 = $ans3235;\n$step3230 = 8;\n$al3236 = L[985];\n// omitting isFunction check;\n$ans3235 = _plus5.app(anf_arg1499,anf_arg3241);\nbreak;\ncase 8: var anf_arg1493 = $ans3235;\n$step3230 = 9;\n$al3236 = L[984];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3236,raise1);\n}\n$ans3235 = raise1.app(anf_arg1493);\nbreak;\ncase 9: $step3230 = 11;\n$ans3235 = nothing5;\nbreak;\ncase 10: $step3230 = 11;\n$ans3235 = nothing5;\nbreak;\ncase 11: ++R.GAS;\nreturn $ans3235;\ndefault: R.ffi.throwSpinnakerError(L[982],$step3230);\n}\n}\nif($step3230 !== 11) {\n$ans3235.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3236,$temp_lam3231,$step3230,[expected3232,given3233,index3234],[given$length3239,expected$length3240],$elidedFrames3238);\n}\nreturn $ans3235;\n};\nvar anf_arg1488 = R.mF($temp_lam3231,\"for-body<line 820, column 4>\");\n$al3197 = L[991];\nvar anf_bracket3244 = G(self3193,\"obj\",L[991]);\n$al3197 = L[992];\nvar anf_arg1495 = G(anf_bracket3244,\"intervals\",L[992]);\n// caller optimization;\n$ans3196 = raw$array$to$list4.app(anf_arg1495);\nvar anf_arg1489 = $ans3196;\n$step3191 = 12;\n$ans3196 = R.maybeMethodCall0(intervals3194,\"length\",L[993]);\nbreak;\ncase 12: var anf_arg1490 = $ans3196;\n$step3191 = 13;\n$al3197 = L[1017];\n// omitting isFunction check;\n$ans3196 = range32.app((0),anf_arg1490);\nbreak;\ncase 13: var anf_arg1491 = $ans3196;\n$step3191 = 14;\n$al3197 = L[982];\n// omitting isFunction check;\n$ans3196 = each38.app(anf_arg1488,anf_arg1489,intervals3194,anf_arg1491);\nbreak;\ncase 14: var $temp_lam3246 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__994($recv_3247) {\nvar $step3245 = 0;\nvar $elidedFrames3251 = 0;\nvar $ans3248 = D;\nvar $al3249 = L[994];\nif(R.isAR($recv_3247)) {\n$step3245 = $recv_3247.step;\n$al3249 = $recv_3247.from;\n$ans3248 = $recv_3247.ans;\n$elidedFrames3251 = $recv_3247.elidedFrames;\nrecv_3247 = $recv_3247.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[994],1,$t,false);\n}\nvar recv_3247 = $recv_3247;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3248 = R.mC();\n}\nwhile(!R.isContinuation($ans3248)) {\nswitch($step3245) {\ncase 0: $step3245 = 1;\n$ans3248 = R.maybeMethodCall1(recv_3247,\"map\",L[994],raw$array$from$list6);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans3248;\ndefault: R.ffi.throwSpinnakerError(L[994],$step3245);\n}\n}\nif($step3245 !== 1) {\n$ans3248.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3249,$temp_lam3246,$step3245,[recv_3247],[],$elidedFrames3251);\n}\nreturn $ans3248;\n};\nvar anf_arg1496 = R.mF($temp_lam3246,\"\");\n$step3191 = 15;\n$ans3196 = R.maybeMethodCall1(intervals3194,\"map\",L[995],anf_arg1496);\nbreak;\ncase 15: var anf_arg1500 = $ans3196;\n$step3191 = 16;\n$al3197 = L[1016];\n// omitting isFunction check;\n$ans3196 = list$to$table21438.$var.app(anf_arg1500);\nbreak;\ncase 16: var raw$intervals3275 = $ans3196;\nvar $temp_lam3254 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__996($lol3255) {\nvar $step3253 = 0;\nvar $elidedFrames3259 = 0;\nvar $ans3256 = D;\nvar $al3257 = L[996];\nif(R.isAR($lol3255)) {\n$step3253 = $lol3255.step;\n$al3257 = $lol3255.from;\n$ans3256 = $lol3255.ans;\n$elidedFrames3259 = $lol3255.elidedFrames;\nlol3255 = $lol3255.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[996],1,$t,false);\n}\nvar lol3255 = $lol3255;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3256 = R.mC();\n}\nwhile(!R.isContinuation($ans3256)) {\nswitch($step3253) {\ncase 0: var $temp_lam3261 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__997($acc3262,$elm3263) {\nvar $step3260 = 0;\nvar $elidedFrames3267 = 0;\nvar $ans3264 = D;\nvar $al3265 = L[997];\nif(R.isAR($acc3262)) {\n$step3260 = $acc3262.step;\n$al3265 = $acc3262.from;\n$ans3264 = $acc3262.ans;\n$elidedFrames3267 = $acc3262.elidedFrames;\nacc3262 = $acc3262.args[0];\nelm3263 = $acc3262.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[997],2,$t,false);\n}\nvar acc3262 = $acc3262;\nvar elm3263 = $elm3263;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3264 = R.mC();\n}\nwhile(!R.isContinuation($ans3264)) {\nswitch($step3260) {\ncase 0: $step3260 = 1;\n$al3265 = L[998];\n// omitting isFunction check;\n$ans3264 = _plus5.app(acc3262,elm3263);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans3264;\ndefault: R.ffi.throwSpinnakerError(L[997],$step3260);\n}\n}\nif($step3260 !== 1) {\n$ans3264.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3265,$temp_lam3261,$step3260,[acc3262,elm3263],[],$elidedFrames3267);\n}\nreturn $ans3264;\n};\nvar anf_arg1497 = R.mF($temp_lam3261,\"\");\n$step3253 = 1;\n$al3257 = L[999];\n// omitting isFunction check;\n$ans3256 = fold24.app(anf_arg1497,empty18,lol3255);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans3256;\ndefault: R.ffi.throwSpinnakerError(L[996],$step3253);\n}\n}\nif($step3253 !== 1) {\n$ans3256.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3257,$temp_lam3254,$step3253,[lol3255],[],$elidedFrames3259);\n}\nreturn $ans3256;\n};\nvar flatten3272 = R.mF($temp_lam3254,\"\");\n$al3197 = L[1000];\nvar anf_get_bang3270 = G(self3193,\"obj\",L[1000]);\nvar anf_bracket3271 = R.gFR(anf_get_bang3270,\"axisdata\",L[1001]);\n$al3197 = L[1002];\nvar curr$axis3277 = G(anf_bracket3271,\"value\",L[1002]);\n$step3191 = 17;\n$al3197 = L[1015];\nif(typeof(flatten3272.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3197,flatten3272);\n}\n$ans3196 = flatten3272.app(intervals3194);\nbreak;\ncase 17: var anf_arg3273 = $ans3196;\n$step3191 = 18;\n$al3197 = L[1014];\nif(typeof(flatten3272.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3197,flatten3272);\n}\n$ans3196 = flatten3272.app(anf_arg3273);\nbreak;\ncase 18: var anf_arg1512 = $ans3196;\n$step3191 = 19;\n$al3197 = L[1013];\n// omitting isFunction check;\n$ans3196 = fold24.app(num$max18,(0),anf_arg1512);\nbreak;\ncase 19: var interval$max3278 = $ans3196;\n$step3191 = 20;\n$al3197 = L[1012];\nif(typeof(flatten3272.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3197,flatten3272);\n}\n$ans3196 = flatten3272.app(intervals3194);\nbreak;\ncase 20: var anf_arg1524 = $ans3196;\n$step3191 = 21;\n$al3197 = L[1011];\nif(typeof(flatten3272.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3197,flatten3272);\n}\n$ans3196 = flatten3272.app(anf_arg1524);\nbreak;\ncase 21: var anf_arg3385 = $ans3196;\n$step3191 = 22;\n$al3197 = L[1010];\n// omitting isFunction check;\n$ans3196 = fold24.app(num$min2,(0),anf_arg3385);\nbreak;\ncase 22: var interval$min3279 = $ans3196;\n$step3191 = 23;\n$ans3196 = R.maybeMethodCall0(self3193,\"constr\",L[1003]);\nbreak;\ncase 23: var anf_fun3276 = $ans3196;\n$al3197 = L[1004];\nvar anf_extend3274 = G(self3193,\"obj\",L[1004]);\nvar anf_arg1519 = R.extendObj(L[1005],anf_extend3274,{\"intervals\":raw$intervals3275});\n$step3191 = 24;\n$al3197 = L[1009];\nif(typeof(anf_fun3276.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3197,anf_fun3276);\n}\n$ans3196 = anf_fun3276.app(anf_arg1519);\nbreak;\ncase 24: var anf_method_obj3280 = $ans3196;\n$al3197 = L[1006];\nvar anf_arg1514 = G(curr$axis3277,\"axisTop\",L[1006]);\n// caller optimization;\n$ans3196 = num$max18.app(anf_arg1514,interval$max3278);\nvar anf_arg1515 = $ans3196;\n$al3197 = L[1007];\nvar anf_arg1516 = G(curr$axis3277,\"axisBottom\",L[1007]);\n// caller optimization;\n$ans3196 = num$min2.app(anf_arg1516,interval$min3279);\nvar anf_arg1521 = $ans3196;\n$step3191 = 25;\n$ans3196 = R.maybeMethodCall2(anf_method_obj3280,\"make-axis\",L[1008],anf_arg1515,anf_arg1521);\nbreak;\ncase 25: ++R.GAS;\nreturn $ans3196;\ndefault: R.ffi.throwSpinnakerError(L[970],$step3191);\n}\n}\nif($step3191 !== 25) {\n$ans3196.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3197,$temp_full3192,$step3191,[self3193,intervals3194],[raw$intervals3275,curr$axis3277,expected$length3202,given$length3201,anf_arg1488,anf_arg1489,flatten3272,interval$max3278,interval$min3279],$elidedFrames3199);\n}\nreturn $ans3196;\n};\nvar intervals$method3292 = R.makeMethod1($temp_full3192,\"\");\nvar $temp_full3285 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1025($self3286,$intervals3287) {\nvar $step3284 = 0;\nvar $elidedFrames3291 = 0;\nvar $ans3288 = D;\nvar $al3289 = L[1025];\nif(R.isAR($self3286)) {\n$step3284 = $self3286.step;\n$al3289 = $self3286.from;\n$ans3288 = $self3286.ans;\n$elidedFrames3291 = $self3286.elidedFrames;\nself3286 = $self3286.args[0];\nintervals3287 = $self3286.args[1];\nanf_method_obj3303 = $self3286.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1025],2,$t,true);\n}\nvar self3286 = $self3286;\nvar intervals3287 = $intervals3287;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3288 = R.mC();\n}\nwhile(!R.isContinuation($ans3288)) {\nswitch($step3284) {\ncase 0: $step3284 = 1;\n$al3289 = L[1030];\nvar $ann$check3304 = R._cA(L[1030],R.gDA(L[1030],\"CL\",CL40.dict.types,\"LoLoN\"),intervals3287);\nif(R.isContinuation($ann$check3304)) {\n$ans3288 = $ann$check3304;\n}\nbreak;\ncase 1: var anf_method_obj3303 = R.extendObj(L[1026],self3286,{\"intervals\":intervals$method3292});\nvar $temp_lam3294 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1027($arg_3295) {\nvar $step3293 = 0;\nvar $elidedFrames3299 = 0;\nvar $ans3296 = D;\nvar $al3297 = L[1027];\nif(R.isAR($arg_3295)) {\n$step3293 = $arg_3295.step;\n$al3297 = $arg_3295.from;\n$ans3296 = $arg_3295.ans;\n$elidedFrames3299 = $arg_3295.elidedFrames;\narg_3295 = $arg_3295.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1027],1,$t,false);\n}\nvar arg_3295 = $arg_3295;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3296 = R.mC();\n}\nwhile(!R.isContinuation($ans3296)) {\nswitch($step3293) {\ncase 0: // caller optimization;\n$ans3296 = link5.app(arg_3295,empty18);\n$step3293 = 1;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans3296;\ndefault: R.ffi.throwSpinnakerError(L[1027],$step3293);\n}\n}\nif($step3293 !== 1) {\n$ans3296.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3297,$temp_lam3294,$step3293,[arg_3295],[],$elidedFrames3299);\n}\nreturn $ans3296;\n};\nvar anf_arg1522 = R.mF($temp_lam3294,\"\");\n$step3284 = 2;\n$ans3288 = R.maybeMethodCall1(intervals3287,\"map\",L[1028],anf_arg1522);\nbreak;\ncase 2: var anf_arg1526 = $ans3288;\n$step3284 = 3;\n$ans3288 = R.maybeMethodCall1(anf_method_obj3303,\"intervals\",L[1029],anf_arg1526);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans3288;\ndefault: R.ffi.throwSpinnakerError(L[1025],$step3284);\n}\n}\nif($step3284 !== 3) {\n$ans3288.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3289,$temp_full3285,$step3284,[self3286,intervals3287],[anf_method_obj3303],$elidedFrames3291);\n}\nreturn $ans3288;\n};\nvar single$intervals$method4118 = R.makeMethod1($temp_full3285,\"\");\nvar $temp_full3307 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1031($self3308,$errors3309) {\nvar $step3306 = 0;\nvar $elidedFrames3313 = 0;\nvar $ans3310 = D;\nvar $al3311 = L[1031];\nif(R.isAR($self3308)) {\n$step3306 = $self3308.step;\n$al3311 = $self3308.from;\n$ans3310 = $self3308.ans;\n$elidedFrames3313 = $self3308.elidedFrames;\nself3308 = $self3308.args[0];\nerrors3309 = $self3308.args[1];\nanf_arg3585 = $self3308.vars[0];\nanf_arg1596 = $self3308.vars[1];\nexpected$length3316 = $self3308.vars[2];\ngiven$length3315 = $self3308.vars[3];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1031],2,$t,true);\n}\nvar self3308 = $self3308;\nvar errors3309 = $errors3309;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3310 = R.mC();\n}\nwhile(!R.isContinuation($ans3310)) {\nswitch($step3306) {\ncase 0: $step3306 = 1;\n$al3311 = L[1096];\nvar $ann$check3438 = R._cA(L[1096],R.gDA(L[1096],\"CL\",CL40.dict.types,\"LoLoLoN\"),errors3309);\nif(R.isContinuation($ann$check3438)) {\n$ans3310 = $ann$check3438;\n}\nbreak;\ncase 1: $al3311 = L[1032];\nvar anf_bracket3314 = G(self3308,\"obj\",L[1032]);\n$al3311 = L[1033];\nvar anf_arg3468 = G(anf_bracket3314,\"intervals\",L[1033]);\n// caller optimization;\n$ans3310 = raw$array$length7.app(anf_arg3468);\nvar expected$length3316 = $ans3310;\n$step3306 = 2;\n$ans3310 = R.maybeMethodCall0(errors3309,\"length\",L[1034]);\nbreak;\ncase 2: var given$length3315 = $ans3310;\n$step3306 = 3;\n$al3311 = L[1095];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3311,equal$always1);\n}\n$ans3310 = equal$always1.app(given$length3315,expected$length3316);\nbreak;\ncase 3: var anf_arg3318 = $ans3310;\n$ans3310 = R.not(anf_arg3318);\nvar anf_if3437 = $ans3310;\n$step3306 = R.checkPyretTrue(anf_if3437)?4:9;\nbreak;\ncase 4: // caller optimization;\n$ans3310 = num$to$string7.app(expected$length3316);\nvar anf_arg3496 = $ans3310;\n$step3306 = 5;\n$al3311 = L[1094];\n// omitting isFunction check;\n$ans3310 = _plus5.app((\"error-bars: input dimensions mismatch. Expected length \"),anf_arg3496);\nbreak;\ncase 5: var anf_arg1541 = $ans3310;\n$step3306 = 6;\n$al3311 = L[1093];\n// omitting isFunction check;\n$ans3310 = _plus5.app(anf_arg1541,(\", received \"));\nbreak;\ncase 6: var anf_arg1539 = $ans3310;\n// caller optimization;\n$ans3310 = num$to$string7.app(given$length3315);\nvar anf_arg1542 = $ans3310;\n$step3306 = 7;\n$al3311 = L[1092];\n// omitting isFunction check;\n$ans3310 = _plus5.app(anf_arg1539,anf_arg1542);\nbreak;\ncase 7: var anf_arg1543 = $ans3310;\n$step3306 = 8;\n$al3311 = L[1091];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3311,raise1);\n}\n$ans3310 = raise1.app(anf_arg1543);\nbreak;\ncase 8: $step3306 = 10;\n$ans3310 = nothing5;\nbreak;\ncase 9: $step3306 = 10;\n$ans3310 = nothing5;\nbreak;\ncase 10: var $temp_lam3320 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1035($l3321) {\nvar $step3319 = 0;\nvar $elidedFrames3326 = 0;\nvar $ans3323 = D;\nvar $al3324 = L[1035];\nif(R.isAR($l3321)) {\n$step3319 = $l3321.step;\n$al3324 = $l3321.from;\n$ans3323 = $l3321.ans;\n$elidedFrames3326 = $l3321.elidedFrames;\nl3321 = $l3321.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1035],1,$t,false);\n}\nvar l3321 = $l3321;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3323 = R.mC();\n}\nwhile(!R.isContinuation($ans3323)) {\nswitch($step3319) {\ncase 0: $step3319 = 1;\n$al3324 = L[1042];\nR._cA(L[1042],List16,l3321);\nbreak;\ncase 1: var $temp_lam3329 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1036($l13330) {\nvar $step3328 = 0;\nvar $elidedFrames3334 = 0;\nvar $ans3331 = D;\nvar $al3332 = L[1036];\nif(R.isAR($l13330)) {\n$step3328 = $l13330.step;\n$al3332 = $l13330.from;\n$ans3331 = $l13330.ans;\n$elidedFrames3334 = $l13330.elidedFrames;\nl13330 = $l13330.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1036],1,$t,false);\n}\nvar l13330 = $l13330;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3331 = R.mC();\n}\nwhile(!R.isContinuation($ans3331)) {\nswitch($step3328) {\ncase 0: $step3328 = 1;\n$al3332 = L[1040];\nR._cA(L[1040],List16,l13330);\nbreak;\ncase 1: var $temp_lam3337 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1037($n3338) {\nvar $step3336 = 0;\nvar $elidedFrames3344 = 0;\nvar $ans3341 = D;\nvar $al3342 = L[1037];\nif(R.isAR($n3338)) {\n$step3336 = $n3338.step;\n$al3342 = $n3338.from;\n$ans3341 = $n3338.ans;\n$elidedFrames3344 = $n3338.elidedFrames;\nn3338 = $n3338.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1037],1,$t,false);\n}\nvar n3338 = $n3338;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3341 = R.mC();\n}\nwhile(!R.isContinuation($ans3341)) {\nswitch($step3336) {\ncase 0: $step3336 = 1;\n$al3342 = L[1038];\nR._cA(L[1038],$type$Number3,n3338);\nbreak;\ncase 1: $step3336 = 2;\n$ans3341 = (true);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans3341;\ndefault: R.ffi.throwSpinnakerError(L[1037],$step3336);\n}\n}\nif($step3336 !== 2) {\n$ans3341.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3342,$temp_lam3337,$step3336,[n3338],[],$elidedFrames3344);\n}\nreturn $ans3341;\n};\nvar anf_arg1546 = R.mF($temp_lam3337,\"\");\n$step3328 = 2;\n$al3332 = L[1039];\n// omitting isFunction check;\n$ans3331 = each25.app(anf_arg1546,l13330);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans3331;\ndefault: R.ffi.throwSpinnakerError(L[1036],$step3328);\n}\n}\nif($step3328 !== 2) {\n$ans3331.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3332,$temp_lam3329,$step3328,[l13330],[],$elidedFrames3334);\n}\nreturn $ans3331;\n};\nvar anf_arg1544 = R.mF($temp_lam3329,\"\");\n$step3319 = 2;\n$al3324 = L[1041];\n// omitting isFunction check;\n$ans3323 = each25.app(anf_arg1544,l3321);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans3323;\ndefault: R.ffi.throwSpinnakerError(L[1035],$step3319);\n}\n}\nif($step3319 !== 2) {\n$ans3323.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3324,$temp_lam3320,$step3319,[l3321],[],$elidedFrames3326);\n}\nreturn $ans3323;\n};\nvar anf_arg1547 = R.mF($temp_lam3320,\"\");\n$step3306 = 11;\n$al3311 = L[1090];\n// omitting isFunction check;\n$ans3310 = each25.app(anf_arg1547,errors3309);\nbreak;\ncase 11: var $temp_lam3349 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1043($expected3350,$given3351,$index3352) {\nvar $step3348 = 0;\nvar $elidedFrames3356 = 0;\nvar $ans3353 = D;\nvar $al3354 = L[1043];\nif(R.isAR($expected3350)) {\n$step3348 = $expected3350.step;\n$al3354 = $expected3350.from;\n$ans3353 = $expected3350.ans;\n$elidedFrames3356 = $expected3350.elidedFrames;\nexpected3350 = $expected3350.args[0];\ngiven3351 = $expected3350.args[1];\nindex3352 = $expected3350.args[2];\nanf_arg1592 = $expected3350.vars[0];\nexpected$length3358 = $expected3350.vars[1];\ngiven$length3357 = $expected3350.vars[2];\nrow$str3367 = $expected3350.vars[3];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1043],3,$t,false);\n}\nvar expected3350 = $expected3350;\nvar given3351 = $given3351;\nvar index3352 = $index3352;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3353 = R.mC();\n}\nwhile(!R.isContinuation($ans3353)) {\nswitch($step3348) {\ncase 0: // caller optimization;\n$ans3353 = raw$array$length7.app(expected3350);\nvar expected$length3358 = $ans3353;\n$step3348 = 1;\n$ans3353 = R.maybeMethodCall0(given3351,\"length\",L[1044]);\nbreak;\ncase 1: var given$length3357 = $ans3353;\n// caller optimization;\n$ans3353 = num$to$string7.app(index3352);\nvar row$str3367 = $ans3353;\n$step3348 = 2;\n$al3354 = L[1075];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3354,equal$always1);\n}\n$ans3353 = equal$always1.app(given$length3357,expected$length3358);\nbreak;\ncase 2: var anf_arg1548 = $ans3353;\n$ans3353 = R.not(anf_arg1548);\nvar anf_if3388 = $ans3353;\n$step3348 = R.checkPyretTrue(anf_if3388)?3:10;\nbreak;\ncase 3: $step3348 = 4;\n$al3354 = L[1074];\n// omitting isFunction check;\n$ans3353 = _plus5.app((\"error-bars: length mismatch on row \"),row$str3367);\nbreak;\ncase 4: var anf_arg3387 = $ans3353;\n$step3348 = 5;\n$al3354 = L[1073];\n// omitting isFunction check;\n$ans3353 = _plus5.app(anf_arg3387,(\". Expected \"));\nbreak;\ncase 5: var anf_arg1550 = $ans3353;\n// caller optimization;\n$ans3353 = num$to$string7.app(expected$length3358);\nvar anf_arg3510 = $ans3353;\n$step3348 = 6;\n$al3354 = L[1072];\n// omitting isFunction check;\n$ans3353 = _plus5.app(anf_arg1550,anf_arg3510);\nbreak;\ncase 6: var anf_arg1552 = $ans3353;\n$step3348 = 7;\n$al3354 = L[1071];\n// omitting isFunction check;\n$ans3353 = _plus5.app(anf_arg1552,(\", received \"));\nbreak;\ncase 7: var anf_arg1558 = $ans3353;\n// caller optimization;\n$ans3353 = num$to$string7.app(given$length3357);\nvar anf_arg1553 = $ans3353;\n$step3348 = 8;\n$al3354 = L[1070];\n// omitting isFunction check;\n$ans3353 = _plus5.app(anf_arg1558,anf_arg1553);\nbreak;\ncase 8: var anf_arg1559 = $ans3353;\n$step3348 = 9;\n$al3354 = L[1069];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3354,raise1);\n}\n$ans3353 = raise1.app(anf_arg1559);\nbreak;\ncase 9: $step3348 = 11;\n$ans3353 = nothing5;\nbreak;\ncase 10: $step3348 = 11;\n$ans3353 = nothing5;\nbreak;\ncase 11: var $temp_lam3360 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1045($pair3361,$column3362) {\nvar $step3359 = 0;\nvar $elidedFrames3366 = 0;\nvar $ans3363 = D;\nvar $al3364 = L[1045];\nif(R.isAR($pair3361)) {\n$step3359 = $pair3361.step;\n$al3364 = $pair3361.from;\n$ans3363 = $pair3361.ans;\n$elidedFrames3366 = $pair3361.elidedFrames;\npair3361 = $pair3361.args[0];\ncolumn3362 = $pair3361.args[1];\ncol$str3380 = $pair3361.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1045],2,$t,false);\n}\nvar pair3361 = $pair3361;\nvar column3362 = $column3362;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3363 = R.mC();\n}\nwhile(!R.isContinuation($ans3363)) {\nswitch($step3359) {\ncase 0: // caller optimization;\n$ans3363 = num$to$string7.app(column3362);\nvar col$str3380 = $ans3363;\n$step3359 = 1;\n$ans3363 = R.maybeMethodCall0(pair3361,\"length\",L[1046]);\nbreak;\ncase 1: var anf_arg3511 = $ans3363;\n$step3359 = 2;\n$al3364 = L[1066];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3364,equal$always1);\n}\n$ans3363 = equal$always1.app(anf_arg3511,(2));\nbreak;\ncase 2: var anf_arg1555 = $ans3363;\n$ans3363 = R.not(anf_arg1555);\nvar anf_if3385 = $ans3363;\n$step3359 = R.checkPyretTrue(anf_if3385)?3:9;\nbreak;\ncase 3: $step3359 = 4;\n$al3364 = L[1065];\n// omitting isFunction check;\n$ans3363 = _plus5.app((\"error-bars: on row \"),row$str3367);\nbreak;\ncase 4: var anf_arg1556 = $ans3363;\n$step3359 = 5;\n$al3364 = L[1064];\n// omitting isFunction check;\n$ans3363 = _plus5.app(anf_arg1556,(\" column \"));\nbreak;\ncase 5: var anf_arg1561 = $ans3363;\n$step3359 = 6;\n$al3364 = L[1063];\n// omitting isFunction check;\n$ans3363 = _plus5.app(anf_arg1561,col$str3380);\nbreak;\ncase 6: var anf_arg3555 = $ans3363;\n$step3359 = 7;\n$al3364 = L[1062];\n// omitting isFunction check;\n$ans3363 = _plus5.app(anf_arg3555,(\", 2 intervals must be given.\"));\nbreak;\ncase 7: var anf_arg3384 = $ans3363;\n$step3359 = 8;\n$al3364 = L[1061];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3364,raise1);\n}\n$ans3363 = raise1.app(anf_arg3384);\nbreak;\ncase 8: $step3359 = 10;\n$ans3363 = nothing5;\nbreak;\ncase 9: $step3359 = 10;\n$ans3363 = nothing5;\nbreak;\ncase 10: $step3359 = 11;\n$ans3363 = R.maybeMethodCall1(pair3361,\"get\",L[1047],(0));\nbreak;\ncase 11: var anf_arg1572 = $ans3363;\n$step3359 = 12;\n$al3364 = L[1060];\n// omitting isFunction check;\n$ans3363 = _greaterthan5.app(anf_arg1572,(0));\nbreak;\ncase 12: var anf_if3559 = $ans3363;\n$step3359 = R.checkPyretTrue(anf_if3559)?13:19;\nbreak;\ncase 13: $step3359 = 14;\n$al3364 = L[1059];\n// omitting isFunction check;\n$ans3363 = _plus5.app((\"error-bars: on row \"),row$str3367);\nbreak;\ncase 14: var anf_arg1573 = $ans3363;\n$step3359 = 15;\n$al3364 = L[1058];\n// omitting isFunction check;\n$ans3363 = _plus5.app(anf_arg1573,(\" column \"));\nbreak;\ncase 15: var anf_arg1574 = $ans3363;\n$step3359 = 16;\n$al3364 = L[1057];\n// omitting isFunction check;\n$ans3363 = _plus5.app(anf_arg1574,col$str3380);\nbreak;\ncase 16: var anf_arg1577 = $ans3363;\n$step3359 = 17;\n$al3364 = L[1056];\n// omitting isFunction check;\n$ans3363 = _plus5.app(anf_arg1577,(\", first pair must be non-positive.\"));\nbreak;\ncase 17: var anf_arg1575 = $ans3363;\n$step3359 = 18;\n$al3364 = L[1055];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3364,raise1);\n}\n$ans3363 = raise1.app(anf_arg1575);\nbreak;\ncase 18: $step3359 = 20;\n$ans3363 = nothing5;\nbreak;\ncase 19: $step3359 = 20;\n$ans3363 = nothing5;\nbreak;\ncase 20: $step3359 = 21;\n$ans3363 = R.maybeMethodCall1(pair3361,\"get\",L[1048],(1));\nbreak;\ncase 21: var anf_arg1578 = $ans3363;\n$step3359 = 22;\n$al3364 = L[1054];\n// omitting isFunction check;\n$ans3363 = _lessthan3.app(anf_arg1578,(0));\nbreak;\ncase 22: var anf_if3381 = $ans3363;\n$step3359 = R.checkPyretTrue(anf_if3381)?23:29;\nbreak;\ncase 23: $step3359 = 24;\n$al3364 = L[1053];\n// omitting isFunction check;\n$ans3363 = _plus5.app((\"error-bars: on row \"),row$str3367);\nbreak;\ncase 24: var anf_arg3379 = $ans3363;\n$step3359 = 25;\n$al3364 = L[1052];\n// omitting isFunction check;\n$ans3363 = _plus5.app(anf_arg3379,(\" column \"));\nbreak;\ncase 25: var anf_arg1590 = $ans3363;\n$step3359 = 26;\n$al3364 = L[1051];\n// omitting isFunction check;\n$ans3363 = _plus5.app(anf_arg1590,col$str3380);\nbreak;\ncase 26: var anf_arg1588 = $ans3363;\n$step3359 = 27;\n$al3364 = L[1050];\n// omitting isFunction check;\n$ans3363 = _plus5.app(anf_arg1588,(\", second pair must be non-negative.\"));\nbreak;\ncase 27: var anf_arg1591 = $ans3363;\n$step3359 = 28;\n$al3364 = L[1049];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3364,raise1);\n}\n$ans3363 = raise1.app(anf_arg1591);\nbreak;\ncase 28: $step3359 = 30;\n$ans3363 = nothing5;\nbreak;\ncase 29: $step3359 = 30;\n$ans3363 = nothing5;\nbreak;\ncase 30: ++R.GAS;\nreturn $ans3363;\ndefault: R.ffi.throwSpinnakerError(L[1045],$step3359);\n}\n}\nif($step3359 !== 30) {\n$ans3363.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3364,$temp_lam3360,$step3359,[pair3361,column3362],[col$str3380],$elidedFrames3366);\n}\nreturn $ans3363;\n};\nvar anf_arg1592 = R.mF($temp_lam3360,\"for-body<line 880, column 8>\");\n$step3348 = 12;\n$ans3353 = R.maybeMethodCall0(given3351,\"length\",L[1067]);\nbreak;\ncase 12: var anf_arg1595 = $ans3353;\n$step3348 = 13;\n$al3354 = L[1068];\n// omitting isFunction check;\n$ans3353 = range32.app((0),anf_arg1595);\nbreak;\ncase 13: var anf_arg1593 = $ans3353;\n$step3348 = 14;\n$al3354 = L[1045];\n// omitting isFunction check;\n$ans3353 = each238.app(anf_arg1592,given3351,anf_arg1593);\nbreak;\ncase 14: ++R.GAS;\nreturn $ans3353;\ndefault: R.ffi.throwSpinnakerError(L[1043],$step3348);\n}\n}\nif($step3348 !== 14) {\n$ans3353.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3354,$temp_lam3349,$step3348,[expected3350,given3351,index3352],[anf_arg1592,expected$length3358,given$length3357,row$str3367],$elidedFrames3356);\n}\nreturn $ans3353;\n};\nvar anf_arg1596 = R.mF($temp_lam3349,\"for-body<line 866, column 4>\");\n$al3311 = L[1076];\nvar anf_bracket3390 = G(self3308,\"obj\",L[1076]);\n$al3311 = L[1077];\nvar anf_arg3391 = G(anf_bracket3390,\"intervals\",L[1077]);\n// caller optimization;\n$ans3310 = raw$array$to$list4.app(anf_arg3391);\nvar anf_arg3585 = $ans3310;\n$step3306 = 12;\n$ans3310 = R.maybeMethodCall0(errors3309,\"length\",L[1078]);\nbreak;\ncase 12: var anf_arg3392 = $ans3310;\n$step3306 = 13;\n$al3311 = L[1089];\n// omitting isFunction check;\n$ans3310 = range32.app((0),anf_arg3392);\nbreak;\ncase 13: var anf_arg3583 = $ans3310;\n$step3306 = 14;\n$al3311 = L[1043];\n// omitting isFunction check;\n$ans3310 = each38.app(anf_arg1596,anf_arg3585,errors3309,anf_arg3583);\nbreak;\ncase 14: var $temp_lam3394 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1079($arg_3395) {\nvar $step3393 = 0;\nvar $elidedFrames3399 = 0;\nvar $ans3396 = D;\nvar $al3397 = L[1079];\nif(R.isAR($arg_3395)) {\n$step3393 = $arg_3395.step;\n$al3397 = $arg_3395.from;\n$ans3396 = $arg_3395.ans;\n$elidedFrames3399 = $arg_3395.elidedFrames;\narg_3395 = $arg_3395.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1079],1,$t,false);\n}\nvar arg_3395 = $arg_3395;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3396 = R.mC();\n}\nwhile(!R.isContinuation($ans3396)) {\nswitch($step3393) {\ncase 0: // caller optimization;\n$ans3396 = raw$array$get17.app(arg_3395,(1));\n$step3393 = 1;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans3396;\ndefault: R.ffi.throwSpinnakerError(L[1079],$step3393);\n}\n}\nif($step3393 !== 1) {\n$ans3396.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3397,$temp_lam3394,$step3393,[arg_3395],[],$elidedFrames3399);\n}\nreturn $ans3396;\n};\nvar anf_arg1610 = R.mF($temp_lam3394,\"\");\n$al3311 = L[1080];\nvar anf_bracket3402 = G(self3308,\"obj\",L[1080]);\n$al3311 = L[1081];\nvar anf_arg1611 = G(anf_bracket3402,\"tab\",L[1081]);\n$step3306 = 15;\n$al3311 = L[1088];\nif(typeof(raw$array$map1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3311,raw$array$map1);\n}\n$ans3310 = raw$array$map1.app(anf_arg1610,anf_arg1611);\nbreak;\ncase 15: var raw$table$data3403 = $ans3310;\n$step3306 = 16;\n$al3311 = L[1087];\n// omitting isFunction check;\n$ans3310 = table2$to$list1450.$var.app(raw$table$data3403);\nbreak;\ncase 16: var table$data3435 = $ans3310;\nvar $temp_lam3406 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1082($data$row3407,$error$row3408) {\nvar $step3405 = 0;\nvar $elidedFrames3413 = 0;\nvar $ans3410 = D;\nvar $al3411 = L[1082];\nif(R.isAR($data$row3407)) {\n$step3405 = $data$row3407.step;\n$al3411 = $data$row3407.from;\n$ans3410 = $data$row3407.ans;\n$elidedFrames3413 = $data$row3407.elidedFrames;\ndata$row3407 = $data$row3407.args[0];\nerror$row3408 = $data$row3407.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1082],2,$t,false);\n}\nvar data$row3407 = $data$row3407;\nvar error$row3408 = $error$row3408;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3410 = R.mC();\n}\nwhile(!R.isContinuation($ans3410)) {\nswitch($step3405) {\ncase 0: var $temp_lam3415 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1083($data$col3416,$error$bounds3417) {\nvar $step3414 = 0;\nvar $elidedFrames3422 = 0;\nvar $ans3419 = D;\nvar $al3420 = L[1083];\nif(R.isAR($data$col3416)) {\n$step3414 = $data$col3416.step;\n$al3420 = $data$col3416.from;\n$ans3419 = $data$col3416.ans;\n$elidedFrames3422 = $data$col3416.elidedFrames;\ndata$col3416 = $data$col3416.args[0];\nerror$bounds3417 = $data$col3416.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1083],2,$t,false);\n}\nvar data$col3416 = $data$col3416;\nvar error$bounds3417 = $error$bounds3417;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3419 = R.mC();\n}\nwhile(!R.isContinuation($ans3419)) {\nswitch($step3414) {\ncase 0: var $temp_lam3424 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1084($arg_3425) {\nvar $step3423 = 0;\nvar $elidedFrames3431 = 0;\nvar $ans3428 = D;\nvar $al3429 = L[1084];\nif(R.isAR($arg_3425)) {\n$step3423 = $arg_3425.step;\n$al3429 = $arg_3425.from;\n$ans3428 = $arg_3425.ans;\n$elidedFrames3431 = $arg_3425.elidedFrames;\narg_3425 = $arg_3425.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1084],1,$t,false);\n}\nvar arg_3425 = $arg_3425;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3428 = R.mC();\n}\nwhile(!R.isContinuation($ans3428)) {\nswitch($step3423) {\ncase 0: $step3423 = 1;\n$al3429 = L[1084];\n// omitting isFunction check;\n$ans3428 = _plus5.app(arg_3425,data$col3416);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans3428;\ndefault: R.ffi.throwSpinnakerError(L[1084],$step3423);\n}\n}\nif($step3423 !== 1) {\n$ans3428.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3429,$temp_lam3424,$step3423,[arg_3425],[],$elidedFrames3431);\n}\nreturn $ans3428;\n};\nvar anf_arg1612 = R.mF($temp_lam3424,\"\");\n$step3414 = 1;\n$ans3419 = R.maybeMethodCall1(error$bounds3417,\"map\",L[1085],anf_arg1612);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans3419;\ndefault: R.ffi.throwSpinnakerError(L[1083],$step3414);\n}\n}\nif($step3414 !== 1) {\n$ans3419.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3420,$temp_lam3415,$step3414,[data$col3416,error$bounds3417],[],$elidedFrames3422);\n}\nreturn $ans3419;\n};\nvar anf_arg1615 = R.mF($temp_lam3415,\"for-body<line 905, column 4>\");\n$step3405 = 1;\n$al3411 = L[1083];\n// omitting isFunction check;\n$ans3410 = map226.app(anf_arg1615,data$row3407,error$row3408);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans3410;\ndefault: R.ffi.throwSpinnakerError(L[1082],$step3405);\n}\n}\nif($step3405 !== 1) {\n$ans3410.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3411,$temp_lam3406,$step3405,[data$row3407,error$row3408],[],$elidedFrames3413);\n}\nreturn $ans3410;\n};\nvar anf_arg1613 = R.mF($temp_lam3406,\"for-body<line 903, column 21>\");\n$step3306 = 17;\n$al3311 = L[1082];\n// omitting isFunction check;\n$ans3310 = map226.app(anf_arg1613,table$data3435,errors3309);\nbreak;\ncase 17: var intervals$at$end3436 = $ans3310;\n$step3306 = 18;\n$ans3310 = R.maybeMethodCall1(self3308,\"intervals\",L[1086],intervals$at$end3436);\nbreak;\ncase 18: ++R.GAS;\nreturn $ans3310;\ndefault: R.ffi.throwSpinnakerError(L[1031],$step3306);\n}\n}\nif($step3306 !== 18) {\n$ans3310.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3311,$temp_full3307,$step3306,[self3308,errors3309],[anf_arg3585,anf_arg1596,expected$length3316,given$length3315],$elidedFrames3313);\n}\nreturn $ans3310;\n};\nvar error$bars$method4145 = R.makeMethod1($temp_full3307,\"\");\nvar $temp_full3443 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1097($self3444,$errors3445) {\nvar $step3442 = 0;\nvar $elidedFrames3449 = 0;\nvar $ans3446 = D;\nvar $al3447 = L[1097];\nif(R.isAR($self3444)) {\n$step3442 = $self3444.step;\n$al3447 = $self3444.from;\n$ans3446 = $self3444.ans;\n$elidedFrames3449 = $self3444.elidedFrames;\nself3444 = $self3444.args[0];\nerrors3445 = $self3444.args[1];\nexpected$length3452 = $self3444.vars[0];\ngiven$length3451 = $self3444.vars[1];\nanf_arg1653 = $self3444.vars[2];\nanf_arg1675 = $self3444.vars[3];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1097],2,$t,true);\n}\nvar self3444 = $self3444;\nvar errors3445 = $errors3445;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3446 = R.mC();\n}\nwhile(!R.isContinuation($ans3446)) {\nswitch($step3442) {\ncase 0: $step3442 = 1;\n$al3447 = L[1143];\nvar $ann$check3533 = R._cA(L[1143],R.gDA(L[1143],\"CL\",CL40.dict.types,\"LoLoN\"),errors3445);\nif(R.isContinuation($ann$check3533)) {\n$ans3446 = $ann$check3533;\n}\nbreak;\ncase 1: $al3447 = L[1098];\nvar anf_bracket3450 = G(self3444,\"obj\",L[1098]);\n$al3447 = L[1099];\nvar anf_arg1617 = G(anf_bracket3450,\"intervals\",L[1099]);\n// caller optimization;\n$ans3446 = raw$array$length7.app(anf_arg1617);\nvar expected$length3452 = $ans3446;\n$step3442 = 2;\n$ans3446 = R.maybeMethodCall0(errors3445,\"length\",L[1100]);\nbreak;\ncase 2: var given$length3451 = $ans3446;\n$step3442 = 3;\n$al3447 = L[1142];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3447,equal$always1);\n}\n$ans3446 = equal$always1.app(given$length3451,expected$length3452);\nbreak;\ncase 3: var anf_arg3453 = $ans3446;\n$ans3446 = R.not(anf_arg3453);\nvar anf_if3532 = $ans3446;\n$step3442 = R.checkPyretTrue(anf_if3532)?4:9;\nbreak;\ncase 4: // caller optimization;\n$ans3446 = num$to$string7.app(expected$length3452);\nvar anf_arg1620 = $ans3446;\n$step3442 = 5;\n$al3447 = L[1141];\n// omitting isFunction check;\n$ans3446 = _plus5.app((\"error-bars: input dimensions mismatch. Expected length \"),anf_arg1620);\nbreak;\ncase 5: var anf_arg1618 = $ans3446;\n$step3442 = 6;\n$al3447 = L[1140];\n// omitting isFunction check;\n$ans3446 = _plus5.app(anf_arg1618,(\", received \"));\nbreak;\ncase 6: var anf_arg1621 = $ans3446;\n// caller optimization;\n$ans3446 = num$to$string7.app(given$length3451);\nvar anf_arg1622 = $ans3446;\n$step3442 = 7;\n$al3447 = L[1139];\n// omitting isFunction check;\n$ans3446 = _plus5.app(anf_arg1621,anf_arg1622);\nbreak;\ncase 7: var anf_arg1625 = $ans3446;\n$step3442 = 8;\n$al3447 = L[1138];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3447,raise1);\n}\n$ans3446 = raise1.app(anf_arg1625);\nbreak;\ncase 8: $step3442 = 10;\n$ans3446 = nothing5;\nbreak;\ncase 9: $step3442 = 10;\n$ans3446 = nothing5;\nbreak;\ncase 10: var $temp_lam3455 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1101($l3456) {\nvar $step3454 = 0;\nvar $elidedFrames3460 = 0;\nvar $ans3457 = D;\nvar $al3458 = L[1101];\nif(R.isAR($l3456)) {\n$step3454 = $l3456.step;\n$al3458 = $l3456.from;\n$ans3457 = $l3456.ans;\n$elidedFrames3460 = $l3456.elidedFrames;\nl3456 = $l3456.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1101],1,$t,false);\n}\nvar l3456 = $l3456;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3457 = R.mC();\n}\nwhile(!R.isContinuation($ans3457)) {\nswitch($step3454) {\ncase 0: $step3454 = 1;\n$al3458 = L[1105];\nR._cA(L[1105],List16,l3456);\nbreak;\ncase 1: var $temp_lam3463 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1102($n3464) {\nvar $step3462 = 0;\nvar $elidedFrames3468 = 0;\nvar $ans3465 = D;\nvar $al3466 = L[1102];\nif(R.isAR($n3464)) {\n$step3462 = $n3464.step;\n$al3466 = $n3464.from;\n$ans3465 = $n3464.ans;\n$elidedFrames3468 = $n3464.elidedFrames;\nn3464 = $n3464.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1102],1,$t,false);\n}\nvar n3464 = $n3464;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3465 = R.mC();\n}\nwhile(!R.isContinuation($ans3465)) {\nswitch($step3462) {\ncase 0: $step3462 = 1;\n$al3466 = L[1103];\nR._cA(L[1103],$type$Number3,n3464);\nbreak;\ncase 1: $step3462 = 2;\n$ans3465 = (true);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans3465;\ndefault: R.ffi.throwSpinnakerError(L[1102],$step3462);\n}\n}\nif($step3462 !== 2) {\n$ans3465.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3466,$temp_lam3463,$step3462,[n3464],[],$elidedFrames3468);\n}\nreturn $ans3465;\n};\nvar anf_arg1623 = R.mF($temp_lam3463,\"\");\n$step3454 = 2;\n$al3458 = L[1104];\n// omitting isFunction check;\n$ans3457 = each25.app(anf_arg1623,l3456);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans3457;\ndefault: R.ffi.throwSpinnakerError(L[1101],$step3454);\n}\n}\nif($step3454 !== 2) {\n$ans3457.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3458,$temp_lam3455,$step3454,[l3456],[],$elidedFrames3460);\n}\nreturn $ans3457;\n};\nvar anf_arg1626 = R.mF($temp_lam3455,\"\");\n$step3442 = 11;\n$al3447 = L[1137];\n// omitting isFunction check;\n$ans3446 = each25.app(anf_arg1626,errors3445);\nbreak;\ncase 11: var $temp_lam3473 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1106($expected3474,$given3475,$index3476) {\nvar $step3472 = 0;\nvar $elidedFrames3481 = 0;\nvar $ans3478 = D;\nvar $al3479 = L[1106];\nif(R.isAR($expected3474)) {\n$step3472 = $expected3474.step;\n$al3479 = $expected3474.from;\n$ans3478 = $expected3474.ans;\n$elidedFrames3481 = $expected3474.elidedFrames;\nexpected3474 = $expected3474.args[0];\ngiven3475 = $expected3474.args[1];\nindex3476 = $expected3474.args[2];\nanf_arg3685 = $expected3474.vars[0];\nrow$str3483 = $expected3474.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1106],3,$t,false);\n}\nvar expected3474 = $expected3474;\nvar given3475 = $given3475;\nvar index3476 = $index3476;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3478 = R.mC();\n}\nwhile(!R.isContinuation($ans3478)) {\nswitch($step3472) {\ncase 0: // caller optimization;\n$ans3478 = num$to$string7.app(index3476);\nvar row$str3483 = $ans3478;\n$step3472 = 1;\n$ans3478 = R.maybeMethodCall0(given3475,\"length\",L[1107]);\nbreak;\ncase 1: var anf_arg3681 = $ans3478;\n$step3472 = 2;\n$al3479 = L[1124];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3479,equal$always1);\n}\n$ans3478 = equal$always1.app(anf_arg3681,(2));\nbreak;\ncase 2: var anf_arg3482 = $ans3478;\n$ans3478 = R.not(anf_arg3482);\nvar anf_if1727 = $ans3478;\n$step3472 = R.checkPyretTrue(anf_if1727)?3:10;\nbreak;\ncase 3: $step3472 = 4;\n$al3479 = L[1123];\n// omitting isFunction check;\n$ans3478 = _plus5.app((\"error-bars: on row \"),row$str3483);\nbreak;\ncase 4: var anf_arg3490 = $ans3478;\n$step3472 = 5;\n$al3479 = L[1122];\n// omitting isFunction check;\n$ans3478 = _plus5.app(anf_arg3490,(\", 2 intervals must be given (received \"));\nbreak;\ncase 5: var anf_arg3685 = $ans3478;\n$step3472 = 6;\n$ans3478 = R.maybeMethodCall0(given3475,\"length\",L[1118]);\nbreak;\ncase 6: var anf_arg3686 = $ans3478;\n// caller optimization;\n$ans3478 = num$to$string7.app(anf_arg3686);\nvar anf_arg1640 = $ans3478;\n$step3472 = 7;\n$al3479 = L[1121];\n// omitting isFunction check;\n$ans3478 = _plus5.app(anf_arg3685,anf_arg1640);\nbreak;\ncase 7: var anf_arg1641 = $ans3478;\n$step3472 = 8;\n$al3479 = L[1120];\n// omitting isFunction check;\n$ans3478 = _plus5.app(anf_arg1641,(\").\"));\nbreak;\ncase 8: var anf_arg1642 = $ans3478;\n$step3472 = 9;\n$al3479 = L[1119];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3479,raise1);\n}\n$ans3478 = raise1.app(anf_arg1642);\nbreak;\ncase 9: $step3472 = 11;\n$ans3478 = nothing5;\nbreak;\ncase 10: $step3472 = 11;\n$ans3478 = nothing5;\nbreak;\ncase 11: $step3472 = 12;\n$ans3478 = R.maybeMethodCall1(given3475,\"get\",L[1108],(0));\nbreak;\ncase 12: var anf_arg1647 = $ans3478;\n$step3472 = 13;\n$al3479 = L[1117];\n// omitting isFunction check;\n$ans3478 = _greaterthan5.app(anf_arg1647,(0));\nbreak;\ncase 13: var anf_if3701 = $ans3478;\n$step3472 = R.checkPyretTrue(anf_if3701)?14:18;\nbreak;\ncase 14: $step3472 = 15;\n$al3479 = L[1116];\n// omitting isFunction check;\n$ans3478 = _plus5.app((\"error-bars: on row \"),row$str3483);\nbreak;\ncase 15: var anf_arg1648 = $ans3478;\n$step3472 = 16;\n$al3479 = L[1115];\n// omitting isFunction check;\n$ans3478 = _plus5.app(anf_arg1648,(\", first pair must be non-positive.\"));\nbreak;\ncase 16: var anf_arg1649 = $ans3478;\n$step3472 = 17;\n$al3479 = L[1114];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3479,raise1);\n}\n$ans3478 = raise1.app(anf_arg1649);\nbreak;\ncase 17: $step3472 = 19;\n$ans3478 = nothing5;\nbreak;\ncase 18: $step3472 = 19;\n$ans3478 = nothing5;\nbreak;\ncase 19: $step3472 = 20;\n$ans3478 = R.maybeMethodCall1(given3475,\"get\",L[1109],(1));\nbreak;\ncase 20: var anf_arg1650 = $ans3478;\n$step3472 = 21;\n$al3479 = L[1113];\n// omitting isFunction check;\n$ans3478 = _lessthan3.app(anf_arg1650,(0));\nbreak;\ncase 21: var anf_if1726 = $ans3478;\n$step3472 = R.checkPyretTrue(anf_if1726)?22:26;\nbreak;\ncase 22: $step3472 = 23;\n$al3479 = L[1112];\n// omitting isFunction check;\n$ans3478 = _plus5.app((\"error-bars: on row \"),row$str3483);\nbreak;\ncase 23: var anf_arg1651 = $ans3478;\n$step3472 = 24;\n$al3479 = L[1111];\n// omitting isFunction check;\n$ans3478 = _plus5.app(anf_arg1651,(\", second pair must be non-negative.\"));\nbreak;\ncase 24: var anf_arg3484 = $ans3478;\n$step3472 = 25;\n$al3479 = L[1110];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3479,raise1);\n}\n$ans3478 = raise1.app(anf_arg3484);\nbreak;\ncase 25: $step3472 = 27;\n$ans3478 = nothing5;\nbreak;\ncase 26: $step3472 = 27;\n$ans3478 = nothing5;\nbreak;\ncase 27: ++R.GAS;\nreturn $ans3478;\ndefault: R.ffi.throwSpinnakerError(L[1106],$step3472);\n}\n}\nif($step3472 !== 27) {\n$ans3478.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3479,$temp_lam3473,$step3472,[expected3474,given3475,index3476],[anf_arg3685,row$str3483],$elidedFrames3481);\n}\nreturn $ans3478;\n};\nvar anf_arg1653 = R.mF($temp_lam3473,\"for-body<line 928, column 4>\");\n$al3447 = L[1125];\nvar anf_bracket3493 = G(self3444,\"obj\",L[1125]);\n$al3447 = L[1126];\nvar anf_arg1654 = G(anf_bracket3493,\"intervals\",L[1126]);\n// caller optimization;\n$ans3446 = raw$array$to$list4.app(anf_arg1654);\nvar anf_arg1675 = $ans3446;\n$step3442 = 12;\n$ans3446 = R.maybeMethodCall0(errors3445,\"length\",L[1127]);\nbreak;\ncase 12: var anf_arg3495 = $ans3446;\n$step3442 = 13;\n$al3447 = L[1136];\n// omitting isFunction check;\n$ans3446 = range32.app((0),anf_arg3495);\nbreak;\ncase 13: var anf_arg3745 = $ans3446;\n$step3442 = 14;\n$al3447 = L[1106];\n// omitting isFunction check;\n$ans3446 = each38.app(anf_arg1653,anf_arg1675,errors3445,anf_arg3745);\nbreak;\ncase 14: var $temp_lam3497 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1128($arg_3498) {\nvar $step3496 = 0;\nvar $elidedFrames3502 = 0;\nvar $ans3499 = D;\nvar $al3500 = L[1128];\nif(R.isAR($arg_3498)) {\n$step3496 = $arg_3498.step;\n$al3500 = $arg_3498.from;\n$ans3499 = $arg_3498.ans;\n$elidedFrames3502 = $arg_3498.elidedFrames;\narg_3498 = $arg_3498.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1128],1,$t,false);\n}\nvar arg_3498 = $arg_3498;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3499 = R.mC();\n}\nwhile(!R.isContinuation($ans3499)) {\nswitch($step3496) {\ncase 0: // caller optimization;\n$ans3499 = raw$array$get17.app(arg_3498,(1));\n$step3496 = 1;\nbreak;\ncase 1: ++R.GAS;\nreturn $ans3499;\ndefault: R.ffi.throwSpinnakerError(L[1128],$step3496);\n}\n}\nif($step3496 !== 1) {\n$ans3499.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3500,$temp_lam3497,$step3496,[arg_3498],[],$elidedFrames3502);\n}\nreturn $ans3499;\n};\nvar anf_arg1655 = R.mF($temp_lam3497,\"\");\n$al3447 = L[1129];\nvar anf_bracket3504 = G(self3444,\"obj\",L[1129]);\n$al3447 = L[1130];\nvar anf_arg3505 = G(anf_bracket3504,\"tab\",L[1130]);\n$step3442 = 15;\n$al3447 = L[1135];\nif(typeof(raw$array$map1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3447,raw$array$map1);\n}\n$ans3446 = raw$array$map1.app(anf_arg1655,anf_arg3505);\nbreak;\ncase 15: var raw$table$data3506 = $ans3446;\n// caller optimization;\n$ans3446 = raw$array$to$list4.app(raw$table$data3506);\nvar table$data3530 = $ans3446;\nvar $temp_lam3508 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1131($data$val3509,$error3510) {\nvar $step3507 = 0;\nvar $elidedFrames3514 = 0;\nvar $ans3511 = D;\nvar $al3512 = L[1131];\nif(R.isAR($data$val3509)) {\n$step3507 = $data$val3509.step;\n$al3512 = $data$val3509.from;\n$ans3511 = $data$val3509.ans;\n$elidedFrames3514 = $data$val3509.elidedFrames;\ndata$val3509 = $data$val3509.args[0];\nerror3510 = $data$val3509.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1131],2,$t,false);\n}\nvar data$val3509 = $data$val3509;\nvar error3510 = $error3510;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3511 = R.mC();\n}\nwhile(!R.isContinuation($ans3511)) {\nswitch($step3507) {\ncase 0: var $temp_lam3516 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1132($arg_3517) {\nvar $step3515 = 0;\nvar $elidedFrames3522 = 0;\nvar $ans3519 = D;\nvar $al3520 = L[1132];\nif(R.isAR($arg_3517)) {\n$step3515 = $arg_3517.step;\n$al3520 = $arg_3517.from;\n$ans3519 = $arg_3517.ans;\n$elidedFrames3522 = $arg_3517.elidedFrames;\narg_3517 = $arg_3517.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1132],1,$t,false);\n}\nvar arg_3517 = $arg_3517;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3519 = R.mC();\n}\nwhile(!R.isContinuation($ans3519)) {\nswitch($step3515) {\ncase 0: $step3515 = 1;\n$al3520 = L[1132];\n// omitting isFunction check;\n$ans3519 = _plus5.app(arg_3517,data$val3509);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans3519;\ndefault: R.ffi.throwSpinnakerError(L[1132],$step3515);\n}\n}\nif($step3515 !== 1) {\n$ans3519.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3520,$temp_lam3516,$step3515,[arg_3517],[],$elidedFrames3522);\n}\nreturn $ans3519;\n};\nvar anf_arg1666 = R.mF($temp_lam3516,\"\");\n$step3507 = 1;\n$ans3511 = R.maybeMethodCall1(error3510,\"map\",L[1133],anf_arg1666);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans3511;\ndefault: R.ffi.throwSpinnakerError(L[1131],$step3507);\n}\n}\nif($step3507 !== 1) {\n$ans3511.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3512,$temp_lam3508,$step3507,[data$val3509,error3510],[],$elidedFrames3514);\n}\nreturn $ans3511;\n};\nvar anf_arg1668 = R.mF($temp_lam3508,\"for-body<line 952, column 21>\");\n$step3442 = 16;\n$al3447 = L[1131];\n// omitting isFunction check;\n$ans3446 = map226.app(anf_arg1668,table$data3530,errors3445);\nbreak;\ncase 16: var intervals$at$end3531 = $ans3446;\n$step3442 = 17;\n$ans3446 = R.maybeMethodCall1(self3444,\"intervals\",L[1134],intervals$at$end3531);\nbreak;\ncase 17: ++R.GAS;\nreturn $ans3446;\ndefault: R.ffi.throwSpinnakerError(L[1097],$step3442);\n}\n}\nif($step3442 !== 17) {\n$ans3446.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3447,$temp_full3443,$step3442,[self3444,errors3445],[expected$length3452,given$length3451,anf_arg1653,anf_arg1675],$elidedFrames3449);\n}\nreturn $ans3446;\n};\nvar single$error$bars$method4119 = R.makeMethod1($temp_full3443,\"\");\nvar $temp_full3536 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1144($self3537,$min3538) {\nvar $step3535 = 0;\nvar $elidedFrames3542 = 0;\nvar $ans3539 = D;\nvar $al3540 = L[1144];\nif(R.isAR($self3537)) {\n$step3535 = $self3537.step;\n$al3540 = $self3537.from;\n$ans3539 = $self3537.ans;\n$elidedFrames3542 = $self3537.elidedFrames;\nself3537 = $self3537.args[0];\nmin3538 = $self3537.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1144],2,$t,true);\n}\nvar self3537 = $self3537;\nvar min3538 = $min3538;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3539 = R.mC();\n}\nwhile(!R.isContinuation($ans3539)) {\nswitch($step3535) {\ncase 0: $step3535 = 1;\n$al3540 = L[1149];\nR._cA(L[1149],$type$Number3,min3538);\nbreak;\ncase 1: $step3535 = 2;\n$ans3539 = R.maybeMethodCall0(self3537,\"constr\",L[1145]);\nbreak;\ncase 2: var anf_fun3545 = $ans3539;\n$al3540 = L[1146];\nvar anf_extend3543 = G(self3537,\"obj\",L[1146]);\n// caller optimization;\n$ans3539 = some33.app(min3538);\nvar anf_extend3544 = $ans3539;\nvar anf_arg1677 = R.extendObj(L[1147],anf_extend3543,{\"min\":anf_extend3544});\n$step3535 = 3;\n$al3540 = L[1148];\nif(typeof(anf_fun3545.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3540,anf_fun3545);\n}\n$ans3539 = anf_fun3545.app(anf_arg1677);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans3539;\ndefault: R.ffi.throwSpinnakerError(L[1144],$step3535);\n}\n}\nif($step3535 !== 3) {\n$ans3539.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3540,$temp_full3536,$step3535,[self3537,min3538],[],$elidedFrames3542);\n}\nreturn $ans3539;\n};\nvar min$method4421 = R.makeMethod1($temp_full3536,\"\");\nvar $temp_full3550 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1150($self3551,$max3552) {\nvar $step3549 = 0;\nvar $elidedFrames3556 = 0;\nvar $ans3553 = D;\nvar $al3554 = L[1150];\nif(R.isAR($self3551)) {\n$step3549 = $self3551.step;\n$al3554 = $self3551.from;\n$ans3553 = $self3551.ans;\n$elidedFrames3556 = $self3551.elidedFrames;\nself3551 = $self3551.args[0];\nmax3552 = $self3551.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1150],2,$t,true);\n}\nvar self3551 = $self3551;\nvar max3552 = $max3552;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3553 = R.mC();\n}\nwhile(!R.isContinuation($ans3553)) {\nswitch($step3549) {\ncase 0: $step3549 = 1;\n$al3554 = L[1155];\nR._cA(L[1155],$type$Number3,max3552);\nbreak;\ncase 1: $step3549 = 2;\n$ans3553 = R.maybeMethodCall0(self3551,\"constr\",L[1151]);\nbreak;\ncase 2: var anf_fun1703 = $ans3553;\n$al3554 = L[1152];\nvar anf_extend3557 = G(self3551,\"obj\",L[1152]);\n// caller optimization;\n$ans3553 = some33.app(max3552);\nvar anf_extend3558 = $ans3553;\nvar anf_arg1693 = R.extendObj(L[1153],anf_extend3557,{\"max\":anf_extend3558});\n$step3549 = 3;\n$al3554 = L[1154];\nif(typeof(anf_fun1703.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3554,anf_fun1703);\n}\n$ans3553 = anf_fun1703.app(anf_arg1693);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans3553;\ndefault: R.ffi.throwSpinnakerError(L[1150],$step3549);\n}\n}\nif($step3549 !== 3) {\n$ans3553.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3554,$temp_full3550,$step3549,[self3551,max3552],[],$elidedFrames3556);\n}\nreturn $ans3553;\n};\nvar max$method4422 = R.makeMethod1($temp_full3550,\"\");\nvar $temp_full3561 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1156($self3562,$b3563) {\nvar $step3560 = 0;\nvar $elidedFrames3567 = 0;\nvar $ans3564 = D;\nvar $al3565 = L[1156];\nif(R.isAR($self3562)) {\n$step3560 = $self3562.step;\n$al3565 = $self3562.from;\n$ans3564 = $self3562.ans;\n$elidedFrames3567 = $self3562.elidedFrames;\nself3562 = $self3562.args[0];\nb3563 = $self3562.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1156],2,$t,true);\n}\nvar self3562 = $self3562;\nvar b3563 = $b3563;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3564 = R.mC();\n}\nwhile(!R.isContinuation($ans3564)) {\nswitch($step3560) {\ncase 0: $step3560 = 1;\n$al3565 = L[1161];\nR._cA(L[1161],$type$Boolean6,b3563);\nbreak;\ncase 1: $step3560 = 2;\n$ans3564 = R.maybeMethodCall0(self3562,\"constr\",L[1157]);\nbreak;\ncase 2: var anf_fun3569 = $ans3564;\n$al3565 = L[1158];\nvar anf_extend3568 = G(self3562,\"obj\",L[1158]);\nvar anf_arg1697 = R.extendObj(L[1159],anf_extend3568,{\"horizontal\":b3563});\n$step3560 = 3;\n$al3565 = L[1160];\nif(typeof(anf_fun3569.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3565,anf_fun3569);\n}\n$ans3564 = anf_fun3569.app(anf_arg1697);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans3564;\ndefault: R.ffi.throwSpinnakerError(L[1156],$step3560);\n}\n}\nif($step3560 !== 3) {\n$ans3564.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3565,$temp_full3561,$step3560,[self3562,b3563],[],$elidedFrames3567);\n}\nreturn $ans3564;\n};\nvar horizontal$method4045 = R.makeMethod1($temp_full3561,\"\");\nvar BoundingBox3580 = R.mRA([\"x-min\",\"x-max\",\"y-min\",\"y-max\",\"is-valid\"],[L[2703],L[2704],L[2705],L[2706],L[2707]],{\"x-min\":$type$Number3,\n\"x-max\":$type$Number3,\n\"y-min\":$type$Number3,\n\"y-max\":$type$Number3,\n\"is-valid\":$type$Boolean6},\"BoundingBox\");\nvar default$bounding$box3582 = R.mO({\"x-min\":(0),\n\"x-max\":(0),\n\"y-min\":(0),\n\"y-max\":(0),\n\"is-valid\":(false)});\n$step95 = 1;\n$al331 = L[2702];\nvar $ann$check6855 = R._cA(L[2702],BoundingBox3580,default$bounding$box3582);\nif(R.isContinuation($ann$check6855)) {\n$ans330 = $ann$check6855;\n}\nbreak;\ncase 1: var get$bounding$box3618 = {\"$var\":D};\nvar get$list$of$bounding$boxes3677 = {\"$var\":D};\nvar merge$bounding$box3708 = {\"$var\":D};\nvar $temp_lam3572 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1162($ps3573) {\nvar $step3571 = 0;\nvar $elidedFrames3577 = 0;\nvar $ans3574 = D;\nvar $al3575 = L[1162];\nif(R.isAR($ps3573)) {\n$step3571 = $ps3573.step;\n$al3575 = $ps3573.from;\n$ans3574 = $ps3573.ans;\n$elidedFrames3577 = $ps3573.elidedFrames;\nps3573 = $ps3573.args[0];\ncompute3605 = $ps3573.vars[0];\nann_check_temp3579 = $ps3573.vars[1];\nanf_extend3610 = $ps3573.vars[2];\ncases3578 = $ps3573.vars[3];\nanf_extend3608 = $ps3573.vars[4];\nanf_extend3609 = $ps3573.vars[5];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1162],1,$t,false);\n}\nvar ps3573 = $ps3573;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3574 = R.mC();\n}\nwhile(!R.isContinuation($ans3574)) {\nswitch($step3571) {\ncase 0: $step3571 = 1;\n$al3575 = L[1181];\nR._cA(L[1181],List16,ps3573);\nbreak;\ncase 1: var cases3578 = ps3573;\n$step3571 = 2;\n$al3575 = L[1180];\nvar $ann$check3615 = R._cA(L[1180],List16,cases3578);\nif(R.isContinuation($ann$check3615)) {\n$ans3574 = $ann$check3615;\n}\nbreak;\ncase 2: $al3575 = L[1166];\n$step3571 = $cases_dispatch3614[cases3578.$name] || 9;\nbreak;\ncase 3: if(cases3578.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[1165],false,L[1166],cases3578.$loc);\n}\n$step3571 = 10;\n$ans3574 = R.extendObj(L[1164],default$bounding$box3582,{\"is-valid\":(false)});\nbreak;\ncase 4: if(cases3578.$arity !== 2) {\nif(cases3578.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[1179],2,cases3578.$arity,L[1166],cases3578.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[1179],true,L[1166],cases3578.$loc);\n}\n}\nvar $fn3613 = cases3578.$constructor.$fieldNames;\nvar f3601 = R.dF(cases3578.dict[$fn3613[0]],cases3578.$mut_fields_mask[0],false);\nvar r3602 = R.dF(cases3578.dict[$fn3613[1]],cases3578.$mut_fields_mask[1],false);\nvar compute3605 = {\"$var\":D};\nvar $temp_lam3584 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1167($p3585,$accessor3586) {\nvar $step3583 = 0;\nvar $elidedFrames3590 = 0;\nvar $ans3587 = D;\nvar $al3588 = L[1167];\nif(R.isAR($p3585)) {\n$step3583 = $p3585.step;\n$al3588 = $p3585.from;\n$ans3587 = $p3585.ans;\n$elidedFrames3590 = $p3585.elidedFrames;\np3585 = $p3585.args[0];\naccessor3586 = $p3585.args[1];\nanf_arg1699 = $p3585.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1167],2,$t,false);\n}\nvar p3585 = $p3585;\nvar accessor3586 = $accessor3586;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3587 = R.mC();\n}\nwhile(!R.isContinuation($ans3587)) {\nswitch($step3583) {\ncase 0: $step3583 = 1;\n$al3588 = L[1172];\nR._cA(L[1172],R.Function,p3585);\nbreak;\ncase 1: $step3583 = 2;\n$al3588 = L[1173];\nR._cA(L[1173],R.Function,accessor3586);\nbreak;\ncase 2: var $temp_lam3593 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1168($prev3594,$e3595) {\nvar $step3592 = 0;\nvar $elidedFrames3599 = 0;\nvar $ans3596 = D;\nvar $al3597 = L[1168];\nif(R.isAR($prev3594)) {\n$step3592 = $prev3594.step;\n$al3597 = $prev3594.from;\n$ans3596 = $prev3594.ans;\n$elidedFrames3599 = $prev3594.elidedFrames;\nprev3594 = $prev3594.args[0];\ne3595 = $prev3594.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1168],2,$t,false);\n}\nvar prev3594 = $prev3594;\nvar e3595 = $e3595;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3596 = R.mC();\n}\nwhile(!R.isContinuation($ans3596)) {\nswitch($step3592) {\ncase 0: $step3592 = 1;\n$al3597 = L[1170];\nif(typeof(accessor3586.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3597,accessor3586);\n}\n$ans3596 = accessor3586.app(e3595);\nbreak;\ncase 1: var anf_arg1698 = $ans3596;\n$step3592 = 2;\n$al3597 = L[1169];\nif(typeof(p3585.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3597,p3585);\n}\n$ans3596 = p3585.app(prev3594,anf_arg1698);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans3596;\ndefault: R.ffi.throwSpinnakerError(L[1168],$step3592);\n}\n}\nif($step3592 !== 2) {\n$ans3596.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3597,$temp_lam3593,$step3592,[prev3594,e3595],[],$elidedFrames3599);\n}\nreturn $ans3596;\n};\nvar anf_arg1699 = R.mF($temp_lam3593,\"for-body<line 995, column 8>\");\n$step3583 = 3;\n$al3588 = L[1171];\nif(typeof(accessor3586.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3588,accessor3586);\n}\n$ans3587 = accessor3586.app(f3601);\nbreak;\ncase 3: var anf_arg1695 = $ans3587;\n$step3583 = 4;\n$al3588 = L[1168];\n// omitting isFunction check;\n$ans3587 = fold24.app(anf_arg1699,anf_arg1695,r3602);\nbreak;\ncase 4: ++R.GAS;\nreturn $ans3587;\ndefault: R.ffi.throwSpinnakerError(L[1167],$step3583);\n}\n}\nif($step3583 !== 4) {\n$ans3587.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3588,$temp_lam3584,$step3583,[p3585,accessor3586],[anf_arg1699],$elidedFrames3590);\n}\nreturn $ans3587;\n};\nvar anf_assign3604 = R.mF($temp_lam3584,\"compute\");\ncompute3605.$var = anf_assign3604;\nR.nothing;\n$step3571 = 5;\n$al3575 = L[1178];\n// omitting isFunction check;\n$ans3574 = compute3605.$var.app(num$min2,fst3606);\nbreak;\ncase 5: var anf_extend3608 = $ans3574;\n$step3571 = 6;\n$al3575 = L[1177];\n// omitting isFunction check;\n$ans3574 = compute3605.$var.app(num$max18,fst3606);\nbreak;\ncase 6: var anf_extend3609 = $ans3574;\n$step3571 = 7;\n$al3575 = L[1176];\n// omitting isFunction check;\n$ans3574 = compute3605.$var.app(num$min2,snd3607);\nbreak;\ncase 7: var anf_extend3610 = $ans3574;\n$step3571 = 8;\n$al3575 = L[1175];\n// omitting isFunction check;\n$ans3574 = compute3605.$var.app(num$max18,snd3607);\nbreak;\ncase 8: var anf_extend3611 = $ans3574;\n$step3571 = 10;\n$ans3574 = R.extendObj(L[1174],default$bounding$box3582,{\"x-min\":anf_extend3608,\n\"x-max\":anf_extend3609,\n\"y-min\":anf_extend3610,\n\"y-max\":anf_extend3611,\n\"is-valid\":(true)});\nbreak;\ncase 9: $ans3574 = R.throwNoCasesMatched(L[1166],cases3578);\n$step3571 = 10;\nbreak;\ncase 10: var ann_check_temp3579 = $ans3574;\n$step3571 = 11;\n$al3575 = L[1163];\nvar $ann$check3581 = R._cA(L[1163],BoundingBox3580,ann_check_temp3579);\nif(R.isContinuation($ann$check3581)) {\n$ans3574 = $ann$check3581;\n}\nbreak;\ncase 11: $step3571 = 12;\n$ans3574 = ann_check_temp3579;\nbreak;\ncase 12: ++R.GAS;\nreturn $ans3574;\ndefault: R.ffi.throwSpinnakerError(L[1162],$step3571);\n}\n}\nif($step3571 !== 12) {\n$ans3574.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3575,$temp_lam3572,$step3571,[ps3573],[compute3605,ann_check_temp3579,anf_extend3610,cases3578,anf_extend3608,anf_extend3609],$elidedFrames3577);\n}\nreturn $ans3574;\n};\nvar anf_assign3617 = R.mF($temp_lam3572,\"get-bounding-box\");\nget$bounding$box3618.$var = anf_assign3617;\nR.nothing;\nvar $temp_lam3620 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1182($list$of$plots3621,$self3622,$other$accessor3623) {\nvar $step3619 = 0;\nvar $elidedFrames3627 = 0;\nvar $ans3624 = D;\nvar $al3625 = L[1182];\nif(R.isAR($list$of$plots3621)) {\n$step3619 = $list$of$plots3621.step;\n$al3625 = $list$of$plots3621.from;\n$ans3624 = $list$of$plots3621.ans;\n$elidedFrames3627 = $list$of$plots3621.elidedFrames;\nlist$of$plots3621 = $list$of$plots3621.args[0];\nself3622 = $list$of$plots3621.args[1];\nother$accessor3623 = $list$of$plots3621.args[2];\nann_check_temp3673 = $list$of$plots3621.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1182],3,$t,false);\n}\nvar list$of$plots3621 = $list$of$plots3621;\nvar self3622 = $self3622;\nvar other$accessor3623 = $other$accessor3623;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3624 = R.mC();\n}\nwhile(!R.isContinuation($ans3624)) {\nswitch($step3619) {\ncase 0: var $temp_lam3629 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1183($plot$pts3630) {\nvar $step3628 = 0;\nvar $elidedFrames3634 = 0;\nvar $ans3631 = D;\nvar $al3632 = L[1183];\nif(R.isAR($plot$pts3630)) {\n$step3628 = $plot$pts3630.step;\n$al3632 = $plot$pts3630.from;\n$ans3631 = $plot$pts3630.ans;\n$elidedFrames3634 = $plot$pts3630.elidedFrames;\nplot$pts3630 = $plot$pts3630.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1183],1,$t,false);\n}\nvar plot$pts3630 = $plot$pts3630;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3631 = R.mC();\n}\nwhile(!R.isContinuation($ans3631)) {\nswitch($step3628) {\ncase 0: var $temp_lam3636 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1184($pt3637) {\nvar $step3635 = 0;\nvar $elidedFrames3641 = 0;\nvar $ans3638 = D;\nvar $al3639 = L[1184];\nif(R.isAR($pt3637)) {\n$step3635 = $pt3637.step;\n$al3639 = $pt3637.from;\n$ans3638 = $pt3637.ans;\n$elidedFrames3641 = $pt3637.elidedFrames;\npt3637 = $pt3637.args[0];\nv3653 = $pt3637.vars[0];\nv3646 = $pt3637.vars[1];\ncases3642 = $pt3637.vars[2];\ncases3643 = $pt3637.vars[3];\ncases3644 = $pt3637.vars[4];\ncases3645 = $pt3637.vars[5];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1184],1,$t,false);\n}\nvar pt3637 = $pt3637;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3638 = R.mC();\n}\nwhile(!R.isContinuation($ans3638)) {\nswitch($step3635) {\ncase 0: $al3639 = L[1185];\nvar cases3642 = G(self3622,\"x-min\",L[1185]);\n$step3635 = 1;\n$al3639 = L[1210];\nvar $ann$check3669 = R._cA(L[1210],Option27,cases3642);\nif(R.isContinuation($ann$check3669)) {\n$ans3638 = $ann$check3669;\n}\nbreak;\ncase 1: $al3639 = L[1207];\n$step3635 = $cases_dispatch3668[cases3642.$name] || 4;\nbreak;\ncase 2: if(cases3642.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[1206],false,L[1207],cases3642.$loc);\n}\n$step3635 = 5;\n$ans3638 = (true);\nbreak;\ncase 3: if(cases3642.$arity !== 1) {\nif(cases3642.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[1209],1,cases3642.$arity,L[1207],cases3642.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[1209],true,L[1207],cases3642.$loc);\n}\n}\nvar $fn3667 = cases3642.$constructor.$fieldNames;\nvar v3665 = R.dF(cases3642.dict[$fn3667[0]],cases3642.$mut_fields_mask[0],false);\n// caller optimization;\n$ans3638 = fst3606.app(pt3637);\nvar anf_arg3664 = $ans3638;\n$step3635 = 5;\n$al3639 = L[1208];\n// omitting isFunction check;\n$ans3638 = _greaterequal2.app(anf_arg3664,v3665);\nbreak;\ncase 4: $ans3638 = R.throwNoCasesMatched(L[1207],cases3642);\n$step3635 = 5;\nbreak;\ncase 5: var anf_if3663 = $ans3638;\n$step3635 = R.checkPyretTrue(anf_if3663)?6:28;\nbreak;\ncase 6: $al3639 = L[1186];\nvar cases3643 = G(self3622,\"x-max\",L[1186]);\n$step3635 = 7;\n$al3639 = L[1205];\nvar $ann$check3662 = R._cA(L[1205],Option27,cases3643);\nif(R.isContinuation($ann$check3662)) {\n$ans3638 = $ann$check3662;\n}\nbreak;\ncase 7: $al3639 = L[1202];\n$step3635 = $cases_dispatch3661[cases3643.$name] || 10;\nbreak;\ncase 8: if(cases3643.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[1201],false,L[1202],cases3643.$loc);\n}\n$step3635 = 11;\n$ans3638 = (true);\nbreak;\ncase 9: if(cases3643.$arity !== 1) {\nif(cases3643.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[1204],1,cases3643.$arity,L[1202],cases3643.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[1204],true,L[1202],cases3643.$loc);\n}\n}\nvar $fn3660 = cases3643.$constructor.$fieldNames;\nvar v3658 = R.dF(cases3643.dict[$fn3660[0]],cases3643.$mut_fields_mask[0],false);\n// caller optimization;\n$ans3638 = fst3606.app(pt3637);\nvar anf_arg1718 = $ans3638;\n$step3635 = 11;\n$al3639 = L[1203];\n// omitting isFunction check;\n$ans3638 = _lessequal4.app(anf_arg1718,v3658);\nbreak;\ncase 10: $ans3638 = R.throwNoCasesMatched(L[1202],cases3643);\n$step3635 = 11;\nbreak;\ncase 11: var anf_if3785 = $ans3638;\n$step3635 = R.checkPyretTrue(anf_if3785)?12:27;\nbreak;\ncase 12: $al3639 = L[1187];\nvar cases3644 = G(self3622,\"y-min\",L[1187]);\n$step3635 = 13;\n$al3639 = L[1200];\nvar $ann$check3657 = R._cA(L[1200],Option27,cases3644);\nif(R.isContinuation($ann$check3657)) {\n$ans3638 = $ann$check3657;\n}\nbreak;\ncase 13: $al3639 = L[1196];\n$step3635 = $cases_dispatch3656[cases3644.$name] || 17;\nbreak;\ncase 14: if(cases3644.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[1195],false,L[1196],cases3644.$loc);\n}\n$step3635 = 18;\n$ans3638 = (true);\nbreak;\ncase 15: if(cases3644.$arity !== 1) {\nif(cases3644.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[1199],1,cases3644.$arity,L[1196],cases3644.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[1199],true,L[1196],cases3644.$loc);\n}\n}\nvar $fn3655 = cases3644.$constructor.$fieldNames;\nvar v3653 = R.dF(cases3644.dict[$fn3655[0]],cases3644.$mut_fields_mask[0],false);\n$step3635 = 16;\n$al3639 = L[1198];\nif(typeof(other$accessor3623.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3639,other$accessor3623);\n}\n$ans3638 = other$accessor3623.app(pt3637);\nbreak;\ncase 16: var anf_arg1724 = $ans3638;\n$step3635 = 18;\n$al3639 = L[1197];\n// omitting isFunction check;\n$ans3638 = _greaterequal2.app(anf_arg1724,v3653);\nbreak;\ncase 17: $ans3638 = R.throwNoCasesMatched(L[1196],cases3644);\n$step3635 = 18;\nbreak;\ncase 18: var anf_if3652 = $ans3638;\n$step3635 = R.checkPyretTrue(anf_if3652)?19:26;\nbreak;\ncase 19: $al3639 = L[1188];\nvar cases3645 = G(self3622,\"y-max\",L[1188]);\n$step3635 = 20;\n$al3639 = L[1194];\nvar $ann$check3651 = R._cA(L[1194],Option27,cases3645);\nif(R.isContinuation($ann$check3651)) {\n$ans3638 = $ann$check3651;\n}\nbreak;\ncase 20: $al3639 = L[1190];\n$step3635 = $cases_dispatch3650[cases3645.$name] || 24;\nbreak;\ncase 21: if(cases3645.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[1189],false,L[1190],cases3645.$loc);\n}\n$step3635 = 25;\n$ans3638 = (true);\nbreak;\ncase 22: if(cases3645.$arity !== 1) {\nif(cases3645.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[1193],1,cases3645.$arity,L[1190],cases3645.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[1193],true,L[1190],cases3645.$loc);\n}\n}\nvar $fn3648 = cases3645.$constructor.$fieldNames;\nvar v3646 = R.dF(cases3645.dict[$fn3648[0]],cases3645.$mut_fields_mask[0],false);\n$step3635 = 23;\n$al3639 = L[1192];\nif(typeof(other$accessor3623.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3639,other$accessor3623);\n}\n$ans3638 = other$accessor3623.app(pt3637);\nbreak;\ncase 23: var anf_arg1725 = $ans3638;\n$step3635 = 25;\n$al3639 = L[1191];\n// omitting isFunction check;\n$ans3638 = _lessequal4.app(anf_arg1725,v3646);\nbreak;\ncase 24: $ans3638 = R.throwNoCasesMatched(L[1190],cases3645);\n$step3635 = 25;\nbreak;\ncase 25: var anf_arg3782 = $ans3638;\n$ans3638 = R.checkWrapBoolean(anf_arg3782);\n$step3635 = 29;\nbreak;\ncase 26: $step3635 = 29;\n$ans3638 = (false);\nbreak;\ncase 27: $step3635 = 29;\n$ans3638 = (false);\nbreak;\ncase 28: $step3635 = 29;\n$ans3638 = (false);\nbreak;\ncase 29: ++R.GAS;\nreturn $ans3638;\ndefault: R.ffi.throwSpinnakerError(L[1184],$step3635);\n}\n}\nif($step3635 !== 29) {\n$ans3638.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3639,$temp_lam3636,$step3635,[pt3637],[v3653,v3646,cases3642,cases3643,cases3644,cases3645],$elidedFrames3641);\n}\nreturn $ans3638;\n};\nvar anf_arg3783 = R.mF($temp_lam3636,\"for-body<line 1009, column 4>\");\n$step3628 = 1;\n$al3632 = L[1184];\n// omitting isFunction check;\n$ans3631 = filter31.app(anf_arg3783,plot$pts3630);\nbreak;\ncase 1: var anf_arg3841 = $ans3631;\n$step3628 = 2;\n$al3632 = L[1211];\n// omitting isFunction check;\n$ans3631 = get$bounding$box3618.$var.app(anf_arg3841);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans3631;\ndefault: R.ffi.throwSpinnakerError(L[1183],$step3628);\n}\n}\nif($step3628 !== 2) {\n$ans3631.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3632,$temp_lam3629,$step3628,[plot$pts3630],[],$elidedFrames3634);\n}\nreturn $ans3631;\n};\nvar anf_arg3672 = R.mF($temp_lam3629,\"for-body<line 1008, column 2>\");\n$step3619 = 1;\n$al3625 = L[1183];\n// omitting isFunction check;\n$ans3624 = map6.app(anf_arg3672,list$of$plots3621);\nbreak;\ncase 1: var ann_check_temp3673 = $ans3624;\n$step3619 = 2;\n$al3625 = L[1212];\nvar $ann$check3674 = R._cA(L[1212],List16,ann_check_temp3673);\nif(R.isContinuation($ann$check3674)) {\n$ans3624 = $ann$check3674;\n}\nbreak;\ncase 2: $step3619 = 3;\n$ans3624 = ann_check_temp3673;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans3624;\ndefault: R.ffi.throwSpinnakerError(L[1182],$step3619);\n}\n}\nif($step3619 !== 3) {\n$ans3624.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3625,$temp_lam3620,$step3619,[list$of$plots3621,self3622,other$accessor3623],[ann_check_temp3673],$elidedFrames3627);\n}\nreturn $ans3624;\n};\nvar anf_assign3676 = R.mF($temp_lam3620,\"get-list-of-bounding-boxes\");\nget$list$of$bounding$boxes3677.$var = anf_assign3676;\nR.nothing;\nvar $temp_lam3679 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1213($bs3680) {\nvar $step3678 = 0;\nvar $elidedFrames3684 = 0;\nvar $ans3681 = D;\nvar $al3682 = L[1213];\nif(R.isAR($bs3680)) {\n$step3678 = $bs3680.step;\n$al3682 = $bs3680.from;\n$ans3681 = $bs3680.ans;\n$elidedFrames3684 = $bs3680.elidedFrames;\nbs3680 = $bs3680.args[0];\nann_check_temp3703 = $bs3680.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1213],1,$t,false);\n}\nvar bs3680 = $bs3680;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3681 = R.mC();\n}\nwhile(!R.isContinuation($ans3681)) {\nswitch($step3678) {\ncase 0: $step3678 = 1;\n$al3682 = L[1229];\nR._cA(L[1229],List16,bs3680);\nbreak;\ncase 1: var $temp_lam3688 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1214($prev3689,$e3690) {\nvar $step3687 = 0;\nvar $elidedFrames3694 = 0;\nvar $ans3691 = D;\nvar $al3692 = L[1214];\nif(R.isAR($prev3689)) {\n$step3687 = $prev3689.step;\n$al3692 = $prev3689.from;\n$ans3691 = $prev3689.ans;\n$elidedFrames3694 = $prev3689.elidedFrames;\nprev3689 = $prev3689.args[0];\ne3690 = $prev3689.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1214],2,$t,false);\n}\nvar prev3689 = $prev3689;\nvar e3690 = $e3690;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3691 = R.mC();\n}\nwhile(!R.isContinuation($ans3691)) {\nswitch($step3687) {\ncase 0: $al3692 = L[1215];\nvar anf_if3873 = G(e3690,\"is-valid\",L[1215]);\n$step3687 = R.checkPyretTrue(anf_if3873)?1:2;\nbreak;\ncase 1: $al3692 = L[1227];\nvar anf_arg1738 = G(prev3689,\"is-valid\",L[1227]);\n$ans3691 = R.checkWrapBoolean(anf_arg1738);\n$step3687 = 3;\nbreak;\ncase 2: $step3687 = 3;\n$ans3691 = (false);\nbreak;\ncase 3: var anf_if3872 = $ans3691;\n$step3687 = R.checkPyretTrue(anf_if3872)?4:5;\nbreak;\ncase 4: $al3692 = L[1216];\nvar anf_arg1744 = G(e3690,\"x-min\",L[1216]);\n$al3692 = L[1217];\nvar anf_arg1742 = G(prev3689,\"x-min\",L[1217]);\n// caller optimization;\n$ans3691 = num$min2.app(anf_arg1744,anf_arg1742);\nvar anf_extend3695 = $ans3691;\n$al3692 = L[1218];\nvar anf_arg1746 = G(e3690,\"x-max\",L[1218]);\n$al3692 = L[1219];\nvar anf_arg3883 = G(prev3689,\"x-max\",L[1219]);\n// caller optimization;\n$ans3691 = num$max18.app(anf_arg1746,anf_arg3883);\nvar anf_extend3696 = $ans3691;\n$al3692 = L[1220];\nvar anf_arg3884 = G(e3690,\"y-min\",L[1220]);\n$al3692 = L[1221];\nvar anf_arg1747 = G(prev3689,\"y-min\",L[1221]);\n// caller optimization;\n$ans3691 = num$min2.app(anf_arg3884,anf_arg1747);\nvar anf_extend3697 = $ans3691;\n$al3692 = L[1222];\nvar anf_arg1749 = G(e3690,\"y-max\",L[1222]);\n$al3692 = L[1223];\nvar anf_arg1754 = G(prev3689,\"y-max\",L[1223]);\n// caller optimization;\n$ans3691 = num$max18.app(anf_arg1749,anf_arg1754);\nvar anf_extend3698 = $ans3691;\n$step3687 = 10;\n$ans3691 = R.extendObj(L[1224],default$bounding$box3582,{\"x-min\":anf_extend3695,\n\"x-max\":anf_extend3696,\n\"y-min\":anf_extend3697,\n\"y-max\":anf_extend3698,\n\"is-valid\":(true)});\nbreak;\ncase 5: $al3692 = L[1225];\nvar anf_if3933 = G(e3690,\"is-valid\",L[1225]);\n$step3687 = R.checkPyretTrue(anf_if3933)?6:7;\nbreak;\ncase 6: $step3687 = 10;\n$ans3691 = e3690;\nbreak;\ncase 7: $al3692 = L[1226];\nvar anf_if3699 = G(prev3689,\"is-valid\",L[1226]);\n$step3687 = R.checkPyretTrue(anf_if3699)?8:9;\nbreak;\ncase 8: $step3687 = 10;\n$ans3691 = prev3689;\nbreak;\ncase 9: $step3687 = 10;\n$ans3691 = default$bounding$box3582;\nbreak;\ncase 10: ++R.GAS;\nreturn $ans3691;\ndefault: R.ffi.throwSpinnakerError(L[1214],$step3687);\n}\n}\nif($step3687 !== 10) {\n$ans3691.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3692,$temp_lam3688,$step3687,[prev3689,e3690],[],$elidedFrames3694);\n}\nreturn $ans3691;\n};\nvar anf_arg3702 = R.mF($temp_lam3688,\"for-body<line 1031, column 2>\");\n$step3678 = 2;\n$al3682 = L[1214];\n// omitting isFunction check;\n$ans3681 = fold24.app(anf_arg3702,default$bounding$box3582,bs3680);\nbreak;\ncase 2: var ann_check_temp3703 = $ans3681;\n$step3678 = 3;\n$al3682 = L[1228];\nvar $ann$check3704 = R._cA(L[1228],BoundingBox3580,ann_check_temp3703);\nif(R.isContinuation($ann$check3704)) {\n$ans3681 = $ann$check3704;\n}\nbreak;\ncase 3: $step3678 = 4;\n$ans3681 = ann_check_temp3703;\nbreak;\ncase 4: ++R.GAS;\nreturn $ans3681;\ndefault: R.ffi.throwSpinnakerError(L[1213],$step3678);\n}\n}\nif($step3678 !== 4) {\n$ans3681.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3682,$temp_lam3679,$step3678,[bs3680],[ann_check_temp3703],$elidedFrames3684);\n}\nreturn $ans3681;\n};\nvar anf_assign3707 = R.mF($temp_lam3679,\"merge-bounding-box\");\nmerge$bounding$box3708.$var = anf_assign3707;\nR.nothing;\nvar BoxChartSeries4161 = R.mRA([\"tab\",\"height\",\"horizontal\",\"color\"],[L[2698],L[2699],L[2700],L[2701]],{\"tab\":TableIntern764,\n\"height\":$type$Number3,\n\"horizontal\":$type$Boolean6,\n\"color\":Option27},\"BoxChartSeries\");\nvar default$box$plot$series5681 = R.mO({\"horizontal\":(false),\n\"show-outliers\":(true),\n\"color\":none28});\nvar PieChartSeries4107 = R.mRA([\"tab\",\"colors\",\"threeD\",\"piehole\",\"startingAngle\",\"collapseThreshold\"],[L[2692],L[2693],L[2694],L[2695],L[2696],L[2697]],{\"tab\":TableIntern764,\n\"colors\":Option27,\n\"threeD\":$type$Boolean6,\n\"piehole\":$type$Number3,\n\"startingAngle\":$type$Number3,\n\"collapseThreshold\":$type$Number3},\"PieChartSeries\");\nvar default$pie$chart$series4820 = R.mO({\"colors\":none28,\n\"threeD\":(false),\n\"piehole\":(0),\n\"startingAngle\":(0),\n\"collapseThreshold\":(0)});\nvar BarChartSeries4124 = R.mRA([\"tab\",\"axisdata\",\"color\",\"colors\",\"pointers\",\"pointer-color\",\"horizontal\",\"annotations\",\"intervals\",\"default-interval-color\"],[L[2682],L[2683],L[2684],L[2685],L[2686],L[2687],L[2688],L[2689],L[2690],L[2691]],{\"tab\":TableIntern764,\n\"axisdata\":Option27,\n\"color\":Option27,\n\"colors\":Option27,\n\"pointers\":Option27,\n\"pointer-color\":Option27,\n\"horizontal\":$type$Boolean6,\n\"annotations\":$type$RawArray1,\n\"intervals\":$type$RawArray1,\n\"default-interval-color\":Option27},\"BarChartSeries\");\nvar default$bar$chart$series4768 = R.mO({\"color\":none28,\n\"colors\":none28,\n\"pointers\":none28,\n\"pointer-color\":none28,\n\"axisdata\":none28,\n\"horizontal\":(false),\n\"default-interval-color\":none28});\nvar MultiBarChartSeries4150 = R.mRA([\"tab\",\"axisdata\",\"legends\",\"is-stacked\",\"colors\",\"pointers\",\"pointer-color\",\"horizontal\",\"annotations\",\"intervals\",\"default-interval-color\"],[L[2671],L[2672],L[2673],L[2674],L[2675],L[2676],L[2677],L[2678],L[2679],L[2680],L[2681]],{\"tab\":TableIntern764,\n\"axisdata\":Option27,\n\"legends\":$type$RawArray1,\n\"is-stacked\":$type$String8,\n\"colors\":Option27,\n\"pointers\":Option27,\n\"pointer-color\":Option27,\n\"horizontal\":$type$Boolean6,\n\"annotations\":$type$RawArray1,\n\"intervals\":$type$RawArray1,\n\"default-interval-color\":Option27},\"MultiBarChartSeries\");\n$ans330 = R.getMaker(raw$array2,(\"make\"),L[1230],L[1231]);\nvar anf_fun1773 = $ans330;\n$ans330 = R.makeArrayN((7));\nvar anf_array3709 = $ans330;\nanf_array3709[0] = C41.dict.values.dict[\"red\"];\nanf_array3709[1] = C41.dict.values.dict[\"blue\"];\nanf_array3709[2] = C41.dict.values.dict[\"green\"];\nanf_array3709[3] = C41.dict.values.dict[\"orange\"];\nanf_array3709[4] = C41.dict.values.dict[\"purple\"];\nanf_array3709[5] = C41.dict.values.dict[\"black\"];\nanf_array3709[6] = C41.dict.values.dict[\"brown\"];\n$step95 = 2;\n$al331 = L[1231];\nif(typeof(anf_fun1773.app) !== \"function\") {\nR.ffi.throwNonFunApp($al331,anf_fun1773);\n}\n$ans330 = anf_fun1773.app(anf_array3709);\nbreak;\ncase 2: var anf_arg1774 = $ans330;\n// caller optimization;\n$ans330 = some33.app(anf_arg1774);\nvar anf_obj3710 = $ans330;\nvar default$multi$bar$chart$series5301 = R.mO({\"is-stacked\":(\"none\"),\n\"colors\":anf_obj3710,\n\"pointers\":none28,\n\"pointer-color\":none28,\n\"axisdata\":none28,\n\"horizontal\":(false),\n\"default-interval-color\":none28});\nvar HistogramSeries4176 = R.mRA([\"tab\",\"bin-width\",\"max-num-bins\",\"min-num-bins\",\"color\"],[L[2666],L[2667],L[2668],L[2669],L[2670]],{\"tab\":TableIntern764,\n\"bin-width\":Option27,\n\"max-num-bins\":Option27,\n\"min-num-bins\":Option27,\n\"color\":Option27},\"HistogramSeries\");\nvar default$histogram$series5765 = R.mO({\"bin-width\":none28,\n\"max-num-bins\":none28,\n\"min-num-bins\":none28,\n\"color\":none28});\nvar LinePlotSeries4049 = R.mRA([\"ps\",\"color\",\"legend\",\"curved\",\"lineWidth\",\"trendlineType\",\"trendlineColor\",\"trendlineWidth\",\"trendlineOpacity\",\"trendlineDegree\",\"dashedLine\",\"dashlineStyle\",\"point-size\",\"useImageSizes\",\"pointshapeType\",\"pointshapeSides\",\"pointshapeDent\",\"pointshapeRotation\",\"horizontal\"],[L[2647],L[2648],L[2649],L[2650],L[2651],L[2652],L[2653],L[2654],L[2655],L[2656],L[2657],L[2658],L[2659],L[2660],L[2661],L[2662],L[2663],L[2664],L[2665]],{\"ps\":List16,\n\"color\":Option27,\n\"legend\":$type$String8,\n\"curved\":$type$String8,\n\"lineWidth\":$type$Number3,\n\"trendlineType\":Option27,\n\"trendlineColor\":Option27,\n\"trendlineWidth\":$type$Number3,\n\"trendlineOpacity\":$type$Number3,\n\"trendlineDegree\":$type$NumInteger1,\n\"dashedLine\":$type$Boolean6,\n\"dashlineStyle\":$type$RawArray1,\n\"point-size\":$type$Number3,\n\"useImageSizes\":$type$Boolean6,\n\"pointshapeType\":$type$String8,\n\"pointshapeSides\":$type$NumInteger1,\n\"pointshapeDent\":$type$Number3,\n\"pointshapeRotation\":$type$Number3,\n\"horizontal\":$type$Boolean6},\"LinePlotSeries\");\n$ans330 = R.getMaker2(raw$array2,(\"make2\"),L[1232],L[1233]);\nvar anf_fun3711 = $ans330;\n$step95 = 3;\n$al331 = L[1233];\nif(typeof(anf_fun3711.app) !== \"function\") {\nR.ffi.throwNonFunApp($al331,anf_fun3711);\n}\n$ans330 = anf_fun3711.app((2),(2));\nbreak;\ncase 3: var anf_obj3712 = $ans330;\nvar default$line$plot$series4542 = R.mO({\"color\":none28,\n\"legend\":(\"\"),\n\"curved\":(\"none\"),\n\"lineWidth\":(2),\n\"trendlineType\":none28,\n\"trendlineColor\":none28,\n\"trendlineWidth\":(3),\n\"trendlineOpacity\":R.makeNumberFromString(\"3/10\"),\n\"trendlineDegree\":(3),\n\"dashedLine\":(false),\n\"dashlineStyle\":anf_obj3712,\n\"point-size\":(0),\n\"useImageSizes\":(true),\n\"pointshapeType\":(\"circle\"),\n\"pointshapeSides\":(5),\n\"pointshapeDent\":R.makeNumberFromString(\"1/2\"),\n\"pointshapeRotation\":(0),\n\"horizontal\":(false)});\nvar ScatterPoint4623 = R.mRA([\"x\",\"y\",\"label\",\"image\"],[L[2643],L[2644],L[2645],L[2646]],{\"x\":$type$Number3,\n\"y\":$type$Number3,\n\"label\":$type$String8,\n\"image\":Option27},\"ScatterPoint\");\nvar ScatterPlotSeries4060 = R.mRA([\"ps\",\"color\",\"legend\",\"point-size\",\"useImageSizes\",\"trendlineType\",\"trendlineColor\",\"trendlineWidth\",\"trendlineOpacity\",\"trendlineDegree\",\"pointshapeType\",\"pointshapeSides\",\"pointshapeDent\",\"pointshapeRotation\",\"horizontal\"],[L[2628],L[2629],L[2630],L[2631],L[2632],L[2633],L[2634],L[2635],L[2636],L[2637],L[2638],L[2639],L[2640],L[2641],L[2642]],{\"ps\":List16,\n\"color\":Option27,\n\"legend\":$type$String8,\n\"point-size\":$type$Number3,\n\"useImageSizes\":$type$Boolean6,\n\"trendlineType\":Option27,\n\"trendlineColor\":Option27,\n\"trendlineWidth\":$type$Number3,\n\"trendlineOpacity\":$type$Number3,\n\"trendlineDegree\":$type$NumInteger1,\n\"pointshapeType\":$type$String8,\n\"pointshapeSides\":$type$NumInteger1,\n\"pointshapeDent\":$type$Number3,\n\"pointshapeRotation\":$type$Number3,\n\"horizontal\":$type$Boolean6},\"ScatterPlotSeries\");\nvar default$scatter$plot$series4657 = R.mO({\"color\":none28,\n\"legend\":(\"\"),\n\"point-size\":(7),\n\"useImageSizes\":(true),\n\"pointshapeType\":(\"circle\"),\n\"pointshapeSides\":(5),\n\"pointshapeDent\":R.makeNumberFromString(\"1/2\"),\n\"pointshapeRotation\":(0),\n\"trendlineType\":none28,\n\"trendlineColor\":none28,\n\"trendlineWidth\":(3),\n\"trendlineOpacity\":R.makeNumberFromString(\"3/10\"),\n\"trendlineDegree\":(3),\n\"horizontal\":(false)});\nvar DotPoint4964 = R.mRA([\"value\",\"label\",\"image\"],[L[2625],L[2626],L[2627]],{\"value\":$type$Number3,\n\"label\":$type$String8,\n\"image\":Option27},\"DotPoint\");\nvar DotPlotSeries4071 = R.mRA([\"ps\",\"color\",\"legend\",\"point-size\",\"useImageSizes\"],[L[2620],L[2621],L[2622],L[2623],L[2624]],{\"ps\":List16,\n\"color\":Option27,\n\"legend\":$type$String8,\n\"point-size\":$type$Number3,\n\"useImageSizes\":$type$Boolean6},\"DotPlotSeries\");\nvar default$dot$plot$series5008 = R.mO({\"color\":none28,\n\"legend\":(\"\"),\n\"point-size\":(8),\n\"useImageSizes\":(true)});\nvar CategoricalDotPoint6844 = R.mRA([\"label\",\"count\"],[L[2618],L[2619]],{\"label\":$type$String8,\n\"count\":$type$Number3},\"CategoricalDotPoint\");\nvar CategoricalDotPlotSeries4080 = R.mRA([\"ps\",\"color\",\"legend\"],[L[2615],L[2616],L[2617]],{\"ps\":List16,\n\"color\":Option27,\n\"legend\":$type$String8},\"CategoricalDotPlotSeries\");\nvar default$categorical$dot$plot$series5186 = R.mO({\"color\":none28,\n\"legend\":(\"\")});\nvar IntervalPoint5483 = R.mRA([\"label\",\"x\",\"y\",\"delta\",\"image\"],[L[2610],L[2611],L[2612],L[2613],L[2614]],{\"label\":$type$String8,\n\"x\":$type$Number3,\n\"y\":$type$Number3,\n\"delta\":$type$Number3,\n\"image\":Option27},\"IntervalPoint\");\nvar IntervalChartSeries4135 = R.mRA([\"axisdata\",\"color\",\"pointers\",\"pointer-color\",\"point-size\",\"lineWidth\",\"stick-width\",\"style\",\"horizontal\",\"default-interval-color\",\"legend\",\"trendlineType\",\"trendlineColor\",\"trendlineWidth\",\"trendlineOpacity\",\"trendlineDegree\",\"pointshapeType\",\"pointshapeSides\",\"pointshapeDent\",\"pointshapeRotation\",\"ps\"],[L[2589],L[2590],L[2591],L[2592],L[2593],L[2594],L[2595],L[2596],L[2597],L[2598],L[2599],L[2600],L[2601],L[2602],L[2603],L[2604],L[2605],L[2606],L[2607],L[2608],L[2609]],{\"axisdata\":Option27,\n\"color\":Option27,\n\"pointers\":Option27,\n\"pointer-color\":Option27,\n\"point-size\":$type$Number3,\n\"lineWidth\":$type$Number3,\n\"stick-width\":$type$Number3,\n\"style\":$type$String8,\n\"horizontal\":$type$Boolean6,\n\"default-interval-color\":Option27,\n\"legend\":$type$String8,\n\"trendlineType\":Option27,\n\"trendlineColor\":Option27,\n\"trendlineWidth\":$type$Number3,\n\"trendlineOpacity\":$type$Number3,\n\"trendlineDegree\":$type$NumInteger1,\n\"pointshapeType\":$type$String8,\n\"pointshapeSides\":$type$NumInteger1,\n\"pointshapeDent\":$type$Number3,\n\"pointshapeRotation\":$type$Number3,\n\"ps\":List16},\"IntervalChartSeries\");\n// caller optimization;\n$ans330 = some33.app(C41.dict.values.dict[\"red\"]);\nvar anf_obj3713 = $ans330;\n$step95 = 4;\n$al331 = L[2588];\nif(typeof(C41.dict.values.dict[\"color\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al331,C41.dict.values.dict[\"color\"]);\n}\n$ans330 = C41.dict.values.dict[\"color\"].app((228),(147),(7),(1));\nbreak;\ncase 4: var anf_arg1776 = $ans330;\n// caller optimization;\n$ans330 = some33.app(anf_arg1776);\nvar anf_obj3714 = $ans330;\nvar default$interval$chart$series5524 = R.mO({\"color\":anf_obj3713,\n\"pointers\":none28,\n\"pointer-color\":anf_obj3714,\n\"point-size\":(4),\n\"lineWidth\":(0),\n\"stick-width\":(1),\n\"axisdata\":none28,\n\"horizontal\":(false),\n\"style\":(\"bars\"),\n\"default-interval-color\":none28,\n\"legend\":(\"\"),\n\"trendlineType\":none28,\n\"trendlineColor\":none28,\n\"trendlineWidth\":(3),\n\"trendlineOpacity\":R.makeNumberFromString(\"3/10\"),\n\"trendlineDegree\":(3),\n\"pointshapeType\":(\"circle\"),\n\"pointshapeSides\":(5),\n\"pointshapeDent\":R.makeNumberFromString(\"1/2\"),\n\"pointshapeRotation\":(0)});\nvar FunctionPlotSeries4089 = R.mRA([\"f\",\"color\",\"legend\",\"horizontal\"],[L[2584],L[2585],L[2586],L[2587]],{\"f\":PlottableFunction4509,\n\"color\":Option27,\n\"legend\":$type$String8,\n\"horizontal\":$type$Boolean6},\"FunctionPlotSeries\");\nvar default$function$plot$series4505 = R.mO({\"color\":none28,\n\"legend\":(\"\"),\n\"horizontal\":(false)});\nvar ChartWindowObject4236 = R.mRA([\"title\",\"width\",\"height\",\"backgroundColor\",\"borderSize\",\"borderColor\",\"render\"],[L[2577],L[2578],L[2579],L[2580],L[2581],L[2582],L[2583]],{\"title\":$type$String8,\n\"width\":$type$Number3,\n\"height\":$type$Number3,\n\"backgroundColor\":Option27,\n\"borderSize\":$type$Number3,\n\"borderColor\":Option27,\n\"render\":R.Function},\"ChartWindowObject\");\nvar $temp_full3719 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1234($self4447) {\nvar $step3718 = 0;\nvar $elidedFrames3724 = 0;\nvar $ans3721 = D;\nvar $al3722 = L[1234];\nif(R.isAR($self4447)) {\n$step3718 = $self4447.step;\n$al3722 = $self4447.from;\n$ans3721 = $self4447.ans;\n$elidedFrames3724 = $self4447.elidedFrames;\nself4447 = $self4447.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1234],1,$t,true);\n}\nvar self4447 = $self4447;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3721 = R.mC();\n}\nwhile(!R.isContinuation($ans3721)) {\nswitch($step3718) {\ncase 0: $step3718 = 1;\n$al3722 = L[1235];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3722,raise1);\n}\n$ans3721 = raise1.app((\"unimplemented\"));\nbreak;\ncase 1: ++R.GAS;\nreturn $ans3721;\ndefault: R.ffi.throwSpinnakerError(L[1234],$step3718);\n}\n}\nif($step3718 !== 1) {\n$ans3721.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3722,$temp_full3719,$step3718,[self4447],[],$elidedFrames3724);\n}\nreturn $ans3721;\n};\nvar anf_obj3727 = R.makeMethod0($temp_full3719,\"render\");\nvar default$chart$window$object3728 = R.mO({\"title\":(\"\"),\n\"width\":(800),\n\"height\":(600),\n\"backgroundColor\":none28,\n\"borderSize\":(0),\n\"borderColor\":none28,\n\"render\":anf_obj3727});\n$step95 = 5;\n$al331 = L[2576];\nvar $ann$check6854 = R._cA(L[2576],ChartWindowObject4236,default$chart$window$object3728);\nif(R.isContinuation($ann$check6854)) {\n$ans330 = $ann$check6854;\n}\nbreak;\ncase 5: var BoxChartWindowObject4426 = R.mRA([\"title\",\"width\",\"height\",\"backgroundColor\",\"borderSize\",\"borderColor\",\"x-axis\",\"y-axis\",\"min\",\"max\",\"render\"],[L[2565],L[2566],L[2567],L[2568],L[2569],L[2570],L[2571],L[2572],L[2573],L[2574],L[2575]],{\"title\":$type$String8,\n\"width\":$type$Number3,\n\"height\":$type$Number3,\n\"backgroundColor\":Option27,\n\"borderSize\":$type$Number3,\n\"borderColor\":Option27,\n\"x-axis\":$type$String8,\n\"y-axis\":$type$String8,\n\"min\":Option27,\n\"max\":Option27,\n\"render\":R.Function},\"BoxChartWindowObject\");\nvar default$box$plot$chart$window$object6007 = R.extendObj(L[1236],default$chart$window$object3728,{\"x-axis\":(\"\"),\n\"y-axis\":(\"\"),\n\"min\":none28,\n\"max\":none28});\n$step95 = 6;\n$al331 = L[2564];\nvar $ann$check6853 = R._cA(L[2564],BoxChartWindowObject4426,default$box$plot$chart$window$object6007);\nif(R.isContinuation($ann$check6853)) {\n$ans330 = $ann$check6853;\n}\nbreak;\ncase 6: var PieChartWindowObject4404 = R.mRA([\"title\",\"width\",\"height\",\"backgroundColor\",\"borderSize\",\"borderColor\",\"render\"],[L[2557],L[2558],L[2559],L[2560],L[2561],L[2562],L[2563]],{\"title\":$type$String8,\n\"width\":$type$Number3,\n\"height\":$type$Number3,\n\"backgroundColor\":Option27,\n\"borderSize\":$type$Number3,\n\"borderColor\":Option27,\n\"render\":R.Function},\"PieChartWindowObject\");\nvar default$pie$chart$window$object5961 = default$chart$window$object3728;\n$step95 = 7;\n$al331 = L[2556];\nvar $ann$check6852 = R._cA(L[2556],PieChartWindowObject4404,default$pie$chart$window$object5961);\nif(R.isContinuation($ann$check6852)) {\n$ans330 = $ann$check6852;\n}\nbreak;\ncase 7: var DotChartWindowObject4415 = R.mRA([\"title\",\"width\",\"height\",\"backgroundColor\",\"borderSize\",\"borderColor\",\"render\",\"x-axis\",\"y-axis\"],[L[2547],L[2548],L[2549],L[2550],L[2551],L[2552],L[2553],L[2554],L[2555]],{\"title\":$type$String8,\n\"width\":$type$Number3,\n\"height\":$type$Number3,\n\"backgroundColor\":Option27,\n\"borderSize\":$type$Number3,\n\"borderColor\":Option27,\n\"render\":R.Function,\n\"x-axis\":$type$String8,\n\"y-axis\":$type$String8},\"DotChartWindowObject\");\nvar default$dot$chart$window$object5934 = R.extendObj(L[1237],default$chart$window$object3728,{\"x-axis\":(\"\"),\n\"y-axis\":(\"\")});\n$step95 = 8;\n$al331 = L[2546];\nvar $ann$check6851 = R._cA(L[2546],DotChartWindowObject4415,default$dot$chart$window$object5934);\nif(R.isContinuation($ann$check6851)) {\n$ans330 = $ann$check6851;\n}\nbreak;\ncase 8: var BarChartWindowObject4437 = R.mRA([\"title\",\"width\",\"height\",\"backgroundColor\",\"borderSize\",\"borderColor\",\"render\",\"x-axis\",\"y-axis\",\"y-min\",\"y-max\"],[L[2535],L[2536],L[2537],L[2538],L[2539],L[2540],L[2541],L[2542],L[2543],L[2544],L[2545]],{\"title\":$type$String8,\n\"width\":$type$Number3,\n\"height\":$type$Number3,\n\"backgroundColor\":Option27,\n\"borderSize\":$type$Number3,\n\"borderColor\":Option27,\n\"render\":R.Function,\n\"x-axis\":$type$String8,\n\"y-axis\":$type$String8,\n\"y-min\":Option27,\n\"y-max\":Option27},\"BarChartWindowObject\");\nvar default$bar$chart$window$object5977 = R.extendObj(L[1238],default$chart$window$object3728,{\"x-axis\":(\"\"),\n\"y-axis\":(\"\"),\n\"y-min\":none28,\n\"y-max\":none28});\n$step95 = 9;\n$al331 = L[2534];\nvar $ann$check6850 = R._cA(L[2534],BarChartWindowObject4437,default$bar$chart$window$object5977);\nif(R.isContinuation($ann$check6850)) {\n$ans330 = $ann$check6850;\n}\nbreak;\ncase 9: var IntervalChartWindowObject4446 = R.mRA([\"title\",\"width\",\"height\",\"backgroundColor\",\"borderSize\",\"borderColor\",\"render\",\"x-axis\",\"y-axis\",\"y-min\",\"y-max\"],[L[2523],L[2524],L[2525],L[2526],L[2527],L[2528],L[2529],L[2530],L[2531],L[2532],L[2533]],{\"title\":$type$String8,\n\"width\":$type$Number3,\n\"height\":$type$Number3,\n\"backgroundColor\":Option27,\n\"borderSize\":$type$Number3,\n\"borderColor\":Option27,\n\"render\":R.Function,\n\"x-axis\":$type$String8,\n\"y-axis\":$type$String8,\n\"y-min\":Option27,\n\"y-max\":Option27},\"IntervalChartWindowObject\");\nvar default$interval$chart$window$object6838 = R.extendObj(L[1239],default$chart$window$object3728,{\"x-axis\":(\"\"),\n\"y-axis\":(\"\"),\n\"y-min\":none28,\n\"y-max\":none28});\n$step95 = 10;\n$al331 = L[2522];\nvar $ann$check6849 = R._cA(L[2522],IntervalChartWindowObject4446,default$interval$chart$window$object6838);\nif(R.isContinuation($ann$check6849)) {\n$ans330 = $ann$check6849;\n}\nbreak;\ncase 10: var HistogramChartWindowObject4457 = R.mRA([\"title\",\"width\",\"height\",\"backgroundColor\",\"borderSize\",\"borderColor\",\"render\",\"x-axis\",\"y-axis\",\"x-min\",\"x-max\",\"y-max\"],[L[2510],L[2511],L[2512],L[2513],L[2514],L[2515],L[2516],L[2517],L[2518],L[2519],L[2520],L[2521]],{\"title\":$type$String8,\n\"width\":$type$Number3,\n\"height\":$type$Number3,\n\"backgroundColor\":Option27,\n\"borderSize\":$type$Number3,\n\"borderColor\":Option27,\n\"render\":R.Function,\n\"x-axis\":$type$String8,\n\"y-axis\":$type$String8,\n\"x-min\":Option27,\n\"x-max\":Option27,\n\"y-max\":Option27},\"HistogramChartWindowObject\");\nvar default$histogram$chart$window$object6025 = R.extendObj(L[1240],default$chart$window$object3728,{\"x-axis\":(\"\"),\n\"y-axis\":(\"\"),\n\"x-min\":none28,\n\"x-max\":none28,\n\"y-max\":none28});\n$step95 = 11;\n$al331 = L[2509];\nvar $ann$check6848 = R._cA(L[2509],HistogramChartWindowObject4457,default$histogram$chart$window$object6025);\nif(R.isContinuation($ann$check6848)) {\n$ans330 = $ann$check6848;\n}\nbreak;\ncase 11: var PlotChartWindowObject4470 = R.mRA([\"title\",\"width\",\"height\",\"backgroundColor\",\"borderSize\",\"borderColor\",\"render\",\"show-grid-lines\",\"show-minor-grid-lines\",\"gridlineColor\",\"gridlineMinspacing\",\"minorGridlineColor\",\"minorGridlineMinspacing\",\"x-axis\",\"y-axis\",\"x-min\",\"x-max\",\"y-min\",\"y-max\",\"num-samples\",\"multiple\"],[L[2488],L[2489],L[2490],L[2491],L[2492],L[2493],L[2494],L[2495],L[2496],L[2497],L[2498],L[2499],L[2500],L[2501],L[2502],L[2503],L[2504],L[2505],L[2506],L[2507],L[2508]],{\"title\":$type$String8,\n\"width\":$type$Number3,\n\"height\":$type$Number3,\n\"backgroundColor\":Option27,\n\"borderSize\":$type$Number3,\n\"borderColor\":Option27,\n\"render\":R.Function,\n\"show-grid-lines\":$type$Boolean6,\n\"show-minor-grid-lines\":$type$Boolean6,\n\"gridlineColor\":Option27,\n\"gridlineMinspacing\":Option27,\n\"minorGridlineColor\":Option27,\n\"minorGridlineMinspacing\":$type$Number3,\n\"x-axis\":$type$String8,\n\"y-axis\":$type$String8,\n\"x-min\":Option27,\n\"x-max\":Option27,\n\"y-min\":Option27,\n\"y-max\":Option27,\n\"num-samples\":$type$Number3,\n\"multiple\":$type$Boolean6},\"PlotChartWindowObject\");\nvar default$plot$chart$window$object6795 = R.extendObj(L[1241],default$chart$window$object3728,{\"x-axis\":(\"\"),\n\"y-axis\":(\"\"),\n\"show-grid-lines\":(true),\n\"show-minor-grid-lines\":(false),\n\"x-min\":none28,\n\"x-max\":none28,\n\"y-min\":none28,\n\"y-max\":none28,\n\"num-samples\":(1000),\n\"multiple\":(false),\n\"gridlineColor\":none28,\n\"gridlineMinspacing\":none28,\n\"minorGridlineColor\":none28,\n\"minorGridlineMinspacing\":(10)});\n$step95 = 12;\n$al331 = L[2487];\nvar $ann$check6847 = R._cA(L[2487],PlotChartWindowObject4470,default$plot$chart$window$object6795);\nif(R.isContinuation($ann$check6847)) {\n$ans330 = $ann$check6847;\n}\nbreak;\ncase 12: var DataSeries4179 = {\"$var\":D};\nvar is$DataSeries4181 = {\"$var\":D};\nvar is$line$plot$series4183 = {\"$var\":D};\nvar line$plot$series3790 = {\"$var\":D};\nvar is$scatter$plot$series4186 = {\"$var\":D};\nvar scatter$plot$series3822 = {\"$var\":D};\nvar is$dot$plot$series4189 = {\"$var\":D};\nvar dot$plot$series3854 = {\"$var\":D};\nvar is$categorical$dot$plot$series4192 = {\"$var\":D};\nvar categorical$dot$plot$series3887 = {\"$var\":D};\nvar is$function$plot$series4197 = {\"$var\":D};\nvar function$plot$series3898 = {\"$var\":D};\nvar is$pie$chart$series4203 = {\"$var\":D};\nvar pie$chart$series3906 = {\"$var\":D};\nvar is$bar$chart$series4206 = {\"$var\":D};\nvar bar$chart$series3915 = {\"$var\":D};\nvar is$interval$chart$series4209 = {\"$var\":D};\nvar interval$chart$series3937 = {\"$var\":D};\nvar is$multi$bar$chart$series4213 = {\"$var\":D};\nvar multi$bar$chart$series3946 = {\"$var\":D};\nvar is$box$plot$series4216 = {\"$var\":D};\nvar box$plot$series3954 = {\"$var\":D};\nvar is$histogram$series4219 = {\"$var\":D};\nvar histogram$series3974 = {\"$var\":D};\nvar check$chart$window4239 = {\"$var\":D};\nvar ChartWindow4473 = {\"$var\":D};\nvar is$ChartWindow4475 = {\"$var\":D};\nvar is$pie$chart$window4477 = {\"$var\":D};\nvar pie$chart$window4321 = {\"$var\":D};\nvar is$dot$chart$window4481 = {\"$var\":D};\nvar dot$chart$window4329 = {\"$var\":D};\nvar is$box$plot$chart$window4484 = {\"$var\":D};\nvar box$plot$chart$window4339 = {\"$var\":D};\nvar is$bar$chart$window4487 = {\"$var\":D};\nvar bar$chart$window4348 = {\"$var\":D};\nvar is$interval$chart$window4490 = {\"$var\":D};\nvar interval$chart$window4356 = {\"$var\":D};\nvar is$histogram$chart$window4493 = {\"$var\":D};\nvar histogram$chart$window4365 = {\"$var\":D};\nvar is$plot$chart$window4496 = {\"$var\":D};\nvar plot$chart$window4375 = {\"$var\":D};\nvar function$plot$from$list4513 = {\"$var\":D};\nvar line$plot$from$list4551 = {\"$var\":D};\nvar labeled$line$plot$from$list4578 = {\"$var\":D};\nvar image$line$plot$from$list4608 = {\"$var\":D};\nvar get$scatter$point4522 = {\"$var\":D};\nvar scatter$plot$from$list4666 = {\"$var\":D};\nvar labeled$scatter$plot$from$list4696 = {\"$var\":D};\nvar image$scatter$plot$from$list4733 = {\"$var\":D};\nvar image$bar$chart$from$list4786 = {\"$var\":D};\nvar exploding$pie$chart$from$list4830 = {\"$var\":D};\nvar pie$chart$from$list4869 = {\"$var\":D};\nvar image$pie$chart$from$list4908 = {\"$var\":D};\nvar bar$chart$from$list4953 = {\"$var\":D};\nvar get$dot$point4968 = {\"$var\":D};\nvar num$dot$chart$from$list5017 = {\"$var\":D};\nvar image$num$dot$chart$from$list5095 = {\"$var\":D};\nvar labeled$num$dot$chart$from$list5140 = {\"$var\":D};\nvar dot$chart$from$list5195 = {\"$var\":D};\nvar grouped$bar$chart$from$list5321 = {\"$var\":D};\nvar stacked$bar$chart$from$list5437 = {\"$var\":D};\nvar map55457 = {\"$var\":D};\nvar get$interval$point5487 = {\"$var\":D};\nvar labeled$interval$chart$from$list5538 = {\"$var\":D};\nvar interval$chart$from$list5566 = {\"$var\":D};\nvar box$plot$from$list5592 = {\"$var\":D};\nvar labeled$box$plot$from$list5585 = {\"$var\":D};\nvar freq$bar$chart$from$list5748 = {\"$var\":D};\nvar histogram$from$list5772 = {\"$var\":D};\nvar labeled$histogram$from$list5793 = {\"$var\":D};\nvar image$histogram$from$list5819 = {\"$var\":D};\nvar check$render$x$axis5853 = {\"$var\":D};\nvar check$render$y$axis5888 = {\"$var\":D};\nvar render$chart3742 = {\"$var\":D};\nvar generate$xy6087 = {\"$var\":D};\nvar widen$range6108 = {\"$var\":D};\nvar ps$to$arr6120 = {\"$var\":D};\nvar in$bound$x6138 = {\"$var\":D};\nvar in$bound$y6157 = {\"$var\":D};\nvar in$bound$xy6171 = {\"$var\":D};\nvar dist6188 = {\"$var\":D};\nvar nearest6231 = {\"$var\":D};\nvar find$pt$on$edge6338 = {\"$var\":D};\nvar line$plot$edge$cut6446 = {\"$var\":D};\nvar BoundResult6468 = {\"$var\":D};\nvar is$BoundResult6470 = {\"$var\":D};\nvar is$exact$bound6472 = {\"$var\":D};\nvar exact$bound6474 = {\"$var\":D};\nvar is$inferred$bound6476 = {\"$var\":D};\nvar inferred$bound6478 = {\"$var\":D};\nvar is$unknown$bound6480 = {\"$var\":D};\nvar unknown$bound6482 = {\"$var\":D};\nvar bound$result$to$bounds6584 = {\"$var\":D};\nvar get$bound$result6606 = {\"$var\":D};\nvar render$charts5900 = {\"$var\":D};\nvar $temp_full3730 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1242($self2798) {\nvar $step3729 = 0;\nvar $elidedFrames3734 = 0;\nvar $ans3731 = D;\nvar $al3732 = L[1242];\nif(R.isAR($self2798)) {\n$step3729 = $self2798.step;\n$al3732 = $self2798.from;\n$ans3731 = $self2798.ans;\n$elidedFrames3734 = $self2798.elidedFrames;\nself2798 = $self2798.args[0];\ncases3748 = $self2798.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1242],1,$t,true);\n}\nvar self2798 = $self2798;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3731 = R.mC();\n}\nwhile(!R.isContinuation($ans3731)) {\nswitch($step3729) {\ncase 0: var $temp_lam3737 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1243($$resumer11) {\nvar $step3736 = 0;\nvar $elidedFrames3741 = 0;\nvar $ans3738 = D;\nvar $al3739 = L[1243];\nif(R.isAR($$resumer11)) {\n$step3736 = $$resumer11.step;\n$al3739 = $$resumer11.from;\n$ans3738 = $$resumer11.ans;\n$elidedFrames3741 = $$resumer11.elidedFrames;\n$resumer11 = $$resumer11.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1243],0,$t,false);\n}\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3738 = R.mC();\n}\nwhile(!R.isContinuation($ans3738)) {\nswitch($step3736) {\ncase 0: var anf_fun3744 = render$chart3742.$var === D?U(L[1244],\"render-chart\"):render$chart3742.$var;\n$step3736 = 1;\n$al3739 = L[1247];\nif(typeof(anf_fun3744.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3739,anf_fun3744);\n}\n$ans3738 = anf_fun3744.app(self2798);\nbreak;\ncase 1: var anf_method_obj3746 = $ans3738;\n$step3736 = 2;\n$ans3738 = R.maybeMethodCall0(anf_method_obj3746,\"get-image\",L[1245]);\nbreak;\ncase 2: var anf_arg1782 = $ans3738;\n$step3736 = 3;\n$al3739 = L[1246];\n// omitting isFunction check;\n$ans3738 = get$vs$from$img1466.$var.app((\"DataSeries\"),anf_arg1782);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans3738;\ndefault: R.ffi.throwSpinnakerError(L[1243],$step3736);\n}\n}\nif($step3736 !== 3) {\n$ans3738.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3739,$temp_lam3737,$step3736,[],[],$elidedFrames3741);\n}\nreturn $ans3738;\n};\nvar anf_arg1796 = R.mF($temp_lam3737,\"\");\n$step3729 = 1;\n$al3732 = L[1260];\nif(typeof(run$task1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3732,run$task1);\n}\n$ans3731 = run$task1.app(anf_arg1796);\nbreak;\ncase 1: var cases3748 = $ans3731;\n$step3729 = 2;\n$al3732 = L[1259];\nvar $ann$check3779 = R._cA(L[1259],R.gDA(L[1259],\"E\",E42.dict.types,\"Either\"),cases3748);\nif(R.isContinuation($ann$check3779)) {\n$ans3731 = $ann$check3779;\n}\nbreak;\ncase 2: $al3732 = L[1249];\n$step3729 = $cases_dispatch3778[cases3748.$name] || 5;\nbreak;\ncase 3: if(cases3748.$arity !== 1) {\nif(cases3748.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[1248],1,cases3748.$arity,L[1249],cases3748.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[1248],true,L[1249],cases3748.$loc);\n}\n}\nvar $fn3751 = cases3748.$constructor.$fieldNames;\nvar y3749 = R.dF(cases3748.dict[$fn3751[0]],cases3748.$mut_fields_mask[0],false);\n$step3729 = 6;\n$ans3731 = y3749;\nbreak;\ncase 4: if(cases3748.$arity !== 1) {\nif(cases3748.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[1258],1,cases3748.$arity,L[1249],cases3748.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[1258],true,L[1249],cases3748.$loc);\n}\n}\n$step3729 = 6;\n$al3732 = L[1258];\nvar $temp_branch3771 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1249($err3752) {\nvar $step3772 = 0;\nvar $elidedFrames3776 = 0;\nvar $ans3773 = D;\nvar $al3774 = L[1251];\nif(R.isAR($err3752)) {\n$step3772 = $err3752.step;\n$al3774 = $err3752.from;\n$ans3773 = $err3752.ans;\n$elidedFrames3776 = $err3752.elidedFrames;\nerr3752 = $err3752.args[0];\nanf_fun3754 = $err3752.vars[0];\nanf_arg1797 = $err3752.vars[1];\n} else {\nvar err3752 = $err3752;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3773 = R.mC();\n}\nwhile(!R.isContinuation($ans3773)) {\nswitch($step3772) {\ncase 0: $ans3773 = R.getMaker2(list7,(\"make2\"),L[1250],L[1251]);\nvar anf_fun3754 = $ans3773;\n$step3772 = 1;\n$al3774 = L[1257];\nif(typeof(VS52.dict.values.dict[\"vs-str\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al3774,VS52.dict.values.dict[\"vs-str\"]);\n}\n$ans3773 = VS52.dict.values.dict[\"vs-str\"].app((\"Could not render this DataSeries because... \\n\"));\nbreak;\ncase 1: var anf_arg1797 = $ans3773;\n$step3772 = 2;\n$al3774 = L[1256];\nif(typeof(exn$unwrap2.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3774,exn$unwrap2);\n}\n$ans3773 = exn$unwrap2.app(err3752);\nbreak;\ncase 2: var anf_method_obj3753 = $ans3773;\n$step3772 = 3;\n$ans3773 = R.maybeMethodCall0(anf_method_obj3753,\"render-reason\",L[1252]);\nbreak;\ncase 3: var anf_arg1791 = $ans3773;\n$step3772 = 4;\n$al3774 = L[1255];\nif(typeof(RED48.dict.values.dict[\"display-to-string\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al3774,RED48.dict.values.dict[\"display-to-string\"]);\n}\n$ans3773 = RED48.dict.values.dict[\"display-to-string\"].app(anf_arg1791,tostring1,empty18);\nbreak;\ncase 4: var anf_arg1788 = $ans3773;\n$step3772 = 5;\n$al3774 = L[1254];\nif(typeof(VS52.dict.values.dict[\"vs-str\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al3774,VS52.dict.values.dict[\"vs-str\"]);\n}\n$ans3773 = VS52.dict.values.dict[\"vs-str\"].app(anf_arg1788);\nbreak;\ncase 5: var anf_arg3769 = $ans3773;\n$step3772 = 6;\n$al3774 = L[1251];\nif(typeof(anf_fun3754.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3774,anf_fun3754);\n}\n$ans3773 = anf_fun3754.app(anf_arg1797,anf_arg3769);\nbreak;\ncase 6: var anf_arg3770 = $ans3773;\n$step3772 = 7;\n$al3774 = L[1253];\nif(typeof(VS52.dict.values.dict[\"vs-seq\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al3774,VS52.dict.values.dict[\"vs-seq\"]);\n}\n$ans3773 = VS52.dict.values.dict[\"vs-seq\"].app(anf_arg3770);\nbreak;\ncase 7: ++R.GAS;\nreturn $ans3773;\ndefault: R.ffi.throwSpinnakerError(L[1251],$step3772);\n}\n}\nif($step3772 !== 7) {\n$ans3773.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3774,$temp_branch3771,$step3772,[err3752],[anf_fun3754,anf_arg1797],$elidedFrames3776);\n}\nreturn $ans3773;\n};\n$ans3731 = cases3748.$app_fields($temp_branch3771,[false]);\nbreak;\ncase 5: $ans3731 = R.throwNoCasesMatched(L[1249],cases3748);\n$step3729 = 6;\nbreak;\ncase 6: ++R.GAS;\nreturn $ans3731;\ndefault: R.ffi.throwSpinnakerError(L[1242],$step3729);\n}\n}\nif($step3729 !== 6) {\n$ans3731.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3732,$temp_full3730,$step3729,[self2798],[cases3748],$elidedFrames3734);\n}\nreturn $ans3731;\n};\nvar anf_shared4025 = R.makeMethod0($temp_full3730,\"_output\");\nvar $temp_lam3784 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1261($$resumer11) {\nvar $step3783 = 0;\nvar $elidedFrames3789 = 0;\nvar $ans3786 = D;\nvar $al3787 = L[1261];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1261],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans3786)) {\nswitch($step3783) {\ncase 0: $step3783 = 1;\n$ans3786 = line$plot$series3790.$var === D?U(L[1262],\"line-plot-series\"):line$plot$series3790.$var;\nbreak;\ncase 1: return $ans3786;\ndefault: R.ffi.throwSpinnakerError(L[1261],$step3783);\n}\n}\nreturn $ans3786;\n};\nvar anf_variant_member4029 = R.mF($temp_lam3784,\"\");\nvar $temp_full3793 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1263($self4765,$point$size3794) {\nvar $step3792 = 0;\nvar $elidedFrames3798 = 0;\nvar $ans3795 = D;\nvar $al3796 = L[1263];\nif(R.isAR($self4765)) {\n$step3792 = $self4765.step;\n$al3796 = $self4765.from;\n$ans3795 = $self4765.ans;\n$elidedFrames3798 = $self4765.elidedFrames;\nself4765 = $self4765.args[0];\npoint$size3794 = $self4765.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1263],2,$t,true);\n}\nvar self4765 = $self4765;\nvar point$size3794 = $point$size3794;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3795 = R.mC();\n}\nwhile(!R.isContinuation($ans3795)) {\nswitch($step3792) {\ncase 0: $step3792 = 1;\n$al3796 = L[1270];\nR._cA(L[1270],$type$Number3,point$size3794);\nbreak;\ncase 1: $step3792 = 2;\n$al3796 = L[1269];\n// omitting isFunction check;\n$ans3795 = _lessthan3.app(point$size3794,(0));\nbreak;\ncase 2: var anf_if3804 = $ans3795;\n$step3792 = R.checkPyretTrue(anf_if3804)?3:5;\nbreak;\ncase 3: $step3792 = 4;\n$al3796 = L[1268];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3796,raise1);\n}\n$ans3795 = raise1.app((\"point-size: Point Size must be non-negative\"));\nbreak;\ncase 4: $step3792 = 6;\n$ans3795 = nothing5;\nbreak;\ncase 5: $step3792 = 6;\n$ans3795 = nothing5;\nbreak;\ncase 6: $step3792 = 7;\n$ans3795 = R.maybeMethodCall0(self4765,\"constr\",L[1264]);\nbreak;\ncase 7: var anf_fun3800 = $ans3795;\n$al3796 = L[1265];\nvar anf_extend3799 = G(self4765,\"obj\",L[1265]);\nvar anf_arg1794 = R.extendObj(L[1266],anf_extend3799,{\"point-size\":point$size3794});\n$step3792 = 8;\n$al3796 = L[1267];\nif(typeof(anf_fun3800.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3796,anf_fun3800);\n}\n$ans3795 = anf_fun3800.app(anf_arg1794);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans3795;\ndefault: R.ffi.throwSpinnakerError(L[1263],$step3792);\n}\n}\nif($step3792 !== 8) {\n$ans3795.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3796,$temp_full3793,$step3792,[self4765,point$size3794],[],$elidedFrames3798);\n}\nreturn $ans3795;\n};\nvar anf_variant_member4043 = R.makeMethod1($temp_full3793,\"point-size\");\nvar $temp_full3807 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1271($self3808,$use$image$sizes3809) {\nvar $step3806 = 0;\nvar $elidedFrames3813 = 0;\nvar $ans3810 = D;\nvar $al3811 = L[1271];\nif(R.isAR($self3808)) {\n$step3806 = $self3808.step;\n$al3811 = $self3808.from;\n$ans3810 = $self3808.ans;\n$elidedFrames3813 = $self3808.elidedFrames;\nself3808 = $self3808.args[0];\nuse$image$sizes3809 = $self3808.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1271],2,$t,true);\n}\nvar self3808 = $self3808;\nvar use$image$sizes3809 = $use$image$sizes3809;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3810 = R.mC();\n}\nwhile(!R.isContinuation($ans3810)) {\nswitch($step3806) {\ncase 0: $step3806 = 1;\n$al3811 = L[1276];\nR._cA(L[1276],$type$Boolean6,use$image$sizes3809);\nbreak;\ncase 1: $step3806 = 2;\n$ans3810 = R.maybeMethodCall0(self3808,\"constr\",L[1272]);\nbreak;\ncase 2: var anf_fun1828 = $ans3810;\n$al3811 = L[1273];\nvar anf_extend3814 = G(self3808,\"obj\",L[1273]);\nvar anf_arg1829 = R.extendObj(L[1274],anf_extend3814,{\"useImageSizes\":use$image$sizes3809});\n$step3806 = 3;\n$al3811 = L[1275];\nif(typeof(anf_fun1828.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3811,anf_fun1828);\n}\n$ans3810 = anf_fun1828.app(anf_arg1829);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans3810;\ndefault: R.ffi.throwSpinnakerError(L[1271],$step3806);\n}\n}\nif($step3806 !== 3) {\n$ans3810.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3811,$temp_full3807,$step3806,[self3808,use$image$sizes3809],[],$elidedFrames3813);\n}\nreturn $ans3810;\n};\nvar anf_variant_member4044 = R.makeMethod1($temp_full3807,\"use-image-sizes\");\nvar $temp_lam3817 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1277($$resumer11) {\nvar $step3816 = 0;\nvar $elidedFrames3821 = 0;\nvar $ans3818 = D;\nvar $al3819 = L[1277];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1277],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans3818)) {\nswitch($step3816) {\ncase 0: $step3816 = 1;\n$ans3818 = scatter$plot$series3822.$var === D?U(L[1278],\"scatter-plot-series\"):scatter$plot$series3822.$var;\nbreak;\ncase 1: return $ans3818;\ndefault: R.ffi.throwSpinnakerError(L[1277],$step3816);\n}\n}\nreturn $ans3818;\n};\nvar anf_variant_member4054 = R.mF($temp_lam3817,\"\");\nvar $temp_full3827 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1279($self2528,$point$size3828) {\nvar $step3826 = 0;\nvar $elidedFrames3832 = 0;\nvar $ans3829 = D;\nvar $al3830 = L[1279];\nif(R.isAR($self2528)) {\n$step3826 = $self2528.step;\n$al3830 = $self2528.from;\n$ans3829 = $self2528.ans;\n$elidedFrames3832 = $self2528.elidedFrames;\nself2528 = $self2528.args[0];\npoint$size3828 = $self2528.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1279],2,$t,true);\n}\nvar self2528 = $self2528;\nvar point$size3828 = $point$size3828;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3829 = R.mC();\n}\nwhile(!R.isContinuation($ans3829)) {\nswitch($step3826) {\ncase 0: $step3826 = 1;\n$al3830 = L[1286];\nR._cA(L[1286],$type$Number3,point$size3828);\nbreak;\ncase 1: $step3826 = 2;\n$al3830 = L[1285];\n// omitting isFunction check;\n$ans3829 = _lessequal4.app(point$size3828,(0));\nbreak;\ncase 2: var anf_if3834 = $ans3829;\n$step3826 = R.checkPyretTrue(anf_if3834)?3:5;\nbreak;\ncase 3: $step3826 = 4;\n$al3830 = L[1284];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3830,raise1);\n}\n$ans3829 = raise1.app((\"point-size: Point Size must be positive\"));\nbreak;\ncase 4: $step3826 = 6;\n$ans3829 = nothing5;\nbreak;\ncase 5: $step3826 = 6;\n$ans3829 = nothing5;\nbreak;\ncase 6: $step3826 = 7;\n$ans3829 = R.maybeMethodCall0(self2528,\"constr\",L[1280]);\nbreak;\ncase 7: var anf_fun4176 = $ans3829;\n$al3830 = L[1281];\nvar anf_extend3833 = G(self2528,\"obj\",L[1281]);\nvar anf_arg1827 = R.extendObj(L[1282],anf_extend3833,{\"point-size\":point$size3828});\n$step3826 = 8;\n$al3830 = L[1283];\nif(typeof(anf_fun4176.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3830,anf_fun4176);\n}\n$ans3829 = anf_fun4176.app(anf_arg1827);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans3829;\ndefault: R.ffi.throwSpinnakerError(L[1279],$step3826);\n}\n}\nif($step3826 !== 8) {\n$ans3829.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3830,$temp_full3827,$step3826,[self2528,point$size3828],[],$elidedFrames3832);\n}\nreturn $ans3829;\n};\nvar anf_variant_member4055 = R.makeMethod1($temp_full3827,\"point-size\");\nvar $temp_full3837 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1287($self3838,$use$image$sizes3839) {\nvar $step3836 = 0;\nvar $elidedFrames3844 = 0;\nvar $ans3841 = D;\nvar $al3842 = L[1287];\nif(R.isAR($self3838)) {\n$step3836 = $self3838.step;\n$al3842 = $self3838.from;\n$ans3841 = $self3838.ans;\n$elidedFrames3844 = $self3838.elidedFrames;\nself3838 = $self3838.args[0];\nuse$image$sizes3839 = $self3838.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1287],2,$t,true);\n}\nvar self3838 = $self3838;\nvar use$image$sizes3839 = $use$image$sizes3839;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3841 = R.mC();\n}\nwhile(!R.isContinuation($ans3841)) {\nswitch($step3836) {\ncase 0: $step3836 = 1;\n$al3842 = L[1292];\nR._cA(L[1292],$type$Boolean6,use$image$sizes3839);\nbreak;\ncase 1: $step3836 = 2;\n$ans3841 = R.maybeMethodCall0(self3838,\"constr\",L[1288]);\nbreak;\ncase 2: var anf_fun1846 = $ans3841;\n$al3842 = L[1289];\nvar anf_extend3845 = G(self3838,\"obj\",L[1289]);\nvar anf_arg1847 = R.extendObj(L[1290],anf_extend3845,{\"useImageSizes\":use$image$sizes3839});\n$step3836 = 3;\n$al3842 = L[1291];\nif(typeof(anf_fun1846.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3842,anf_fun1846);\n}\n$ans3841 = anf_fun1846.app(anf_arg1847);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans3841;\ndefault: R.ffi.throwSpinnakerError(L[1287],$step3836);\n}\n}\nif($step3836 !== 3) {\n$ans3841.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3842,$temp_full3837,$step3836,[self3838,use$image$sizes3839],[],$elidedFrames3844);\n}\nreturn $ans3841;\n};\nvar anf_variant_member4056 = R.makeMethod1($temp_full3837,\"use-image-sizes\");\nvar $temp_lam3848 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1293($$resumer11) {\nvar $step3847 = 0;\nvar $elidedFrames3853 = 0;\nvar $ans3850 = D;\nvar $al3851 = L[1293];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1293],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans3850)) {\nswitch($step3847) {\ncase 0: $step3847 = 1;\n$ans3850 = dot$plot$series3854.$var === D?U(L[1294],\"dot-plot-series\"):dot$plot$series3854.$var;\nbreak;\ncase 1: return $ans3850;\ndefault: R.ffi.throwSpinnakerError(L[1293],$step3847);\n}\n}\nreturn $ans3850;\n};\nvar anf_variant_member4065 = R.mF($temp_lam3848,\"\");\nvar $temp_full3857 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1295($self3858,$point$size3859) {\nvar $step3856 = 0;\nvar $elidedFrames3863 = 0;\nvar $ans3860 = D;\nvar $al3861 = L[1295];\nif(R.isAR($self3858)) {\n$step3856 = $self3858.step;\n$al3861 = $self3858.from;\n$ans3860 = $self3858.ans;\n$elidedFrames3863 = $self3858.elidedFrames;\nself3858 = $self3858.args[0];\npoint$size3859 = $self3858.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1295],2,$t,true);\n}\nvar self3858 = $self3858;\nvar point$size3859 = $point$size3859;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3860 = R.mC();\n}\nwhile(!R.isContinuation($ans3860)) {\nswitch($step3856) {\ncase 0: $step3856 = 1;\n$al3861 = L[1302];\nR._cA(L[1302],$type$Number3,point$size3859);\nbreak;\ncase 1: $step3856 = 2;\n$al3861 = L[1301];\n// omitting isFunction check;\n$ans3860 = _lessthan3.app(point$size3859,(0));\nbreak;\ncase 2: var anf_if3867 = $ans3860;\n$step3856 = R.checkPyretTrue(anf_if3867)?3:5;\nbreak;\ncase 3: $step3856 = 4;\n$al3861 = L[1300];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3861,raise1);\n}\n$ans3860 = raise1.app((\"point-size: Point Size must be non-negative\"));\nbreak;\ncase 4: $step3856 = 6;\n$ans3860 = nothing5;\nbreak;\ncase 5: $step3856 = 6;\n$ans3860 = nothing5;\nbreak;\ncase 6: $step3856 = 7;\n$ans3860 = R.maybeMethodCall0(self3858,\"constr\",L[1296]);\nbreak;\ncase 7: var anf_fun3865 = $ans3860;\n$al3861 = L[1297];\nvar anf_extend3864 = G(self3858,\"obj\",L[1297]);\nvar anf_arg3866 = R.extendObj(L[1298],anf_extend3864,{\"point-size\":point$size3859});\n$step3856 = 8;\n$al3861 = L[1299];\nif(typeof(anf_fun3865.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3861,anf_fun3865);\n}\n$ans3860 = anf_fun3865.app(anf_arg3866);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans3860;\ndefault: R.ffi.throwSpinnakerError(L[1295],$step3856);\n}\n}\nif($step3856 !== 8) {\n$ans3860.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3861,$temp_full3857,$step3856,[self3858,point$size3859],[],$elidedFrames3863);\n}\nreturn $ans3860;\n};\nvar anf_variant_member4066 = R.makeMethod1($temp_full3857,\"point-size\");\nvar $temp_full3870 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1303($self4871,$use$image$sizes3871) {\nvar $step3869 = 0;\nvar $elidedFrames3875 = 0;\nvar $ans3872 = D;\nvar $al3873 = L[1303];\nif(R.isAR($self4871)) {\n$step3869 = $self4871.step;\n$al3873 = $self4871.from;\n$ans3872 = $self4871.ans;\n$elidedFrames3875 = $self4871.elidedFrames;\nself4871 = $self4871.args[0];\nuse$image$sizes3871 = $self4871.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1303],2,$t,true);\n}\nvar self4871 = $self4871;\nvar use$image$sizes3871 = $use$image$sizes3871;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3872 = R.mC();\n}\nwhile(!R.isContinuation($ans3872)) {\nswitch($step3869) {\ncase 0: $step3869 = 1;\n$al3873 = L[1308];\nR._cA(L[1308],$type$Boolean6,use$image$sizes3871);\nbreak;\ncase 1: $step3869 = 2;\n$ans3872 = R.maybeMethodCall0(self4871,\"constr\",L[1304]);\nbreak;\ncase 2: var anf_fun3877 = $ans3872;\n$al3873 = L[1305];\nvar anf_extend3876 = G(self4871,\"obj\",L[1305]);\nvar anf_arg4118 = R.extendObj(L[1306],anf_extend3876,{\"useImageSizes\":use$image$sizes3871});\n$step3869 = 3;\n$al3873 = L[1307];\nif(typeof(anf_fun3877.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3873,anf_fun3877);\n}\n$ans3872 = anf_fun3877.app(anf_arg4118);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans3872;\ndefault: R.ffi.throwSpinnakerError(L[1303],$step3869);\n}\n}\nif($step3869 !== 3) {\n$ans3872.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3873,$temp_full3870,$step3869,[self4871,use$image$sizes3871],[],$elidedFrames3875);\n}\nreturn $ans3872;\n};\nvar anf_variant_member4067 = R.makeMethod1($temp_full3870,\"use-image-sizes\");\nvar $temp_lam3880 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1309($$resumer11) {\nvar $step3879 = 0;\nvar $elidedFrames3886 = 0;\nvar $ans3883 = D;\nvar $al3884 = L[1309];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1309],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans3883)) {\nswitch($step3879) {\ncase 0: $step3879 = 1;\n$ans3883 = categorical$dot$plot$series3887.$var === D?U(L[1310],\"categorical-dot-plot-series\"):categorical$dot$plot$series3887.$var;\nbreak;\ncase 1: return $ans3883;\ndefault: R.ffi.throwSpinnakerError(L[1309],$step3879);\n}\n}\nreturn $ans3883;\n};\nvar anf_variant_member4076 = R.mF($temp_lam3880,\"\");\nvar $temp_lam3892 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1311($$resumer11) {\nvar $step3891 = 0;\nvar $elidedFrames3897 = 0;\nvar $ans3894 = D;\nvar $al3895 = L[1311];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1311],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans3894)) {\nswitch($step3891) {\ncase 0: $step3891 = 1;\n$ans3894 = function$plot$series3898.$var === D?U(L[1312],\"function-plot-series\"):function$plot$series3898.$var;\nbreak;\ncase 1: return $ans3894;\ndefault: R.ffi.throwSpinnakerError(L[1311],$step3891);\n}\n}\nreturn $ans3894;\n};\nvar anf_variant_member4085 = R.mF($temp_lam3892,\"\");\nvar $temp_lam3901 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1313($$resumer11) {\nvar $step3900 = 0;\nvar $elidedFrames3905 = 0;\nvar $ans3902 = D;\nvar $al3903 = L[1313];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1313],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans3902)) {\nswitch($step3900) {\ncase 0: $step3900 = 1;\n$ans3902 = pie$chart$series3906.$var === D?U(L[1314],\"pie-chart-series\"):pie$chart$series3906.$var;\nbreak;\ncase 1: return $ans3902;\ndefault: R.ffi.throwSpinnakerError(L[1313],$step3900);\n}\n}\nreturn $ans3902;\n};\nvar anf_variant_member4103 = R.mF($temp_lam3901,\"\");\nvar $temp_lam3909 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1315($$resumer11) {\nvar $step3908 = 0;\nvar $elidedFrames3914 = 0;\nvar $ans3911 = D;\nvar $al3912 = L[1315];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1315],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans3911)) {\nswitch($step3908) {\ncase 0: $step3908 = 1;\n$ans3911 = bar$chart$series3915.$var === D?U(L[1316],\"bar-chart-series\"):bar$chart$series3915.$var;\nbreak;\ncase 1: return $ans3911;\ndefault: R.ffi.throwSpinnakerError(L[1315],$step3908);\n}\n}\nreturn $ans3911;\n};\nvar anf_variant_member6196 = R.mF($temp_lam3909,\"\");\nvar $temp_full3918 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1317($self3919,$point$size3920) {\nvar $step3917 = 0;\nvar $elidedFrames3925 = 0;\nvar $ans3922 = D;\nvar $al3923 = L[1317];\nif(R.isAR($self3919)) {\n$step3917 = $self3919.step;\n$al3923 = $self3919.from;\n$ans3922 = $self3919.ans;\n$elidedFrames3925 = $self3919.elidedFrames;\nself3919 = $self3919.args[0];\npoint$size3920 = $self3919.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1317],2,$t,true);\n}\nvar self3919 = $self3919;\nvar point$size3920 = $point$size3920;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3922 = R.mC();\n}\nwhile(!R.isContinuation($ans3922)) {\nswitch($step3917) {\ncase 0: $step3917 = 1;\n$al3923 = L[1324];\nR._cA(L[1324],$type$Number3,point$size3920);\nbreak;\ncase 1: $step3917 = 2;\n$al3923 = L[1323];\n// omitting isFunction check;\n$ans3922 = _lessthan3.app(point$size3920,(0));\nbreak;\ncase 2: var anf_if3928 = $ans3922;\n$step3917 = R.checkPyretTrue(anf_if3928)?3:5;\nbreak;\ncase 3: $step3917 = 4;\n$al3923 = L[1322];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3923,raise1);\n}\n$ans3922 = raise1.app((\"point-size: Point Size must be non-negative\"));\nbreak;\ncase 4: $step3917 = 6;\n$ans3922 = nothing5;\nbreak;\ncase 5: $step3917 = 6;\n$ans3922 = nothing5;\nbreak;\ncase 6: $step3917 = 7;\n$ans3922 = R.maybeMethodCall0(self3919,\"constr\",L[1318]);\nbreak;\ncase 7: var anf_fun3927 = $ans3922;\n$al3923 = L[1319];\nvar anf_extend3926 = G(self3919,\"obj\",L[1319]);\nvar anf_arg1880 = R.extendObj(L[1320],anf_extend3926,{\"point-size\":point$size3920});\n$step3917 = 8;\n$al3923 = L[1321];\nif(typeof(anf_fun3927.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3923,anf_fun3927);\n}\n$ans3922 = anf_fun3927.app(anf_arg1880);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans3922;\ndefault: R.ffi.throwSpinnakerError(L[1317],$step3917);\n}\n}\nif($step3917 !== 8) {\n$ans3922.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3923,$temp_full3918,$step3917,[self3919,point$size3920],[],$elidedFrames3925);\n}\nreturn $ans3922;\n};\nvar anf_variant_member4130 = R.makeMethod1($temp_full3918,\"point-size\");\nvar $temp_lam3932 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1325($$resumer11) {\nvar $step3931 = 0;\nvar $elidedFrames3936 = 0;\nvar $ans3933 = D;\nvar $al3934 = L[1325];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1325],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans3933)) {\nswitch($step3931) {\ncase 0: $step3931 = 1;\n$ans3933 = interval$chart$series3937.$var === D?U(L[1326],\"interval-chart-series\"):interval$chart$series3937.$var;\nbreak;\ncase 1: return $ans3933;\ndefault: R.ffi.throwSpinnakerError(L[1325],$step3931);\n}\n}\nreturn $ans3933;\n};\nvar anf_variant_member4131 = R.mF($temp_lam3932,\"\");\nvar $temp_lam3940 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1327($$resumer11) {\nvar $step3939 = 0;\nvar $elidedFrames3945 = 0;\nvar $ans3942 = D;\nvar $al3943 = L[1327];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1327],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans3942)) {\nswitch($step3939) {\ncase 0: $step3939 = 1;\n$ans3942 = multi$bar$chart$series3946.$var === D?U(L[1328],\"multi-bar-chart-series\"):multi$bar$chart$series3946.$var;\nbreak;\ncase 1: return $ans3942;\ndefault: R.ffi.throwSpinnakerError(L[1327],$step3939);\n}\n}\nreturn $ans3942;\n};\nvar anf_variant_member4146 = R.mF($temp_lam3940,\"\");\nvar $temp_lam3949 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1329($$resumer11) {\nvar $step3948 = 0;\nvar $elidedFrames3953 = 0;\nvar $ans3950 = D;\nvar $al3951 = L[1329];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1329],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans3950)) {\nswitch($step3948) {\ncase 0: $step3948 = 1;\n$ans3950 = box$plot$series3954.$var === D?U(L[1330],\"box-plot-series\"):box$plot$series3954.$var;\nbreak;\ncase 1: return $ans3950;\ndefault: R.ffi.throwSpinnakerError(L[1329],$step3948);\n}\n}\nreturn $ans3950;\n};\nvar anf_variant_member4156 = R.mF($temp_lam3949,\"\");\nvar $temp_full3958 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1331($self3959,$show3960) {\nvar $step3957 = 0;\nvar $elidedFrames3964 = 0;\nvar $ans3961 = D;\nvar $al3962 = L[1331];\nif(R.isAR($self3959)) {\n$step3957 = $self3959.step;\n$al3962 = $self3959.from;\n$ans3961 = $self3959.ans;\n$elidedFrames3964 = $self3959.elidedFrames;\nself3959 = $self3959.args[0];\nshow3960 = $self3959.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1331],2,$t,true);\n}\nvar self3959 = $self3959;\nvar show3960 = $show3960;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3961 = R.mC();\n}\nwhile(!R.isContinuation($ans3961)) {\nswitch($step3957) {\ncase 0: $step3957 = 1;\n$ans3961 = R.maybeMethodCall0(self3959,\"constr\",L[1332]);\nbreak;\ncase 1: var anf_fun3966 = $ans3961;\n$al3962 = L[1333];\nvar anf_extend3965 = G(self3959,\"obj\",L[1333]);\nvar anf_arg1888 = R.extendObj(L[1334],anf_extend3965,{\"show-outliers\":show3960});\n$step3957 = 2;\n$al3962 = L[1335];\nif(typeof(anf_fun3966.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3962,anf_fun3966);\n}\n$ans3961 = anf_fun3966.app(anf_arg1888);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans3961;\ndefault: R.ffi.throwSpinnakerError(L[1331],$step3957);\n}\n}\nif($step3957 !== 2) {\n$ans3961.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3962,$temp_full3958,$step3957,[self3959,show3960],[],$elidedFrames3964);\n}\nreturn $ans3961;\n};\nvar anf_variant_member4157 = R.makeMethod1($temp_full3958,\"show-outliers\");\nvar $temp_lam3969 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1336($$resumer11) {\nvar $step3968 = 0;\nvar $elidedFrames3973 = 0;\nvar $ans3970 = D;\nvar $al3971 = L[1336];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1336],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans3970)) {\nswitch($step3968) {\ncase 0: $step3968 = 1;\n$ans3970 = histogram$series3974.$var === D?U(L[1337],\"histogram-series\"):histogram$series3974.$var;\nbreak;\ncase 1: return $ans3970;\ndefault: R.ffi.throwSpinnakerError(L[1336],$step3968);\n}\n}\nreturn $ans3970;\n};\nvar anf_variant_member4168 = R.mF($temp_lam3969,\"\");\nvar $temp_full3977 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1338($self2723,$bin$width3978) {\nvar $step3976 = 0;\nvar $elidedFrames3983 = 0;\nvar $ans3980 = D;\nvar $al3981 = L[1338];\nif(R.isAR($self2723)) {\n$step3976 = $self2723.step;\n$al3981 = $self2723.from;\n$ans3980 = $self2723.ans;\n$elidedFrames3983 = $self2723.elidedFrames;\nself2723 = $self2723.args[0];\nbin$width3978 = $self2723.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1338],2,$t,true);\n}\nvar self2723 = $self2723;\nvar bin$width3978 = $bin$width3978;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3980 = R.mC();\n}\nwhile(!R.isContinuation($ans3980)) {\nswitch($step3976) {\ncase 0: $step3976 = 1;\n$al3981 = L[1343];\nR._cA(L[1343],$type$Number3,bin$width3978);\nbreak;\ncase 1: var anf_fun1906 = histogram$series3974.$var === D?U(L[1339],\"histogram-series\"):histogram$series3974.$var;\n$al3981 = L[1340];\nvar anf_extend3984 = G(self2723,\"obj\",L[1340]);\n// caller optimization;\n$ans3980 = some33.app(bin$width3978);\nvar anf_extend3985 = $ans3980;\nvar anf_arg1894 = R.extendObj(L[1341],anf_extend3984,{\"bin-width\":anf_extend3985});\n$step3976 = 2;\n$al3981 = L[1342];\nif(typeof(anf_fun1906.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3981,anf_fun1906);\n}\n$ans3980 = anf_fun1906.app(anf_arg1894);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans3980;\ndefault: R.ffi.throwSpinnakerError(L[1338],$step3976);\n}\n}\nif($step3976 !== 2) {\n$ans3980.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3981,$temp_full3977,$step3976,[self2723,bin$width3978],[],$elidedFrames3983);\n}\nreturn $ans3980;\n};\nvar anf_variant_member4169 = R.makeMethod1($temp_full3977,\"bin-width\");\nvar $temp_full3988 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1344($self3989,$max$num$bins3990) {\nvar $step3987 = 0;\nvar $elidedFrames3994 = 0;\nvar $ans3991 = D;\nvar $al3992 = L[1344];\nif(R.isAR($self3989)) {\n$step3987 = $self3989.step;\n$al3992 = $self3989.from;\n$ans3991 = $self3989.ans;\n$elidedFrames3994 = $self3989.elidedFrames;\nself3989 = $self3989.args[0];\nmax$num$bins3990 = $self3989.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1344],2,$t,true);\n}\nvar self3989 = $self3989;\nvar max$num$bins3990 = $max$num$bins3990;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans3991 = R.mC();\n}\nwhile(!R.isContinuation($ans3991)) {\nswitch($step3987) {\ncase 0: $step3987 = 1;\n$al3992 = L[1349];\nR._cA(L[1349],$type$Number3,max$num$bins3990);\nbreak;\ncase 1: var anf_fun1901 = histogram$series3974.$var === D?U(L[1345],\"histogram-series\"):histogram$series3974.$var;\n$al3992 = L[1346];\nvar anf_extend3995 = G(self3989,\"obj\",L[1346]);\n// caller optimization;\n$ans3991 = some33.app(max$num$bins3990);\nvar anf_extend3996 = $ans3991;\nvar anf_arg4268 = R.extendObj(L[1347],anf_extend3995,{\"max-num-bins\":anf_extend3996});\n$step3987 = 2;\n$al3992 = L[1348];\nif(typeof(anf_fun1901.app) !== \"function\") {\nR.ffi.throwNonFunApp($al3992,anf_fun1901);\n}\n$ans3991 = anf_fun1901.app(anf_arg4268);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans3991;\ndefault: R.ffi.throwSpinnakerError(L[1344],$step3987);\n}\n}\nif($step3987 !== 2) {\n$ans3991.stack[R.EXN_STACKHEIGHT++] = R.mAR($al3992,$temp_full3988,$step3987,[self3989,max$num$bins3990],[],$elidedFrames3994);\n}\nreturn $ans3991;\n};\nvar anf_variant_member4170 = R.makeMethod1($temp_full3988,\"max-num-bins\");\nvar $temp_full4000 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1350($self5016,$min$num$bins4001) {\nvar $step3999 = 0;\nvar $elidedFrames4005 = 0;\nvar $ans4002 = D;\nvar $al4003 = L[1350];\nif(R.isAR($self5016)) {\n$step3999 = $self5016.step;\n$al4003 = $self5016.from;\n$ans4002 = $self5016.ans;\n$elidedFrames4005 = $self5016.elidedFrames;\nself5016 = $self5016.args[0];\nmin$num$bins4001 = $self5016.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1350],2,$t,true);\n}\nvar self5016 = $self5016;\nvar min$num$bins4001 = $min$num$bins4001;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4002 = R.mC();\n}\nwhile(!R.isContinuation($ans4002)) {\nswitch($step3999) {\ncase 0: $step3999 = 1;\n$al4003 = L[1355];\nR._cA(L[1355],$type$Number3,min$num$bins4001);\nbreak;\ncase 1: var anf_fun4008 = histogram$series3974.$var === D?U(L[1351],\"histogram-series\"):histogram$series3974.$var;\n$al4003 = L[1352];\nvar anf_extend4006 = G(self5016,\"obj\",L[1352]);\n// caller optimization;\n$ans4002 = some33.app(min$num$bins4001);\nvar anf_extend4007 = $ans4002;\nvar anf_arg1904 = R.extendObj(L[1353],anf_extend4006,{\"min-num-bins\":anf_extend4007});\n$step3999 = 2;\n$al4003 = L[1354];\nif(typeof(anf_fun4008.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4003,anf_fun4008);\n}\n$ans4002 = anf_fun4008.app(anf_arg1904);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans4002;\ndefault: R.ffi.throwSpinnakerError(L[1350],$step3999);\n}\n}\nif($step3999 !== 2) {\n$ans4002.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4003,$temp_full4000,$step3999,[self5016,min$num$bins4001],[],$elidedFrames4005);\n}\nreturn $ans4002;\n};\nvar anf_variant_member4171 = R.makeMethod1($temp_full4000,\"min-num-bins\");\nvar $temp_full4013 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1356($self4014,$num$bins4015) {\nvar $step4012 = 0;\nvar $elidedFrames4019 = 0;\nvar $ans4016 = D;\nvar $al4017 = L[1356];\nif(R.isAR($self4014)) {\n$step4012 = $self4014.step;\n$al4017 = $self4014.from;\n$ans4016 = $self4014.ans;\n$elidedFrames4019 = $self4014.elidedFrames;\nself4014 = $self4014.args[0];\nnum$bins4015 = $self4014.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1356],2,$t,true);\n}\nvar self4014 = $self4014;\nvar num$bins4015 = $num$bins4015;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4016 = R.mC();\n}\nwhile(!R.isContinuation($ans4016)) {\nswitch($step4012) {\ncase 0: $step4012 = 1;\n$al4017 = L[1361];\nR._cA(L[1361],$type$Number3,num$bins4015);\nbreak;\ncase 1: var anf_fun4023 = histogram$series3974.$var === D?U(L[1357],\"histogram-series\"):histogram$series3974.$var;\n$al4017 = L[1358];\nvar anf_extend4020 = G(self4014,\"obj\",L[1358]);\n// caller optimization;\n$ans4016 = some33.app(num$bins4015);\nvar anf_extend4021 = $ans4016;\n// caller optimization;\n$ans4016 = some33.app(num$bins4015);\nvar anf_extend4022 = $ans4016;\nvar anf_arg1940 = R.extendObj(L[1359],anf_extend4020,{\"min-num-bins\":anf_extend4021,\n\"max-num-bins\":anf_extend4022});\n$step4012 = 2;\n$al4017 = L[1360];\nif(typeof(anf_fun4023.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4017,anf_fun4023);\n}\n$ans4016 = anf_fun4023.app(anf_arg1940);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans4016;\ndefault: R.ffi.throwSpinnakerError(L[1356],$step4012);\n}\n}\nif($step4012 !== 2) {\n$ans4016.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4017,$temp_full4013,$step4012,[self4014,num$bins4015],[],$elidedFrames4019);\n}\nreturn $ans4016;\n};\nvar anf_variant_member4172 = R.makeMethod1($temp_full4013,\"num-bins\");\nvar $line$plot$series_getfields4047 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $line$plot$series_mutablemask4046 = [false];\nvar $line$plot$series$base4026 = {\"$fieldNames\":[\"obj\"],\n\"_output\":anf_shared4025,\n\"is-single\":(false),\n\"constr\":anf_variant_member4029,\n\"color\":color$method4030,\n\"legend\":legend$method4031,\n\"curved\":curve$method4032,\n\"linewidth\":line$width$method4033,\n\"trendline-type\":trendline$type$method4034,\n\"trendline-color\":trendline$color$method4035,\n\"trendline-width\":trendline$width$method4036,\n\"trendline-opacity\":trendline$opacity$method4037,\n\"dashed-line\":dashed$line$method4038,\n\"dashline-style\":dashed$line$style$method4039,\n\"point-shape\":pointshape$method4040,\n\"labels\":labels$method4041,\n\"image-labels\":image$labels$method4042,\n\"point-size\":anf_variant_member4043,\n\"use-image-sizes\":anf_variant_member4044,\n\"horizontal\":horizontal$method4045,\n\"_match\":R.mM(\"line-plot-series\",1)};\nvar $line$plot$series$brander4027 = R.nB(\"line-plot-series\",L[1362]);\nvar $line$plot$series$brands4028 = {};\n$line$plot$series$brands4028[DataSeries340._brand] = true;\n$line$plot$series$brands4028[$line$plot$series$brander4027._brand] = true;\nvar line$plot$series4048 = R.mVC(L[1362],function $synthesizedConstructor_$line$plot$series$base() {\nreturn [LinePlotSeries4049];\n},[\"obj4050\"],[L[1363]],[false],[\"obj4050\"],$line$plot$series_mutablemask4046,$line$plot$series$base4026,$line$plot$series$brands4028,\"line-plot-series\",$line$plot$series_getfields4047,$line$plot$series$base4026);\nvar $scatter$plot$series_getfields4058 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $scatter$plot$series_mutablemask4057 = [false];\nvar $scatter$plot$series$base4051 = {\"$fieldNames\":[\"obj\"],\n\"_output\":anf_shared4025,\n\"trendline-type\":trendline$type$method4034,\n\"trendline-color\":trendline$color$method4035,\n\"trendline-width\":trendline$width$method4036,\n\"trendline-opacity\":trendline$opacity$method4037,\n\"is-single\":(false),\n\"constr\":anf_variant_member4054,\n\"color\":color$method4030,\n\"legend\":legend$method4031,\n\"labels\":labels$method4041,\n\"image-labels\":image$labels$method4042,\n\"point-shape\":pointshape$method4040,\n\"point-size\":anf_variant_member4055,\n\"use-image-sizes\":anf_variant_member4056,\n\"horizontal\":horizontal$method4045,\n\"_match\":R.mM(\"scatter-plot-series\",1)};\nvar $scatter$plot$series$brander4052 = R.nB(\"scatter-plot-series\",L[1364]);\nvar $scatter$plot$series$brands4053 = {};\n$scatter$plot$series$brands4053[DataSeries340._brand] = true;\n$scatter$plot$series$brands4053[$scatter$plot$series$brander4052._brand] = true;\nvar scatter$plot$series4059 = R.mVC(L[1364],function $synthesizedConstructor_$scatter$plot$series$base() {\nreturn [ScatterPlotSeries4060];\n},[\"obj4061\"],[L[1365]],[false],[\"obj4061\"],$scatter$plot$series_mutablemask4057,$scatter$plot$series$base4051,$scatter$plot$series$brands4053,\"scatter-plot-series\",$scatter$plot$series_getfields4058,$scatter$plot$series$base4051);\nvar $dot$plot$series_getfields4069 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $dot$plot$series_mutablemask4068 = [false];\nvar $dot$plot$series$base4062 = {\"$fieldNames\":[\"obj\"],\n\"_output\":anf_shared4025,\n\"is-single\":(true),\n\"constr\":anf_variant_member4065,\n\"color\":color$method4030,\n\"legend\":legend$method4031,\n\"image-labels\":image$labels$method4042,\n\"labels\":labels$method4041,\n\"point-size\":anf_variant_member4066,\n\"use-image-sizes\":anf_variant_member4067,\n\"_match\":R.mM(\"dot-plot-series\",1)};\nvar $dot$plot$series$brander4063 = R.nB(\"dot-plot-series\",L[1366]);\nvar $dot$plot$series$brands4064 = {};\n$dot$plot$series$brands4064[DataSeries340._brand] = true;\n$dot$plot$series$brands4064[$dot$plot$series$brander4063._brand] = true;\nvar dot$plot$series4070 = R.mVC(L[1366],function $synthesizedConstructor_$dot$plot$series$base() {\nreturn [DotPlotSeries4071];\n},[\"obj4072\"],[L[1367]],[false],[\"obj4072\"],$dot$plot$series_mutablemask4068,$dot$plot$series$base4062,$dot$plot$series$brands4064,\"dot-plot-series\",$dot$plot$series_getfields4069,$dot$plot$series$base4062);\nvar $categorical$dot$plot$series_getfields4078 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $categorical$dot$plot$series_mutablemask4077 = [false];\nvar $categorical$dot$plot$series$base4073 = {\"$fieldNames\":[\"obj\"],\n\"_output\":anf_shared4025,\n\"is-single\":(true),\n\"constr\":anf_variant_member4076,\n\"color\":color$method4030,\n\"legend\":legend$method4031,\n\"_match\":R.mM(\"categorical-dot-plot-series\",1)};\nvar $categorical$dot$plot$series$brander4074 = R.nB(\"categorical-dot-plot-series\",L[1368]);\nvar $categorical$dot$plot$series$brands4075 = {};\n$categorical$dot$plot$series$brands4075[DataSeries340._brand] = true;\n$categorical$dot$plot$series$brands4075[$categorical$dot$plot$series$brander4074._brand] = true;\nvar categorical$dot$plot$series4079 = R.mVC(L[1368],function $synthesizedConstructor_$categorical$dot$plot$series$base() {\nreturn [CategoricalDotPlotSeries4080];\n},[\"obj4081\"],[L[1369]],[false],[\"obj4081\"],$categorical$dot$plot$series_mutablemask4077,$categorical$dot$plot$series$base4073,$categorical$dot$plot$series$brands4075,\"categorical-dot-plot-series\",$categorical$dot$plot$series_getfields4078,$categorical$dot$plot$series$base4073);\nvar $function$plot$series_getfields4087 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $function$plot$series_mutablemask4086 = [false];\nvar $function$plot$series$base4082 = {\"$fieldNames\":[\"obj\"],\n\"_output\":anf_shared4025,\n\"is-single\":(false),\n\"constr\":anf_variant_member4085,\n\"color\":color$method4030,\n\"legend\":legend$method4031,\n\"horizontal\":horizontal$method4045,\n\"_match\":R.mM(\"function-plot-series\",1)};\nvar $function$plot$series$brander4083 = R.nB(\"function-plot-series\",L[1370]);\nvar $function$plot$series$brands4084 = {};\n$function$plot$series$brands4084[DataSeries340._brand] = true;\n$function$plot$series$brands4084[$function$plot$series$brander4083._brand] = true;\nvar function$plot$series4088 = R.mVC(L[1370],function $synthesizedConstructor_$function$plot$series$base() {\nreturn [FunctionPlotSeries4089];\n},[\"obj4090\"],[L[1371]],[false],[\"obj4090\"],$function$plot$series_mutablemask4086,$function$plot$series$base4082,$function$plot$series$brands4084,\"function-plot-series\",$function$plot$series_getfields4087,$function$plot$series$base4082);\nvar $pie$chart$series_getfields4105 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $pie$chart$series_mutablemask4104 = [false];\nvar $pie$chart$series$base4091 = {\"$fieldNames\":[\"obj\"],\n\"_output\":anf_shared4025,\n\"is-single\":(true),\n\"explode\":explode$method4094,\n\"colors\":color$list$method4095,\n\"sort\":default$sort$method4096,\n\"sort-by\":sort$method4097,\n\"sort-by-label\":label$sort$method4098,\n\"threeD\":threeD$method4099,\n\"piehole\":piehole$method4100,\n\"rotate\":starting$angle$method4101,\n\"collapse-threshold\":collapse$threshold$method4102,\n\"constr\":anf_variant_member4103,\n\"_match\":R.mM(\"pie-chart-series\",1)};\nvar $pie$chart$series$brander4092 = R.nB(\"pie-chart-series\",L[1372]);\nvar $pie$chart$series$brands4093 = {};\n$pie$chart$series$brands4093[DataSeries340._brand] = true;\n$pie$chart$series$brands4093[$pie$chart$series$brander4092._brand] = true;\nvar pie$chart$series4106 = R.mVC(L[1372],function $synthesizedConstructor_$pie$chart$series$base() {\nreturn [PieChartSeries4107];\n},[\"obj4108\"],[L[1373]],[false],[\"obj4108\"],$pie$chart$series_mutablemask4104,$pie$chart$series$base4091,$pie$chart$series$brands4093,\"pie-chart-series\",$pie$chart$series_getfields4105,$pie$chart$series$base4091);\nvar $bar$chart$series_getfields4122 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $bar$chart$series_mutablemask4121 = [false];\nvar $bar$chart$series$base4109 = {\"$fieldNames\":[\"obj\"],\n\"_output\":anf_shared4025,\n\"is-single\":(true),\n\"color\":color$method4030,\n\"colors\":color$list$method4095,\n\"sort\":default$sort$method4096,\n\"sort-by\":sort$method4097,\n\"sort-by-label\":label$sort$method4098,\n\"add-pointers\":axis$pointer$method4112,\n\"pointer-color\":pointer$color$method4113,\n\"format-axis\":format$axis$data$method4114,\n\"make-axis\":make$axis$data$method4115,\n\"scale\":scale$method4116,\n\"horizontal\":horizontal$method4045,\n\"annotations\":single$annotations$method4117,\n\"intervals\":single$intervals$method4118,\n\"error-bars\":single$error$bars$method4119,\n\"interval-color\":interval$color$method4120,\n\"constr\":anf_variant_member6196,\n\"_match\":R.mM(\"bar-chart-series\",1)};\nvar $bar$chart$series$brander4110 = R.nB(\"bar-chart-series\",L[1374]);\nvar $bar$chart$series$brands4111 = {};\n$bar$chart$series$brands4111[DataSeries340._brand] = true;\n$bar$chart$series$brands4111[$bar$chart$series$brander4110._brand] = true;\nvar bar$chart$series4123 = R.mVC(L[1374],function $synthesizedConstructor_$bar$chart$series$base() {\nreturn [BarChartSeries4124];\n},[\"obj4125\"],[L[1375]],[false],[\"obj4125\"],$bar$chart$series_mutablemask4121,$bar$chart$series$base4109,$bar$chart$series$brands4111,\"bar-chart-series\",$bar$chart$series_getfields4122,$bar$chart$series$base4109);\nvar $interval$chart$series_getfields4133 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $interval$chart$series_mutablemask4132 = [false];\nvar $interval$chart$series$base4126 = {\"$fieldNames\":[\"obj\"],\n\"_output\":anf_shared4025,\n\"is-single\":(false),\n\"color\":color$method4030,\n\"colors\":color$list$method4095,\n\"legend\":legend$method4031,\n\"sort\":default$sort$method4096,\n\"sort-by\":sort$method4097,\n\"sort-by-label\":label$sort$method4098,\n\"add-pointers\":axis$pointer$method4112,\n\"pointer-color\":pointer$color$method4113,\n\"format-axis\":format$axis$data$method4114,\n\"make-axis\":make$axis$data$method4115,\n\"scale\":scale$method4116,\n\"lineWidth\":line$width$method4033,\n\"style\":style$method4129,\n\"trendline-type\":trendline$type$method4034,\n\"point-size\":anf_variant_member4130,\n\"horizontal\":horizontal$method4045,\n\"annotations\":single$annotations$method4117,\n\"intervals\":single$intervals$method4118,\n\"error-bars\":single$error$bars$method4119,\n\"interval-color\":interval$color$method4120,\n\"constr\":anf_variant_member4131,\n\"_match\":R.mM(\"interval-chart-series\",1)};\nvar $interval$chart$series$brander4127 = R.nB(\"interval-chart-series\",L[1376]);\nvar $interval$chart$series$brands4128 = {};\n$interval$chart$series$brands4128[DataSeries340._brand] = true;\n$interval$chart$series$brands4128[$interval$chart$series$brander4127._brand] = true;\nvar interval$chart$series4134 = R.mVC(L[1376],function $synthesizedConstructor_$interval$chart$series$base() {\nreturn [IntervalChartSeries4135];\n},[\"obj4136\"],[L[1377]],[false],[\"obj4136\"],$interval$chart$series_mutablemask4132,$interval$chart$series$base4126,$interval$chart$series$brands4128,\"interval-chart-series\",$interval$chart$series_getfields4133,$interval$chart$series$base4126);\nvar $multi$bar$chart$series_getfields4148 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $multi$bar$chart$series_mutablemask4147 = [false];\nvar $multi$bar$chart$series$base4137 = {\"$fieldNames\":[\"obj\"],\n\"_output\":anf_shared4025,\n\"is-single\":(true),\n\"colors\":color$list$method4095,\n\"sort\":super$default$multi$sort$method4140,\n\"sort-by\":default$multi$sort$method4141,\n\"sort-by-data\":multi$sort$method4142,\n\"sort-by-label\":label$sort$method4098,\n\"add-pointers\":axis$pointer$method4112,\n\"pointer-color\":pointer$color$method4113,\n\"format-axis\":format$axis$data$method4114,\n\"make-axis\":make$axis$data$method4115,\n\"scale\":multi$scale$method4143,\n\"stacking-type\":stacking$type$method4144,\n\"horizontal\":horizontal$method4045,\n\"annotations\":annotations$method3178,\n\"intervals\":intervals$method3292,\n\"error-bars\":error$bars$method4145,\n\"interval-color\":interval$color$method4120,\n\"constr\":anf_variant_member4146,\n\"_match\":R.mM(\"multi-bar-chart-series\",1)};\nvar $multi$bar$chart$series$brander4138 = R.nB(\"multi-bar-chart-series\",L[1378]);\nvar $multi$bar$chart$series$brands4139 = {};\n$multi$bar$chart$series$brands4139[DataSeries340._brand] = true;\n$multi$bar$chart$series$brands4139[$multi$bar$chart$series$brander4138._brand] = true;\nvar multi$bar$chart$series4149 = R.mVC(L[1378],function $synthesizedConstructor_$multi$bar$chart$series$base() {\nreturn [MultiBarChartSeries4150];\n},[\"obj4151\"],[L[1379]],[false],[\"obj4151\"],$multi$bar$chart$series_mutablemask4147,$multi$bar$chart$series$base4137,$multi$bar$chart$series$brands4139,\"multi-bar-chart-series\",$multi$bar$chart$series_getfields4148,$multi$bar$chart$series$base4137);\nvar $box$plot$series_getfields4159 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $box$plot$series_mutablemask4158 = [false];\nvar $box$plot$series$base4152 = {\"$fieldNames\":[\"obj\"],\n\"_output\":anf_shared4025,\n\"labels\":box$labels$method4155,\n\"color\":color$method4030,\n\"is-single\":(true),\n\"constr\":anf_variant_member4156,\n\"horizontal\":horizontal$method4045,\n\"show-outliers\":anf_variant_member4157,\n\"_match\":R.mM(\"box-plot-series\",1)};\nvar $box$plot$series$brander4153 = R.nB(\"box-plot-series\",L[1380]);\nvar $box$plot$series$brands4154 = {};\n$box$plot$series$brands4154[DataSeries340._brand] = true;\n$box$plot$series$brands4154[$box$plot$series$brander4153._brand] = true;\nvar box$plot$series4160 = R.mVC(L[1380],function $synthesizedConstructor_$box$plot$series$base() {\nreturn [BoxChartSeries4161];\n},[\"obj4163\"],[L[1381]],[false],[\"obj4163\"],$box$plot$series_mutablemask4158,$box$plot$series$base4152,$box$plot$series$brands4154,\"box-plot-series\",$box$plot$series_getfields4159,$box$plot$series$base4152);\nvar $histogram$series_getfields4174 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $histogram$series_mutablemask4173 = [false];\nvar $histogram$series$base4164 = {\"$fieldNames\":[\"obj\"],\n\"_output\":anf_shared4025,\n\"labels\":histogram$label$method4167,\n\"color\":color$method4030,\n\"is-single\":(true),\n\"constr\":anf_variant_member4168,\n\"bin-width\":anf_variant_member4169,\n\"max-num-bins\":anf_variant_member4170,\n\"min-num-bins\":anf_variant_member4171,\n\"num-bins\":anf_variant_member4172,\n\"_match\":R.mM(\"histogram-series\",1)};\nvar $histogram$series$brander4165 = R.nB(\"histogram-series\",L[1382]);\nvar $histogram$series$brands4166 = {};\n$histogram$series$brands4166[DataSeries340._brand] = true;\n$histogram$series$brands4166[$histogram$series$brander4165._brand] = true;\nvar histogram$series4175 = R.mVC(L[1382],function $synthesizedConstructor_$histogram$series$base() {\nreturn [HistogramSeries4176];\n},[\"obj4177\"],[L[1383]],[false],[\"obj4177\"],$histogram$series_mutablemask4173,$histogram$series$base4164,$histogram$series$brands4166,\"histogram-series\",$histogram$series_getfields4174,$histogram$series$base4164);\nvar anf_assign4178 = R.mO({\"DataSeries\":G(DataSeries340,\"test\",L[1384]),\n\"is-line-plot-series\":G($line$plot$series$brander4027,\"test\",L[1362]),\n\"line-plot-series\":line$plot$series4048,\n\"is-scatter-plot-series\":G($scatter$plot$series$brander4052,\"test\",L[1364]),\n\"scatter-plot-series\":scatter$plot$series4059,\n\"is-dot-plot-series\":G($dot$plot$series$brander4063,\"test\",L[1366]),\n\"dot-plot-series\":dot$plot$series4070,\n\"is-categorical-dot-plot-series\":G($categorical$dot$plot$series$brander4074,\"test\",L[1368]),\n\"categorical-dot-plot-series\":categorical$dot$plot$series4079,\n\"is-function-plot-series\":G($function$plot$series$brander4083,\"test\",L[1370]),\n\"function-plot-series\":function$plot$series4088,\n\"is-pie-chart-series\":G($pie$chart$series$brander4092,\"test\",L[1372]),\n\"pie-chart-series\":pie$chart$series4106,\n\"is-bar-chart-series\":G($bar$chart$series$brander4110,\"test\",L[1374]),\n\"bar-chart-series\":bar$chart$series4123,\n\"is-interval-chart-series\":G($interval$chart$series$brander4127,\"test\",L[1376]),\n\"interval-chart-series\":interval$chart$series4134,\n\"is-multi-bar-chart-series\":G($multi$bar$chart$series$brander4138,\"test\",L[1378]),\n\"multi-bar-chart-series\":multi$bar$chart$series4149,\n\"is-box-plot-series\":G($box$plot$series$brander4153,\"test\",L[1380]),\n\"box-plot-series\":box$plot$series4160,\n\"is-histogram-series\":G($histogram$series$brander4165,\"test\",L[1382]),\n\"histogram-series\":histogram$series4175});\nDataSeries4179.$var = anf_assign4178;\nR.nothing;\n$al331 = L[1384];\nvar anf_assign4180 = G(DataSeries4179.$var,\"DataSeries\",L[1384]);\nis$DataSeries4181.$var = anf_assign4180;\nR.nothing;\n$al331 = L[1362];\nvar anf_assign4182 = G(DataSeries4179.$var,\"is-line-plot-series\",L[1362]);\nis$line$plot$series4183.$var = anf_assign4182;\nR.nothing;\n$al331 = L[1362];\nvar anf_assign4184 = G(DataSeries4179.$var,\"line-plot-series\",L[1362]);\nline$plot$series3790.$var = anf_assign4184;\nR.nothing;\n$al331 = L[1364];\nvar anf_assign4185 = G(DataSeries4179.$var,\"is-scatter-plot-series\",L[1364]);\nis$scatter$plot$series4186.$var = anf_assign4185;\nR.nothing;\n$al331 = L[1364];\nvar anf_assign4187 = G(DataSeries4179.$var,\"scatter-plot-series\",L[1364]);\nscatter$plot$series3822.$var = anf_assign4187;\nR.nothing;\n$al331 = L[1366];\nvar anf_assign4188 = G(DataSeries4179.$var,\"is-dot-plot-series\",L[1366]);\nis$dot$plot$series4189.$var = anf_assign4188;\nR.nothing;\n$al331 = L[1366];\nvar anf_assign4190 = G(DataSeries4179.$var,\"dot-plot-series\",L[1366]);\ndot$plot$series3854.$var = anf_assign4190;\nR.nothing;\n$al331 = L[1368];\nvar anf_assign4191 = G(DataSeries4179.$var,\"is-categorical-dot-plot-series\",L[1368]);\nis$categorical$dot$plot$series4192.$var = anf_assign4191;\nR.nothing;\n$al331 = L[1368];\nvar anf_assign4193 = G(DataSeries4179.$var,\"categorical-dot-plot-series\",L[1368]);\ncategorical$dot$plot$series3887.$var = anf_assign4193;\nR.nothing;\n$al331 = L[1370];\nvar anf_assign4196 = G(DataSeries4179.$var,\"is-function-plot-series\",L[1370]);\nis$function$plot$series4197.$var = anf_assign4196;\nR.nothing;\n$al331 = L[1370];\nvar anf_assign4198 = G(DataSeries4179.$var,\"function-plot-series\",L[1370]);\nfunction$plot$series3898.$var = anf_assign4198;\nR.nothing;\n$al331 = L[1372];\nvar anf_assign4202 = G(DataSeries4179.$var,\"is-pie-chart-series\",L[1372]);\nis$pie$chart$series4203.$var = anf_assign4202;\nR.nothing;\n$al331 = L[1372];\nvar anf_assign4204 = G(DataSeries4179.$var,\"pie-chart-series\",L[1372]);\npie$chart$series3906.$var = anf_assign4204;\nR.nothing;\n$al331 = L[1374];\nvar anf_assign4205 = G(DataSeries4179.$var,\"is-bar-chart-series\",L[1374]);\nis$bar$chart$series4206.$var = anf_assign4205;\nR.nothing;\n$al331 = L[1374];\nvar anf_assign4207 = G(DataSeries4179.$var,\"bar-chart-series\",L[1374]);\nbar$chart$series3915.$var = anf_assign4207;\nR.nothing;\n$al331 = L[1376];\nvar anf_assign4208 = G(DataSeries4179.$var,\"is-interval-chart-series\",L[1376]);\nis$interval$chart$series4209.$var = anf_assign4208;\nR.nothing;\n$al331 = L[1376];\nvar anf_assign4210 = G(DataSeries4179.$var,\"interval-chart-series\",L[1376]);\ninterval$chart$series3937.$var = anf_assign4210;\nR.nothing;\n$al331 = L[1378];\nvar anf_assign4212 = G(DataSeries4179.$var,\"is-multi-bar-chart-series\",L[1378]);\nis$multi$bar$chart$series4213.$var = anf_assign4212;\nR.nothing;\n$al331 = L[1378];\nvar anf_assign4214 = G(DataSeries4179.$var,\"multi-bar-chart-series\",L[1378]);\nmulti$bar$chart$series3946.$var = anf_assign4214;\nR.nothing;\n$al331 = L[1380];\nvar anf_assign4215 = G(DataSeries4179.$var,\"is-box-plot-series\",L[1380]);\nis$box$plot$series4216.$var = anf_assign4215;\nR.nothing;\n$al331 = L[1380];\nvar anf_assign4217 = G(DataSeries4179.$var,\"box-plot-series\",L[1380]);\nbox$plot$series3954.$var = anf_assign4217;\nR.nothing;\n$al331 = L[1382];\nvar anf_assign4218 = G(DataSeries4179.$var,\"is-histogram-series\",L[1382]);\nis$histogram$series4219.$var = anf_assign4218;\nR.nothing;\n$al331 = L[1382];\nvar anf_assign4221 = G(DataSeries4179.$var,\"histogram-series\",L[1382]);\nhistogram$series3974.$var = anf_assign4221;\nR.nothing;\nvar $temp_lam4225 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1385($p4226) {\nvar $step4224 = 0;\nvar $elidedFrames4231 = 0;\nvar $ans4228 = D;\nvar $al4229 = L[1385];\nif(R.isAR($p4226)) {\n$step4224 = $p4226.step;\n$al4229 = $p4226.from;\n$ans4228 = $p4226.ans;\n$elidedFrames4231 = $p4226.elidedFrames;\np4226 = $p4226.args[0];\nann_check_temp4232 = $p4226.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1385],1,$t,false);\n}\nvar p4226 = $p4226;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4228 = R.mC();\n}\nwhile(!R.isContinuation($ans4228)) {\nswitch($step4224) {\ncase 0: $step4224 = 1;\n$al4229 = L[1392];\nR._cA(L[1392],ChartWindowObject4236,p4226);\nbreak;\ncase 1: $al4229 = L[1386];\nvar anf_arg4413 = G(p4226,\"width\",L[1386]);\n$step4224 = 2;\n$al4229 = L[1391];\n// omitting isFunction check;\n$ans4228 = _lessequal4.app(anf_arg4413,(0));\nbreak;\ncase 2: var anf_if4235 = $ans4228;\n$step4224 = R.checkPyretTrue(anf_if4235)?3:4;\nbreak;\ncase 3: $step4224 = 6;\n$ans4228 = (true);\nbreak;\ncase 4: $al4229 = L[1389];\nvar anf_arg4424 = G(p4226,\"height\",L[1389]);\n$step4224 = 5;\n$al4229 = L[1390];\n// omitting isFunction check;\n$ans4228 = _lessequal4.app(anf_arg4424,(0));\nbreak;\ncase 5: var anf_arg1998 = $ans4228;\n$ans4228 = R.checkWrapBoolean(anf_arg1998);\n$step4224 = 6;\nbreak;\ncase 6: var anf_if4234 = $ans4228;\n$step4224 = R.checkPyretTrue(anf_if4234)?7:8;\nbreak;\ncase 7: $step4224 = 9;\n$al4229 = L[1388];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4229,raise1);\n}\n$ans4228 = raise1.app((\"render: width and height must be positive\"));\nbreak;\ncase 8: $step4224 = 9;\n$ans4228 = nothing5;\nbreak;\ncase 9: var ann_check_temp4232 = $ans4228;\n$step4224 = 10;\n$al4229 = L[1387];\nvar $ann$check4233 = R._cA(L[1387],$type$Nothing1,ann_check_temp4232);\nif(R.isContinuation($ann$check4233)) {\n$ans4228 = $ann$check4233;\n}\nbreak;\ncase 10: $step4224 = 11;\n$ans4228 = ann_check_temp4232;\nbreak;\ncase 11: ++R.GAS;\nreturn $ans4228;\ndefault: R.ffi.throwSpinnakerError(L[1385],$step4224);\n}\n}\nif($step4224 !== 11) {\n$ans4228.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4229,$temp_lam4225,$step4224,[p4226],[ann_check_temp4232],$elidedFrames4231);\n}\nreturn $ans4228;\n};\nvar anf_assign4238 = R.mF($temp_lam4225,\"check-chart-window\");\ncheck$chart$window4239.$var = anf_assign4238;\nR.nothing;\nvar $temp_full4241 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1393($self4242) {\nvar $step4240 = 0;\nvar $elidedFrames4246 = 0;\nvar $ans4243 = D;\nvar $al4244 = L[1393];\nif(R.isAR($self4242)) {\n$step4240 = $self4242.step;\n$al4244 = $self4242.from;\n$ans4243 = $self4242.ans;\n$elidedFrames4246 = $self4242.elidedFrames;\nself4242 = $self4242.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1393],1,$t,true);\n}\nvar self4242 = $self4242;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4243 = R.mC();\n}\nwhile(!R.isContinuation($ans4243)) {\nswitch($step4240) {\ncase 0: $al4244 = L[1394];\nvar anf_arg2001 = G(self4242,\"obj\",L[1394]);\n$step4240 = 1;\n$al4244 = L[1398];\n// omitting isFunction check;\n$ans4243 = check$chart$window4239.$var.app(anf_arg2001);\nbreak;\ncase 1: $al4244 = L[1395];\nvar anf_extend4247 = G(self4242,\"obj\",L[1395]);\nvar anf_method_obj4248 = R.extendObj(L[1396],anf_extend4247,{\"interact\":(true)});\n$step4240 = 2;\n$ans4243 = R.maybeMethodCall0(anf_method_obj4248,\"render\",L[1397]);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans4243;\ndefault: R.ffi.throwSpinnakerError(L[1393],$step4240);\n}\n}\nif($step4240 !== 2) {\n$ans4243.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4244,$temp_full4241,$step4240,[self4242],[],$elidedFrames4246);\n}\nreturn $ans4243;\n};\nvar anf_shared4391 = R.makeMethod0($temp_full4241,\"display\");\nvar $temp_full4253 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1399($self4254) {\nvar $step4252 = 0;\nvar $elidedFrames4259 = 0;\nvar $ans4256 = D;\nvar $al4257 = L[1399];\nif(R.isAR($self4254)) {\n$step4252 = $self4254.step;\n$al4257 = $self4254.from;\n$ans4256 = $self4254.ans;\n$elidedFrames4259 = $self4254.elidedFrames;\nself4254 = $self4254.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1399],1,$t,true);\n}\nvar self4254 = $self4254;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4256 = R.mC();\n}\nwhile(!R.isContinuation($ans4256)) {\nswitch($step4252) {\ncase 0: $al4257 = L[1400];\nvar anf_arg4267 = G(self4254,\"obj\",L[1400]);\n$step4252 = 1;\n$al4257 = L[1404];\n// omitting isFunction check;\n$ans4256 = check$chart$window4239.$var.app(anf_arg4267);\nbreak;\ncase 1: $al4257 = L[1401];\nvar anf_extend4268 = G(self4254,\"obj\",L[1401]);\nvar anf_method_obj4269 = R.extendObj(L[1402],anf_extend4268,{\"interact\":(false)});\n$step4252 = 2;\n$ans4256 = R.maybeMethodCall0(anf_method_obj4269,\"render\",L[1403]);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans4256;\ndefault: R.ffi.throwSpinnakerError(L[1399],$step4252);\n}\n}\nif($step4252 !== 2) {\n$ans4256.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4257,$temp_full4253,$step4252,[self4254],[],$elidedFrames4259);\n}\nreturn $ans4256;\n};\nvar anf_shared4392 = R.makeMethod0($temp_full4253,\"get-image\");\nvar $temp_full4273 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1405($self2927,$title4274) {\nvar $step4272 = 0;\nvar $elidedFrames4278 = 0;\nvar $ans4275 = D;\nvar $al4276 = L[1405];\nif(R.isAR($self2927)) {\n$step4272 = $self2927.step;\n$al4276 = $self2927.from;\n$ans4275 = $self2927.ans;\n$elidedFrames4278 = $self2927.elidedFrames;\nself2927 = $self2927.args[0];\ntitle4274 = $self2927.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1405],2,$t,true);\n}\nvar self2927 = $self2927;\nvar title4274 = $title4274;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4275 = R.mC();\n}\nwhile(!R.isContinuation($ans4275)) {\nswitch($step4272) {\ncase 0: $step4272 = 1;\n$al4276 = L[1410];\nR._cA(L[1410],$type$String8,title4274);\nbreak;\ncase 1: $step4272 = 2;\n$ans4275 = R.maybeMethodCall0(self2927,\"constr\",L[1406]);\nbreak;\ncase 2: var anf_fun4280 = $ans4275;\n$al4276 = L[1407];\nvar anf_extend4279 = G(self2927,\"obj\",L[1407]);\nvar anf_arg2028 = R.extendObj(L[1408],anf_extend4279,{\"title\":title4274});\n$step4272 = 3;\n$al4276 = L[1409];\nif(typeof(anf_fun4280.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4276,anf_fun4280);\n}\n$ans4275 = anf_fun4280.app(anf_arg2028);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans4275;\ndefault: R.ffi.throwSpinnakerError(L[1405],$step4272);\n}\n}\nif($step4272 !== 3) {\n$ans4275.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4276,$temp_full4273,$step4272,[self2927,title4274],[],$elidedFrames4278);\n}\nreturn $ans4275;\n};\nvar anf_shared4393 = R.makeMethod1($temp_full4273,\"title\");\nvar $temp_full4283 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1411($self5249,$width4284) {\nvar $step4282 = 0;\nvar $elidedFrames4289 = 0;\nvar $ans4286 = D;\nvar $al4287 = L[1411];\nif(R.isAR($self5249)) {\n$step4282 = $self5249.step;\n$al4287 = $self5249.from;\n$ans4286 = $self5249.ans;\n$elidedFrames4289 = $self5249.elidedFrames;\nself5249 = $self5249.args[0];\nwidth4284 = $self5249.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1411],2,$t,true);\n}\nvar self5249 = $self5249;\nvar width4284 = $width4284;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4286 = R.mC();\n}\nwhile(!R.isContinuation($ans4286)) {\nswitch($step4282) {\ncase 0: $step4282 = 1;\n$al4287 = L[1416];\nR._cA(L[1416],$type$Number3,width4284);\nbreak;\ncase 1: $step4282 = 2;\n$ans4286 = R.maybeMethodCall0(self5249,\"constr\",L[1412]);\nbreak;\ncase 2: var anf_fun4291 = $ans4286;\n$al4287 = L[1413];\nvar anf_extend4290 = G(self5249,\"obj\",L[1413]);\nvar anf_arg2036 = R.extendObj(L[1414],anf_extend4290,{\"width\":width4284});\n$step4282 = 3;\n$al4287 = L[1415];\nif(typeof(anf_fun4291.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4287,anf_fun4291);\n}\n$ans4286 = anf_fun4291.app(anf_arg2036);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans4286;\ndefault: R.ffi.throwSpinnakerError(L[1411],$step4282);\n}\n}\nif($step4282 !== 3) {\n$ans4286.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4287,$temp_full4283,$step4282,[self5249,width4284],[],$elidedFrames4289);\n}\nreturn $ans4286;\n};\nvar anf_shared4394 = R.makeMethod1($temp_full4283,\"width\");\nvar $temp_full4294 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1417($self2982,$height4295) {\nvar $step4293 = 0;\nvar $elidedFrames4301 = 0;\nvar $ans4298 = D;\nvar $al4299 = L[1417];\nif(R.isAR($self2982)) {\n$step4293 = $self2982.step;\n$al4299 = $self2982.from;\n$ans4298 = $self2982.ans;\n$elidedFrames4301 = $self2982.elidedFrames;\nself2982 = $self2982.args[0];\nheight4295 = $self2982.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1417],2,$t,true);\n}\nvar self2982 = $self2982;\nvar height4295 = $height4295;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4298 = R.mC();\n}\nwhile(!R.isContinuation($ans4298)) {\nswitch($step4293) {\ncase 0: $step4293 = 1;\n$al4299 = L[1422];\nR._cA(L[1422],$type$Number3,height4295);\nbreak;\ncase 1: $step4293 = 2;\n$ans4298 = R.maybeMethodCall0(self2982,\"constr\",L[1418]);\nbreak;\ncase 2: var anf_fun4303 = $ans4298;\n$al4299 = L[1419];\nvar anf_extend4302 = G(self2982,\"obj\",L[1419]);\nvar anf_arg4304 = R.extendObj(L[1420],anf_extend4302,{\"height\":height4295});\n$step4293 = 3;\n$al4299 = L[1421];\nif(typeof(anf_fun4303.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4299,anf_fun4303);\n}\n$ans4298 = anf_fun4303.app(anf_arg4304);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans4298;\ndefault: R.ffi.throwSpinnakerError(L[1417],$step4293);\n}\n}\nif($step4293 !== 3) {\n$ans4298.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4299,$temp_full4294,$step4293,[self2982,height4295],[],$elidedFrames4301);\n}\nreturn $ans4298;\n};\nvar anf_shared4395 = R.makeMethod1($temp_full4294,\"height\");\nvar $temp_full4307 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1423($self2994) {\nvar $step4306 = 0;\nvar $elidedFrames4311 = 0;\nvar $ans4308 = D;\nvar $al4309 = L[1423];\nif(R.isAR($self2994)) {\n$step4306 = $self2994.step;\n$al4309 = $self2994.from;\n$ans4308 = $self2994.ans;\n$elidedFrames4311 = $self2994.elidedFrames;\nself2994 = $self2994.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1423],1,$t,true);\n}\nvar self2994 = $self2994;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4308 = R.mC();\n}\nwhile(!R.isContinuation($ans4308)) {\nswitch($step4306) {\ncase 0: $step4306 = 1;\n$ans4308 = R.maybeMethodCall0(self2994,\"get-image\",L[1424]);\nbreak;\ncase 1: var anf_arg4583 = $ans4308;\n$step4306 = 2;\n$al4309 = L[1425];\n// omitting isFunction check;\n$ans4308 = get$vs$from$img1466.$var.app((\"ChartWindow\"),anf_arg4583);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans4308;\ndefault: R.ffi.throwSpinnakerError(L[1423],$step4306);\n}\n}\nif($step4306 !== 2) {\n$ans4308.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4309,$temp_full4307,$step4306,[self2994],[],$elidedFrames4311);\n}\nreturn $ans4308;\n};\nvar anf_shared4396 = R.makeMethod0($temp_full4307,\"_output\");\nvar $temp_lam4315 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1426($$resumer11) {\nvar $step4314 = 0;\nvar $elidedFrames4320 = 0;\nvar $ans4317 = D;\nvar $al4318 = L[1426];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1426],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans4317)) {\nswitch($step4314) {\ncase 0: $step4314 = 1;\n$ans4317 = pie$chart$window4321.$var === D?U(L[1427],\"pie-chart-window\"):pie$chart$window4321.$var;\nbreak;\ncase 1: return $ans4317;\ndefault: R.ffi.throwSpinnakerError(L[1426],$step4314);\n}\n}\nreturn $ans4317;\n};\nvar anf_variant_member4400 = R.mF($temp_lam4315,\"\");\nvar $temp_lam4324 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1428($$resumer11) {\nvar $step4323 = 0;\nvar $elidedFrames4328 = 0;\nvar $ans4325 = D;\nvar $al4326 = L[1428];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1428],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans4325)) {\nswitch($step4323) {\ncase 0: $step4323 = 1;\n$ans4325 = dot$chart$window4329.$var === D?U(L[1429],\"dot-chart-window\"):dot$chart$window4329.$var;\nbreak;\ncase 1: return $ans4325;\ndefault: R.ffi.throwSpinnakerError(L[1428],$step4323);\n}\n}\nreturn $ans4325;\n};\nvar anf_variant_member4409 = R.mF($temp_lam4324,\"\");\nvar $temp_lam4334 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1430($$resumer11) {\nvar $step4333 = 0;\nvar $elidedFrames4338 = 0;\nvar $ans4335 = D;\nvar $al4336 = L[1430];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1430],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans4335)) {\nswitch($step4333) {\ncase 0: $step4333 = 1;\n$ans4335 = box$plot$chart$window4339.$var === D?U(L[1431],\"box-plot-chart-window\"):box$plot$chart$window4339.$var;\nbreak;\ncase 1: return $ans4335;\ndefault: R.ffi.throwSpinnakerError(L[1430],$step4333);\n}\n}\nreturn $ans4335;\n};\nvar anf_variant_member4420 = R.mF($temp_lam4334,\"\");\nvar $temp_lam4343 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1432($$resumer11) {\nvar $step4342 = 0;\nvar $elidedFrames4347 = 0;\nvar $ans4344 = D;\nvar $al4345 = L[1432];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1432],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans4344)) {\nswitch($step4342) {\ncase 0: $step4342 = 1;\n$ans4344 = bar$chart$window4348.$var === D?U(L[1433],\"bar-chart-window\"):bar$chart$window4348.$var;\nbreak;\ncase 1: return $ans4344;\ndefault: R.ffi.throwSpinnakerError(L[1432],$step4342);\n}\n}\nreturn $ans4344;\n};\nvar anf_variant_member4431 = R.mF($temp_lam4343,\"\");\nvar $temp_lam4351 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1434($$resumer11) {\nvar $step4350 = 0;\nvar $elidedFrames4355 = 0;\nvar $ans4352 = D;\nvar $al4353 = L[1434];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1434],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans4352)) {\nswitch($step4350) {\ncase 0: $step4350 = 1;\n$ans4352 = interval$chart$window4356.$var === D?U(L[1435],\"interval-chart-window\"):interval$chart$window4356.$var;\nbreak;\ncase 1: return $ans4352;\ndefault: R.ffi.throwSpinnakerError(L[1434],$step4350);\n}\n}\nreturn $ans4352;\n};\nvar anf_variant_member4442 = R.mF($temp_lam4351,\"\");\nvar $temp_lam4359 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1436($$resumer11) {\nvar $step4358 = 0;\nvar $elidedFrames4364 = 0;\nvar $ans4361 = D;\nvar $al4362 = L[1436];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1436],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans4361)) {\nswitch($step4358) {\ncase 0: $step4358 = 1;\n$ans4361 = histogram$chart$window4365.$var === D?U(L[1437],\"histogram-chart-window\"):histogram$chart$window4365.$var;\nbreak;\ncase 1: return $ans4361;\ndefault: R.ffi.throwSpinnakerError(L[1436],$step4358);\n}\n}\nreturn $ans4361;\n};\nvar anf_variant_member4451 = R.mF($temp_lam4359,\"\");\nvar $temp_lam4369 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1438($$resumer11) {\nvar $step4368 = 0;\nvar $elidedFrames4374 = 0;\nvar $ans4371 = D;\nvar $al4372 = L[1438];\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1438],0,$t,false);\n}\n// callee optimization;\nwhile(!R.isContinuation($ans4371)) {\nswitch($step4368) {\ncase 0: $step4368 = 1;\n$ans4371 = plot$chart$window4375.$var === D?U(L[1439],\"plot-chart-window\"):plot$chart$window4375.$var;\nbreak;\ncase 1: return $ans4371;\ndefault: R.ffi.throwSpinnakerError(L[1438],$step4368);\n}\n}\nreturn $ans4371;\n};\nvar anf_variant_member4462 = R.mF($temp_lam4369,\"\");\nvar $temp_full4378 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1440($self2877,$num$samples4379) {\nvar $step4377 = 0;\nvar $elidedFrames4383 = 0;\nvar $ans4380 = D;\nvar $al4381 = L[1440];\nif(R.isAR($self2877)) {\n$step4377 = $self2877.step;\n$al4381 = $self2877.from;\n$ans4380 = $self2877.ans;\n$elidedFrames4383 = $self2877.elidedFrames;\nself2877 = $self2877.args[0];\nnum$samples4379 = $self2877.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1440],2,$t,true);\n}\nvar self2877 = $self2877;\nvar num$samples4379 = $num$samples4379;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4380 = R.mC();\n}\nwhile(!R.isContinuation($ans4380)) {\nswitch($step4377) {\ncase 0: $step4377 = 1;\n$al4381 = L[1449];\nR._cA(L[1449],$type$Number3,num$samples4379);\nbreak;\ncase 1: $step4377 = 2;\n$al4381 = L[1448];\n// omitting isFunction check;\n$ans4380 = _lessequal4.app(num$samples4379,(0));\nbreak;\ncase 2: var anf_if4606 = $ans4380;\n$step4377 = R.checkPyretTrue(anf_if4606)?3:4;\nbreak;\ncase 3: $step4377 = 9;\n$ans4380 = (true);\nbreak;\ncase 4: $step4377 = 5;\n$al4381 = L[1447];\n// omitting isFunction check;\n$ans4380 = _greaterthan5.app(num$samples4379,(100000));\nbreak;\ncase 5: var anf_if4385 = $ans4380;\n$step4377 = R.checkPyretTrue(anf_if4385)?6:7;\nbreak;\ncase 6: $step4377 = 9;\n$ans4380 = (true);\nbreak;\ncase 7: // caller optimization;\n$ans4380 = num$is$integer2.app(num$samples4379);\nvar anf_arg2061 = $ans4380;\n$step4377 = 8;\n$al4381 = L[1446];\nif(typeof(not6.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4381,not6);\n}\n$ans4380 = not6.app(anf_arg2061);\nbreak;\ncase 8: var anf_arg2065 = $ans4380;\n$ans4380 = R.checkWrapBoolean(anf_arg2065);\n$step4377 = 9;\nbreak;\ncase 9: var anf_if2093 = $ans4380;\n$step4377 = R.checkPyretTrue(anf_if2093)?10:12;\nbreak;\ncase 10: $step4377 = 11;\n$al4381 = L[1445];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4381,raise1);\n}\n$ans4380 = raise1.app((\"num-samples: value must be an ineger between 1 and 100000\"));\nbreak;\ncase 11: $step4377 = 13;\n$ans4380 = nothing5;\nbreak;\ncase 12: $step4377 = 13;\n$ans4380 = nothing5;\nbreak;\ncase 13: var anf_fun2075 = plot$chart$window4375.$var === D?U(L[1441],\"plot-chart-window\"):plot$chart$window4375.$var;\n$al4381 = L[1442];\nvar anf_extend4384 = G(self2877,\"obj\",L[1442]);\nvar anf_arg2077 = R.extendObj(L[1443],anf_extend4384,{\"num-samples\":num$samples4379});\n$step4377 = 14;\n$al4381 = L[1444];\nif(typeof(anf_fun2075.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4381,anf_fun2075);\n}\n$ans4380 = anf_fun2075.app(anf_arg2077);\nbreak;\ncase 14: ++R.GAS;\nreturn $ans4380;\ndefault: R.ffi.throwSpinnakerError(L[1440],$step4377);\n}\n}\nif($step4377 !== 14) {\n$ans4380.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4381,$temp_full4378,$step4377,[self2877,num$samples4379],[],$elidedFrames4383);\n}\nreturn $ans4380;\n};\nvar anf_variant_member4466 = R.makeMethod1($temp_full4378,\"num-samples\");\nvar $pie$chart$window_getfields4402 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $pie$chart$window_mutablemask4401 = [false];\nvar $pie$chart$window$base4397 = {\"$fieldNames\":[\"obj\"],\n\"background-color\":background$color$method4388,\n\"border-size\":background$border$method4389,\n\"border-color\":border$color$method4390,\n\"display\":anf_shared4391,\n\"get-image\":anf_shared4392,\n\"title\":anf_shared4393,\n\"width\":anf_shared4394,\n\"height\":anf_shared4395,\n\"_output\":anf_shared4396,\n\"constr\":anf_variant_member4400,\n\"_match\":R.mM(\"pie-chart-window\",1)};\nvar $pie$chart$window$brander4398 = R.nB(\"pie-chart-window\",L[1450]);\nvar $pie$chart$window$brands4399 = {};\n$pie$chart$window$brands4399[ChartWindow341._brand] = true;\n$pie$chart$window$brands4399[$pie$chart$window$brander4398._brand] = true;\nvar pie$chart$window4403 = R.mVC(L[1450],function $synthesizedConstructor_$pie$chart$window$base() {\nreturn [PieChartWindowObject4404];\n},[\"obj4405\"],[L[1451]],[false],[\"obj4405\"],$pie$chart$window_mutablemask4401,$pie$chart$window$base4397,$pie$chart$window$brands4399,\"pie-chart-window\",$pie$chart$window_getfields4402,$pie$chart$window$base4397);\nvar $dot$chart$window_getfields4413 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $dot$chart$window_mutablemask4412 = [false];\nvar $dot$chart$window$base4406 = {\"$fieldNames\":[\"obj\"],\n\"background-color\":background$color$method4388,\n\"border-size\":background$border$method4389,\n\"border-color\":border$color$method4390,\n\"display\":anf_shared4391,\n\"get-image\":anf_shared4392,\n\"title\":anf_shared4393,\n\"width\":anf_shared4394,\n\"height\":anf_shared4395,\n\"_output\":anf_shared4396,\n\"constr\":anf_variant_member4409,\n\"x-axis\":x$axis$method4410,\n\"y-axis\":y$axis$method4411,\n\"_match\":R.mM(\"dot-chart-window\",1)};\nvar $dot$chart$window$brander4407 = R.nB(\"dot-chart-window\",L[1452]);\nvar $dot$chart$window$brands4408 = {};\n$dot$chart$window$brands4408[ChartWindow341._brand] = true;\n$dot$chart$window$brands4408[$dot$chart$window$brander4407._brand] = true;\nvar dot$chart$window4414 = R.mVC(L[1452],function $synthesizedConstructor_$dot$chart$window$base() {\nreturn [DotChartWindowObject4415];\n},[\"obj4416\"],[L[1453]],[false],[\"obj4416\"],$dot$chart$window_mutablemask4412,$dot$chart$window$base4406,$dot$chart$window$brands4408,\"dot-chart-window\",$dot$chart$window_getfields4413,$dot$chart$window$base4406);\nvar $box$plot$chart$window_getfields4424 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $box$plot$chart$window_mutablemask4423 = [false];\nvar $box$plot$chart$window$base4417 = {\"$fieldNames\":[\"obj\"],\n\"background-color\":background$color$method4388,\n\"border-size\":background$border$method4389,\n\"border-color\":border$color$method4390,\n\"display\":anf_shared4391,\n\"get-image\":anf_shared4392,\n\"title\":anf_shared4393,\n\"width\":anf_shared4394,\n\"height\":anf_shared4395,\n\"_output\":anf_shared4396,\n\"constr\":anf_variant_member4420,\n\"x-axis\":x$axis$method4410,\n\"y-axis\":y$axis$method4411,\n\"min\":min$method4421,\n\"max\":max$method4422,\n\"_match\":R.mM(\"box-plot-chart-window\",1)};\nvar $box$plot$chart$window$brander4418 = R.nB(\"box-plot-chart-window\",L[1454]);\nvar $box$plot$chart$window$brands4419 = {};\n$box$plot$chart$window$brands4419[ChartWindow341._brand] = true;\n$box$plot$chart$window$brands4419[$box$plot$chart$window$brander4418._brand] = true;\nvar box$plot$chart$window4425 = R.mVC(L[1454],function $synthesizedConstructor_$box$plot$chart$window$base() {\nreturn [BoxChartWindowObject4426];\n},[\"obj4427\"],[L[1455]],[false],[\"obj4427\"],$box$plot$chart$window_mutablemask4423,$box$plot$chart$window$base4417,$box$plot$chart$window$brands4419,\"box-plot-chart-window\",$box$plot$chart$window_getfields4424,$box$plot$chart$window$base4417);\nvar $bar$chart$window_getfields4435 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $bar$chart$window_mutablemask4434 = [false];\nvar $bar$chart$window$base4428 = {\"$fieldNames\":[\"obj\"],\n\"background-color\":background$color$method4388,\n\"border-size\":background$border$method4389,\n\"border-color\":border$color$method4390,\n\"display\":anf_shared4391,\n\"get-image\":anf_shared4392,\n\"title\":anf_shared4393,\n\"width\":anf_shared4394,\n\"height\":anf_shared4395,\n\"_output\":anf_shared4396,\n\"constr\":anf_variant_member4431,\n\"x-axis\":x$axis$method4410,\n\"y-axis\":y$axis$method4411,\n\"y-min\":y$min$method4432,\n\"y-max\":y$max$method4433,\n\"_match\":R.mM(\"bar-chart-window\",1)};\nvar $bar$chart$window$brander4429 = R.nB(\"bar-chart-window\",L[1456]);\nvar $bar$chart$window$brands4430 = {};\n$bar$chart$window$brands4430[ChartWindow341._brand] = true;\n$bar$chart$window$brands4430[$bar$chart$window$brander4429._brand] = true;\nvar bar$chart$window4436 = R.mVC(L[1456],function $synthesizedConstructor_$bar$chart$window$base() {\nreturn [BarChartWindowObject4437];\n},[\"obj4438\"],[L[1457]],[false],[\"obj4438\"],$bar$chart$window_mutablemask4434,$bar$chart$window$base4428,$bar$chart$window$brands4430,\"bar-chart-window\",$bar$chart$window_getfields4435,$bar$chart$window$base4428);\nvar $interval$chart$window_getfields4444 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $interval$chart$window_mutablemask4443 = [false];\nvar $interval$chart$window$base4439 = {\"$fieldNames\":[\"obj\"],\n\"background-color\":background$color$method4388,\n\"border-size\":background$border$method4389,\n\"border-color\":border$color$method4390,\n\"display\":anf_shared4391,\n\"get-image\":anf_shared4392,\n\"title\":anf_shared4393,\n\"width\":anf_shared4394,\n\"height\":anf_shared4395,\n\"_output\":anf_shared4396,\n\"constr\":anf_variant_member4442,\n\"x-axis\":x$axis$method4410,\n\"y-axis\":y$axis$method4411,\n\"y-min\":y$min$method4432,\n\"y-max\":y$max$method4433,\n\"_match\":R.mM(\"interval-chart-window\",1)};\nvar $interval$chart$window$brander4440 = R.nB(\"interval-chart-window\",L[1458]);\nvar $interval$chart$window$brands4441 = {};\n$interval$chart$window$brands4441[ChartWindow341._brand] = true;\n$interval$chart$window$brands4441[$interval$chart$window$brander4440._brand] = true;\nvar interval$chart$window4445 = R.mVC(L[1458],function $synthesizedConstructor_$interval$chart$window$base() {\nreturn [IntervalChartWindowObject4446];\n},[\"obj4447\"],[L[1459]],[false],[\"obj4447\"],$interval$chart$window_mutablemask4443,$interval$chart$window$base4439,$interval$chart$window$brands4441,\"interval-chart-window\",$interval$chart$window_getfields4444,$interval$chart$window$base4439);\nvar $histogram$chart$window_getfields4455 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $histogram$chart$window_mutablemask4454 = [false];\nvar $histogram$chart$window$base4448 = {\"$fieldNames\":[\"obj\"],\n\"background-color\":background$color$method4388,\n\"border-size\":background$border$method4389,\n\"border-color\":border$color$method4390,\n\"display\":anf_shared4391,\n\"get-image\":anf_shared4392,\n\"title\":anf_shared4393,\n\"width\":anf_shared4394,\n\"height\":anf_shared4395,\n\"_output\":anf_shared4396,\n\"constr\":anf_variant_member4451,\n\"x-axis\":x$axis$method4410,\n\"y-axis\":y$axis$method4411,\n\"x-min\":x$min$method4452,\n\"x-max\":x$max$method4453,\n\"y-max\":y$max$method4433,\n\"_match\":R.mM(\"histogram-chart-window\",1)};\nvar $histogram$chart$window$brander4449 = R.nB(\"histogram-chart-window\",L[1460]);\nvar $histogram$chart$window$brands4450 = {};\n$histogram$chart$window$brands4450[ChartWindow341._brand] = true;\n$histogram$chart$window$brands4450[$histogram$chart$window$brander4449._brand] = true;\nvar histogram$chart$window4456 = R.mVC(L[1460],function $synthesizedConstructor_$histogram$chart$window$base() {\nreturn [HistogramChartWindowObject4457];\n},[\"obj4458\"],[L[1461]],[false],[\"obj4458\"],$histogram$chart$window_mutablemask4454,$histogram$chart$window$base4448,$histogram$chart$window$brands4450,\"histogram-chart-window\",$histogram$chart$window_getfields4455,$histogram$chart$window$base4448);\nvar $plot$chart$window_getfields4468 = function singleton_variant(f) {\nreturn f(this.dict[\"obj\"]);\n};\nvar $plot$chart$window_mutablemask4467 = [false];\nvar $plot$chart$window$base4459 = {\"$fieldNames\":[\"obj\"],\n\"background-color\":background$color$method4388,\n\"border-size\":background$border$method4389,\n\"border-color\":border$color$method4390,\n\"display\":anf_shared4391,\n\"get-image\":anf_shared4392,\n\"title\":anf_shared4393,\n\"width\":anf_shared4394,\n\"height\":anf_shared4395,\n\"_output\":anf_shared4396,\n\"constr\":anf_variant_member4462,\n\"show-gridlines\":show$grid$lines$method4463,\n\"gridlines-color\":gridlines$color$method4464,\n\"x-axis\":x$axis$method4410,\n\"y-axis\":y$axis$method4411,\n\"x-min\":x$min$method4452,\n\"x-max\":x$max$method4453,\n\"y-min\":y$min$method4432,\n\"y-max\":y$max$method4433,\n\"select-multiple\":select$multiple$method4465,\n\"num-samples\":anf_variant_member4466,\n\"_match\":R.mM(\"plot-chart-window\",1)};\nvar $plot$chart$window$brander4460 = R.nB(\"plot-chart-window\",L[1462]);\nvar $plot$chart$window$brands4461 = {};\n$plot$chart$window$brands4461[ChartWindow341._brand] = true;\n$plot$chart$window$brands4461[$plot$chart$window$brander4460._brand] = true;\nvar plot$chart$window4469 = R.mVC(L[1462],function $synthesizedConstructor_$plot$chart$window$base() {\nreturn [PlotChartWindowObject4470];\n},[\"obj4471\"],[L[1463]],[false],[\"obj4471\"],$plot$chart$window_mutablemask4467,$plot$chart$window$base4459,$plot$chart$window$brands4461,\"plot-chart-window\",$plot$chart$window_getfields4468,$plot$chart$window$base4459);\nvar anf_assign4472 = R.mO({\"ChartWindow\":G(ChartWindow341,\"test\",L[1464]),\n\"is-pie-chart-window\":G($pie$chart$window$brander4398,\"test\",L[1450]),\n\"pie-chart-window\":pie$chart$window4403,\n\"is-dot-chart-window\":G($dot$chart$window$brander4407,\"test\",L[1452]),\n\"dot-chart-window\":dot$chart$window4414,\n\"is-box-plot-chart-window\":G($box$plot$chart$window$brander4418,\"test\",L[1454]),\n\"box-plot-chart-window\":box$plot$chart$window4425,\n\"is-bar-chart-window\":G($bar$chart$window$brander4429,\"test\",L[1456]),\n\"bar-chart-window\":bar$chart$window4436,\n\"is-interval-chart-window\":G($interval$chart$window$brander4440,\"test\",L[1458]),\n\"interval-chart-window\":interval$chart$window4445,\n\"is-histogram-chart-window\":G($histogram$chart$window$brander4449,\"test\",L[1460]),\n\"histogram-chart-window\":histogram$chart$window4456,\n\"is-plot-chart-window\":G($plot$chart$window$brander4460,\"test\",L[1462]),\n\"plot-chart-window\":plot$chart$window4469});\nChartWindow4473.$var = anf_assign4472;\nR.nothing;\n$al331 = L[1464];\nvar anf_assign4474 = G(ChartWindow4473.$var,\"ChartWindow\",L[1464]);\nis$ChartWindow4475.$var = anf_assign4474;\nR.nothing;\n$al331 = L[1450];\nvar anf_assign4476 = G(ChartWindow4473.$var,\"is-pie-chart-window\",L[1450]);\nis$pie$chart$window4477.$var = anf_assign4476;\nR.nothing;\n$al331 = L[1450];\nvar anf_assign4478 = G(ChartWindow4473.$var,\"pie-chart-window\",L[1450]);\npie$chart$window4321.$var = anf_assign4478;\nR.nothing;\n$al331 = L[1452];\nvar anf_assign4480 = G(ChartWindow4473.$var,\"is-dot-chart-window\",L[1452]);\nis$dot$chart$window4481.$var = anf_assign4480;\nR.nothing;\n$al331 = L[1452];\nvar anf_assign4482 = G(ChartWindow4473.$var,\"dot-chart-window\",L[1452]);\ndot$chart$window4329.$var = anf_assign4482;\nR.nothing;\n$al331 = L[1454];\nvar anf_assign4483 = G(ChartWindow4473.$var,\"is-box-plot-chart-window\",L[1454]);\nis$box$plot$chart$window4484.$var = anf_assign4483;\nR.nothing;\n$al331 = L[1454];\nvar anf_assign4485 = G(ChartWindow4473.$var,\"box-plot-chart-window\",L[1454]);\nbox$plot$chart$window4339.$var = anf_assign4485;\nR.nothing;\n$al331 = L[1456];\nvar anf_assign4486 = G(ChartWindow4473.$var,\"is-bar-chart-window\",L[1456]);\nis$bar$chart$window4487.$var = anf_assign4486;\nR.nothing;\n$al331 = L[1456];\nvar anf_assign4488 = G(ChartWindow4473.$var,\"bar-chart-window\",L[1456]);\nbar$chart$window4348.$var = anf_assign4488;\nR.nothing;\n$al331 = L[1458];\nvar anf_assign4489 = G(ChartWindow4473.$var,\"is-interval-chart-window\",L[1458]);\nis$interval$chart$window4490.$var = anf_assign4489;\nR.nothing;\n$al331 = L[1458];\nvar anf_assign4491 = G(ChartWindow4473.$var,\"interval-chart-window\",L[1458]);\ninterval$chart$window4356.$var = anf_assign4491;\nR.nothing;\n$al331 = L[1460];\nvar anf_assign4492 = G(ChartWindow4473.$var,\"is-histogram-chart-window\",L[1460]);\nis$histogram$chart$window4493.$var = anf_assign4492;\nR.nothing;\n$al331 = L[1460];\nvar anf_assign4494 = G(ChartWindow4473.$var,\"histogram-chart-window\",L[1460]);\nhistogram$chart$window4365.$var = anf_assign4494;\nR.nothing;\n$al331 = L[1462];\nvar anf_assign4495 = G(ChartWindow4473.$var,\"is-plot-chart-window\",L[1462]);\nis$plot$chart$window4496.$var = anf_assign4495;\nR.nothing;\n$al331 = L[1462];\nvar anf_assign4497 = G(ChartWindow4473.$var,\"plot-chart-window\",L[1462]);\nplot$chart$window4375.$var = anf_assign4497;\nR.nothing;\nvar $temp_lam4499 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1465($f4500) {\nvar $step4498 = 0;\nvar $elidedFrames4504 = 0;\nvar $ans4501 = D;\nvar $al4502 = L[1465];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1465],1,$t,false);\n}\nvar f4500 = $f4500;\n// callee optimization;\nwhile(!R.isContinuation($ans4501)) {\nswitch($step4498) {\ncase 0: $step4498 = 1;\n$al4502 = L[1468];\nR._cA(L[1468],PlottableFunction4509,f4500);\nbreak;\ncase 1: var anf_arg2081 = R.extendObj(L[1466],default$function$plot$series4505,{\"f\":f4500});\n// caller optimization;\n$ans4501 = function$plot$series3898.$var.app(anf_arg2081);\nvar ann_check_temp4506 = $ans4501;\n$step4498 = 2;\n$al4502 = L[1467];\nvar $ann$check4508 = R._cA(L[1467],DataSeries4507,ann_check_temp4506);\nif(R.isContinuation($ann$check4508)) {\n$ans4501 = $ann$check4508;\n}\nbreak;\ncase 2: $step4498 = 3;\n$ans4501 = ann_check_temp4506;\nbreak;\ncase 3: return $ans4501;\ndefault: R.ffi.throwSpinnakerError(L[1465],$step4498);\n}\n}\nreturn $ans4501;\n};\nvar anf_assign4512 = R.mF($temp_lam4499,\"function-plot-from-list\");\nfunction$plot$from$list4513.$var = anf_assign4512;\nR.nothing;\nvar $temp_lam4515 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1469($xs4516,$ys4517) {\nvar $step4514 = 0;\nvar $elidedFrames4521 = 0;\nvar $ans4518 = D;\nvar $al4519 = L[1469];\nif(R.isAR($xs4516)) {\n$step4514 = $xs4516.step;\n$al4519 = $xs4516.from;\n$ans4518 = $xs4516.ans;\n$elidedFrames4521 = $xs4516.elidedFrames;\nxs4516 = $xs4516.args[0];\nys4517 = $xs4516.args[1];\nanf_arg4541 = $xs4516.vars[0];\nanf_arg2102 = $xs4516.vars[1];\nann_check_temp4544 = $xs4516.vars[2];\nanf_arg2091 = $xs4516.vars[3];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1469],2,$t,false);\n}\nvar xs4516 = $xs4516;\nvar ys4517 = $ys4517;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4518 = R.mC();\n}\nwhile(!R.isContinuation($ans4518)) {\nswitch($step4514) {\ncase 0: $step4514 = 1;\n$al4519 = L[1484];\nvar $ann$check4547 = R._cA(L[1484],R.gDA(L[1484],\"CL\",CL40.dict.types,\"LoN\"),xs4516);\nif(R.isContinuation($ann$check4547)) {\n$ans4518 = $ann$check4547;\n}\nbreak;\ncase 1: $step4514 = 2;\n$al4519 = L[1485];\nvar $ann$check4548 = R._cA(L[1485],R.gDA(L[1485],\"CL\",CL40.dict.types,\"LoN\"),ys4517);\nif(R.isContinuation($ann$check4548)) {\n$ans4518 = $ann$check4548;\n}\nbreak;\ncase 2: $step4514 = 3;\n$ans4518 = R.maybeMethodCall0(xs4516,\"length\",L[1470]);\nbreak;\ncase 3: var anf_arg2091 = $ans4518;\n$step4514 = 4;\n$ans4518 = R.maybeMethodCall0(ys4517,\"length\",L[1471]);\nbreak;\ncase 4: var anf_arg2088 = $ans4518;\n$step4514 = 5;\n$al4519 = L[1483];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4519,equal$always1);\n}\n$ans4518 = equal$always1.app(anf_arg2091,anf_arg2088);\nbreak;\ncase 5: var anf_arg2092 = $ans4518;\n$ans4518 = R.not(anf_arg2092);\nvar anf_if4546 = $ans4518;\n$step4514 = R.checkPyretTrue(anf_if4546)?6:8;\nbreak;\ncase 6: $step4514 = 7;\n$al4519 = L[1482];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4519,raise1);\n}\n$ans4518 = raise1.app((\"line-plot: xs and ys should have the same length\"));\nbreak;\ncase 7: $step4514 = 9;\n$ans4518 = nothing5;\nbreak;\ncase 8: $step4514 = 9;\n$ans4518 = nothing5;\nbreak;\ncase 9: $step4514 = 10;\n$ans4518 = R.maybeMethodCall1(xs4516,\"each\",L[1472],check$num588.$var);\nbreak;\ncase 10: $step4514 = 11;\n$ans4518 = R.maybeMethodCall1(ys4517,\"each\",L[1473],check$num588.$var);\nbreak;\ncase 11: var anf_arg4541 = get$scatter$point4522.$var === D?U(L[1474],\"get-scatter-point\"):get$scatter$point4522.$var;\nvar $temp_lam4525 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1475($$underscore4526) {\nvar $step4524 = 0;\nvar $elidedFrames4530 = 0;\nvar $ans4527 = D;\nvar $al4528 = L[1475];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1475],1,$t,false);\n}\nvar $underscore4526 = $$underscore4526;\n// callee optimization;\nwhile(!R.isContinuation($ans4527)) {\nswitch($step4524) {\ncase 0: $step4524 = 1;\n$ans4527 = (\"\");\nbreak;\ncase 1: return $ans4527;\ndefault: R.ffi.throwSpinnakerError(L[1475],$step4524);\n}\n}\nreturn $ans4527;\n};\nvar anf_arg2105 = R.mF($temp_lam4525,\"\");\n$step4514 = 12;\n$ans4518 = R.maybeMethodCall1(xs4516,\"map\",L[1476],anf_arg2105);\nbreak;\ncase 12: var anf_arg2102 = $ans4518;\nvar $temp_lam4534 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1477($$underscore4535) {\nvar $step4533 = 0;\nvar $elidedFrames4539 = 0;\nvar $ans4536 = D;\nvar $al4537 = L[1477];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1477],1,$t,false);\n}\nvar $underscore4535 = $$underscore4535;\n// callee optimization;\nwhile(!R.isContinuation($ans4536)) {\nswitch($step4533) {\ncase 0: $step4533 = 1;\n$ans4536 = none28;\nbreak;\ncase 1: return $ans4536;\ndefault: R.ffi.throwSpinnakerError(L[1477],$step4533);\n}\n}\nreturn $ans4536;\n};\nvar anf_arg2106 = R.mF($temp_lam4534,\"\");\n$step4514 = 13;\n$ans4518 = R.maybeMethodCall1(xs4516,\"map\",L[1478],anf_arg2106);\nbreak;\ncase 13: var anf_arg2107 = $ans4518;\n$step4514 = 14;\n$al4519 = L[1481];\n// omitting isFunction check;\n$ans4518 = map430.app(anf_arg4541,xs4516,ys4517,anf_arg2102,anf_arg2107);\nbreak;\ncase 14: var anf_extend4543 = $ans4518;\nvar anf_arg2108 = R.extendObj(L[1479],default$line$plot$series4542,{\"ps\":anf_extend4543});\n// caller optimization;\n$ans4518 = line$plot$series3790.$var.app(anf_arg2108);\nvar ann_check_temp4544 = $ans4518;\n$step4514 = 15;\n$al4519 = L[1480];\nvar $ann$check4545 = R._cA(L[1480],DataSeries4507,ann_check_temp4544);\nif(R.isContinuation($ann$check4545)) {\n$ans4518 = $ann$check4545;\n}\nbreak;\ncase 15: $step4514 = 16;\n$ans4518 = ann_check_temp4544;\nbreak;\ncase 16: ++R.GAS;\nreturn $ans4518;\ndefault: R.ffi.throwSpinnakerError(L[1469],$step4514);\n}\n}\nif($step4514 !== 16) {\n$ans4518.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4519,$temp_lam4515,$step4514,[xs4516,ys4517],[anf_arg4541,anf_arg2102,ann_check_temp4544,anf_arg2091],$elidedFrames4521);\n}\nreturn $ans4518;\n};\nvar anf_assign4550 = R.mF($temp_lam4515,\"line-plot-from-list\");\nline$plot$from$list4551.$var = anf_assign4550;\nR.nothing;\nvar $temp_lam4553 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1486($labels4554,$xs4555,$ys4556) {\nvar $step4552 = 0;\nvar $elidedFrames4560 = 0;\nvar $ans4557 = D;\nvar $al4558 = L[1486];\nif(R.isAR($labels4554)) {\n$step4552 = $labels4554.step;\n$al4558 = $labels4554.from;\n$ans4557 = $labels4554.ans;\n$elidedFrames4560 = $labels4554.elidedFrames;\nlabels4554 = $labels4554.args[0];\nxs4555 = $labels4554.args[1];\nys4556 = $labels4554.args[2];\nanf_arg2141 = $labels4554.vars[0];\nanf_arg2110 = $labels4554.vars[1];\nanf_arg5404 = $labels4554.vars[2];\nann_check_temp4569 = $labels4554.vars[3];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1486],3,$t,false);\n}\nvar labels4554 = $labels4554;\nvar xs4555 = $xs4555;\nvar ys4556 = $ys4556;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4557 = R.mC();\n}\nwhile(!R.isContinuation($ans4557)) {\nswitch($step4552) {\ncase 0: $step4552 = 1;\n$al4558 = L[1503];\nvar $ann$check4573 = R._cA(L[1503],R.gDA(L[1503],\"CL\",CL40.dict.types,\"LoS\"),labels4554);\nif(R.isContinuation($ann$check4573)) {\n$ans4557 = $ann$check4573;\n}\nbreak;\ncase 1: $step4552 = 2;\n$al4558 = L[1504];\nvar $ann$check4574 = R._cA(L[1504],R.gDA(L[1504],\"CL\",CL40.dict.types,\"LoN\"),xs4555);\nif(R.isContinuation($ann$check4574)) {\n$ans4557 = $ann$check4574;\n}\nbreak;\ncase 2: $step4552 = 3;\n$al4558 = L[1505];\nvar $ann$check4575 = R._cA(L[1505],R.gDA(L[1505],\"CL\",CL40.dict.types,\"LoN\"),ys4556);\nif(R.isContinuation($ann$check4575)) {\n$ans4557 = $ann$check4575;\n}\nbreak;\ncase 3: $step4552 = 4;\n$ans4557 = R.maybeMethodCall0(xs4555,\"length\",L[1487]);\nbreak;\ncase 4: var anf_arg2110 = $ans4557;\n$step4552 = 5;\n$ans4557 = R.maybeMethodCall0(ys4556,\"length\",L[1488]);\nbreak;\ncase 5: var anf_arg2113 = $ans4557;\n$step4552 = 6;\n$al4558 = L[1502];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4558,equal$always1);\n}\n$ans4557 = equal$always1.app(anf_arg2110,anf_arg2113);\nbreak;\ncase 6: var anf_arg2051 = $ans4557;\n$ans4557 = R.not(anf_arg2051);\nvar anf_if4572 = $ans4557;\n$step4552 = R.checkPyretTrue(anf_if4572)?7:9;\nbreak;\ncase 7: $step4552 = 8;\n$al4558 = L[1501];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4558,raise1);\n}\n$ans4557 = raise1.app((\"labeled-line-plot: xs and ys should have the same length\"));\nbreak;\ncase 8: $step4552 = 10;\n$ans4557 = nothing5;\nbreak;\ncase 9: $step4552 = 10;\n$ans4557 = nothing5;\nbreak;\ncase 10: $step4552 = 11;\n$ans4557 = R.maybeMethodCall0(xs4555,\"length\",L[1489]);\nbreak;\ncase 11: var anf_arg5404 = $ans4557;\n$step4552 = 12;\n$ans4557 = R.maybeMethodCall0(labels4554,\"length\",L[1490]);\nbreak;\ncase 12: var anf_arg5413 = $ans4557;\n$step4552 = 13;\n$al4558 = L[1500];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4558,equal$always1);\n}\n$ans4557 = equal$always1.app(anf_arg5404,anf_arg5413);\nbreak;\ncase 13: var anf_arg2147 = $ans4557;\n$ans4557 = R.not(anf_arg2147);\nvar anf_if4571 = $ans4557;\n$step4552 = R.checkPyretTrue(anf_if4571)?14:16;\nbreak;\ncase 14: $step4552 = 15;\n$al4558 = L[1499];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4558,raise1);\n}\n$ans4557 = raise1.app((\"labeled-line-plot: xs and labels should have the same length\"));\nbreak;\ncase 15: $step4552 = 17;\n$ans4557 = nothing5;\nbreak;\ncase 16: $step4552 = 17;\n$ans4557 = nothing5;\nbreak;\ncase 17: $step4552 = 18;\n$ans4557 = R.maybeMethodCall1(xs4555,\"each\",L[1491],check$num588.$var);\nbreak;\ncase 18: $step4552 = 19;\n$ans4557 = R.maybeMethodCall1(ys4556,\"each\",L[1492],check$num588.$var);\nbreak;\ncase 19: var anf_arg2141 = get$scatter$point4522.$var === D?U(L[1493],\"get-scatter-point\"):get$scatter$point4522.$var;\nvar $temp_lam4562 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1494($$underscore4563) {\nvar $step4561 = 0;\nvar $elidedFrames4567 = 0;\nvar $ans4564 = D;\nvar $al4565 = L[1494];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1494],1,$t,false);\n}\nvar $underscore4563 = $$underscore4563;\n// callee optimization;\nwhile(!R.isContinuation($ans4564)) {\nswitch($step4561) {\ncase 0: $step4561 = 1;\n$ans4564 = none28;\nbreak;\ncase 1: return $ans4564;\ndefault: R.ffi.throwSpinnakerError(L[1494],$step4561);\n}\n}\nreturn $ans4564;\n};\nvar anf_arg2138 = R.mF($temp_lam4562,\"\");\n$step4552 = 20;\n$ans4557 = R.maybeMethodCall1(xs4555,\"map\",L[1495],anf_arg2138);\nbreak;\ncase 20: var anf_arg2142 = $ans4557;\n$step4552 = 21;\n$al4558 = L[1498];\n// omitting isFunction check;\n$ans4557 = map430.app(anf_arg2141,xs4555,ys4556,labels4554,anf_arg2142);\nbreak;\ncase 21: var anf_extend5435 = $ans4557;\nvar anf_arg2139 = R.extendObj(L[1496],default$line$plot$series4542,{\"ps\":anf_extend5435});\n// caller optimization;\n$ans4557 = line$plot$series3790.$var.app(anf_arg2139);\nvar ann_check_temp4569 = $ans4557;\n$step4552 = 22;\n$al4558 = L[1497];\nvar $ann$check4570 = R._cA(L[1497],DataSeries4507,ann_check_temp4569);\nif(R.isContinuation($ann$check4570)) {\n$ans4557 = $ann$check4570;\n}\nbreak;\ncase 22: $step4552 = 23;\n$ans4557 = ann_check_temp4569;\nbreak;\ncase 23: ++R.GAS;\nreturn $ans4557;\ndefault: R.ffi.throwSpinnakerError(L[1486],$step4552);\n}\n}\nif($step4552 !== 23) {\n$ans4557.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4558,$temp_lam4553,$step4552,[labels4554,xs4555,ys4556],[anf_arg2141,anf_arg2110,anf_arg5404,ann_check_temp4569],$elidedFrames4560);\n}\nreturn $ans4557;\n};\nvar anf_assign4577 = R.mF($temp_lam4553,\"labeled-line-plot-from-list\");\nlabeled$line$plot$from$list4578.$var = anf_assign4577;\nR.nothing;\nvar $temp_lam4580 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1506($images4581,$xs4582,$ys4583) {\nvar $step4579 = 0;\nvar $elidedFrames4589 = 0;\nvar $ans4586 = D;\nvar $al4587 = L[1506];\nif(R.isAR($images4581)) {\n$step4579 = $images4581.step;\n$al4587 = $images4581.from;\n$ans4586 = $images4581.ans;\n$elidedFrames4589 = $images4581.elidedFrames;\nimages4581 = $images4581.args[0];\nxs4582 = $images4581.args[1];\nys4583 = $images4581.args[2];\nanf_arg2151 = $images4581.vars[0];\nanf_arg2153 = $images4581.vars[1];\nanf_arg2157 = $images4581.vars[2];\nanf_arg2148 = $images4581.vars[3];\nann_check_temp4599 = $images4581.vars[4];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1506],3,$t,false);\n}\nvar images4581 = $images4581;\nvar xs4582 = $xs4582;\nvar ys4583 = $ys4583;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4586 = R.mC();\n}\nwhile(!R.isContinuation($ans4586)) {\nswitch($step4579) {\ncase 0: $step4579 = 1;\n$al4587 = L[1524];\nvar $ann$check4603 = R._cA(L[1524],R.gDA(L[1524],\"CL\",CL40.dict.types,\"LoI\"),images4581);\nif(R.isContinuation($ann$check4603)) {\n$ans4586 = $ann$check4603;\n}\nbreak;\ncase 1: $step4579 = 2;\n$al4587 = L[1525];\nvar $ann$check4604 = R._cA(L[1525],R.gDA(L[1525],\"CL\",CL40.dict.types,\"LoN\"),xs4582);\nif(R.isContinuation($ann$check4604)) {\n$ans4586 = $ann$check4604;\n}\nbreak;\ncase 2: $step4579 = 3;\n$al4587 = L[1526];\nvar $ann$check4605 = R._cA(L[1526],R.gDA(L[1526],\"CL\",CL40.dict.types,\"LoN\"),ys4583);\nif(R.isContinuation($ann$check4605)) {\n$ans4586 = $ann$check4605;\n}\nbreak;\ncase 3: $step4579 = 4;\n$ans4586 = R.maybeMethodCall0(xs4582,\"length\",L[1507]);\nbreak;\ncase 4: var anf_arg2148 = $ans4586;\n$step4579 = 5;\n$ans4586 = R.maybeMethodCall0(ys4583,\"length\",L[1508]);\nbreak;\ncase 5: var anf_arg2160 = $ans4586;\n$step4579 = 6;\n$al4587 = L[1523];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4587,equal$always1);\n}\n$ans4586 = equal$always1.app(anf_arg2148,anf_arg2160);\nbreak;\ncase 6: var anf_arg5433 = $ans4586;\n$ans4586 = R.not(anf_arg5433);\nvar anf_if4602 = $ans4586;\n$step4579 = R.checkPyretTrue(anf_if4602)?7:9;\nbreak;\ncase 7: $step4579 = 8;\n$al4587 = L[1522];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4587,raise1);\n}\n$ans4586 = raise1.app((\"image-line-plot: xs and ys should have the same length\"));\nbreak;\ncase 8: $step4579 = 10;\n$ans4586 = nothing5;\nbreak;\ncase 9: $step4579 = 10;\n$ans4586 = nothing5;\nbreak;\ncase 10: $step4579 = 11;\n$ans4586 = R.maybeMethodCall0(xs4582,\"length\",L[1509]);\nbreak;\ncase 11: var anf_arg2153 = $ans4586;\n$step4579 = 12;\n$ans4586 = R.maybeMethodCall0(images4581,\"length\",L[1510]);\nbreak;\ncase 12: var anf_arg2150 = $ans4586;\n$step4579 = 13;\n$al4587 = L[1521];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4587,equal$always1);\n}\n$ans4586 = equal$always1.app(anf_arg2153,anf_arg2150);\nbreak;\ncase 13: var anf_arg2154 = $ans4586;\n$ans4586 = R.not(anf_arg2154);\nvar anf_if4601 = $ans4586;\n$step4579 = R.checkPyretTrue(anf_if4601)?14:16;\nbreak;\ncase 14: $step4579 = 15;\n$al4587 = L[1520];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4587,raise1);\n}\n$ans4586 = raise1.app((\"image-line-plot: xs and images should have the same length\"));\nbreak;\ncase 15: $step4579 = 17;\n$ans4586 = nothing5;\nbreak;\ncase 16: $step4579 = 17;\n$ans4586 = nothing5;\nbreak;\ncase 17: $step4579 = 18;\n$ans4586 = R.maybeMethodCall1(xs4582,\"each\",L[1511],check$num588.$var);\nbreak;\ncase 18: $step4579 = 19;\n$ans4586 = R.maybeMethodCall1(ys4583,\"each\",L[1512],check$num588.$var);\nbreak;\ncase 19: var anf_arg2151 = get$scatter$point4522.$var === D?U(L[1513],\"get-scatter-point\"):get$scatter$point4522.$var;\nvar $temp_lam4591 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1514($$underscore4592) {\nvar $step4590 = 0;\nvar $elidedFrames4596 = 0;\nvar $ans4593 = D;\nvar $al4594 = L[1514];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1514],1,$t,false);\n}\nvar $underscore4592 = $$underscore4592;\n// callee optimization;\nwhile(!R.isContinuation($ans4593)) {\nswitch($step4590) {\ncase 0: $step4590 = 1;\n$ans4593 = (\"\");\nbreak;\ncase 1: return $ans4593;\ndefault: R.ffi.throwSpinnakerError(L[1514],$step4590);\n}\n}\nreturn $ans4593;\n};\nvar anf_arg2156 = R.mF($temp_lam4591,\"\");\n$step4579 = 20;\n$ans4586 = R.maybeMethodCall1(xs4582,\"map\",L[1515],anf_arg2156);\nbreak;\ncase 20: var anf_arg2157 = $ans4586;\n$step4579 = 21;\n$ans4586 = R.maybeMethodCall1(images4581,\"map\",L[1516],some33);\nbreak;\ncase 21: var anf_arg2159 = $ans4586;\n$step4579 = 22;\n$al4587 = L[1519];\n// omitting isFunction check;\n$ans4586 = map430.app(anf_arg2151,xs4582,ys4583,anf_arg2157,anf_arg2159);\nbreak;\ncase 22: var anf_extend4598 = $ans4586;\nvar anf_arg2164 = R.extendObj(L[1517],default$line$plot$series4542,{\"ps\":anf_extend4598});\n// caller optimization;\n$ans4586 = line$plot$series3790.$var.app(anf_arg2164);\nvar ann_check_temp4599 = $ans4586;\n$step4579 = 23;\n$al4587 = L[1518];\nvar $ann$check4600 = R._cA(L[1518],DataSeries4507,ann_check_temp4599);\nif(R.isContinuation($ann$check4600)) {\n$ans4586 = $ann$check4600;\n}\nbreak;\ncase 23: $step4579 = 24;\n$ans4586 = ann_check_temp4599;\nbreak;\ncase 24: ++R.GAS;\nreturn $ans4586;\ndefault: R.ffi.throwSpinnakerError(L[1506],$step4579);\n}\n}\nif($step4579 !== 24) {\n$ans4586.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4587,$temp_lam4580,$step4579,[images4581,xs4582,ys4583],[anf_arg2151,anf_arg2153,anf_arg2157,anf_arg2148,ann_check_temp4599],$elidedFrames4589);\n}\nreturn $ans4586;\n};\nvar anf_assign4607 = R.mF($temp_lam4580,\"image-line-plot-from-list\");\nimage$line$plot$from$list4608.$var = anf_assign4607;\nR.nothing;\nvar $temp_lam4612 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1527($x4613,$y4614,$label4615,$optimg4616) {\nvar $step4611 = 0;\nvar $elidedFrames4621 = 0;\nvar $ans4618 = D;\nvar $al4619 = L[1527];\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1527],4,$t,false);\n}\nvar x4613 = $x4613;\nvar y4614 = $y4614;\nvar label4615 = $label4615;\nvar optimg4616 = $optimg4616;\n// callee optimization;\nwhile(!R.isContinuation($ans4618)) {\nswitch($step4611) {\ncase 0: $step4611 = 1;\n$al4619 = L[1529];\nR._cA(L[1529],$type$Number3,x4613);\nbreak;\ncase 1: $step4611 = 2;\n$al4619 = L[1530];\nR._cA(L[1530],$type$Number3,y4614);\nbreak;\ncase 2: $step4611 = 3;\n$al4619 = L[1531];\nR._cA(L[1531],$type$String8,label4615);\nbreak;\ncase 3: $step4611 = 4;\n$al4619 = L[1532];\nR._cA(L[1532],Option27,optimg4616);\nbreak;\ncase 4: var ann_check_temp4622 = R.mO({\"x\":x4613,\n\"y\":y4614,\n\"label\":label4615,\n\"image\":optimg4616});\n$step4611 = 5;\n$al4619 = L[1528];\nvar $ann$check4624 = R._cA(L[1528],ScatterPoint4623,ann_check_temp4622);\nif(R.isContinuation($ann$check4624)) {\n$ans4618 = $ann$check4624;\n}\nbreak;\ncase 5: $step4611 = 6;\n$ans4618 = ann_check_temp4622;\nbreak;\ncase 6: return $ans4618;\ndefault: R.ffi.throwSpinnakerError(L[1527],$step4611);\n}\n}\nreturn $ans4618;\n};\nvar anf_assign4626 = R.mF($temp_lam4612,\"get-scatter-point\");\nget$scatter$point4522.$var = anf_assign4626;\nR.nothing;\nvar $temp_lam4629 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1533($xs4630,$ys4631) {\nvar $step4628 = 0;\nvar $elidedFrames4636 = 0;\nvar $ans4633 = D;\nvar $al4634 = L[1533];\nif(R.isAR($xs4630)) {\n$step4628 = $xs4630.step;\n$al4634 = $xs4630.from;\n$ans4633 = $xs4630.ans;\n$elidedFrames4636 = $xs4630.elidedFrames;\nxs4630 = $xs4630.args[0];\nys4631 = $xs4630.args[1];\nanf_arg4639 = $xs4630.vars[0];\nann_check_temp4659 = $xs4630.vars[1];\nanf_arg2183 = $xs4630.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1533],2,$t,false);\n}\nvar xs4630 = $xs4630;\nvar ys4631 = $ys4631;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4633 = R.mC();\n}\nwhile(!R.isContinuation($ans4633)) {\nswitch($step4628) {\ncase 0: $step4628 = 1;\n$al4634 = L[1547];\nvar $ann$check4662 = R._cA(L[1547],R.gDA(L[1547],\"CL\",CL40.dict.types,\"LoN\"),xs4630);\nif(R.isContinuation($ann$check4662)) {\n$ans4633 = $ann$check4662;\n}\nbreak;\ncase 1: $step4628 = 2;\n$al4634 = L[1548];\nvar $ann$check4663 = R._cA(L[1548],R.gDA(L[1548],\"CL\",CL40.dict.types,\"LoN\"),ys4631);\nif(R.isContinuation($ann$check4663)) {\n$ans4633 = $ann$check4663;\n}\nbreak;\ncase 2: $step4628 = 3;\n$ans4633 = R.maybeMethodCall0(xs4630,\"length\",L[1534]);\nbreak;\ncase 3: var anf_arg4639 = $ans4633;\n$step4628 = 4;\n$ans4633 = R.maybeMethodCall0(ys4631,\"length\",L[1535]);\nbreak;\ncase 4: var anf_arg5451 = $ans4633;\n$step4628 = 5;\n$al4634 = L[1546];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4634,equal$always1);\n}\n$ans4633 = equal$always1.app(anf_arg4639,anf_arg5451);\nbreak;\ncase 5: var anf_arg5452 = $ans4633;\n$ans4633 = R.not(anf_arg5452);\nvar anf_if4661 = $ans4633;\n$step4628 = R.checkPyretTrue(anf_if4661)?6:8;\nbreak;\ncase 6: $step4628 = 7;\n$al4634 = L[1545];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4634,raise1);\n}\n$ans4633 = raise1.app((\"scatter-plot: xs and ys should have the same length\"));\nbreak;\ncase 7: $step4628 = 9;\n$ans4633 = nothing5;\nbreak;\ncase 8: $step4628 = 9;\n$ans4633 = nothing5;\nbreak;\ncase 9: $step4628 = 10;\n$ans4633 = R.maybeMethodCall1(xs4630,\"each\",L[1536],check$num588.$var);\nbreak;\ncase 10: $step4628 = 11;\n$ans4633 = R.maybeMethodCall1(ys4631,\"each\",L[1537],check$num588.$var);\nbreak;\ncase 11: var $temp_lam4641 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1538($$underscore4642) {\nvar $step4640 = 0;\nvar $elidedFrames4647 = 0;\nvar $ans4644 = D;\nvar $al4645 = L[1538];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1538],1,$t,false);\n}\nvar $underscore4642 = $$underscore4642;\n// callee optimization;\nwhile(!R.isContinuation($ans4644)) {\nswitch($step4640) {\ncase 0: $step4640 = 1;\n$ans4644 = (\"\");\nbreak;\ncase 1: return $ans4644;\ndefault: R.ffi.throwSpinnakerError(L[1538],$step4640);\n}\n}\nreturn $ans4644;\n};\nvar anf_arg2182 = R.mF($temp_lam4641,\"\");\n$step4628 = 12;\n$ans4633 = R.maybeMethodCall1(xs4630,\"map\",L[1539],anf_arg2182);\nbreak;\ncase 12: var anf_arg2183 = $ans4633;\nvar $temp_lam4650 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1540($$underscore4651) {\nvar $step4649 = 0;\nvar $elidedFrames4655 = 0;\nvar $ans4652 = D;\nvar $al4653 = L[1540];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1540],1,$t,false);\n}\nvar $underscore4651 = $$underscore4651;\n// callee optimization;\nwhile(!R.isContinuation($ans4652)) {\nswitch($step4649) {\ncase 0: $step4649 = 1;\n$ans4652 = none28;\nbreak;\ncase 1: return $ans4652;\ndefault: R.ffi.throwSpinnakerError(L[1540],$step4649);\n}\n}\nreturn $ans4652;\n};\nvar anf_arg2184 = R.mF($temp_lam4650,\"\");\n$step4628 = 13;\n$ans4633 = R.maybeMethodCall1(xs4630,\"map\",L[1541],anf_arg2184);\nbreak;\ncase 13: var anf_arg2185 = $ans4633;\n$step4628 = 14;\n$al4634 = L[1544];\n// omitting isFunction check;\n$ans4633 = map430.app(get$scatter$point4522.$var,xs4630,ys4631,anf_arg2183,anf_arg2185);\nbreak;\ncase 14: var anf_extend4658 = $ans4633;\nvar anf_arg2187 = R.extendObj(L[1542],default$scatter$plot$series4657,{\"ps\":anf_extend4658});\n// caller optimization;\n$ans4633 = scatter$plot$series3822.$var.app(anf_arg2187);\nvar ann_check_temp4659 = $ans4633;\n$step4628 = 15;\n$al4634 = L[1543];\nvar $ann$check4660 = R._cA(L[1543],DataSeries4507,ann_check_temp4659);\nif(R.isContinuation($ann$check4660)) {\n$ans4633 = $ann$check4660;\n}\nbreak;\ncase 15: $step4628 = 16;\n$ans4633 = ann_check_temp4659;\nbreak;\ncase 16: ++R.GAS;\nreturn $ans4633;\ndefault: R.ffi.throwSpinnakerError(L[1533],$step4628);\n}\n}\nif($step4628 !== 16) {\n$ans4633.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4634,$temp_lam4629,$step4628,[xs4630,ys4631],[anf_arg4639,ann_check_temp4659,anf_arg2183],$elidedFrames4636);\n}\nreturn $ans4633;\n};\nvar anf_assign4665 = R.mF($temp_lam4629,\"scatter-plot-from-list\");\nscatter$plot$from$list4666.$var = anf_assign4665;\nR.nothing;\nvar $temp_lam4668 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1549($labels4669,$xs4670,$ys4671) {\nvar $step4667 = 0;\nvar $elidedFrames4675 = 0;\nvar $ans4672 = D;\nvar $al4673 = L[1549];\nif(R.isAR($labels4669)) {\n$step4667 = $labels4669.step;\n$al4673 = $labels4669.from;\n$ans4672 = $labels4669.ans;\n$elidedFrames4675 = $labels4669.elidedFrames;\nlabels4669 = $labels4669.args[0];\nxs4670 = $labels4669.args[1];\nys4671 = $labels4669.args[2];\nann_check_temp4686 = $labels4669.vars[0];\nanf_arg2190 = $labels4669.vars[1];\nanf_arg2193 = $labels4669.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1549],3,$t,false);\n}\nvar labels4669 = $labels4669;\nvar xs4670 = $xs4670;\nvar ys4671 = $ys4671;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4672 = R.mC();\n}\nwhile(!R.isContinuation($ans4672)) {\nswitch($step4667) {\ncase 0: $step4667 = 1;\n$al4673 = L[1566];\nvar $ann$check4690 = R._cA(L[1566],R.gDA(L[1566],\"CL\",CL40.dict.types,\"LoS\"),labels4669);\nif(R.isContinuation($ann$check4690)) {\n$ans4672 = $ann$check4690;\n}\nbreak;\ncase 1: $step4667 = 2;\n$al4673 = L[1567];\nvar $ann$check4691 = R._cA(L[1567],R.gDA(L[1567],\"CL\",CL40.dict.types,\"LoN\"),xs4670);\nif(R.isContinuation($ann$check4691)) {\n$ans4672 = $ann$check4691;\n}\nbreak;\ncase 2: $step4667 = 3;\n$al4673 = L[1568];\nvar $ann$check4692 = R._cA(L[1568],R.gDA(L[1568],\"CL\",CL40.dict.types,\"LoN\"),ys4671);\nif(R.isContinuation($ann$check4692)) {\n$ans4672 = $ann$check4692;\n}\nbreak;\ncase 3: $step4667 = 4;\n$ans4672 = R.maybeMethodCall0(xs4670,\"length\",L[1550]);\nbreak;\ncase 4: var anf_arg2190 = $ans4672;\n$step4667 = 5;\n$ans4672 = R.maybeMethodCall0(ys4671,\"length\",L[1551]);\nbreak;\ncase 5: var anf_arg2191 = $ans4672;\n$step4667 = 6;\n$al4673 = L[1565];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4673,equal$always1);\n}\n$ans4672 = equal$always1.app(anf_arg2190,anf_arg2191);\nbreak;\ncase 6: var anf_arg5507 = $ans4672;\n$ans4672 = R.not(anf_arg5507);\nvar anf_if4689 = $ans4672;\n$step4667 = R.checkPyretTrue(anf_if4689)?7:9;\nbreak;\ncase 7: $step4667 = 8;\n$al4673 = L[1564];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4673,raise1);\n}\n$ans4672 = raise1.app((\"labeled-scatter-plot: xs and ys should have the same length\"));\nbreak;\ncase 8: $step4667 = 10;\n$ans4672 = nothing5;\nbreak;\ncase 9: $step4667 = 10;\n$ans4672 = nothing5;\nbreak;\ncase 10: $step4667 = 11;\n$ans4672 = R.maybeMethodCall0(xs4670,\"length\",L[1552]);\nbreak;\ncase 11: var anf_arg2193 = $ans4672;\n$step4667 = 12;\n$ans4672 = R.maybeMethodCall0(labels4669,\"length\",L[1553]);\nbreak;\ncase 12: var anf_arg2194 = $ans4672;\n$step4667 = 13;\n$al4673 = L[1563];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4673,equal$always1);\n}\n$ans4672 = equal$always1.app(anf_arg2193,anf_arg2194);\nbreak;\ncase 13: var anf_arg2199 = $ans4672;\n$ans4672 = R.not(anf_arg2199);\nvar anf_if4688 = $ans4672;\n$step4667 = R.checkPyretTrue(anf_if4688)?14:16;\nbreak;\ncase 14: $step4667 = 15;\n$al4673 = L[1562];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4673,raise1);\n}\n$ans4672 = raise1.app((\"labeled-scatter-plot: xs and labels should have the same length\"));\nbreak;\ncase 15: $step4667 = 17;\n$ans4672 = nothing5;\nbreak;\ncase 16: $step4667 = 17;\n$ans4672 = nothing5;\nbreak;\ncase 17: $step4667 = 18;\n$ans4672 = R.maybeMethodCall1(xs4670,\"each\",L[1554],check$num588.$var);\nbreak;\ncase 18: $step4667 = 19;\n$ans4672 = R.maybeMethodCall1(ys4671,\"each\",L[1555],check$num588.$var);\nbreak;\ncase 19: $step4667 = 20;\n$ans4672 = R.maybeMethodCall1(labels4669,\"each\",L[1556],check$string604.$var);\nbreak;\ncase 20: var $temp_lam4677 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1557($$underscore4678) {\nvar $step4676 = 0;\nvar $elidedFrames4682 = 0;\nvar $ans4679 = D;\nvar $al4680 = L[1557];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1557],1,$t,false);\n}\nvar $underscore4678 = $$underscore4678;\n// callee optimization;\nwhile(!R.isContinuation($ans4679)) {\nswitch($step4676) {\ncase 0: $step4676 = 1;\n$ans4679 = none28;\nbreak;\ncase 1: return $ans4679;\ndefault: R.ffi.throwSpinnakerError(L[1557],$step4676);\n}\n}\nreturn $ans4679;\n};\nvar anf_arg2196 = R.mF($temp_lam4677,\"\");\n$step4667 = 21;\n$ans4672 = R.maybeMethodCall1(xs4670,\"map\",L[1558],anf_arg2196);\nbreak;\ncase 21: var anf_arg2197 = $ans4672;\n$step4667 = 22;\n$al4673 = L[1561];\n// omitting isFunction check;\n$ans4672 = map430.app(get$scatter$point4522.$var,xs4670,ys4671,labels4669,anf_arg2197);\nbreak;\ncase 22: var anf_extend4685 = $ans4672;\nvar anf_arg5472 = R.extendObj(L[1559],default$scatter$plot$series4657,{\"ps\":anf_extend4685});\n// caller optimization;\n$ans4672 = scatter$plot$series3822.$var.app(anf_arg5472);\nvar ann_check_temp4686 = $ans4672;\n$step4667 = 23;\n$al4673 = L[1560];\nvar $ann$check4687 = R._cA(L[1560],DataSeries4507,ann_check_temp4686);\nif(R.isContinuation($ann$check4687)) {\n$ans4672 = $ann$check4687;\n}\nbreak;\ncase 23: $step4667 = 24;\n$ans4672 = ann_check_temp4686;\nbreak;\ncase 24: ++R.GAS;\nreturn $ans4672;\ndefault: R.ffi.throwSpinnakerError(L[1549],$step4667);\n}\n}\nif($step4667 !== 24) {\n$ans4672.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4673,$temp_lam4668,$step4667,[labels4669,xs4670,ys4671],[ann_check_temp4686,anf_arg2190,anf_arg2193],$elidedFrames4675);\n}\nreturn $ans4672;\n};\nvar anf_assign4695 = R.mF($temp_lam4668,\"labeled-scatter-plot-from-list\");\nlabeled$scatter$plot$from$list4696.$var = anf_assign4695;\nR.nothing;\nvar $temp_lam4698 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1569($images4699,$xs4700,$ys4701) {\nvar $step4697 = 0;\nvar $elidedFrames4705 = 0;\nvar $ans4702 = D;\nvar $al4703 = L[1569];\nif(R.isAR($images4699)) {\n$step4697 = $images4699.step;\n$al4703 = $images4699.from;\n$ans4702 = $images4699.ans;\n$elidedFrames4705 = $images4699.elidedFrames;\nimages4699 = $images4699.args[0];\nxs4700 = $images4699.args[1];\nys4701 = $images4699.args[2];\nanf_arg5477 = $images4699.vars[0];\nanf_arg2214 = $images4699.vars[1];\nann_check_temp4723 = $images4699.vars[2];\nanf_arg2209 = $images4699.vars[3];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1569],3,$t,false);\n}\nvar images4699 = $images4699;\nvar xs4700 = $xs4700;\nvar ys4701 = $ys4701;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4702 = R.mC();\n}\nwhile(!R.isContinuation($ans4702)) {\nswitch($step4697) {\ncase 0: $step4697 = 1;\n$al4703 = L[1587];\nvar $ann$check4727 = R._cA(L[1587],R.gDA(L[1587],\"CL\",CL40.dict.types,\"LoI\"),images4699);\nif(R.isContinuation($ann$check4727)) {\n$ans4702 = $ann$check4727;\n}\nbreak;\ncase 1: $step4697 = 2;\n$al4703 = L[1588];\nvar $ann$check4729 = R._cA(L[1588],R.gDA(L[1588],\"CL\",CL40.dict.types,\"LoN\"),xs4700);\nif(R.isContinuation($ann$check4729)) {\n$ans4702 = $ann$check4729;\n}\nbreak;\ncase 2: $step4697 = 3;\n$al4703 = L[1589];\nvar $ann$check4730 = R._cA(L[1589],R.gDA(L[1589],\"CL\",CL40.dict.types,\"LoN\"),ys4701);\nif(R.isContinuation($ann$check4730)) {\n$ans4702 = $ann$check4730;\n}\nbreak;\ncase 3: $step4697 = 4;\n$ans4702 = R.maybeMethodCall0(xs4700,\"length\",L[1570]);\nbreak;\ncase 4: var anf_arg5477 = $ans4702;\n$step4697 = 5;\n$ans4702 = R.maybeMethodCall0(ys4701,\"length\",L[1571]);\nbreak;\ncase 5: var anf_arg5476 = $ans4702;\n$step4697 = 6;\n$al4703 = L[1586];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4703,equal$always1);\n}\n$ans4702 = equal$always1.app(anf_arg5477,anf_arg5476);\nbreak;\ncase 6: var anf_arg2207 = $ans4702;\n$ans4702 = R.not(anf_arg2207);\nvar anf_if4726 = $ans4702;\n$step4697 = R.checkPyretTrue(anf_if4726)?7:9;\nbreak;\ncase 7: $step4697 = 8;\n$al4703 = L[1585];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4703,raise1);\n}\n$ans4702 = raise1.app((\"labeled-scatter-plot: xs and ys should have the same length\"));\nbreak;\ncase 8: $step4697 = 10;\n$ans4702 = nothing5;\nbreak;\ncase 9: $step4697 = 10;\n$ans4702 = nothing5;\nbreak;\ncase 10: $step4697 = 11;\n$ans4702 = R.maybeMethodCall0(xs4700,\"length\",L[1572]);\nbreak;\ncase 11: var anf_arg2209 = $ans4702;\n$step4697 = 12;\n$ans4702 = R.maybeMethodCall0(images4699,\"length\",L[1573]);\nbreak;\ncase 12: var anf_arg2210 = $ans4702;\n$step4697 = 13;\n$al4703 = L[1584];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4703,equal$always1);\n}\n$ans4702 = equal$always1.app(anf_arg2209,anf_arg2210);\nbreak;\ncase 13: var anf_arg2211 = $ans4702;\n$ans4702 = R.not(anf_arg2211);\nvar anf_if4725 = $ans4702;\n$step4697 = R.checkPyretTrue(anf_if4725)?14:16;\nbreak;\ncase 14: $step4697 = 15;\n$al4703 = L[1583];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4703,raise1);\n}\n$ans4702 = raise1.app((\"labeled-scatter-plot: xs and images should have the same length\"));\nbreak;\ncase 15: $step4697 = 17;\n$ans4702 = nothing5;\nbreak;\ncase 16: $step4697 = 17;\n$ans4702 = nothing5;\nbreak;\ncase 17: $step4697 = 18;\n$ans4702 = R.maybeMethodCall1(xs4700,\"each\",L[1574],check$num588.$var);\nbreak;\ncase 18: $step4697 = 19;\n$ans4702 = R.maybeMethodCall1(ys4701,\"each\",L[1575],check$num588.$var);\nbreak;\ncase 19: $step4697 = 20;\n$ans4702 = R.maybeMethodCall1(images4699,\"each\",L[1576],check$image619.$var);\nbreak;\ncase 20: var $temp_lam4707 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1577($$underscore4708) {\nvar $step4706 = 0;\nvar $elidedFrames4712 = 0;\nvar $ans4709 = D;\nvar $al4710 = L[1577];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1577],1,$t,false);\n}\nvar $underscore4708 = $$underscore4708;\n// callee optimization;\nwhile(!R.isContinuation($ans4709)) {\nswitch($step4706) {\ncase 0: $step4706 = 1;\n$ans4709 = (\"\");\nbreak;\ncase 1: return $ans4709;\ndefault: R.ffi.throwSpinnakerError(L[1577],$step4706);\n}\n}\nreturn $ans4709;\n};\nvar anf_arg2217 = R.mF($temp_lam4707,\"\");\n$step4697 = 21;\n$ans4702 = R.maybeMethodCall1(xs4700,\"map\",L[1578],anf_arg2217);\nbreak;\ncase 21: var anf_arg2214 = $ans4702;\n$step4697 = 22;\n$ans4702 = R.maybeMethodCall1(images4699,\"map\",L[1579],some33);\nbreak;\ncase 22: var anf_arg4721 = $ans4702;\n$step4697 = 23;\n$al4703 = L[1582];\n// omitting isFunction check;\n$ans4702 = map430.app(get$scatter$point4522.$var,xs4700,ys4701,anf_arg2214,anf_arg4721);\nbreak;\ncase 23: var anf_extend4722 = $ans4702;\nvar anf_arg2218 = R.extendObj(L[1580],default$scatter$plot$series4657,{\"ps\":anf_extend4722});\n// caller optimization;\n$ans4702 = scatter$plot$series3822.$var.app(anf_arg2218);\nvar ann_check_temp4723 = $ans4702;\n$step4697 = 24;\n$al4703 = L[1581];\nvar $ann$check4724 = R._cA(L[1581],DataSeries4507,ann_check_temp4723);\nif(R.isContinuation($ann$check4724)) {\n$ans4702 = $ann$check4724;\n}\nbreak;\ncase 24: $step4697 = 25;\n$ans4702 = ann_check_temp4723;\nbreak;\ncase 25: ++R.GAS;\nreturn $ans4702;\ndefault: R.ffi.throwSpinnakerError(L[1569],$step4697);\n}\n}\nif($step4697 !== 25) {\n$ans4702.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4703,$temp_lam4698,$step4697,[images4699,xs4700,ys4701],[anf_arg5477,anf_arg2214,ann_check_temp4723,anf_arg2209],$elidedFrames4705);\n}\nreturn $ans4702;\n};\nvar anf_assign4732 = R.mF($temp_lam4698,\"image-scatter-plot-from-list\");\nimage$scatter$plot$from$list4733.$var = anf_assign4732;\nR.nothing;\nvar $temp_lam4735 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1590($images4736,$labels4737,$values4738) {\nvar $step4734 = 0;\nvar $elidedFrames4743 = 0;\nvar $ans4740 = D;\nvar $al4741 = L[1590];\nif(R.isAR($images4736)) {\n$step4734 = $images4736.step;\n$al4741 = $images4736.from;\n$ans4740 = $images4736.ans;\n$elidedFrames4743 = $images4736.elidedFrames;\nimages4736 = $images4736.args[0];\nlabels4737 = $images4736.args[1];\nvalues4738 = $images4736.args[2];\nrational$values4746 = $images4736.vars[0];\ntup4288 = $images4736.vars[1];\nann_check_temp4775 = $images4736.vars[2];\nanf_extend4772 = $images4736.vars[3];\nanf_extend4769 = $images4736.vars[4];\nvalue$length4744 = $images4736.vars[5];\nmax$negative$height4771 = $images4736.vars[6];\nmax$positive$height4770 = $images4736.vars[7];\nlabel$length4745 = $images4736.vars[8];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1590],3,$t,false);\n}\nvar images4736 = $images4736;\nvar labels4737 = $labels4737;\nvar values4738 = $values4738;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4740 = R.mC();\n}\nwhile(!R.isContinuation($ans4740)) {\nswitch($step4734) {\ncase 0: $step4734 = 1;\n$al4741 = L[1621];\nvar $ann$check4781 = R._cA(L[1621],R.gDA(L[1621],\"CL\",CL40.dict.types,\"LoI\"),images4736);\nif(R.isContinuation($ann$check4781)) {\n$ans4740 = $ann$check4781;\n}\nbreak;\ncase 1: $step4734 = 2;\n$al4741 = L[1622];\nvar $ann$check4782 = R._cA(L[1622],R.gDA(L[1622],\"CL\",CL40.dict.types,\"LoS\"),labels4737);\nif(R.isContinuation($ann$check4782)) {\n$ans4740 = $ann$check4782;\n}\nbreak;\ncase 2: $step4734 = 3;\n$al4741 = L[1623];\nvar $ann$check4783 = R._cA(L[1623],R.gDA(L[1623],\"CL\",CL40.dict.types,\"LoN\"),values4738);\nif(R.isContinuation($ann$check4783)) {\n$ans4740 = $ann$check4783;\n}\nbreak;\ncase 3: $step4734 = 4;\n$ans4740 = R.maybeMethodCall1(images4736,\"each\",L[1591],check$image619.$var);\nbreak;\ncase 4: $step4734 = 5;\n$ans4740 = R.maybeMethodCall1(values4738,\"each\",L[1592],check$num588.$var);\nbreak;\ncase 5: $step4734 = 6;\n$ans4740 = R.maybeMethodCall1(labels4737,\"each\",L[1593],check$string604.$var);\nbreak;\ncase 6: $step4734 = 7;\n$ans4740 = R.maybeMethodCall0(labels4737,\"length\",L[1594]);\nbreak;\ncase 7: var label$length4745 = $ans4740;\n$step4734 = 8;\n$ans4740 = R.maybeMethodCall0(values4738,\"length\",L[1595]);\nbreak;\ncase 8: var value$length4744 = $ans4740;\n$step4734 = 9;\n$al4741 = L[1620];\n// omitting isFunction check;\n$ans4740 = map6.app(num$to$rational3,values4738);\nbreak;\ncase 9: var rational$values4746 = $ans4740;\n$step4734 = 10;\n$al4741 = L[1619];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4741,equal$always1);\n}\n$ans4740 = equal$always1.app(value$length4744,(0));\nbreak;\ncase 10: var anf_if4780 = $ans4740;\n$step4734 = R.checkPyretTrue(anf_if4780)?11:13;\nbreak;\ncase 11: $step4734 = 12;\n$al4741 = L[1618];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4741,raise1);\n}\n$ans4740 = raise1.app((\"bar-chart: can't have empty data\"));\nbreak;\ncase 12: $step4734 = 14;\n$ans4740 = nothing5;\nbreak;\ncase 13: $step4734 = 14;\n$ans4740 = nothing5;\nbreak;\ncase 14: $step4734 = 15;\n$al4741 = L[1617];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4741,equal$always1);\n}\n$ans4740 = equal$always1.app(label$length4745,value$length4744);\nbreak;\ncase 15: var anf_arg2226 = $ans4740;\n$ans4740 = R.not(anf_arg2226);\nvar anf_if4779 = $ans4740;\n$step4734 = R.checkPyretTrue(anf_if4779)?16:18;\nbreak;\ncase 16: $step4734 = 17;\n$al4741 = L[1616];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4741,raise1);\n}\n$ans4740 = raise1.app((\"bar-chart: labels and values should have the same length\"));\nbreak;\ncase 17: $step4734 = 19;\n$ans4740 = nothing5;\nbreak;\ncase 18: $step4734 = 19;\n$ans4740 = nothing5;\nbreak;\ncase 19: $step4734 = 20;\n$al4741 = L[1615];\n// omitting isFunction check;\n$ans4740 = prep$axis1595.$var.app(rational$values4746);\nbreak;\ncase 20: var tup4288 = $ans4740;\n$step4734 = 21;\n$al4741 = L[1614];\nR.checkTupleBind(tup4288,2,L[1614]);\nbreak;\ncase 21: var max$positive$height4770 = R.getTuple(tup4288,0,L[1596]);\nvar max$negative$height4771 = R.getTuple(tup4288,1,L[1597]);\n$step4734 = 22;\n$al4741 = L[1613];\n// omitting isFunction check;\n$ans4740 = to$table3$n1389.$var.app(labels4737,rational$values4746,images4736);\nbreak;\ncase 22: var anf_extend4769 = $ans4740;\nvar $temp_lam4748 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1598($$underscore4749) {\nvar $step4747 = 0;\nvar $elidedFrames4753 = 0;\nvar $ans4750 = D;\nvar $al4751 = L[1598];\nif(R.isAR($$underscore4749)) {\n$step4747 = $$underscore4749.step;\n$al4751 = $$underscore4749.from;\n$ans4750 = $$underscore4749.ans;\n$elidedFrames4753 = $$underscore4749.elidedFrames;\n$underscore4749 = $$underscore4749.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1598],1,$t,false);\n}\nvar $underscore4749 = $$underscore4749;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4750 = R.mC();\n}\nwhile(!R.isContinuation($ans4750)) {\nswitch($step4747) {\ncase 0: $ans4750 = R.getMaker1(list7,(\"make1\"),L[1599],L[1600]);\nvar anf_fun4754 = $ans4750;\n$step4747 = 1;\n$al4751 = L[1600];\nif(typeof(anf_fun4754.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4751,anf_fun4754);\n}\n$ans4750 = anf_fun4754.app(none28);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans4750;\ndefault: R.ffi.throwSpinnakerError(L[1598],$step4747);\n}\n}\nif($step4747 !== 1) {\n$ans4750.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4751,$temp_lam4748,$step4747,[$underscore4749],[],$elidedFrames4753);\n}\nreturn $ans4750;\n};\nvar anf_arg2227 = R.mF($temp_lam4748,\"\");\n$step4734 = 23;\n$ans4740 = R.maybeMethodCall1(values4738,\"map\",L[1601],anf_arg2227);\nbreak;\ncase 23: var anf_arg2228 = $ans4740;\n$step4734 = 24;\n$al4741 = L[1612];\n// omitting isFunction check;\n$ans4740 = list$to$table21438.$var.app(anf_arg2228);\nbreak;\ncase 24: var anf_extend4772 = $ans4740;\nvar $temp_lam4757 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1602($$underscore4758) {\nvar $step4756 = 0;\nvar $elidedFrames4762 = 0;\nvar $ans4759 = D;\nvar $al4760 = L[1602];\nif(R.isAR($$underscore4758)) {\n$step4756 = $$underscore4758.step;\n$al4760 = $$underscore4758.from;\n$ans4759 = $$underscore4758.ans;\n$elidedFrames4762 = $$underscore4758.elidedFrames;\n$underscore4758 = $$underscore4758.args[0];\nanf_fun2236 = $$underscore4758.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1602],1,$t,false);\n}\nvar $underscore4758 = $$underscore4758;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4759 = R.mC();\n}\nwhile(!R.isContinuation($ans4759)) {\nswitch($step4756) {\ncase 0: $ans4759 = R.getMaker1(list7,(\"make1\"),L[1603],L[1604]);\nvar anf_fun2236 = $ans4759;\n$ans4759 = R.getMaker0(raw$array2,(\"make0\"),L[1605],L[1606]);\nvar anf_fun4763 = $ans4759;\n$step4756 = 1;\n$al4760 = L[1606];\nif(typeof(anf_fun4763.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4760,anf_fun4763);\n}\n$ans4759 = anf_fun4763.app();\nbreak;\ncase 1: var anf_arg2231 = $ans4759;\n$step4756 = 2;\n$al4760 = L[1604];\nif(typeof(anf_fun2236.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4760,anf_fun2236);\n}\n$ans4759 = anf_fun2236.app(anf_arg2231);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans4759;\ndefault: R.ffi.throwSpinnakerError(L[1602],$step4756);\n}\n}\nif($step4756 !== 2) {\n$ans4759.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4760,$temp_lam4757,$step4756,[$underscore4758],[anf_fun2236],$elidedFrames4762);\n}\nreturn $ans4759;\n};\nvar anf_arg2232 = R.mF($temp_lam4757,\"\");\n$step4734 = 25;\n$ans4740 = R.maybeMethodCall1(values4738,\"map\",L[1607],anf_arg2232);\nbreak;\ncase 25: var anf_arg2237 = $ans4740;\n$step4734 = 26;\n$al4741 = L[1611];\n// omitting isFunction check;\n$ans4740 = list$to$table21438.$var.app(anf_arg2237);\nbreak;\ncase 26: var anf_extend4773 = $ans4740;\nvar anf_arg2234 = R.extendObj(L[1608],default$bar$chart$series4768,{\"tab\":anf_extend4769,\n\"axis-top\":max$positive$height4770,\n\"axis-bottom\":max$negative$height4771,\n\"annotations\":anf_extend4772,\n\"intervals\":anf_extend4773});\n// caller optimization;\n$ans4740 = bar$chart$series3915.$var.app(anf_arg2234);\nvar data$series4774 = $ans4740;\n$step4734 = 27;\n$ans4740 = R.maybeMethodCall2(data$series4774,\"make-axis\",L[1609],max$positive$height4770,max$negative$height4771);\nbreak;\ncase 27: var ann_check_temp4775 = $ans4740;\n$step4734 = 28;\n$al4741 = L[1610];\nvar $ann$check4778 = R._cA(L[1610],DataSeries4507,ann_check_temp4775);\nif(R.isContinuation($ann$check4778)) {\n$ans4740 = $ann$check4778;\n}\nbreak;\ncase 28: $step4734 = 29;\n$ans4740 = ann_check_temp4775;\nbreak;\ncase 29: ++R.GAS;\nreturn $ans4740;\ndefault: R.ffi.throwSpinnakerError(L[1590],$step4734);\n}\n}\nif($step4734 !== 29) {\n$ans4740.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4741,$temp_lam4735,$step4734,[images4736,labels4737,values4738],[rational$values4746,tup4288,ann_check_temp4775,anf_extend4772,anf_extend4769,value$length4744,max$negative$height4771,max$positive$height4770,label$length4745],$elidedFrames4743);\n}\nreturn $ans4740;\n};\nvar anf_assign4785 = R.mF($temp_lam4735,\"image-bar-chart-from-list\");\nimage$bar$chart$from$list4786.$var = anf_assign4785;\nR.nothing;\nvar $temp_lam4788 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1624($labels4789,$values4790,$offsets4791) {\nvar $step4787 = 0;\nvar $elidedFrames4795 = 0;\nvar $ans4792 = D;\nvar $al4793 = L[1624];\nif(R.isAR($labels4789)) {\n$step4787 = $labels4789.step;\n$al4793 = $labels4789.from;\n$ans4792 = $labels4789.ans;\n$elidedFrames4795 = $labels4789.elidedFrames;\nlabels4789 = $labels4789.args[0];\nvalues4790 = $labels4789.args[1];\noffsets4791 = $labels4789.args[2];\nvalue$length4806 = $labels4789.vars[0];\nlabel$length4805 = $labels4789.vars[1];\nann_check_temp4822 = $labels4789.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1624],3,$t,false);\n}\nvar labels4789 = $labels4789;\nvar values4790 = $values4790;\nvar offsets4791 = $offsets4791;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4792 = R.mC();\n}\nwhile(!R.isContinuation($ans4792)) {\nswitch($step4787) {\ncase 0: $step4787 = 1;\n$al4793 = L[1647];\nvar $ann$check4825 = R._cA(L[1647],R.gDA(L[1647],\"CL\",CL40.dict.types,\"LoS\"),labels4789);\nif(R.isContinuation($ann$check4825)) {\n$ans4792 = $ann$check4825;\n}\nbreak;\ncase 1: $step4787 = 2;\n$al4793 = L[1648];\nvar $ann$check4826 = R._cA(L[1648],R.gDA(L[1648],\"CL\",CL40.dict.types,\"LoN\"),values4790);\nif(R.isContinuation($ann$check4826)) {\n$ans4792 = $ann$check4826;\n}\nbreak;\ncase 2: $step4787 = 3;\n$al4793 = L[1649];\nvar $ann$check4827 = R._cA(L[1649],R.gDA(L[1649],\"CL\",CL40.dict.types,\"LoN\"),offsets4791);\nif(R.isContinuation($ann$check4827)) {\n$ans4792 = $ann$check4827;\n}\nbreak;\ncase 3: $step4787 = 4;\n$ans4792 = R.maybeMethodCall0(labels4789,\"length\",L[1625]);\nbreak;\ncase 4: var label$length4805 = $ans4792;\n$step4787 = 5;\n$ans4792 = R.maybeMethodCall0(values4790,\"length\",L[1626]);\nbreak;\ncase 5: var value$length4806 = $ans4792;\nvar $temp_lam4797 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1627($value4798) {\nvar $step4796 = 0;\nvar $elidedFrames4802 = 0;\nvar $ans4799 = D;\nvar $al4800 = L[1627];\nif(R.isAR($value4798)) {\n$step4796 = $value4798.step;\n$al4800 = $value4798.from;\n$ans4799 = $value4798.ans;\n$elidedFrames4802 = $value4798.elidedFrames;\nvalue4798 = $value4798.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1627],1,$t,false);\n}\nvar value4798 = $value4798;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4799 = R.mC();\n}\nwhile(!R.isContinuation($ans4799)) {\nswitch($step4796) {\ncase 0: $step4796 = 1;\n$al4800 = L[1629];\n// omitting isFunction check;\n$ans4799 = _lessthan3.app(value4798,(0));\nbreak;\ncase 1: var anf_if4803 = $ans4799;\n$step4796 = R.checkPyretTrue(anf_if4803)?2:4;\nbreak;\ncase 2: $step4796 = 3;\n$al4800 = L[1628];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4800,raise1);\n}\n$ans4799 = raise1.app((\"exploding-pie-chart: values must be non-negative\"));\nbreak;\ncase 3: $step4796 = 5;\n$ans4799 = nothing5;\nbreak;\ncase 4: $step4796 = 5;\n$ans4799 = nothing5;\nbreak;\ncase 5: ++R.GAS;\nreturn $ans4799;\ndefault: R.ffi.throwSpinnakerError(L[1627],$step4796);\n}\n}\nif($step4796 !== 5) {\n$ans4799.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4800,$temp_lam4797,$step4796,[value4798],[],$elidedFrames4802);\n}\nreturn $ans4799;\n};\nvar anf_arg5526 = R.mF($temp_lam4797,\"for-body<line 1947, column 2>\");\n$step4787 = 6;\n$al4793 = L[1627];\n// omitting isFunction check;\n$ans4792 = each25.app(anf_arg5526,values4790);\nbreak;\ncase 6: $step4787 = 7;\n$al4793 = L[1646];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4793,equal$always1);\n}\n$ans4792 = equal$always1.app(label$length4805,value$length4806);\nbreak;\ncase 7: var anf_arg2248 = $ans4792;\n$ans4792 = R.not(anf_arg2248);\nvar anf_if5550 = $ans4792;\n$step4787 = R.checkPyretTrue(anf_if5550)?8:10;\nbreak;\ncase 8: $step4787 = 9;\n$al4793 = L[1645];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4793,raise1);\n}\n$ans4792 = raise1.app((\"exploding-pie-chart: labels and values should have the same length\"));\nbreak;\ncase 9: $step4787 = 11;\n$ans4792 = nothing5;\nbreak;\ncase 10: $step4787 = 11;\n$ans4792 = nothing5;\nbreak;\ncase 11: $step4787 = 12;\n$ans4792 = R.maybeMethodCall0(offsets4791,\"length\",L[1630]);\nbreak;\ncase 12: var offset$length4807 = $ans4792;\n$step4787 = 13;\n$al4793 = L[1644];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4793,equal$always1);\n}\n$ans4792 = equal$always1.app(label$length4805,offset$length4807);\nbreak;\ncase 13: var anf_arg2250 = $ans4792;\n$ans4792 = R.not(anf_arg2250);\nvar anf_if5546 = $ans4792;\n$step4787 = R.checkPyretTrue(anf_if5546)?14:16;\nbreak;\ncase 14: $step4787 = 15;\n$al4793 = L[1643];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4793,raise1);\n}\n$ans4792 = raise1.app((\"exploding-pie-chart: labels and offsets should have the same length\"));\nbreak;\ncase 15: $step4787 = 17;\n$ans4792 = nothing5;\nbreak;\ncase 16: $step4787 = 17;\n$ans4792 = nothing5;\nbreak;\ncase 17: $step4787 = 18;\n$al4793 = L[1642];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4793,equal$always1);\n}\n$ans4792 = equal$always1.app(label$length4805,(0));\nbreak;\ncase 18: var anf_if4824 = $ans4792;\n$step4787 = R.checkPyretTrue(anf_if4824)?19:21;\nbreak;\ncase 19: $step4787 = 20;\n$al4793 = L[1641];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4793,raise1);\n}\n$ans4792 = raise1.app((\"exploding-pie-chart: need at least one data\"));\nbreak;\ncase 20: $step4787 = 22;\n$ans4792 = nothing5;\nbreak;\ncase 21: $step4787 = 22;\n$ans4792 = nothing5;\nbreak;\ncase 22: var $temp_lam4809 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1631($offset4810) {\nvar $step4808 = 0;\nvar $elidedFrames4815 = 0;\nvar $ans4812 = D;\nvar $al4813 = L[1631];\nif(R.isAR($offset4810)) {\n$step4808 = $offset4810.step;\n$al4813 = $offset4810.from;\n$ans4812 = $offset4810.ans;\n$elidedFrames4815 = $offset4810.elidedFrames;\noffset4810 = $offset4810.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1631],1,$t,false);\n}\nvar offset4810 = $offset4810;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4812 = R.mC();\n}\nwhile(!R.isContinuation($ans4812)) {\nswitch($step4808) {\ncase 0: $step4808 = 1;\n$al4813 = L[1634];\n// omitting isFunction check;\n$ans4812 = _lessthan3.app(offset4810,(0));\nbreak;\ncase 1: var anf_if4817 = $ans4812;\n$step4808 = R.checkPyretTrue(anf_if4817)?2:3;\nbreak;\ncase 2: $step4808 = 5;\n$ans4812 = (true);\nbreak;\ncase 3: $step4808 = 4;\n$al4813 = L[1633];\n// omitting isFunction check;\n$ans4812 = _greaterthan5.app(offset4810,(1));\nbreak;\ncase 4: var anf_arg2254 = $ans4812;\n$ans4812 = R.checkWrapBoolean(anf_arg2254);\n$step4808 = 5;\nbreak;\ncase 5: var anf_if4816 = $ans4812;\n$step4808 = R.checkPyretTrue(anf_if4816)?6:8;\nbreak;\ncase 6: $step4808 = 7;\n$al4813 = L[1632];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4813,raise1);\n}\n$ans4812 = raise1.app((\"exploding-pie-chart: offset must be between 0 and 1\"));\nbreak;\ncase 7: $step4808 = 9;\n$ans4812 = nothing5;\nbreak;\ncase 8: $step4808 = 9;\n$ans4812 = nothing5;\nbreak;\ncase 9: ++R.GAS;\nreturn $ans4812;\ndefault: R.ffi.throwSpinnakerError(L[1631],$step4808);\n}\n}\nif($step4808 !== 9) {\n$ans4812.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4813,$temp_lam4809,$step4808,[offset4810],[],$elidedFrames4815);\n}\nreturn $ans4812;\n};\nvar anf_arg4819 = R.mF($temp_lam4809,\"for-body<line 1962, column 2>\");\n$step4787 = 23;\n$al4793 = L[1631];\n// omitting isFunction check;\n$ans4792 = each25.app(anf_arg4819,offsets4791);\nbreak;\ncase 23: $step4787 = 24;\n$ans4792 = R.maybeMethodCall1(values4790,\"each\",L[1635],check$num588.$var);\nbreak;\ncase 24: $step4787 = 25;\n$ans4792 = R.maybeMethodCall1(offsets4791,\"each\",L[1636],check$num588.$var);\nbreak;\ncase 25: $step4787 = 26;\n$ans4792 = R.maybeMethodCall1(labels4789,\"each\",L[1637],check$string604.$var);\nbreak;\ncase 26: $step4787 = 27;\n$al4793 = L[1640];\n// omitting isFunction check;\n$ans4792 = to$table3$n1389.$var.app(labels4789,values4790,offsets4791);\nbreak;\ncase 27: var anf_extend4821 = $ans4792;\nvar anf_arg2258 = R.extendObj(L[1638],default$pie$chart$series4820,{\"tab\":anf_extend4821});\n// caller optimization;\n$ans4792 = pie$chart$series3906.$var.app(anf_arg2258);\nvar ann_check_temp4822 = $ans4792;\n$step4787 = 28;\n$al4793 = L[1639];\nvar $ann$check4823 = R._cA(L[1639],DataSeries4507,ann_check_temp4822);\nif(R.isContinuation($ann$check4823)) {\n$ans4792 = $ann$check4823;\n}\nbreak;\ncase 28: $step4787 = 29;\n$ans4792 = ann_check_temp4822;\nbreak;\ncase 29: ++R.GAS;\nreturn $ans4792;\ndefault: R.ffi.throwSpinnakerError(L[1624],$step4787);\n}\n}\nif($step4787 !== 29) {\n$ans4792.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4793,$temp_lam4788,$step4787,[labels4789,values4790,offsets4791],[value$length4806,label$length4805,ann_check_temp4822],$elidedFrames4795);\n}\nreturn $ans4792;\n};\nvar anf_assign4829 = R.mF($temp_lam4788,\"exploding-pie-chart-from-list\");\nexploding$pie$chart$from$list4830.$var = anf_assign4829;\nR.nothing;\nvar $temp_lam4832 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1650($labels4833,$values4834) {\nvar $step4831 = 0;\nvar $elidedFrames4840 = 0;\nvar $ans4837 = D;\nvar $al4838 = L[1650];\nif(R.isAR($labels4833)) {\n$step4831 = $labels4833.step;\n$al4838 = $labels4833.from;\n$ans4837 = $labels4833.ans;\n$elidedFrames4840 = $labels4833.elidedFrames;\nlabels4833 = $labels4833.args[0];\nvalues4834 = $labels4833.args[1];\nlabel$length4849 = $labels4833.vars[0];\nann_check_temp4860 = $labels4833.vars[1];\nvalue$length4850 = $labels4833.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1650],2,$t,false);\n}\nvar labels4833 = $labels4833;\nvar values4834 = $values4834;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4837 = R.mC();\n}\nwhile(!R.isContinuation($ans4837)) {\nswitch($step4831) {\ncase 0: $step4831 = 1;\n$al4838 = L[1667];\nvar $ann$check4865 = R._cA(L[1667],R.gDA(L[1667],\"CL\",CL40.dict.types,\"LoS\"),labels4833);\nif(R.isContinuation($ann$check4865)) {\n$ans4837 = $ann$check4865;\n}\nbreak;\ncase 1: $step4831 = 2;\n$al4838 = L[1668];\nvar $ann$check4866 = R._cA(L[1668],R.gDA(L[1668],\"CL\",CL40.dict.types,\"LoN\"),values4834);\nif(R.isContinuation($ann$check4866)) {\n$ans4837 = $ann$check4866;\n}\nbreak;\ncase 2: $step4831 = 3;\n$ans4837 = R.maybeMethodCall0(labels4833,\"length\",L[1651]);\nbreak;\ncase 3: var label$length4849 = $ans4837;\n$step4831 = 4;\n$ans4837 = R.maybeMethodCall0(values4834,\"length\",L[1652]);\nbreak;\ncase 4: var value$length4850 = $ans4837;\nvar $temp_lam4842 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1653($value4843) {\nvar $step4841 = 0;\nvar $elidedFrames4847 = 0;\nvar $ans4844 = D;\nvar $al4845 = L[1653];\nif(R.isAR($value4843)) {\n$step4841 = $value4843.step;\n$al4845 = $value4843.from;\n$ans4844 = $value4843.ans;\n$elidedFrames4847 = $value4843.elidedFrames;\nvalue4843 = $value4843.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1653],1,$t,false);\n}\nvar value4843 = $value4843;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4844 = R.mC();\n}\nwhile(!R.isContinuation($ans4844)) {\nswitch($step4841) {\ncase 0: $step4841 = 1;\n$al4845 = L[1655];\n// omitting isFunction check;\n$ans4844 = _lessthan3.app(value4843,(0));\nbreak;\ncase 1: var anf_if5532 = $ans4844;\n$step4841 = R.checkPyretTrue(anf_if5532)?2:4;\nbreak;\ncase 2: $step4841 = 3;\n$al4845 = L[1654];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4845,raise1);\n}\n$ans4844 = raise1.app((\"pie-chart: values must be non-negative\"));\nbreak;\ncase 3: $step4841 = 5;\n$ans4844 = nothing5;\nbreak;\ncase 4: $step4841 = 5;\n$ans4844 = nothing5;\nbreak;\ncase 5: ++R.GAS;\nreturn $ans4844;\ndefault: R.ffi.throwSpinnakerError(L[1653],$step4841);\n}\n}\nif($step4841 !== 5) {\n$ans4844.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4845,$temp_lam4842,$step4841,[value4843],[],$elidedFrames4847);\n}\nreturn $ans4844;\n};\nvar anf_arg2261 = R.mF($temp_lam4842,\"for-body<line 1982, column 2>\");\n$step4831 = 5;\n$al4838 = L[1653];\n// omitting isFunction check;\n$ans4837 = each25.app(anf_arg2261,values4834);\nbreak;\ncase 5: $step4831 = 6;\n$al4838 = L[1666];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4838,equal$always1);\n}\n$ans4837 = equal$always1.app(label$length4849,value$length4850);\nbreak;\ncase 6: var anf_arg2266 = $ans4837;\n$ans4837 = R.not(anf_arg2266);\nvar anf_if4864 = $ans4837;\n$step4831 = R.checkPyretTrue(anf_if4864)?7:9;\nbreak;\ncase 7: $step4831 = 8;\n$al4838 = L[1665];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4838,raise1);\n}\n$ans4837 = raise1.app((\"pie-chart: labels and values should have the same length\"));\nbreak;\ncase 8: $step4831 = 10;\n$ans4837 = nothing5;\nbreak;\ncase 9: $step4831 = 10;\n$ans4837 = nothing5;\nbreak;\ncase 10: $step4831 = 11;\n$al4838 = L[1664];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4838,equal$always1);\n}\n$ans4837 = equal$always1.app(label$length4849,(0));\nbreak;\ncase 11: var anf_if4863 = $ans4837;\n$step4831 = R.checkPyretTrue(anf_if4863)?12:14;\nbreak;\ncase 12: $step4831 = 13;\n$al4838 = L[1663];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4838,raise1);\n}\n$ans4837 = raise1.app((\"pie-chart: need at least one data\"));\nbreak;\ncase 13: $step4831 = 15;\n$ans4837 = nothing5;\nbreak;\ncase 14: $step4831 = 15;\n$ans4837 = nothing5;\nbreak;\ncase 15: $step4831 = 16;\n$ans4837 = R.maybeMethodCall1(values4834,\"each\",L[1656],check$num588.$var);\nbreak;\ncase 16: $step4831 = 17;\n$ans4837 = R.maybeMethodCall1(labels4833,\"each\",L[1657],check$string604.$var);\nbreak;\ncase 17: var $temp_lam4852 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1658($$underscore4853) {\nvar $step4851 = 0;\nvar $elidedFrames4857 = 0;\nvar $ans4854 = D;\nvar $al4855 = L[1658];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1658],1,$t,false);\n}\nvar $underscore4853 = $$underscore4853;\n// callee optimization;\nwhile(!R.isContinuation($ans4854)) {\nswitch($step4851) {\ncase 0: $step4851 = 1;\n$ans4854 = (0);\nbreak;\ncase 1: return $ans4854;\ndefault: R.ffi.throwSpinnakerError(L[1658],$step4851);\n}\n}\nreturn $ans4854;\n};\nvar anf_arg2264 = R.mF($temp_lam4852,\"\");\n$step4831 = 18;\n$ans4837 = R.maybeMethodCall1(labels4833,\"map\",L[1659],anf_arg2264);\nbreak;\ncase 18: var anf_arg2267 = $ans4837;\n$step4831 = 19;\n$al4838 = L[1662];\n// omitting isFunction check;\n$ans4837 = to$table3$n1389.$var.app(labels4833,values4834,anf_arg2267);\nbreak;\ncase 19: var anf_extend4859 = $ans4837;\nvar anf_arg5537 = R.extendObj(L[1660],default$pie$chart$series4820,{\"tab\":anf_extend4859});\n// caller optimization;\n$ans4837 = pie$chart$series3906.$var.app(anf_arg5537);\nvar ann_check_temp4860 = $ans4837;\n$step4831 = 20;\n$al4838 = L[1661];\nvar $ann$check4862 = R._cA(L[1661],DataSeries4507,ann_check_temp4860);\nif(R.isContinuation($ann$check4862)) {\n$ans4837 = $ann$check4862;\n}\nbreak;\ncase 20: $step4831 = 21;\n$ans4837 = ann_check_temp4860;\nbreak;\ncase 21: ++R.GAS;\nreturn $ans4837;\ndefault: R.ffi.throwSpinnakerError(L[1650],$step4831);\n}\n}\nif($step4831 !== 21) {\n$ans4837.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4838,$temp_lam4832,$step4831,[labels4833,values4834],[label$length4849,ann_check_temp4860,value$length4850],$elidedFrames4840);\n}\nreturn $ans4837;\n};\nvar anf_assign4868 = R.mF($temp_lam4832,\"pie-chart-from-list\");\npie$chart$from$list4869.$var = anf_assign4868;\nR.nothing;\nvar $temp_lam4871 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1669($images4872,$labels4873,$values4874) {\nvar $step4870 = 0;\nvar $elidedFrames4878 = 0;\nvar $ans4875 = D;\nvar $al4876 = L[1669];\nif(R.isAR($images4872)) {\n$step4870 = $images4872.step;\n$al4876 = $images4872.from;\n$ans4875 = $images4872.ans;\n$elidedFrames4878 = $images4872.elidedFrames;\nimages4872 = $images4872.args[0];\nlabels4873 = $images4872.args[1];\nvalues4874 = $images4872.args[2];\nann_check_temp4899 = $images4872.vars[0];\nvalue$length4889 = $images4872.vars[1];\nlabel$length4888 = $images4872.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1669],3,$t,false);\n}\nvar images4872 = $images4872;\nvar labels4873 = $labels4873;\nvar values4874 = $values4874;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4875 = R.mC();\n}\nwhile(!R.isContinuation($ans4875)) {\nswitch($step4870) {\ncase 0: $step4870 = 1;\n$al4876 = L[1687];\nvar $ann$check4903 = R._cA(L[1687],R.gDA(L[1687],\"CL\",CL40.dict.types,\"LoI\"),images4872);\nif(R.isContinuation($ann$check4903)) {\n$ans4875 = $ann$check4903;\n}\nbreak;\ncase 1: $step4870 = 2;\n$al4876 = L[1688];\nvar $ann$check4904 = R._cA(L[1688],R.gDA(L[1688],\"CL\",CL40.dict.types,\"LoS\"),labels4873);\nif(R.isContinuation($ann$check4904)) {\n$ans4875 = $ann$check4904;\n}\nbreak;\ncase 2: $step4870 = 3;\n$al4876 = L[1689];\nvar $ann$check4905 = R._cA(L[1689],R.gDA(L[1689],\"CL\",CL40.dict.types,\"LoN\"),values4874);\nif(R.isContinuation($ann$check4905)) {\n$ans4875 = $ann$check4905;\n}\nbreak;\ncase 3: $step4870 = 4;\n$ans4875 = R.maybeMethodCall0(labels4873,\"length\",L[1670]);\nbreak;\ncase 4: var label$length4888 = $ans4875;\n$step4870 = 5;\n$ans4875 = R.maybeMethodCall0(values4874,\"length\",L[1671]);\nbreak;\ncase 5: var value$length4889 = $ans4875;\nvar $temp_lam4880 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1672($value4881) {\nvar $step4879 = 0;\nvar $elidedFrames4885 = 0;\nvar $ans4882 = D;\nvar $al4883 = L[1672];\nif(R.isAR($value4881)) {\n$step4879 = $value4881.step;\n$al4883 = $value4881.from;\n$ans4882 = $value4881.ans;\n$elidedFrames4885 = $value4881.elidedFrames;\nvalue4881 = $value4881.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1672],1,$t,false);\n}\nvar value4881 = $value4881;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4882 = R.mC();\n}\nwhile(!R.isContinuation($ans4882)) {\nswitch($step4879) {\ncase 0: $step4879 = 1;\n$al4883 = L[1674];\n// omitting isFunction check;\n$ans4882 = _lessthan3.app(value4881,(0));\nbreak;\ncase 1: var anf_if4886 = $ans4882;\n$step4879 = R.checkPyretTrue(anf_if4886)?2:4;\nbreak;\ncase 2: $step4879 = 3;\n$al4883 = L[1673];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4883,raise1);\n}\n$ans4882 = raise1.app((\"pie-chart: values must be non-negative\"));\nbreak;\ncase 3: $step4879 = 5;\n$ans4882 = nothing5;\nbreak;\ncase 4: $step4879 = 5;\n$ans4882 = nothing5;\nbreak;\ncase 5: ++R.GAS;\nreturn $ans4882;\ndefault: R.ffi.throwSpinnakerError(L[1672],$step4879);\n}\n}\nif($step4879 !== 5) {\n$ans4882.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4883,$temp_lam4880,$step4879,[value4881],[],$elidedFrames4885);\n}\nreturn $ans4882;\n};\nvar anf_arg2282 = R.mF($temp_lam4880,\"for-body<line 2007, column 2>\");\n$step4870 = 6;\n$al4876 = L[1672];\n// omitting isFunction check;\n$ans4875 = each25.app(anf_arg2282,values4874);\nbreak;\ncase 6: $step4870 = 7;\n$al4876 = L[1686];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4876,equal$always1);\n}\n$ans4875 = equal$always1.app(label$length4888,value$length4889);\nbreak;\ncase 7: var anf_arg2283 = $ans4875;\n$ans4875 = R.not(anf_arg2283);\nvar anf_if4902 = $ans4875;\n$step4870 = R.checkPyretTrue(anf_if4902)?8:10;\nbreak;\ncase 8: $step4870 = 9;\n$al4876 = L[1685];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4876,raise1);\n}\n$ans4875 = raise1.app((\"pie-chart: labels and values should have the same length\"));\nbreak;\ncase 9: $step4870 = 11;\n$ans4875 = nothing5;\nbreak;\ncase 10: $step4870 = 11;\n$ans4875 = nothing5;\nbreak;\ncase 11: $step4870 = 12;\n$al4876 = L[1684];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4876,equal$always1);\n}\n$ans4875 = equal$always1.app(label$length4888,(0));\nbreak;\ncase 12: var anf_if4901 = $ans4875;\n$step4870 = R.checkPyretTrue(anf_if4901)?13:15;\nbreak;\ncase 13: $step4870 = 14;\n$al4876 = L[1683];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4876,raise1);\n}\n$ans4875 = raise1.app((\"pie-chart: need at least one data\"));\nbreak;\ncase 14: $step4870 = 16;\n$ans4875 = nothing5;\nbreak;\ncase 15: $step4870 = 16;\n$ans4875 = nothing5;\nbreak;\ncase 16: $step4870 = 17;\n$ans4875 = R.maybeMethodCall1(images4872,\"each\",L[1675],check$image619.$var);\nbreak;\ncase 17: $step4870 = 18;\n$ans4875 = R.maybeMethodCall1(values4874,\"each\",L[1676],check$num588.$var);\nbreak;\ncase 18: $step4870 = 19;\n$ans4875 = R.maybeMethodCall1(labels4873,\"each\",L[1677],check$string604.$var);\nbreak;\ncase 19: var $temp_lam4891 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1678($$underscore4892) {\nvar $step4890 = 0;\nvar $elidedFrames4896 = 0;\nvar $ans4893 = D;\nvar $al4894 = L[1678];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1678],1,$t,false);\n}\nvar $underscore4892 = $$underscore4892;\n// callee optimization;\nwhile(!R.isContinuation($ans4893)) {\nswitch($step4890) {\ncase 0: $step4890 = 1;\n$ans4893 = (0);\nbreak;\ncase 1: return $ans4893;\ndefault: R.ffi.throwSpinnakerError(L[1678],$step4890);\n}\n}\nreturn $ans4893;\n};\nvar anf_arg2286 = R.mF($temp_lam4891,\"\");\n$step4870 = 20;\n$ans4875 = R.maybeMethodCall1(labels4873,\"map\",L[1679],anf_arg2286);\nbreak;\ncase 20: var anf_arg5539 = $ans4875;\n$step4870 = 21;\n$al4876 = L[1682];\n// omitting isFunction check;\n$ans4875 = to$table41424.$var.app(labels4873,values4874,anf_arg5539,images4872);\nbreak;\ncase 21: var anf_extend4898 = $ans4875;\nvar anf_arg2289 = R.extendObj(L[1680],default$pie$chart$series4820,{\"tab\":anf_extend4898});\n// caller optimization;\n$ans4875 = pie$chart$series3906.$var.app(anf_arg2289);\nvar ann_check_temp4899 = $ans4875;\n$step4870 = 22;\n$al4876 = L[1681];\nvar $ann$check4900 = R._cA(L[1681],DataSeries4507,ann_check_temp4899);\nif(R.isContinuation($ann$check4900)) {\n$ans4875 = $ann$check4900;\n}\nbreak;\ncase 22: $step4870 = 23;\n$ans4875 = ann_check_temp4899;\nbreak;\ncase 23: ++R.GAS;\nreturn $ans4875;\ndefault: R.ffi.throwSpinnakerError(L[1669],$step4870);\n}\n}\nif($step4870 !== 23) {\n$ans4875.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4876,$temp_lam4871,$step4870,[images4872,labels4873,values4874],[ann_check_temp4899,value$length4889,label$length4888],$elidedFrames4878);\n}\nreturn $ans4875;\n};\nvar anf_assign4907 = R.mF($temp_lam4871,\"image-pie-chart-from-list\");\nimage$pie$chart$from$list4908.$var = anf_assign4907;\nR.nothing;\nvar $temp_lam4910 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1690($labels4911,$values4912) {\nvar $step4909 = 0;\nvar $elidedFrames4916 = 0;\nvar $ans4913 = D;\nvar $al4914 = L[1690];\nif(R.isAR($labels4911)) {\n$step4909 = $labels4911.step;\n$al4914 = $labels4911.from;\n$ans4913 = $labels4911.ans;\n$elidedFrames4916 = $labels4911.elidedFrames;\nlabels4911 = $labels4911.args[0];\nvalues4912 = $labels4911.args[1];\nmax$negative$height4942 = $labels4911.vars[0];\nvalue$length4917 = $labels4911.vars[1];\ntup4320 = $labels4911.vars[2];\nmax$positive$height4941 = $labels4911.vars[3];\nlabel$length4918 = $labels4911.vars[4];\nrational$values4919 = $labels4911.vars[5];\nann_check_temp4946 = $labels4911.vars[6];\nanf_extend4940 = $labels4911.vars[7];\nanf_extend4943 = $labels4911.vars[8];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1690],2,$t,false);\n}\nvar labels4911 = $labels4911;\nvar values4912 = $values4912;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4913 = R.mC();\n}\nwhile(!R.isContinuation($ans4913)) {\nswitch($step4909) {\ncase 0: $step4909 = 1;\n$al4914 = L[1720];\nvar $ann$check4949 = R._cA(L[1720],R.gDA(L[1720],\"CL\",CL40.dict.types,\"LoS\"),labels4911);\nif(R.isContinuation($ann$check4949)) {\n$ans4913 = $ann$check4949;\n}\nbreak;\ncase 1: $step4909 = 2;\n$al4914 = L[1721];\nvar $ann$check4950 = R._cA(L[1721],R.gDA(L[1721],\"CL\",CL40.dict.types,\"LoN\"),values4912);\nif(R.isContinuation($ann$check4950)) {\n$ans4913 = $ann$check4950;\n}\nbreak;\ncase 2: $step4909 = 3;\n$ans4913 = R.maybeMethodCall1(values4912,\"each\",L[1691],check$num588.$var);\nbreak;\ncase 3: $step4909 = 4;\n$ans4913 = R.maybeMethodCall1(labels4911,\"each\",L[1692],check$string604.$var);\nbreak;\ncase 4: $step4909 = 5;\n$ans4913 = R.maybeMethodCall0(labels4911,\"length\",L[1693]);\nbreak;\ncase 5: var label$length4918 = $ans4913;\n$step4909 = 6;\n$ans4913 = R.maybeMethodCall0(values4912,\"length\",L[1694]);\nbreak;\ncase 6: var value$length4917 = $ans4913;\n$step4909 = 7;\n$al4914 = L[1719];\n// omitting isFunction check;\n$ans4913 = map6.app(num$to$rational3,values4912);\nbreak;\ncase 7: var rational$values4919 = $ans4913;\n$step4909 = 8;\n$al4914 = L[1718];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4914,equal$always1);\n}\n$ans4913 = equal$always1.app(value$length4917,(0));\nbreak;\ncase 8: var anf_if5549 = $ans4913;\n$step4909 = R.checkPyretTrue(anf_if5549)?9:11;\nbreak;\ncase 9: $step4909 = 10;\n$al4914 = L[1717];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4914,raise1);\n}\n$ans4913 = raise1.app((\"bar-chart: can't have empty data\"));\nbreak;\ncase 10: $step4909 = 12;\n$ans4913 = nothing5;\nbreak;\ncase 11: $step4909 = 12;\n$ans4913 = nothing5;\nbreak;\ncase 12: $step4909 = 13;\n$al4914 = L[1716];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4914,equal$always1);\n}\n$ans4913 = equal$always1.app(label$length4918,value$length4917);\nbreak;\ncase 13: var anf_arg2292 = $ans4913;\n$ans4913 = R.not(anf_arg2292);\nvar anf_if4948 = $ans4913;\n$step4909 = R.checkPyretTrue(anf_if4948)?14:16;\nbreak;\ncase 14: $step4909 = 15;\n$al4914 = L[1715];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4914,raise1);\n}\n$ans4913 = raise1.app((\"bar-chart: labels and values should have the same length\"));\nbreak;\ncase 15: $step4909 = 17;\n$ans4913 = nothing5;\nbreak;\ncase 16: $step4909 = 17;\n$ans4913 = nothing5;\nbreak;\ncase 17: $step4909 = 18;\n$al4914 = L[1714];\n// omitting isFunction check;\n$ans4913 = prep$axis1595.$var.app(rational$values4919);\nbreak;\ncase 18: var tup4320 = $ans4913;\n$step4909 = 19;\n$al4914 = L[1713];\nR.checkTupleBind(tup4320,2,L[1713]);\nbreak;\ncase 19: var max$positive$height4941 = R.getTuple(tup4320,0,L[1695]);\nvar max$negative$height4942 = R.getTuple(tup4320,1,L[1696]);\n$step4909 = 20;\n$al4914 = L[1712];\n// omitting isFunction check;\n$ans4913 = to$table2$n794.$var.app(labels4911,rational$values4919);\nbreak;\ncase 20: var anf_extend4940 = $ans4913;\nvar $temp_lam4922 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1697($$underscore4923) {\nvar $step4921 = 0;\nvar $elidedFrames4928 = 0;\nvar $ans4925 = D;\nvar $al4926 = L[1697];\nif(R.isAR($$underscore4923)) {\n$step4921 = $$underscore4923.step;\n$al4926 = $$underscore4923.from;\n$ans4925 = $$underscore4923.ans;\n$elidedFrames4928 = $$underscore4923.elidedFrames;\n$underscore4923 = $$underscore4923.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1697],1,$t,false);\n}\nvar $underscore4923 = $$underscore4923;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4925 = R.mC();\n}\nwhile(!R.isContinuation($ans4925)) {\nswitch($step4921) {\ncase 0: $ans4925 = R.getMaker1(list7,(\"make1\"),L[1698],L[1699]);\nvar anf_fun4929 = $ans4925;\n$step4921 = 1;\n$al4926 = L[1699];\nif(typeof(anf_fun4929.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4926,anf_fun4929);\n}\n$ans4925 = anf_fun4929.app(none28);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans4925;\ndefault: R.ffi.throwSpinnakerError(L[1697],$step4921);\n}\n}\nif($step4921 !== 1) {\n$ans4925.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4926,$temp_lam4922,$step4921,[$underscore4923],[],$elidedFrames4928);\n}\nreturn $ans4925;\n};\nvar anf_arg2295 = R.mF($temp_lam4922,\"\");\n$step4909 = 21;\n$ans4913 = R.maybeMethodCall1(values4912,\"map\",L[1700],anf_arg2295);\nbreak;\ncase 21: var anf_arg2298 = $ans4913;\n$step4909 = 22;\n$al4914 = L[1711];\n// omitting isFunction check;\n$ans4913 = list$to$table21438.$var.app(anf_arg2298);\nbreak;\ncase 22: var anf_extend4943 = $ans4913;\nvar $temp_lam4932 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1701($$underscore4933) {\nvar $step4931 = 0;\nvar $elidedFrames4937 = 0;\nvar $ans4934 = D;\nvar $al4935 = L[1701];\nif(R.isAR($$underscore4933)) {\n$step4931 = $$underscore4933.step;\n$al4935 = $$underscore4933.from;\n$ans4934 = $$underscore4933.ans;\n$elidedFrames4937 = $$underscore4933.elidedFrames;\n$underscore4933 = $$underscore4933.args[0];\nanf_fun4938 = $$underscore4933.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1701],1,$t,false);\n}\nvar $underscore4933 = $$underscore4933;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4934 = R.mC();\n}\nwhile(!R.isContinuation($ans4934)) {\nswitch($step4931) {\ncase 0: $ans4934 = R.getMaker1(list7,(\"make1\"),L[1702],L[1703]);\nvar anf_fun4938 = $ans4934;\n$ans4934 = R.getMaker0(raw$array2,(\"make0\"),L[1704],L[1705]);\nvar anf_fun2331 = $ans4934;\n$step4931 = 1;\n$al4935 = L[1705];\nif(typeof(anf_fun2331.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4935,anf_fun2331);\n}\n$ans4934 = anf_fun2331.app();\nbreak;\ncase 1: var anf_arg2326 = $ans4934;\n$step4931 = 2;\n$al4935 = L[1703];\nif(typeof(anf_fun4938.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4935,anf_fun4938);\n}\n$ans4934 = anf_fun4938.app(anf_arg2326);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans4934;\ndefault: R.ffi.throwSpinnakerError(L[1701],$step4931);\n}\n}\nif($step4931 !== 2) {\n$ans4934.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4935,$temp_lam4932,$step4931,[$underscore4933],[anf_fun4938],$elidedFrames4937);\n}\nreturn $ans4934;\n};\nvar anf_arg2327 = R.mF($temp_lam4932,\"\");\n$step4909 = 23;\n$ans4913 = R.maybeMethodCall1(values4912,\"map\",L[1706],anf_arg2327);\nbreak;\ncase 23: var anf_arg2328 = $ans4913;\n$step4909 = 24;\n$al4914 = L[1710];\n// omitting isFunction check;\n$ans4913 = list$to$table21438.$var.app(anf_arg2328);\nbreak;\ncase 24: var anf_extend4944 = $ans4913;\nvar anf_arg2329 = R.extendObj(L[1707],default$bar$chart$series4768,{\"tab\":anf_extend4940,\n\"axis-top\":max$positive$height4941,\n\"axis-bottom\":max$negative$height4942,\n\"annotations\":anf_extend4943,\n\"intervals\":anf_extend4944});\n// caller optimization;\n$ans4913 = bar$chart$series3915.$var.app(anf_arg2329);\nvar data$series4945 = $ans4913;\n$step4909 = 25;\n$ans4913 = R.maybeMethodCall2(data$series4945,\"make-axis\",L[1708],max$positive$height4941,max$negative$height4942);\nbreak;\ncase 25: var ann_check_temp4946 = $ans4913;\n$step4909 = 26;\n$al4914 = L[1709];\nvar $ann$check4947 = R._cA(L[1709],DataSeries4507,ann_check_temp4946);\nif(R.isContinuation($ann$check4947)) {\n$ans4913 = $ann$check4947;\n}\nbreak;\ncase 26: $step4909 = 27;\n$ans4913 = ann_check_temp4946;\nbreak;\ncase 27: ++R.GAS;\nreturn $ans4913;\ndefault: R.ffi.throwSpinnakerError(L[1690],$step4909);\n}\n}\nif($step4909 !== 27) {\n$ans4913.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4914,$temp_lam4910,$step4909,[labels4911,values4912],[max$negative$height4942,value$length4917,tup4320,max$positive$height4941,label$length4918,rational$values4919,ann_check_temp4946,anf_extend4940,anf_extend4943],$elidedFrames4916);\n}\nreturn $ans4913;\n};\nvar anf_assign4952 = R.mF($temp_lam4910,\"bar-chart-from-list\");\nbar$chart$from$list4953.$var = anf_assign4952;\nR.nothing;\nvar $temp_lam4955 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1722($value4956,$label4957,$optimg4958) {\nvar $step4954 = 0;\nvar $elidedFrames4962 = 0;\nvar $ans4959 = D;\nvar $al4960 = L[1722];\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1722],3,$t,false);\n}\nvar value4956 = $value4956;\nvar label4957 = $label4957;\nvar optimg4958 = $optimg4958;\n// callee optimization;\nwhile(!R.isContinuation($ans4959)) {\nswitch($step4954) {\ncase 0: $step4954 = 1;\n$al4960 = L[1724];\nR._cA(L[1724],$type$Number3,value4956);\nbreak;\ncase 1: $step4954 = 2;\n$al4960 = L[1725];\nR._cA(L[1725],$type$String8,label4957);\nbreak;\ncase 2: $step4954 = 3;\n$al4960 = L[1726];\nR._cA(L[1726],Option27,optimg4958);\nbreak;\ncase 3: var ann_check_temp4963 = R.mO({\"value\":value4956,\n\"label\":label4957,\n\"image\":optimg4958});\n$step4954 = 4;\n$al4960 = L[1723];\nvar $ann$check4965 = R._cA(L[1723],DotPoint4964,ann_check_temp4963);\nif(R.isContinuation($ann$check4965)) {\n$ans4959 = $ann$check4965;\n}\nbreak;\ncase 4: $step4954 = 5;\n$ans4959 = ann_check_temp4963;\nbreak;\ncase 5: return $ans4959;\ndefault: R.ffi.throwSpinnakerError(L[1722],$step4954);\n}\n}\nreturn $ans4959;\n};\nvar anf_assign4967 = R.mF($temp_lam4955,\"get-dot-point\");\nget$dot$point4968.$var = anf_assign4967;\nR.nothing;\nvar $temp_lam4970 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1727($x$values4971) {\nvar $step4969 = 0;\nvar $elidedFrames4975 = 0;\nvar $ans4972 = D;\nvar $al4973 = L[1727];\nif(R.isAR($x$values4971)) {\n$step4969 = $x$values4971.step;\n$al4973 = $x$values4971.from;\n$ans4972 = $x$values4971.ans;\n$elidedFrames4975 = $x$values4971.elidedFrames;\nx$values4971 = $x$values4971.args[0];\nann_check_temp5010 = $x$values4971.vars[0];\nanf_arg2339 = $x$values4971.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1727],1,$t,false);\n}\nvar x$values4971 = $x$values4971;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans4972 = R.mC();\n}\nwhile(!R.isContinuation($ans4972)) {\nswitch($step4969) {\ncase 0: $step4969 = 1;\n$al4973 = L[1739];\nvar $ann$check5014 = R._cA(L[1739],R.gDA(L[1739],\"CL\",CL40.dict.types,\"LoN\"),x$values4971);\nif(R.isContinuation($ann$check5014)) {\n$ans4972 = $ann$check5014;\n}\nbreak;\ncase 1: $step4969 = 2;\n$ans4972 = R.maybeMethodCall1(x$values4971,\"each\",L[1728],check$num588.$var);\nbreak;\ncase 2: $step4969 = 3;\n$ans4972 = R.maybeMethodCall0(x$values4971,\"length\",L[1729]);\nbreak;\ncase 3: var anf_arg2336 = $ans4972;\n$step4969 = 4;\n$al4973 = L[1738];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4973,equal$always1);\n}\n$ans4972 = equal$always1.app(anf_arg2336,(0));\nbreak;\ncase 4: var anf_if5013 = $ans4972;\n$step4969 = R.checkPyretTrue(anf_if5013)?5:7;\nbreak;\ncase 5: $step4969 = 6;\n$al4973 = L[1737];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al4973,raise1);\n}\n$ans4972 = raise1.app((\"num-dot-chart: can't have empty data\"));\nbreak;\ncase 6: $step4969 = 8;\n$ans4972 = nothing5;\nbreak;\ncase 7: $step4969 = 8;\n$ans4972 = nothing5;\nbreak;\ncase 8: var $temp_lam4977 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1730($$underscore4978) {\nvar $step4976 = 0;\nvar $elidedFrames4982 = 0;\nvar $ans4979 = D;\nvar $al4980 = L[1730];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1730],1,$t,false);\n}\nvar $underscore4978 = $$underscore4978;\n// callee optimization;\nwhile(!R.isContinuation($ans4979)) {\nswitch($step4976) {\ncase 0: $step4976 = 1;\n$ans4979 = (\"\");\nbreak;\ncase 1: return $ans4979;\ndefault: R.ffi.throwSpinnakerError(L[1730],$step4976);\n}\n}\nreturn $ans4979;\n};\nvar anf_arg4998 = R.mF($temp_lam4977,\"\");\n$step4969 = 9;\n$ans4972 = R.maybeMethodCall1(x$values4971,\"map\",L[1731],anf_arg4998);\nbreak;\ncase 9: var anf_arg2339 = $ans4972;\nvar $temp_lam5000 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1732($$underscore5001) {\nvar $step4999 = 0;\nvar $elidedFrames5005 = 0;\nvar $ans5002 = D;\nvar $al5003 = L[1732];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1732],1,$t,false);\n}\nvar $underscore5001 = $$underscore5001;\n// callee optimization;\nwhile(!R.isContinuation($ans5002)) {\nswitch($step4999) {\ncase 0: $step4999 = 1;\n$ans5002 = none28;\nbreak;\ncase 1: return $ans5002;\ndefault: R.ffi.throwSpinnakerError(L[1732],$step4999);\n}\n}\nreturn $ans5002;\n};\nvar anf_arg2340 = R.mF($temp_lam5000,\"\");\n$step4969 = 10;\n$ans4972 = R.maybeMethodCall1(x$values4971,\"map\",L[1733],anf_arg2340);\nbreak;\ncase 10: var anf_arg5007 = $ans4972;\n$step4969 = 11;\n$al4973 = L[1736];\n// omitting isFunction check;\n$ans4972 = map329.app(get$dot$point4968.$var,x$values4971,anf_arg2339,anf_arg5007);\nbreak;\ncase 11: var anf_extend5009 = $ans4972;\nvar anf_arg2342 = R.extendObj(L[1734],default$dot$plot$series5008,{\"ps\":anf_extend5009});\n// caller optimization;\n$ans4972 = dot$plot$series3854.$var.app(anf_arg2342);\nvar ann_check_temp5010 = $ans4972;\n$step4969 = 12;\n$al4973 = L[1735];\nvar $ann$check5011 = R._cA(L[1735],DataSeries4507,ann_check_temp5010);\nif(R.isContinuation($ann$check5011)) {\n$ans4972 = $ann$check5011;\n}\nbreak;\ncase 12: $step4969 = 13;\n$ans4972 = ann_check_temp5010;\nbreak;\ncase 13: ++R.GAS;\nreturn $ans4972;\ndefault: R.ffi.throwSpinnakerError(L[1727],$step4969);\n}\n}\nif($step4969 !== 13) {\n$ans4972.stack[R.EXN_STACKHEIGHT++] = R.mAR($al4973,$temp_lam4970,$step4969,[x$values4971],[ann_check_temp5010,anf_arg2339],$elidedFrames4975);\n}\nreturn $ans4972;\n};\nvar anf_assign5016 = R.mF($temp_lam4970,\"num-dot-chart-from-list\");\nnum$dot$chart$from$list5017.$var = anf_assign5016;\nR.nothing;\nvar $temp_lam5019 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1740($images5020,$x$values5021) {\nvar $step5018 = 0;\nvar $elidedFrames5025 = 0;\nvar $ans5022 = D;\nvar $al5023 = L[1740];\nif(R.isAR($images5020)) {\n$step5018 = $images5020.step;\n$al5023 = $images5020.from;\n$ans5022 = $images5020.ans;\n$elidedFrames5025 = $images5020.elidedFrames;\nimages5020 = $images5020.args[0];\nx$values5021 = $images5020.args[1];\nann_check_temp5087 = $images5020.vars[0];\nanf_arg5049 = $images5020.vars[1];\nanf_arg2346 = $images5020.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1740],2,$t,false);\n}\nvar images5020 = $images5020;\nvar x$values5021 = $x$values5021;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5022 = R.mC();\n}\nwhile(!R.isContinuation($ans5022)) {\nswitch($step5018) {\ncase 0: $step5018 = 1;\n$al5023 = L[1756];\nvar $ann$check5091 = R._cA(L[1756],R.gDA(L[1756],\"CL\",CL40.dict.types,\"LoI\"),images5020);\nif(R.isContinuation($ann$check5091)) {\n$ans5022 = $ann$check5091;\n}\nbreak;\ncase 1: $step5018 = 2;\n$al5023 = L[1757];\nvar $ann$check5092 = R._cA(L[1757],R.gDA(L[1757],\"CL\",CL40.dict.types,\"LoN\"),x$values5021);\nif(R.isContinuation($ann$check5092)) {\n$ans5022 = $ann$check5092;\n}\nbreak;\ncase 2: $step5018 = 3;\n$ans5022 = R.maybeMethodCall1(x$values5021,\"each\",L[1741],check$num588.$var);\nbreak;\ncase 3: $step5018 = 4;\n$ans5022 = R.maybeMethodCall0(x$values5021,\"length\",L[1742]);\nbreak;\ncase 4: var anf_arg5031 = $ans5022;\n$step5018 = 5;\n$al5023 = L[1755];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5023,equal$always1);\n}\n$ans5022 = equal$always1.app(anf_arg5031,(0));\nbreak;\ncase 5: var anf_if5090 = $ans5022;\n$step5018 = R.checkPyretTrue(anf_if5090)?6:8;\nbreak;\ncase 6: $step5018 = 7;\n$al5023 = L[1754];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5023,raise1);\n}\n$ans5022 = raise1.app((\"num-dot-chart: can't have empty data\"));\nbreak;\ncase 7: $step5018 = 9;\n$ans5022 = nothing5;\nbreak;\ncase 8: $step5018 = 9;\n$ans5022 = nothing5;\nbreak;\ncase 9: $step5018 = 10;\n$ans5022 = R.maybeMethodCall1(images5020,\"each\",L[1743],check$image619.$var);\nbreak;\ncase 10: $step5018 = 11;\n$ans5022 = R.maybeMethodCall0(images5020,\"length\",L[1744]);\nbreak;\ncase 11: var anf_arg2346 = $ans5022;\n$step5018 = 12;\n$ans5022 = R.maybeMethodCall0(x$values5021,\"length\",L[1745]);\nbreak;\ncase 12: var anf_arg2349 = $ans5022;\n$step5018 = 13;\n$al5023 = L[1753];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5023,equal$always1);\n}\n$ans5022 = equal$always1.app(anf_arg2346,anf_arg2349);\nbreak;\ncase 13: var anf_arg2179 = $ans5022;\n$ans5022 = R.not(anf_arg2179);\nvar anf_if5089 = $ans5022;\n$step5018 = R.checkPyretTrue(anf_if5089)?14:16;\nbreak;\ncase 14: $step5018 = 15;\n$al5023 = L[1752];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5023,raise1);\n}\n$ans5022 = raise1.app((\"num-dot-chart: the lists of numbers and images must have the same length\"));\nbreak;\ncase 15: $step5018 = 17;\n$ans5022 = nothing5;\nbreak;\ncase 16: $step5018 = 17;\n$ans5022 = nothing5;\nbreak;\ncase 17: var $temp_lam5033 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1746($$underscore5034) {\nvar $step5032 = 0;\nvar $elidedFrames5040 = 0;\nvar $ans5037 = D;\nvar $al5038 = L[1746];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1746],1,$t,false);\n}\nvar $underscore5034 = $$underscore5034;\n// callee optimization;\nwhile(!R.isContinuation($ans5037)) {\nswitch($step5032) {\ncase 0: $step5032 = 1;\n$ans5037 = (\"\");\nbreak;\ncase 1: return $ans5037;\ndefault: R.ffi.throwSpinnakerError(L[1746],$step5032);\n}\n}\nreturn $ans5037;\n};\nvar anf_arg5044 = R.mF($temp_lam5033,\"\");\n$step5018 = 18;\n$ans5022 = R.maybeMethodCall1(x$values5021,\"map\",L[1747],anf_arg5044);\nbreak;\ncase 18: var anf_arg5049 = $ans5022;\n$step5018 = 19;\n$ans5022 = R.maybeMethodCall1(images5020,\"map\",L[1748],some33);\nbreak;\ncase 19: var anf_arg5085 = $ans5022;\n$step5018 = 20;\n$al5023 = L[1751];\n// omitting isFunction check;\n$ans5022 = map329.app(get$dot$point4968.$var,x$values5021,anf_arg5049,anf_arg5085);\nbreak;\ncase 20: var anf_extend5086 = $ans5022;\nvar anf_arg2377 = R.extendObj(L[1749],default$dot$plot$series5008,{\"ps\":anf_extend5086});\n// caller optimization;\n$ans5022 = dot$plot$series3854.$var.app(anf_arg2377);\nvar ann_check_temp5087 = $ans5022;\n$step5018 = 21;\n$al5023 = L[1750];\nvar $ann$check5088 = R._cA(L[1750],DataSeries4507,ann_check_temp5087);\nif(R.isContinuation($ann$check5088)) {\n$ans5022 = $ann$check5088;\n}\nbreak;\ncase 21: $step5018 = 22;\n$ans5022 = ann_check_temp5087;\nbreak;\ncase 22: ++R.GAS;\nreturn $ans5022;\ndefault: R.ffi.throwSpinnakerError(L[1740],$step5018);\n}\n}\nif($step5018 !== 22) {\n$ans5022.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5023,$temp_lam5019,$step5018,[images5020,x$values5021],[ann_check_temp5087,anf_arg5049,anf_arg2346],$elidedFrames5025);\n}\nreturn $ans5022;\n};\nvar anf_assign5094 = R.mF($temp_lam5019,\"image-num-dot-chart-from-list\");\nimage$num$dot$chart$from$list5095.$var = anf_assign5094;\nR.nothing;\nvar $temp_lam5098 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1758($labels5099,$x$values5100) {\nvar $step5097 = 0;\nvar $elidedFrames5105 = 0;\nvar $ans5102 = D;\nvar $al5103 = L[1758];\nif(R.isAR($labels5099)) {\n$step5097 = $labels5099.step;\n$al5103 = $labels5099.from;\n$ans5102 = $labels5099.ans;\n$elidedFrames5105 = $labels5099.elidedFrames;\nlabels5099 = $labels5099.args[0];\nx$values5100 = $labels5099.args[1];\nanf_arg2382 = $labels5099.vars[0];\nann_check_temp5131 = $labels5099.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1758],2,$t,false);\n}\nvar labels5099 = $labels5099;\nvar x$values5100 = $x$values5100;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5102 = R.mC();\n}\nwhile(!R.isContinuation($ans5102)) {\nswitch($step5097) {\ncase 0: $step5097 = 1;\n$al5103 = L[1773];\nvar $ann$check5135 = R._cA(L[1773],R.gDA(L[1773],\"CL\",CL40.dict.types,\"LoS\"),labels5099);\nif(R.isContinuation($ann$check5135)) {\n$ans5102 = $ann$check5135;\n}\nbreak;\ncase 1: $step5097 = 2;\n$al5103 = L[1774];\nvar $ann$check5137 = R._cA(L[1774],R.gDA(L[1774],\"CL\",CL40.dict.types,\"LoN\"),x$values5100);\nif(R.isContinuation($ann$check5137)) {\n$ans5102 = $ann$check5137;\n}\nbreak;\ncase 2: $step5097 = 3;\n$ans5102 = R.maybeMethodCall1(x$values5100,\"each\",L[1759],check$num588.$var);\nbreak;\ncase 3: $step5097 = 4;\n$ans5102 = R.maybeMethodCall0(x$values5100,\"length\",L[1760]);\nbreak;\ncase 4: var anf_arg2380 = $ans5102;\n$step5097 = 5;\n$al5103 = L[1772];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5103,equal$always1);\n}\n$ans5102 = equal$always1.app(anf_arg2380,(0));\nbreak;\ncase 5: var anf_if5134 = $ans5102;\n$step5097 = R.checkPyretTrue(anf_if5134)?6:8;\nbreak;\ncase 6: $step5097 = 7;\n$al5103 = L[1771];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5103,raise1);\n}\n$ans5102 = raise1.app((\"num-dot-chart: can't have empty data\"));\nbreak;\ncase 7: $step5097 = 9;\n$ans5102 = nothing5;\nbreak;\ncase 8: $step5097 = 9;\n$ans5102 = nothing5;\nbreak;\ncase 9: $step5097 = 10;\n$ans5102 = R.maybeMethodCall1(labels5099,\"each\",L[1761],check$string604.$var);\nbreak;\ncase 10: $step5097 = 11;\n$ans5102 = R.maybeMethodCall0(labels5099,\"length\",L[1762]);\nbreak;\ncase 11: var anf_arg2382 = $ans5102;\n$step5097 = 12;\n$ans5102 = R.maybeMethodCall0(x$values5100,\"length\",L[1763]);\nbreak;\ncase 12: var anf_arg2383 = $ans5102;\n$step5097 = 13;\n$al5103 = L[1770];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5103,equal$always1);\n}\n$ans5102 = equal$always1.app(anf_arg2382,anf_arg2383);\nbreak;\ncase 13: var anf_arg5118 = $ans5102;\n$ans5102 = R.not(anf_arg5118);\nvar anf_if5133 = $ans5102;\n$step5097 = R.checkPyretTrue(anf_if5133)?14:16;\nbreak;\ncase 14: $step5097 = 15;\n$al5103 = L[1769];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5103,raise1);\n}\n$ans5102 = raise1.app((\"num-dot-chart: the lists of numbers and labels must have the same length\"));\nbreak;\ncase 15: $step5097 = 17;\n$ans5102 = nothing5;\nbreak;\ncase 16: $step5097 = 17;\n$ans5102 = nothing5;\nbreak;\ncase 17: var $temp_lam5121 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1764($$underscore5122) {\nvar $step5120 = 0;\nvar $elidedFrames5127 = 0;\nvar $ans5124 = D;\nvar $al5125 = L[1764];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1764],1,$t,false);\n}\nvar $underscore5122 = $$underscore5122;\n// callee optimization;\nwhile(!R.isContinuation($ans5124)) {\nswitch($step5120) {\ncase 0: $step5120 = 1;\n$ans5124 = none28;\nbreak;\ncase 1: return $ans5124;\ndefault: R.ffi.throwSpinnakerError(L[1764],$step5120);\n}\n}\nreturn $ans5124;\n};\nvar anf_arg2386 = R.mF($temp_lam5121,\"\");\n$step5097 = 18;\n$ans5102 = R.maybeMethodCall1(x$values5100,\"map\",L[1765],anf_arg2386);\nbreak;\ncase 18: var anf_arg5129 = $ans5102;\n$step5097 = 19;\n$al5103 = L[1768];\n// omitting isFunction check;\n$ans5102 = map329.app(get$dot$point4968.$var,x$values5100,labels5099,anf_arg5129);\nbreak;\ncase 19: var anf_extend5130 = $ans5102;\nvar anf_arg2388 = R.extendObj(L[1766],default$dot$plot$series5008,{\"ps\":anf_extend5130});\n// caller optimization;\n$ans5102 = dot$plot$series3854.$var.app(anf_arg2388);\nvar ann_check_temp5131 = $ans5102;\n$step5097 = 20;\n$al5103 = L[1767];\nvar $ann$check5132 = R._cA(L[1767],DataSeries4507,ann_check_temp5131);\nif(R.isContinuation($ann$check5132)) {\n$ans5102 = $ann$check5132;\n}\nbreak;\ncase 20: $step5097 = 21;\n$ans5102 = ann_check_temp5131;\nbreak;\ncase 21: ++R.GAS;\nreturn $ans5102;\ndefault: R.ffi.throwSpinnakerError(L[1758],$step5097);\n}\n}\nif($step5097 !== 21) {\n$ans5102.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5103,$temp_lam5098,$step5097,[labels5099,x$values5100],[anf_arg2382,ann_check_temp5131],$elidedFrames5105);\n}\nreturn $ans5102;\n};\nvar anf_assign5139 = R.mF($temp_lam5098,\"labeled-num-dot-chart-from-list\");\nlabeled$num$dot$chart$from$list5140.$var = anf_assign5139;\nR.nothing;\nvar $temp_lam5142 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1775($input$labels5143) {\nvar $step5141 = 0;\nvar $elidedFrames5147 = 0;\nvar $ans5144 = D;\nvar $al5145 = L[1775];\nif(R.isAR($input$labels5143)) {\n$step5141 = $input$labels5143.step;\n$al5145 = $input$labels5143.from;\n$ans5144 = $input$labels5143.ans;\n$elidedFrames5147 = $input$labels5143.elidedFrames;\ninput$labels5143 = $input$labels5143.args[0];\nann_check_temp5188 = $input$labels5143.vars[0];\nunique$counts5173 = $input$labels5143.vars[1];\nanf_arg5164 = $input$labels5143.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1775],1,$t,false);\n}\nvar input$labels5143 = $input$labels5143;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5144 = R.mC();\n}\nwhile(!R.isContinuation($ans5144)) {\nswitch($step5141) {\ncase 0: $step5141 = 1;\n$al5145 = L[1794];\nvar $ann$check5192 = R._cA(L[1794],R.gDA(L[1794],\"CL\",CL40.dict.types,\"LoS\"),input$labels5143);\nif(R.isContinuation($ann$check5192)) {\n$ans5144 = $ann$check5192;\n}\nbreak;\ncase 1: $step5141 = 2;\n$ans5144 = R.maybeMethodCall0(input$labels5143,\"length\",L[1776]);\nbreak;\ncase 2: var anf_arg5149 = $ans5144;\n$step5141 = 3;\n$al5145 = L[1793];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5145,equal$always1);\n}\n$ans5144 = equal$always1.app(anf_arg5149,(0));\nbreak;\ncase 3: var anf_if5191 = $ans5144;\n$step5141 = R.checkPyretTrue(anf_if5191)?4:6;\nbreak;\ncase 4: $step5141 = 5;\n$al5145 = L[1792];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5145,raise1);\n}\n$ans5144 = raise1.app((\"dot-chart: can't have empty data\"));\nbreak;\ncase 5: $step5141 = 7;\n$ans5144 = nothing5;\nbreak;\ncase 6: $step5141 = 7;\n$ans5144 = nothing5;\nbreak;\ncase 7: $step5141 = 8;\n$ans5144 = R.maybeMethodCall1(input$labels5143,\"each\",L[1777],check$string604.$var);\nbreak;\ncase 8: var $temp_lam5151 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1778($acc5152,$label5153) {\nvar $step5150 = 0;\nvar $elidedFrames5158 = 0;\nvar $ans5155 = D;\nvar $al5156 = L[1778];\nif(R.isAR($acc5152)) {\n$step5150 = $acc5152.step;\n$al5156 = $acc5152.from;\n$ans5155 = $acc5152.ans;\n$elidedFrames5158 = $acc5152.elidedFrames;\nacc5152 = $acc5152.args[0];\nlabel5153 = $acc5152.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1778],2,$t,false);\n}\nvar acc5152 = $acc5152;\nvar label5153 = $label5153;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5155 = R.mC();\n}\nwhile(!R.isContinuation($ans5155)) {\nswitch($step5150) {\ncase 0: $step5150 = 1;\n$ans5155 = R.maybeMethodCall1(acc5152,\"get-now\",L[1779],label5153);\nbreak;\ncase 1: var anf_method_obj5159 = $ans5155;\n$step5150 = 2;\n$ans5155 = R.maybeMethodCall1(anf_method_obj5159,\"or-else\",L[1780],(0));\nbreak;\ncase 2: var anf_arg2395 = $ans5155;\n$step5150 = 3;\n$al5156 = L[1782];\n// omitting isFunction check;\n$ans5155 = _plus5.app(anf_arg2395,(1));\nbreak;\ncase 3: var anf_arg2422 = $ans5155;\n$step5150 = 4;\n$ans5155 = R.maybeMethodCall2(acc5152,\"set-now\",L[1781],label5153,anf_arg2422);\nbreak;\ncase 4: $step5150 = 5;\n$ans5155 = acc5152;\nbreak;\ncase 5: ++R.GAS;\nreturn $ans5155;\ndefault: R.ffi.throwSpinnakerError(L[1778],$step5150);\n}\n}\nif($step5150 !== 5) {\n$ans5155.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5156,$temp_lam5151,$step5150,[acc5152,label5153],[],$elidedFrames5158);\n}\nreturn $ans5155;\n};\nvar anf_arg5164 = R.mF($temp_lam5151,\"for-body<line 2128, column 18>\");\n$ans5144 = R.getMaker0(SD51.dict.values.dict[\"mutable-string-dict\"],(\"make0\"),L[1783],L[1784]);\nvar anf_fun5161 = $ans5144;\n$step5141 = 9;\n$al5145 = L[1784];\nif(typeof(anf_fun5161.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5145,anf_fun5161);\n}\n$ans5144 = anf_fun5161.app();\nbreak;\ncase 9: var anf_arg5172 = $ans5144;\n$step5141 = 10;\n$al5145 = L[1778];\n// omitting isFunction check;\n$ans5144 = fold24.app(anf_arg5164,anf_arg5172,input$labels5143);\nbreak;\ncase 10: var unique$counts5173 = $ans5144;\n$step5141 = 11;\n$ans5144 = R.maybeMethodCall0(unique$counts5173,\"keys-list-now\",L[1785]);\nbreak;\ncase 11: var anf_method_obj5174 = $ans5144;\n$step5141 = 12;\n$ans5144 = R.maybeMethodCall0(anf_method_obj5174,\"sort\",L[1786]);\nbreak;\ncase 12: var labels5185 = $ans5144;\nvar $temp_lam5177 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1787($l5178) {\nvar $step5176 = 0;\nvar $elidedFrames5182 = 0;\nvar $ans5179 = D;\nvar $al5180 = L[1787];\nif(R.isAR($l5178)) {\n$step5176 = $l5178.step;\n$al5180 = $l5178.from;\n$ans5179 = $l5178.ans;\n$elidedFrames5182 = $l5178.elidedFrames;\nl5178 = $l5178.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1787],1,$t,false);\n}\nvar l5178 = $l5178;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5179 = R.mC();\n}\nwhile(!R.isContinuation($ans5179)) {\nswitch($step5176) {\ncase 0: $step5176 = 1;\n$ans5179 = R.maybeMethodCall1(unique$counts5173,\"get-value-now\",L[1788],l5178);\nbreak;\ncase 1: var anf_obj5183 = $ans5179;\n$step5176 = 2;\n$ans5179 = R.mO({\"label\":l5178,\n\"count\":anf_obj5183});\nbreak;\ncase 2: ++R.GAS;\nreturn $ans5179;\ndefault: R.ffi.throwSpinnakerError(L[1787],$step5176);\n}\n}\nif($step5176 !== 2) {\n$ans5179.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5180,$temp_lam5177,$step5176,[l5178],[],$elidedFrames5182);\n}\nreturn $ans5179;\n};\nvar anf_arg2400 = R.mF($temp_lam5177,\"\");\n$step5141 = 13;\n$ans5144 = R.maybeMethodCall1(labels5185,\"map\",L[1789],anf_arg2400);\nbreak;\ncase 13: var anf_extend5187 = $ans5144;\nvar anf_arg2404 = R.extendObj(L[1790],default$categorical$dot$plot$series5186,{\"ps\":anf_extend5187});\n// caller optimization;\n$ans5144 = categorical$dot$plot$series3887.$var.app(anf_arg2404);\nvar ann_check_temp5188 = $ans5144;\n$step5141 = 14;\n$al5145 = L[1791];\nvar $ann$check5190 = R._cA(L[1791],DataSeries4507,ann_check_temp5188);\nif(R.isContinuation($ann$check5190)) {\n$ans5144 = $ann$check5190;\n}\nbreak;\ncase 14: $step5141 = 15;\n$ans5144 = ann_check_temp5188;\nbreak;\ncase 15: ++R.GAS;\nreturn $ans5144;\ndefault: R.ffi.throwSpinnakerError(L[1775],$step5141);\n}\n}\nif($step5141 !== 15) {\n$ans5144.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5145,$temp_lam5142,$step5141,[input$labels5143],[ann_check_temp5188,unique$counts5173,anf_arg5164],$elidedFrames5147);\n}\nreturn $ans5144;\n};\nvar anf_assign5194 = R.mF($temp_lam5142,\"dot-chart-from-list\");\ndot$chart$from$list5195.$var = anf_assign5194;\nR.nothing;\nvar $temp_lam5198 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1795($labels5199,$value$lists5200,$legends5201) {\nvar $step5197 = 0;\nvar $elidedFrames5205 = 0;\nvar $ans5202 = D;\nvar $al5203 = L[1795];\nif(R.isAR($labels5199)) {\n$step5197 = $labels5199.step;\n$al5203 = $labels5199.from;\n$ans5202 = $labels5199.ans;\n$elidedFrames5205 = $labels5199.elidedFrames;\nlabels5199 = $labels5199.args[0];\nvalue$lists5200 = $labels5199.args[1];\nlegends5201 = $labels5199.args[2];\nrational$values5239 = $labels5199.vars[0];\nmax$negative$height5304 = $labels5199.vars[1];\nmax$positive$height5303 = $labels5199.vars[2];\ntup4338 = $labels5199.vars[3];\nann_check_temp5309 = $labels5199.vars[4];\nanf_extend5302 = $labels5199.vars[5];\nanf_extend5305 = $labels5199.vars[6];\nanf_extend5306 = $labels5199.vars[7];\nvalue$length5215 = $labels5199.vars[8];\nlegend$length5216 = $labels5199.vars[9];\nlabel$length5217 = $labels5199.vars[10];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1795],3,$t,false);\n}\nvar labels5199 = $labels5199;\nvar value$lists5200 = $value$lists5200;\nvar legends5201 = $legends5201;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5202 = R.mC();\n}\nwhile(!R.isContinuation($ans5202)) {\nswitch($step5197) {\ncase 0: $step5197 = 1;\n$al5203 = L[1838];\nvar $ann$check5315 = R._cA(L[1838],R.gDA(L[1838],\"CL\",CL40.dict.types,\"LoS\"),labels5199);\nif(R.isContinuation($ann$check5315)) {\n$ans5202 = $ann$check5315;\n}\nbreak;\ncase 1: $step5197 = 2;\n$al5203 = L[1839];\nvar $ann$check5316 = R._cA(L[1839],R.gDA(L[1839],\"CL\",CL40.dict.types,\"LoLoN\"),value$lists5200);\nif(R.isContinuation($ann$check5316)) {\n$ans5202 = $ann$check5316;\n}\nbreak;\ncase 2: $step5197 = 3;\n$al5203 = L[1840];\nvar $ann$check5317 = R._cA(L[1840],R.gDA(L[1840],\"CL\",CL40.dict.types,\"LoS\"),legends5201);\nif(R.isContinuation($ann$check5317)) {\n$ans5202 = $ann$check5317;\n}\nbreak;\ncase 3: $step5197 = 4;\n$ans5202 = R.maybeMethodCall0(labels5199,\"length\",L[1796]);\nbreak;\ncase 4: var label$length5217 = $ans5202;\n$step5197 = 5;\n$ans5202 = R.maybeMethodCall0(value$lists5200,\"length\",L[1797]);\nbreak;\ncase 5: var value$length5215 = $ans5202;\n$step5197 = 6;\n$ans5202 = R.maybeMethodCall0(legends5201,\"length\",L[1798]);\nbreak;\ncase 6: var legend$length5216 = $ans5202;\nvar $temp_lam5207 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1799($row5208) {\nvar $step5206 = 0;\nvar $elidedFrames5212 = 0;\nvar $ans5209 = D;\nvar $al5210 = L[1799];\nif(R.isAR($row5208)) {\n$step5206 = $row5208.step;\n$al5210 = $row5208.from;\n$ans5209 = $row5208.ans;\n$elidedFrames5212 = $row5208.elidedFrames;\nrow5208 = $row5208.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1799],1,$t,false);\n}\nvar row5208 = $row5208;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5209 = R.mC();\n}\nwhile(!R.isContinuation($ans5209)) {\nswitch($step5206) {\ncase 0: $step5206 = 1;\n$al5210 = L[1800];\n// omitting isFunction check;\n$ans5209 = map6.app(num$to$rational3,row5208);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans5209;\ndefault: R.ffi.throwSpinnakerError(L[1799],$step5206);\n}\n}\nif($step5206 !== 1) {\n$ans5209.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5210,$temp_lam5207,$step5206,[row5208],[],$elidedFrames5212);\n}\nreturn $ans5209;\n};\nvar anf_arg2407 = R.mF($temp_lam5207,\"\");\n$step5197 = 7;\n$ans5202 = R.maybeMethodCall1(value$lists5200,\"map\",L[1801],anf_arg2407);\nbreak;\ncase 7: var rational$values5239 = $ans5202;\n$step5197 = 8;\n$al5203 = L[1837];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5203,equal$always1);\n}\n$ans5202 = equal$always1.app(value$length5215,(0));\nbreak;\ncase 8: var anf_if5314 = $ans5202;\n$step5197 = R.checkPyretTrue(anf_if5314)?9:11;\nbreak;\ncase 9: $step5197 = 10;\n$al5203 = L[1836];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5203,raise1);\n}\n$ans5202 = raise1.app((\"grouped-bar-chart: can't have empty data\"));\nbreak;\ncase 10: $step5197 = 12;\n$ans5202 = nothing5;\nbreak;\ncase 11: $step5197 = 12;\n$ans5202 = nothing5;\nbreak;\ncase 12: $step5197 = 13;\n$al5203 = L[1835];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5203,equal$always1);\n}\n$ans5202 = equal$always1.app(legend$length5216,(0));\nbreak;\ncase 13: var anf_if5313 = $ans5202;\n$step5197 = R.checkPyretTrue(anf_if5313)?14:16;\nbreak;\ncase 14: $step5197 = 15;\n$al5203 = L[1834];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5203,raise1);\n}\n$ans5202 = raise1.app((\"grouped-bar-chart: can't have empty legends\"));\nbreak;\ncase 15: $step5197 = 17;\n$ans5202 = nothing5;\nbreak;\ncase 16: $step5197 = 17;\n$ans5202 = nothing5;\nbreak;\ncase 17: $step5197 = 18;\n$al5203 = L[1833];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5203,equal$always1);\n}\n$ans5202 = equal$always1.app(label$length5217,value$length5215);\nbreak;\ncase 18: var anf_arg2410 = $ans5202;\n$ans5202 = R.not(anf_arg2410);\nvar anf_if5312 = $ans5202;\n$step5197 = R.checkPyretTrue(anf_if5312)?19:21;\nbreak;\ncase 19: $step5197 = 20;\n$al5203 = L[1832];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5203,raise1);\n}\n$ans5202 = raise1.app((\"grouped-bar-chart: labels and values should have the same length\"));\nbreak;\ncase 20: $step5197 = 22;\n$ans5202 = nothing5;\nbreak;\ncase 21: $step5197 = 22;\n$ans5202 = nothing5;\nbreak;\ncase 22: var $temp_lam5219 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1802($group5220) {\nvar $step5218 = 0;\nvar $elidedFrames5224 = 0;\nvar $ans5221 = D;\nvar $al5222 = L[1802];\nif(R.isAR($group5220)) {\n$step5218 = $group5220.step;\n$al5222 = $group5220.from;\n$ans5221 = $group5220.ans;\n$elidedFrames5224 = $group5220.elidedFrames;\ngroup5220 = $group5220.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1802],1,$t,false);\n}\nvar group5220 = $group5220;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5221 = R.mC();\n}\nwhile(!R.isContinuation($ans5221)) {\nswitch($step5218) {\ncase 0: $step5218 = 1;\n$ans5221 = R.maybeMethodCall0(group5220,\"length\",L[1803]);\nbreak;\ncase 1: var anf_arg2411 = $ans5221;\n$step5218 = 2;\n$al5222 = L[1804];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5222,equal$always1);\n}\n$ans5221 = equal$always1.app(legend$length5216,anf_arg2411);\nbreak;\ncase 2: var anf_arg2412 = $ans5221;\n$ans5221 = R.not(anf_arg2412);\n$step5218 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans5221;\ndefault: R.ffi.throwSpinnakerError(L[1802],$step5218);\n}\n}\nif($step5218 !== 3) {\n$ans5221.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5222,$temp_lam5219,$step5218,[group5220],[],$elidedFrames5224);\n}\nreturn $ans5221;\n};\nvar anf_arg2413 = R.mF($temp_lam5219,\"\");\n$step5197 = 23;\n$al5203 = L[1831];\n// omitting isFunction check;\n$ans5202 = any17.app(anf_arg2413,value$lists5200);\nbreak;\ncase 23: var anf_if5311 = $ans5202;\n$step5197 = R.checkPyretTrue(anf_if5311)?24:26;\nbreak;\ncase 24: $step5197 = 25;\n$al5203 = L[1830];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5203,raise1);\n}\n$ans5202 = raise1.app((\"grouped-bar-chart: labels and legends should have the same length\"));\nbreak;\ncase 25: $step5197 = 27;\n$ans5202 = nothing5;\nbreak;\ncase 26: $step5197 = 27;\n$ans5202 = nothing5;\nbreak;\ncase 27: var $temp_lam5227 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1805($recv_5228) {\nvar $step5226 = 0;\nvar $elidedFrames5232 = 0;\nvar $ans5229 = D;\nvar $al5230 = L[1805];\nif(R.isAR($recv_5228)) {\n$step5226 = $recv_5228.step;\n$al5230 = $recv_5228.from;\n$ans5229 = $recv_5228.ans;\n$elidedFrames5232 = $recv_5228.elidedFrames;\nrecv_5228 = $recv_5228.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1805],1,$t,false);\n}\nvar recv_5228 = $recv_5228;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5229 = R.mC();\n}\nwhile(!R.isContinuation($ans5229)) {\nswitch($step5226) {\ncase 0: $step5226 = 1;\n$ans5229 = R.maybeMethodCall1(recv_5228,\"each\",L[1805],check$num588.$var);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans5229;\ndefault: R.ffi.throwSpinnakerError(L[1805],$step5226);\n}\n}\nif($step5226 !== 1) {\n$ans5229.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5230,$temp_lam5227,$step5226,[recv_5228],[],$elidedFrames5232);\n}\nreturn $ans5229;\n};\nvar anf_arg5238 = R.mF($temp_lam5227,\"\");\n$step5197 = 28;\n$ans5202 = R.maybeMethodCall1(value$lists5200,\"each\",L[1806],anf_arg5238);\nbreak;\ncase 28: $step5197 = 29;\n$ans5202 = R.maybeMethodCall1(labels5199,\"each\",L[1807],check$string604.$var);\nbreak;\ncase 29: $step5197 = 30;\n$ans5202 = R.maybeMethodCall1(legends5201,\"each\",L[1808],check$string604.$var);\nbreak;\ncase 30: $step5197 = 31;\n$al5203 = L[1829];\n// omitting isFunction check;\n$ans5202 = multi$prep$axis1764.$var.app(grouped457.$var,rational$values5239);\nbreak;\ncase 31: var tup4338 = $ans5202;\n$step5197 = 32;\n$al5203 = L[1828];\nR.checkTupleBind(tup4338,2,L[1828]);\nbreak;\ncase 32: var max$positive$height5303 = R.getTuple(tup4338,0,L[1809]);\nvar max$negative$height5304 = R.getTuple(tup4338,1,L[1810]);\n$al5203 = L[1811];\nvar anf_arg2415 = G(builtins10,\"raw-array-from-list\",L[1811]);\n$step5197 = 33;\n$ans5202 = R.maybeMethodCall1(rational$values5239,\"map\",L[1812],anf_arg2415);\nbreak;\ncase 33: var anf_arg2416 = $ans5202;\n$step5197 = 34;\n$al5203 = L[1827];\n// omitting isFunction check;\n$ans5202 = to$table2768.$var.app(labels5199,anf_arg2416);\nbreak;\ncase 34: var anf_extend5302 = $ans5202;\n$step5197 = 35;\n$ans5202 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[1813],legends5201);\nbreak;\ncase 35: var anf_extend5305 = $ans5202;\nvar $temp_lam5241 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1814($recv_5242) {\nvar $step5240 = 0;\nvar $elidedFrames5246 = 0;\nvar $ans5243 = D;\nvar $al5244 = L[1814];\nif(R.isAR($recv_5242)) {\n$step5240 = $recv_5242.step;\n$al5244 = $recv_5242.from;\n$ans5243 = $recv_5242.ans;\n$elidedFrames5246 = $recv_5242.elidedFrames;\nrecv_5242 = $recv_5242.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1814],1,$t,false);\n}\nvar recv_5242 = $recv_5242;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5243 = R.mC();\n}\nwhile(!R.isContinuation($ans5243)) {\nswitch($step5240) {\ncase 0: var $temp_lam5250 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1815($$underscore5251) {\nvar $step5249 = 0;\nvar $elidedFrames5255 = 0;\nvar $ans5252 = D;\nvar $al5253 = L[1815];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1815],1,$t,false);\n}\nvar $underscore5251 = $$underscore5251;\n// callee optimization;\nwhile(!R.isContinuation($ans5252)) {\nswitch($step5249) {\ncase 0: $step5249 = 1;\n$ans5252 = none28;\nbreak;\ncase 1: return $ans5252;\ndefault: R.ffi.throwSpinnakerError(L[1815],$step5249);\n}\n}\nreturn $ans5252;\n};\nvar anf_arg2425 = R.mF($temp_lam5250,\"\");\n$step5240 = 1;\n$ans5243 = R.maybeMethodCall1(recv_5242,\"map\",L[1814],anf_arg2425);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans5243;\ndefault: R.ffi.throwSpinnakerError(L[1814],$step5240);\n}\n}\nif($step5240 !== 1) {\n$ans5243.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5244,$temp_lam5241,$step5240,[recv_5242],[],$elidedFrames5246);\n}\nreturn $ans5243;\n};\nvar anf_arg5258 = R.mF($temp_lam5241,\"\");\n$step5197 = 36;\n$ans5202 = R.maybeMethodCall1(value$lists5200,\"map\",L[1816],anf_arg5258);\nbreak;\ncase 36: var anf_arg5259 = $ans5202;\n$step5197 = 37;\n$al5203 = L[1826];\n// omitting isFunction check;\n$ans5202 = list$to$table21438.$var.app(anf_arg5259);\nbreak;\ncase 37: var anf_extend5306 = $ans5202;\nvar $temp_lam5262 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1817($recv_5263) {\nvar $step5261 = 0;\nvar $elidedFrames5267 = 0;\nvar $ans5264 = D;\nvar $al5265 = L[1817];\nif(R.isAR($recv_5263)) {\n$step5261 = $recv_5263.step;\n$al5265 = $recv_5263.from;\n$ans5264 = $recv_5263.ans;\n$elidedFrames5267 = $recv_5263.elidedFrames;\nrecv_5263 = $recv_5263.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1817],1,$t,false);\n}\nvar recv_5263 = $recv_5263;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5264 = R.mC();\n}\nwhile(!R.isContinuation($ans5264)) {\nswitch($step5261) {\ncase 0: var $temp_lam5270 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1818($$underscore5271) {\nvar $step5269 = 0;\nvar $elidedFrames5275 = 0;\nvar $ans5272 = D;\nvar $al5273 = L[1818];\nif(R.isAR($$underscore5271)) {\n$step5269 = $$underscore5271.step;\n$al5273 = $$underscore5271.from;\n$ans5272 = $$underscore5271.ans;\n$elidedFrames5275 = $$underscore5271.elidedFrames;\n$underscore5271 = $$underscore5271.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1818],1,$t,false);\n}\nvar $underscore5271 = $$underscore5271;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5272 = R.mC();\n}\nwhile(!R.isContinuation($ans5272)) {\nswitch($step5269) {\ncase 0: $ans5272 = R.getMaker0(raw$array2,(\"make0\"),L[1819],L[1820]);\nvar anf_fun2457 = $ans5272;\n$step5269 = 1;\n$al5273 = L[1820];\nif(typeof(anf_fun2457.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5273,anf_fun2457);\n}\n$ans5272 = anf_fun2457.app();\nbreak;\ncase 1: ++R.GAS;\nreturn $ans5272;\ndefault: R.ffi.throwSpinnakerError(L[1818],$step5269);\n}\n}\nif($step5269 !== 1) {\n$ans5272.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5273,$temp_lam5270,$step5269,[$underscore5271],[],$elidedFrames5275);\n}\nreturn $ans5272;\n};\nvar anf_arg5299 = R.mF($temp_lam5270,\"\");\n$step5261 = 1;\n$ans5264 = R.maybeMethodCall1(recv_5263,\"map\",L[1817],anf_arg5299);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans5264;\ndefault: R.ffi.throwSpinnakerError(L[1817],$step5261);\n}\n}\nif($step5261 !== 1) {\n$ans5264.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5265,$temp_lam5262,$step5261,[recv_5263],[],$elidedFrames5267);\n}\nreturn $ans5264;\n};\nvar anf_arg2441 = R.mF($temp_lam5262,\"\");\n$step5197 = 38;\n$ans5202 = R.maybeMethodCall1(value$lists5200,\"map\",L[1821],anf_arg2441);\nbreak;\ncase 38: var anf_arg2442 = $ans5202;\n$step5197 = 39;\n$al5203 = L[1825];\n// omitting isFunction check;\n$ans5202 = list$to$table21438.$var.app(anf_arg2442);\nbreak;\ncase 39: var anf_extend5307 = $ans5202;\nvar anf_arg2444 = R.extendObj(L[1822],default$multi$bar$chart$series5301,{\"tab\":anf_extend5302,\n\"axis-top\":max$positive$height5303,\n\"axis-bottom\":max$negative$height5304,\n\"legends\":anf_extend5305,\n\"annotations\":anf_extend5306,\n\"intervals\":anf_extend5307});\n// caller optimization;\n$ans5202 = multi$bar$chart$series3946.$var.app(anf_arg2444);\nvar data$series5308 = $ans5202;\n$step5197 = 40;\n$ans5202 = R.maybeMethodCall2(data$series5308,\"make-axis\",L[1823],max$positive$height5303,max$negative$height5304);\nbreak;\ncase 40: var ann_check_temp5309 = $ans5202;\n$step5197 = 41;\n$al5203 = L[1824];\nvar $ann$check5310 = R._cA(L[1824],DataSeries4507,ann_check_temp5309);\nif(R.isContinuation($ann$check5310)) {\n$ans5202 = $ann$check5310;\n}\nbreak;\ncase 41: $step5197 = 42;\n$ans5202 = ann_check_temp5309;\nbreak;\ncase 42: ++R.GAS;\nreturn $ans5202;\ndefault: R.ffi.throwSpinnakerError(L[1795],$step5197);\n}\n}\nif($step5197 !== 42) {\n$ans5202.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5203,$temp_lam5198,$step5197,[labels5199,value$lists5200,legends5201],[rational$values5239,max$negative$height5304,max$positive$height5303,tup4338,ann_check_temp5309,anf_extend5302,anf_extend5305,anf_extend5306,value$length5215,legend$length5216,label$length5217],$elidedFrames5205);\n}\nreturn $ans5202;\n};\nvar anf_assign5320 = R.mF($temp_lam5198,\"grouped-bar-chart-from-list\");\ngrouped$bar$chart$from$list5321.$var = anf_assign5320;\nR.nothing;\nvar $temp_lam5324 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1841($labels5325,$value$lists5326,$legends5327) {\nvar $step5323 = 0;\nvar $elidedFrames5331 = 0;\nvar $ans5328 = D;\nvar $al5329 = L[1841];\nif(R.isAR($labels5325)) {\n$step5323 = $labels5325.step;\n$al5329 = $labels5325.from;\n$ans5328 = $labels5325.ans;\n$elidedFrames5331 = $labels5325.elidedFrames;\nlabels5325 = $labels5325.args[0];\nvalue$lists5326 = $labels5325.args[1];\nlegends5327 = $labels5325.args[2];\nmax$negative$height5425 = $labels5325.vars[0];\nmax$positive$height5424 = $labels5325.vars[1];\ntup4358 = $labels5325.vars[2];\nann_check_temp5426 = $labels5325.vars[3];\nanf_extend5420 = $labels5325.vars[4];\nvalue$length5340 = $labels5325.vars[5];\nlegend$length5341 = $labels5325.vars[6];\nanf_extend5418 = $labels5325.vars[7];\nlabel$length5342 = $labels5325.vars[8];\nanf_extend5419 = $labels5325.vars[9];\nrational$values5369 = $labels5325.vars[10];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1841],3,$t,false);\n}\nvar labels5325 = $labels5325;\nvar value$lists5326 = $value$lists5326;\nvar legends5327 = $legends5327;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5328 = R.mC();\n}\nwhile(!R.isContinuation($ans5328)) {\nswitch($step5323) {\ncase 0: $step5323 = 1;\n$al5329 = L[1884];\nvar $ann$check5432 = R._cA(L[1884],R.gDA(L[1884],\"CL\",CL40.dict.types,\"LoS\"),labels5325);\nif(R.isContinuation($ann$check5432)) {\n$ans5328 = $ann$check5432;\n}\nbreak;\ncase 1: $step5323 = 2;\n$al5329 = L[1885];\nvar $ann$check5433 = R._cA(L[1885],R.gDA(L[1885],\"CL\",CL40.dict.types,\"LoLoN\"),value$lists5326);\nif(R.isContinuation($ann$check5433)) {\n$ans5328 = $ann$check5433;\n}\nbreak;\ncase 2: $step5323 = 3;\n$al5329 = L[1886];\nvar $ann$check5434 = R._cA(L[1886],R.gDA(L[1886],\"CL\",CL40.dict.types,\"LoS\"),legends5327);\nif(R.isContinuation($ann$check5434)) {\n$ans5328 = $ann$check5434;\n}\nbreak;\ncase 3: $step5323 = 4;\n$ans5328 = R.maybeMethodCall0(labels5325,\"length\",L[1842]);\nbreak;\ncase 4: var label$length5342 = $ans5328;\n$step5323 = 5;\n$ans5328 = R.maybeMethodCall0(value$lists5326,\"length\",L[1843]);\nbreak;\ncase 5: var value$length5340 = $ans5328;\n$step5323 = 6;\n$ans5328 = R.maybeMethodCall0(legends5327,\"length\",L[1844]);\nbreak;\ncase 6: var legend$length5341 = $ans5328;\nvar $temp_lam5333 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1845($row5334) {\nvar $step5332 = 0;\nvar $elidedFrames5338 = 0;\nvar $ans5335 = D;\nvar $al5336 = L[1845];\nif(R.isAR($row5334)) {\n$step5332 = $row5334.step;\n$al5336 = $row5334.from;\n$ans5335 = $row5334.ans;\n$elidedFrames5338 = $row5334.elidedFrames;\nrow5334 = $row5334.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1845],1,$t,false);\n}\nvar row5334 = $row5334;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5335 = R.mC();\n}\nwhile(!R.isContinuation($ans5335)) {\nswitch($step5332) {\ncase 0: $step5332 = 1;\n$al5336 = L[1846];\n// omitting isFunction check;\n$ans5335 = map6.app(num$to$rational3,row5334);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans5335;\ndefault: R.ffi.throwSpinnakerError(L[1845],$step5332);\n}\n}\nif($step5332 !== 1) {\n$ans5335.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5336,$temp_lam5333,$step5332,[row5334],[],$elidedFrames5338);\n}\nreturn $ans5335;\n};\nvar anf_arg2447 = R.mF($temp_lam5333,\"\");\n$step5323 = 7;\n$ans5328 = R.maybeMethodCall1(value$lists5326,\"map\",L[1847],anf_arg2447);\nbreak;\ncase 7: var rational$values5369 = $ans5328;\n$step5323 = 8;\n$al5329 = L[1883];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5329,equal$always1);\n}\n$ans5328 = equal$always1.app(value$length5340,(0));\nbreak;\ncase 8: var anf_if5431 = $ans5328;\n$step5323 = R.checkPyretTrue(anf_if5431)?9:11;\nbreak;\ncase 9: $step5323 = 10;\n$al5329 = L[1882];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5329,raise1);\n}\n$ans5328 = raise1.app((\"stacked-bar-chart: can't have empty data\"));\nbreak;\ncase 10: $step5323 = 12;\n$ans5328 = nothing5;\nbreak;\ncase 11: $step5323 = 12;\n$ans5328 = nothing5;\nbreak;\ncase 12: $step5323 = 13;\n$al5329 = L[1881];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5329,equal$always1);\n}\n$ans5328 = equal$always1.app(legend$length5341,(0));\nbreak;\ncase 13: var anf_if5430 = $ans5328;\n$step5323 = R.checkPyretTrue(anf_if5430)?14:16;\nbreak;\ncase 14: $step5323 = 15;\n$al5329 = L[1880];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5329,raise1);\n}\n$ans5328 = raise1.app((\"stacked-bar-chart: can't have empty legends\"));\nbreak;\ncase 15: $step5323 = 17;\n$ans5328 = nothing5;\nbreak;\ncase 16: $step5323 = 17;\n$ans5328 = nothing5;\nbreak;\ncase 17: $step5323 = 18;\n$al5329 = L[1879];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5329,equal$always1);\n}\n$ans5328 = equal$always1.app(label$length5342,value$length5340);\nbreak;\ncase 18: var anf_arg2450 = $ans5328;\n$ans5328 = R.not(anf_arg2450);\nvar anf_if5429 = $ans5328;\n$step5323 = R.checkPyretTrue(anf_if5429)?19:21;\nbreak;\ncase 19: $step5323 = 20;\n$al5329 = L[1878];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5329,raise1);\n}\n$ans5328 = raise1.app((\"stacked-bar-chart: labels and values should have the same length\"));\nbreak;\ncase 20: $step5323 = 22;\n$ans5328 = nothing5;\nbreak;\ncase 21: $step5323 = 22;\n$ans5328 = nothing5;\nbreak;\ncase 22: var $temp_lam5344 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1848($stack5345) {\nvar $step5343 = 0;\nvar $elidedFrames5349 = 0;\nvar $ans5346 = D;\nvar $al5347 = L[1848];\nif(R.isAR($stack5345)) {\n$step5343 = $stack5345.step;\n$al5347 = $stack5345.from;\n$ans5346 = $stack5345.ans;\n$elidedFrames5349 = $stack5345.elidedFrames;\nstack5345 = $stack5345.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1848],1,$t,false);\n}\nvar stack5345 = $stack5345;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5346 = R.mC();\n}\nwhile(!R.isContinuation($ans5346)) {\nswitch($step5343) {\ncase 0: $step5343 = 1;\n$ans5346 = R.maybeMethodCall0(stack5345,\"length\",L[1849]);\nbreak;\ncase 1: var anf_arg5358 = $ans5346;\n$step5343 = 2;\n$al5347 = L[1850];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5347,equal$always1);\n}\n$ans5346 = equal$always1.app(legend$length5341,anf_arg5358);\nbreak;\ncase 2: var anf_arg2452 = $ans5346;\n$ans5346 = R.not(anf_arg2452);\n$step5343 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans5346;\ndefault: R.ffi.throwSpinnakerError(L[1848],$step5343);\n}\n}\nif($step5343 !== 3) {\n$ans5346.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5347,$temp_lam5344,$step5343,[stack5345],[],$elidedFrames5349);\n}\nreturn $ans5346;\n};\nvar anf_arg2453 = R.mF($temp_lam5344,\"\");\n$step5323 = 23;\n$al5329 = L[1877];\n// omitting isFunction check;\n$ans5328 = any17.app(anf_arg2453,value$lists5326);\nbreak;\ncase 23: var anf_if5428 = $ans5328;\n$step5323 = R.checkPyretTrue(anf_if5428)?24:26;\nbreak;\ncase 24: $step5323 = 25;\n$al5329 = L[1876];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5329,raise1);\n}\n$ans5328 = raise1.app((\"stacked-bar-chart: labels and legends should have the same length\"));\nbreak;\ncase 25: $step5323 = 27;\n$ans5328 = nothing5;\nbreak;\ncase 26: $step5323 = 27;\n$ans5328 = nothing5;\nbreak;\ncase 27: var $temp_lam5361 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1851($recv_5362) {\nvar $step5360 = 0;\nvar $elidedFrames5367 = 0;\nvar $ans5364 = D;\nvar $al5365 = L[1851];\nif(R.isAR($recv_5362)) {\n$step5360 = $recv_5362.step;\n$al5365 = $recv_5362.from;\n$ans5364 = $recv_5362.ans;\n$elidedFrames5367 = $recv_5362.elidedFrames;\nrecv_5362 = $recv_5362.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1851],1,$t,false);\n}\nvar recv_5362 = $recv_5362;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5364 = R.mC();\n}\nwhile(!R.isContinuation($ans5364)) {\nswitch($step5360) {\ncase 0: $step5360 = 1;\n$ans5364 = R.maybeMethodCall1(recv_5362,\"each\",L[1851],check$num588.$var);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans5364;\ndefault: R.ffi.throwSpinnakerError(L[1851],$step5360);\n}\n}\nif($step5360 !== 1) {\n$ans5364.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5365,$temp_lam5361,$step5360,[recv_5362],[],$elidedFrames5367);\n}\nreturn $ans5364;\n};\nvar anf_arg2456 = R.mF($temp_lam5361,\"\");\n$step5323 = 28;\n$ans5328 = R.maybeMethodCall1(value$lists5326,\"each\",L[1852],anf_arg2456);\nbreak;\ncase 28: $step5323 = 29;\n$ans5328 = R.maybeMethodCall1(labels5325,\"each\",L[1853],check$string604.$var);\nbreak;\ncase 29: $step5323 = 30;\n$ans5328 = R.maybeMethodCall1(legends5327,\"each\",L[1854],check$string604.$var);\nbreak;\ncase 30: $step5323 = 31;\n$al5329 = L[1875];\n// omitting isFunction check;\n$ans5328 = multi$prep$axis1764.$var.app(absolute446.$var,rational$values5369);\nbreak;\ncase 31: var tup4358 = $ans5328;\n$step5323 = 32;\n$al5329 = L[1874];\nR.checkTupleBind(tup4358,2,L[1874]);\nbreak;\ncase 32: var max$positive$height5424 = R.getTuple(tup4358,0,L[1855]);\nvar max$negative$height5425 = R.getTuple(tup4358,1,L[1856]);\n$al5329 = L[1857];\nvar anf_arg5375 = G(builtins10,\"raw-array-from-list\",L[1857]);\n$step5323 = 33;\n$ans5328 = R.maybeMethodCall1(rational$values5369,\"map\",L[1858],anf_arg5375);\nbreak;\ncase 33: var anf_arg5376 = $ans5328;\n$step5323 = 34;\n$al5329 = L[1873];\n// omitting isFunction check;\n$ans5328 = to$table2768.$var.app(labels5325,anf_arg5376);\nbreak;\ncase 34: var anf_extend5418 = $ans5328;\n$step5323 = 35;\n$ans5328 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[1859],legends5327);\nbreak;\ncase 35: var anf_extend5419 = $ans5328;\nvar $temp_lam5378 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1860($recv_5379) {\nvar $step5377 = 0;\nvar $elidedFrames5383 = 0;\nvar $ans5380 = D;\nvar $al5381 = L[1860];\nif(R.isAR($recv_5379)) {\n$step5377 = $recv_5379.step;\n$al5381 = $recv_5379.from;\n$ans5380 = $recv_5379.ans;\n$elidedFrames5383 = $recv_5379.elidedFrames;\nrecv_5379 = $recv_5379.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1860],1,$t,false);\n}\nvar recv_5379 = $recv_5379;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5380 = R.mC();\n}\nwhile(!R.isContinuation($ans5380)) {\nswitch($step5377) {\ncase 0: var $temp_lam5385 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1861($$underscore5387) {\nvar $step5384 = 0;\nvar $elidedFrames5391 = 0;\nvar $ans5388 = D;\nvar $al5389 = L[1861];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1861],1,$t,false);\n}\nvar $underscore5387 = $$underscore5387;\n// callee optimization;\nwhile(!R.isContinuation($ans5388)) {\nswitch($step5384) {\ncase 0: $step5384 = 1;\n$ans5388 = none28;\nbreak;\ncase 1: return $ans5388;\ndefault: R.ffi.throwSpinnakerError(L[1861],$step5384);\n}\n}\nreturn $ans5388;\n};\nvar anf_arg5393 = R.mF($temp_lam5385,\"\");\n$step5377 = 1;\n$ans5380 = R.maybeMethodCall1(recv_5379,\"map\",L[1860],anf_arg5393);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans5380;\ndefault: R.ffi.throwSpinnakerError(L[1860],$step5377);\n}\n}\nif($step5377 !== 1) {\n$ans5380.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5381,$temp_lam5378,$step5377,[recv_5379],[],$elidedFrames5383);\n}\nreturn $ans5380;\n};\nvar anf_arg2463 = R.mF($temp_lam5378,\"\");\n$step5323 = 36;\n$ans5328 = R.maybeMethodCall1(value$lists5326,\"map\",L[1862],anf_arg2463);\nbreak;\ncase 36: var anf_arg2464 = $ans5328;\n$step5323 = 37;\n$al5329 = L[1872];\n// omitting isFunction check;\n$ans5328 = list$to$table21438.$var.app(anf_arg2464);\nbreak;\ncase 37: var anf_extend5420 = $ans5328;\nvar $temp_lam5396 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1863($recv_5397) {\nvar $step5395 = 0;\nvar $elidedFrames5401 = 0;\nvar $ans5398 = D;\nvar $al5399 = L[1863];\nif(R.isAR($recv_5397)) {\n$step5395 = $recv_5397.step;\n$al5399 = $recv_5397.from;\n$ans5398 = $recv_5397.ans;\n$elidedFrames5401 = $recv_5397.elidedFrames;\nrecv_5397 = $recv_5397.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1863],1,$t,false);\n}\nvar recv_5397 = $recv_5397;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5398 = R.mC();\n}\nwhile(!R.isContinuation($ans5398)) {\nswitch($step5395) {\ncase 0: var $temp_lam5403 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1864($$underscore5404) {\nvar $step5402 = 0;\nvar $elidedFrames5408 = 0;\nvar $ans5405 = D;\nvar $al5406 = L[1864];\nif(R.isAR($$underscore5404)) {\n$step5402 = $$underscore5404.step;\n$al5406 = $$underscore5404.from;\n$ans5405 = $$underscore5404.ans;\n$elidedFrames5408 = $$underscore5404.elidedFrames;\n$underscore5404 = $$underscore5404.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1864],1,$t,false);\n}\nvar $underscore5404 = $$underscore5404;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5405 = R.mC();\n}\nwhile(!R.isContinuation($ans5405)) {\nswitch($step5402) {\ncase 0: $ans5405 = R.getMaker0(raw$array2,(\"make0\"),L[1865],L[1866]);\nvar anf_fun5409 = $ans5405;\n$step5402 = 1;\n$al5406 = L[1866];\nif(typeof(anf_fun5409.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5406,anf_fun5409);\n}\n$ans5405 = anf_fun5409.app();\nbreak;\ncase 1: ++R.GAS;\nreturn $ans5405;\ndefault: R.ffi.throwSpinnakerError(L[1864],$step5402);\n}\n}\nif($step5402 !== 1) {\n$ans5405.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5406,$temp_lam5403,$step5402,[$underscore5404],[],$elidedFrames5408);\n}\nreturn $ans5405;\n};\nvar anf_arg2467 = R.mF($temp_lam5403,\"\");\n$step5395 = 1;\n$ans5398 = R.maybeMethodCall1(recv_5397,\"map\",L[1863],anf_arg2467);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans5398;\ndefault: R.ffi.throwSpinnakerError(L[1863],$step5395);\n}\n}\nif($step5395 !== 1) {\n$ans5398.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5399,$temp_lam5396,$step5395,[recv_5397],[],$elidedFrames5401);\n}\nreturn $ans5398;\n};\nvar anf_arg5417 = R.mF($temp_lam5396,\"\");\n$step5323 = 38;\n$ans5328 = R.maybeMethodCall1(value$lists5326,\"map\",L[1867],anf_arg5417);\nbreak;\ncase 38: var anf_arg2473 = $ans5328;\n$step5323 = 39;\n$al5329 = L[1871];\n// omitting isFunction check;\n$ans5328 = list$to$table21438.$var.app(anf_arg2473);\nbreak;\ncase 39: var anf_extend5421 = $ans5328;\nvar anf_arg5422 = R.extendObj(L[1868],default$multi$bar$chart$series5301,{\"tab\":anf_extend5418,\n\"legends\":anf_extend5419,\n\"annotations\":anf_extend5420,\n\"intervals\":anf_extend5421,\n\"is-stacked\":(\"absolute\")});\n// caller optimization;\n$ans5328 = multi$bar$chart$series3946.$var.app(anf_arg5422);\nvar data$series5423 = $ans5328;\n$step5323 = 40;\n$ans5328 = R.maybeMethodCall2(data$series5423,\"make-axis\",L[1869],max$positive$height5424,max$negative$height5425);\nbreak;\ncase 40: var ann_check_temp5426 = $ans5328;\n$step5323 = 41;\n$al5329 = L[1870];\nvar $ann$check5427 = R._cA(L[1870],DataSeries4507,ann_check_temp5426);\nif(R.isContinuation($ann$check5427)) {\n$ans5328 = $ann$check5427;\n}\nbreak;\ncase 41: $step5323 = 42;\n$ans5328 = ann_check_temp5426;\nbreak;\ncase 42: ++R.GAS;\nreturn $ans5328;\ndefault: R.ffi.throwSpinnakerError(L[1841],$step5323);\n}\n}\nif($step5323 !== 42) {\n$ans5328.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5329,$temp_lam5324,$step5323,[labels5325,value$lists5326,legends5327],[max$negative$height5425,max$positive$height5424,tup4358,ann_check_temp5426,anf_extend5420,value$length5340,legend$length5341,anf_extend5418,label$length5342,anf_extend5419,rational$values5369],$elidedFrames5331);\n}\nreturn $ans5328;\n};\nvar anf_assign5436 = R.mF($temp_lam5324,\"stacked-bar-chart-from-list\");\nstacked$bar$chart$from$list5437.$var = anf_assign5436;\nR.nothing;\nvar $temp_lam5439 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1887($f5440,$l15441,$l25442,$l35443,$l45444,$l55445) {\nvar $step5438 = 0;\nvar $elidedFrames5449 = 0;\nvar $ans5446 = D;\nvar $al5447 = L[1887];\nif(R.isAR($f5440)) {\n$step5438 = $f5440.step;\n$al5447 = $f5440.from;\n$ans5446 = $f5440.ans;\n$elidedFrames5449 = $f5440.elidedFrames;\nf5440 = $f5440.args[0];\nl15441 = $f5440.args[1];\nl25442 = $f5440.args[2];\nl35443 = $f5440.args[3];\nl45444 = $f5440.args[4];\nl55445 = $f5440.args[5];\narg_5460 = $f5440.vars[0];\nann_check_temp5450 = $f5440.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 6) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1887],6,$t,false);\n}\nvar f5440 = $f5440;\nvar l15441 = $l15441;\nvar l25442 = $l25442;\nvar l35443 = $l35443;\nvar l45444 = $l45444;\nvar l55445 = $l55445;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5446 = R.mC();\n}\nwhile(!R.isContinuation($ans5446)) {\nswitch($step5438) {\ncase 0: $step5438 = 1;\n$al5447 = L[1901];\nR._cA(L[1901],R.Function,f5440);\nbreak;\ncase 1: $step5438 = 2;\n$al5447 = L[1902];\nR._cA(L[1902],List16,l15441);\nbreak;\ncase 2: $step5438 = 3;\n$al5447 = L[1903];\nR._cA(L[1903],List16,l25442);\nbreak;\ncase 3: $step5438 = 4;\n$al5447 = L[1904];\nR._cA(L[1904],List16,l35443);\nbreak;\ncase 4: $step5438 = 5;\n$al5447 = L[1905];\nR._cA(L[1905],List16,l45444);\nbreak;\ncase 5: $step5438 = 6;\n$al5447 = L[1906];\nR._cA(L[1906],List16,l55445);\nbreak;\ncase 6: // caller optimization;\n$ans5446 = is$empty19.app(l15441);\nvar anf_if5468 = $ans5446;\n$step5438 = R.checkPyretTrue(anf_if5468)?7:8;\nbreak;\ncase 7: $step5438 = 15;\n$ans5446 = (true);\nbreak;\ncase 8: // caller optimization;\n$ans5446 = is$empty19.app(l25442);\nvar anf_if5467 = $ans5446;\n$step5438 = R.checkPyretTrue(anf_if5467)?9:10;\nbreak;\ncase 9: $step5438 = 15;\n$ans5446 = (true);\nbreak;\ncase 10: // caller optimization;\n$ans5446 = is$empty19.app(l35443);\nvar anf_if5466 = $ans5446;\n$step5438 = R.checkPyretTrue(anf_if5466)?11:12;\nbreak;\ncase 11: $step5438 = 15;\n$ans5446 = (true);\nbreak;\ncase 12: // caller optimization;\n$ans5446 = is$empty19.app(l45444);\nvar anf_if5465 = $ans5446;\n$step5438 = R.checkPyretTrue(anf_if5465)?13:14;\nbreak;\ncase 13: $step5438 = 15;\n$ans5446 = (true);\nbreak;\ncase 14: // caller optimization;\n$ans5446 = is$empty19.app(l55445);\nvar anf_arg2479 = $ans5446;\n$ans5446 = R.checkWrapBoolean(anf_arg2479);\n$step5438 = 15;\nbreak;\ncase 15: var anf_if5464 = $ans5446;\n$step5438 = R.checkPyretTrue(anf_if5464)?16:17;\nbreak;\ncase 16: $step5438 = 20;\n$ans5446 = empty18;\nbreak;\ncase 17: $al5447 = L[1889];\nvar anf_arg2480 = G(l15441,\"first\",L[1889]);\n$al5447 = L[1890];\nvar anf_arg2483 = G(l25442,\"first\",L[1890]);\n$al5447 = L[1891];\nvar anf_arg2484 = G(l35443,\"first\",L[1891]);\n$al5447 = L[1892];\nvar anf_arg2485 = G(l45444,\"first\",L[1892]);\n$al5447 = L[1893];\nvar anf_arg5456 = G(l55445,\"first\",L[1893]);\n$step5438 = 18;\n$al5447 = L[1900];\nif(typeof(f5440.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5447,f5440);\n}\n$ans5446 = f5440.app(anf_arg2480,anf_arg2483,anf_arg2484,anf_arg2485,anf_arg5456);\nbreak;\ncase 18: var arg_5460 = $ans5446;\n$al5447 = L[1894];\nvar anf_arg2486 = G(l15441,\"rest\",L[1894]);\n$al5447 = L[1895];\nvar anf_arg2487 = G(l25442,\"rest\",L[1895]);\n$al5447 = L[1896];\nvar anf_arg2488 = G(l35443,\"rest\",L[1896]);\n$al5447 = L[1897];\nvar anf_arg2490 = G(l45444,\"rest\",L[1897]);\n$al5447 = L[1898];\nvar anf_arg5459 = G(l55445,\"rest\",L[1898]);\n$step5438 = 19;\n$al5447 = L[1899];\n// omitting isFunction check;\n$ans5446 = map55457.$var.app(f5440,anf_arg2486,anf_arg2487,anf_arg2488,anf_arg2490,anf_arg5459);\nbreak;\ncase 19: var anf_arg5463 = $ans5446;\n// caller optimization;\n$ans5446 = link5.app(arg_5460,anf_arg5463);\n$step5438 = 20;\nbreak;\ncase 20: var ann_check_temp5450 = $ans5446;\n$step5438 = 21;\n$al5447 = L[1888];\nvar $ann$check5451 = R._cA(L[1888],List16,ann_check_temp5450);\nif(R.isContinuation($ann$check5451)) {\n$ans5446 = $ann$check5451;\n}\nbreak;\ncase 21: $step5438 = 22;\n$ans5446 = ann_check_temp5450;\nbreak;\ncase 22: ++R.GAS;\nreturn $ans5446;\ndefault: R.ffi.throwSpinnakerError(L[1887],$step5438);\n}\n}\nif($step5438 !== 22) {\n$ans5446.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5447,$temp_lam5439,$step5438,[f5440,l15441,l25442,l35443,l45444,l55445],[arg_5460,ann_check_temp5450],$elidedFrames5449);\n}\nreturn $ans5446;\n};\nvar anf_assign5470 = R.mF($temp_lam5439,\"map5\");\nmap55457.$var = anf_assign5470;\nR.nothing;\nvar $temp_lam5472 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1907($x5473,$y5474,$delta5475,$label5476,$optimg5477) {\nvar $step5471 = 0;\nvar $elidedFrames5481 = 0;\nvar $ans5478 = D;\nvar $al5479 = L[1907];\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1907],5,$t,false);\n}\nvar x5473 = $x5473;\nvar y5474 = $y5474;\nvar delta5475 = $delta5475;\nvar label5476 = $label5476;\nvar optimg5477 = $optimg5477;\n// callee optimization;\nwhile(!R.isContinuation($ans5478)) {\nswitch($step5471) {\ncase 0: $step5471 = 1;\n$al5479 = L[1909];\nR._cA(L[1909],$type$Number3,x5473);\nbreak;\ncase 1: $step5471 = 2;\n$al5479 = L[1910];\nR._cA(L[1910],$type$Number3,y5474);\nbreak;\ncase 2: $step5471 = 3;\n$al5479 = L[1911];\nR._cA(L[1911],$type$Number3,delta5475);\nbreak;\ncase 3: $step5471 = 4;\n$al5479 = L[1912];\nR._cA(L[1912],$type$String8,label5476);\nbreak;\ncase 4: $step5471 = 5;\n$al5479 = L[1913];\nR._cA(L[1913],Option27,optimg5477);\nbreak;\ncase 5: var ann_check_temp5482 = R.mO({\"x\":x5473,\n\"y\":y5474,\n\"delta\":delta5475,\n\"label\":label5476,\n\"image\":optimg5477});\n$step5471 = 6;\n$al5479 = L[1908];\nvar $ann$check5484 = R._cA(L[1908],IntervalPoint5483,ann_check_temp5482);\nif(R.isContinuation($ann$check5484)) {\n$ans5478 = $ann$check5484;\n}\nbreak;\ncase 6: $step5471 = 7;\n$ans5478 = ann_check_temp5482;\nbreak;\ncase 7: return $ans5478;\ndefault: R.ffi.throwSpinnakerError(L[1907],$step5471);\n}\n}\nreturn $ans5478;\n};\nvar anf_assign5486 = R.mF($temp_lam5472,\"get-interval-point\");\nget$interval$point5487.$var = anf_assign5486;\nR.nothing;\nvar $temp_lam5489 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1914($labels5490,$xs5491,$ys5492,$deltas5493) {\nvar $step5488 = 0;\nvar $elidedFrames5497 = 0;\nvar $ans5494 = D;\nvar $al5495 = L[1914];\nif(R.isAR($labels5490)) {\n$step5488 = $labels5490.step;\n$al5495 = $labels5490.from;\n$ans5494 = $labels5490.ans;\n$elidedFrames5497 = $labels5490.elidedFrames;\nlabels5490 = $labels5490.args[0];\nxs5491 = $labels5490.args[1];\nys5492 = $labels5490.args[2];\ndeltas5493 = $labels5490.args[3];\nys$length5499 = $labels5490.vars[0];\nxs$length5498 = $labels5490.vars[1];\ndeltas$length5500 = $labels5490.vars[2];\nlabels$length5501 = $labels5490.vars[3];\nann_check_temp5526 = $labels5490.vars[4];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1914],4,$t,false);\n}\nvar labels5490 = $labels5490;\nvar xs5491 = $xs5491;\nvar ys5492 = $ys5492;\nvar deltas5493 = $deltas5493;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5494 = R.mC();\n}\nwhile(!R.isContinuation($ans5494)) {\nswitch($step5488) {\ncase 0: $step5488 = 1;\n$al5495 = L[1935];\nvar $ann$check5532 = R._cA(L[1935],R.gDA(L[1935],\"CL\",CL40.dict.types,\"LoS\"),labels5490);\nif(R.isContinuation($ann$check5532)) {\n$ans5494 = $ann$check5532;\n}\nbreak;\ncase 1: $step5488 = 2;\n$al5495 = L[1936];\nvar $ann$check5533 = R._cA(L[1936],R.gDA(L[1936],\"CL\",CL40.dict.types,\"LoN\"),xs5491);\nif(R.isContinuation($ann$check5533)) {\n$ans5494 = $ann$check5533;\n}\nbreak;\ncase 2: $step5488 = 3;\n$al5495 = L[1937];\nvar $ann$check5534 = R._cA(L[1937],R.gDA(L[1937],\"CL\",CL40.dict.types,\"LoN\"),ys5492);\nif(R.isContinuation($ann$check5534)) {\n$ans5494 = $ann$check5534;\n}\nbreak;\ncase 3: $step5488 = 4;\n$al5495 = L[1938];\nvar $ann$check5535 = R._cA(L[1938],R.gDA(L[1938],\"CL\",CL40.dict.types,\"LoN\"),deltas5493);\nif(R.isContinuation($ann$check5535)) {\n$ans5494 = $ann$check5535;\n}\nbreak;\ncase 4: $step5488 = 5;\n$ans5494 = R.maybeMethodCall0(labels5490,\"length\",L[1915]);\nbreak;\ncase 5: var labels$length5501 = $ans5494;\n$step5488 = 6;\n$ans5494 = R.maybeMethodCall0(xs5491,\"length\",L[1916]);\nbreak;\ncase 6: var xs$length5498 = $ans5494;\n$step5488 = 7;\n$ans5494 = R.maybeMethodCall0(ys5492,\"length\",L[1917]);\nbreak;\ncase 7: var ys$length5499 = $ans5494;\n$step5488 = 8;\n$ans5494 = R.maybeMethodCall0(deltas5493,\"length\",L[1918]);\nbreak;\ncase 8: var deltas$length5500 = $ans5494;\n$step5488 = 9;\n$al5495 = L[1934];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5495,equal$always1);\n}\n$ans5494 = equal$always1.app(xs$length5498,ys$length5499);\nbreak;\ncase 9: var anf_arg2504 = $ans5494;\n$ans5494 = R.not(anf_arg2504);\nvar anf_if5531 = $ans5494;\n$step5488 = R.checkPyretTrue(anf_if5531)?10:12;\nbreak;\ncase 10: $step5488 = 11;\n$al5495 = L[1933];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5495,raise1);\n}\n$ans5494 = raise1.app((\"interval-chart: xs and ys should have the same length\"));\nbreak;\ncase 11: $step5488 = 13;\n$ans5494 = nothing5;\nbreak;\ncase 12: $step5488 = 13;\n$ans5494 = nothing5;\nbreak;\ncase 13: $step5488 = 14;\n$al5495 = L[1932];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5495,equal$always1);\n}\n$ans5494 = equal$always1.app(xs$length5498,deltas$length5500);\nbreak;\ncase 14: var anf_arg2506 = $ans5494;\n$ans5494 = R.not(anf_arg2506);\nvar anf_if5530 = $ans5494;\n$step5488 = R.checkPyretTrue(anf_if5530)?15:17;\nbreak;\ncase 15: $step5488 = 16;\n$al5495 = L[1931];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5495,raise1);\n}\n$ans5494 = raise1.app((\"interval-chart: deltas should have the same length as xs and ys\"));\nbreak;\ncase 16: $step5488 = 18;\n$ans5494 = nothing5;\nbreak;\ncase 17: $step5488 = 18;\n$ans5494 = nothing5;\nbreak;\ncase 18: $step5488 = 19;\n$al5495 = L[1930];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5495,equal$always1);\n}\n$ans5494 = equal$always1.app(xs$length5498,labels$length5501);\nbreak;\ncase 19: var anf_arg5509 = $ans5494;\n$ans5494 = R.not(anf_arg5509);\nvar anf_if5529 = $ans5494;\n$step5488 = R.checkPyretTrue(anf_if5529)?20:22;\nbreak;\ncase 20: $step5488 = 21;\n$al5495 = L[1929];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5495,raise1);\n}\n$ans5494 = raise1.app((\"interval-chart: labels should have the same length as xs and ys\"));\nbreak;\ncase 21: $step5488 = 23;\n$ans5494 = nothing5;\nbreak;\ncase 22: $step5488 = 23;\n$ans5494 = nothing5;\nbreak;\ncase 23: $step5488 = 24;\n$al5495 = L[1928];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5495,equal$always1);\n}\n$ans5494 = equal$always1.app(xs$length5498,(0));\nbreak;\ncase 24: var anf_if5528 = $ans5494;\n$step5488 = R.checkPyretTrue(anf_if5528)?25:27;\nbreak;\ncase 25: $step5488 = 26;\n$al5495 = L[1927];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5495,raise1);\n}\n$ans5494 = raise1.app((\"interval-chart: need at least one datum\"));\nbreak;\ncase 26: $step5488 = 28;\n$ans5494 = nothing5;\nbreak;\ncase 27: $step5488 = 28;\n$ans5494 = nothing5;\nbreak;\ncase 28: $step5488 = 29;\n$ans5494 = R.maybeMethodCall1(xs5491,\"each\",L[1919],check$num588.$var);\nbreak;\ncase 29: $step5488 = 30;\n$ans5494 = R.maybeMethodCall1(ys5492,\"each\",L[1920],check$num588.$var);\nbreak;\ncase 30: $step5488 = 31;\n$ans5494 = R.maybeMethodCall1(deltas5493,\"each\",L[1921],check$num588.$var);\nbreak;\ncase 31: var $temp_lam5511 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1922($$underscore5512) {\nvar $step5510 = 0;\nvar $elidedFrames5516 = 0;\nvar $ans5513 = D;\nvar $al5514 = L[1922];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1922],1,$t,false);\n}\nvar $underscore5512 = $$underscore5512;\n// callee optimization;\nwhile(!R.isContinuation($ans5513)) {\nswitch($step5510) {\ncase 0: $step5510 = 1;\n$ans5513 = none28;\nbreak;\ncase 1: return $ans5513;\ndefault: R.ffi.throwSpinnakerError(L[1922],$step5510);\n}\n}\nreturn $ans5513;\n};\nvar anf_arg5523 = R.mF($temp_lam5511,\"\");\n$step5488 = 32;\n$ans5494 = R.maybeMethodCall1(xs5491,\"map\",L[1923],anf_arg5523);\nbreak;\ncase 32: var anf_arg2511 = $ans5494;\n$step5488 = 33;\n$al5495 = L[1926];\n// omitting isFunction check;\n$ans5494 = map55457.$var.app(get$interval$point5487.$var,xs5491,ys5492,deltas5493,labels5490,anf_arg2511);\nbreak;\ncase 33: var anf_extend5525 = $ans5494;\nvar anf_arg2513 = R.extendObj(L[1924],default$interval$chart$series5524,{\"ps\":anf_extend5525});\n// caller optimization;\n$ans5494 = interval$chart$series3937.$var.app(anf_arg2513);\nvar ann_check_temp5526 = $ans5494;\n$step5488 = 34;\n$al5495 = L[1925];\nvar $ann$check5527 = R._cA(L[1925],DataSeries4507,ann_check_temp5526);\nif(R.isContinuation($ann$check5527)) {\n$ans5494 = $ann$check5527;\n}\nbreak;\ncase 34: $step5488 = 35;\n$ans5494 = ann_check_temp5526;\nbreak;\ncase 35: ++R.GAS;\nreturn $ans5494;\ndefault: R.ffi.throwSpinnakerError(L[1914],$step5488);\n}\n}\nif($step5488 !== 35) {\n$ans5494.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5495,$temp_lam5489,$step5488,[labels5490,xs5491,ys5492,deltas5493],[ys$length5499,xs$length5498,deltas$length5500,labels$length5501,ann_check_temp5526],$elidedFrames5497);\n}\nreturn $ans5494;\n};\nvar anf_assign5537 = R.mF($temp_lam5489,\"labeled-interval-chart-from-list\");\nlabeled$interval$chart$from$list5538.$var = anf_assign5537;\nR.nothing;\nvar $temp_lam5541 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1939($xs5542,$ys5543,$deltas5544) {\nvar $step5540 = 0;\nvar $elidedFrames5549 = 0;\nvar $ans5546 = D;\nvar $al5547 = L[1939];\nif(R.isAR($xs5542)) {\n$step5540 = $xs5542.step;\n$al5547 = $xs5542.from;\n$ans5546 = $xs5542.ans;\n$elidedFrames5549 = $xs5542.elidedFrames;\nxs5542 = $xs5542.args[0];\nys5543 = $xs5542.args[1];\ndeltas5544 = $xs5542.args[2];\nann_check_temp5559 = $xs5542.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1939],3,$t,false);\n}\nvar xs5542 = $xs5542;\nvar ys5543 = $ys5543;\nvar deltas5544 = $deltas5544;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5546 = R.mC();\n}\nwhile(!R.isContinuation($ans5546)) {\nswitch($step5540) {\ncase 0: $step5540 = 1;\n$al5547 = L[1944];\nvar $ann$check5561 = R._cA(L[1944],R.gDA(L[1944],\"CL\",CL40.dict.types,\"LoN\"),xs5542);\nif(R.isContinuation($ann$check5561)) {\n$ans5546 = $ann$check5561;\n}\nbreak;\ncase 1: $step5540 = 2;\n$al5547 = L[1945];\nvar $ann$check5562 = R._cA(L[1945],R.gDA(L[1945],\"CL\",CL40.dict.types,\"LoN\"),ys5543);\nif(R.isContinuation($ann$check5562)) {\n$ans5546 = $ann$check5562;\n}\nbreak;\ncase 2: $step5540 = 3;\n$al5547 = L[1946];\nvar $ann$check5563 = R._cA(L[1946],R.gDA(L[1946],\"CL\",CL40.dict.types,\"LoN\"),deltas5544);\nif(R.isContinuation($ann$check5563)) {\n$ans5546 = $ann$check5563;\n}\nbreak;\ncase 3: var $temp_lam5551 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1940($$underscore7127) {\nvar $step5550 = 0;\nvar $elidedFrames5556 = 0;\nvar $ans5553 = D;\nvar $al5554 = L[1940];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1940],1,$t,false);\n}\nvar $underscore7127 = $$underscore7127;\n// callee optimization;\nwhile(!R.isContinuation($ans5553)) {\nswitch($step5550) {\ncase 0: $step5550 = 1;\n$ans5553 = (\"\");\nbreak;\ncase 1: return $ans5553;\ndefault: R.ffi.throwSpinnakerError(L[1940],$step5550);\n}\n}\nreturn $ans5553;\n};\nvar anf_arg5558 = R.mF($temp_lam5551,\"\");\n$step5540 = 4;\n$ans5546 = R.maybeMethodCall1(xs5542,\"map\",L[1941],anf_arg5558);\nbreak;\ncase 4: var anf_arg2527 = $ans5546;\n$step5540 = 5;\n$al5547 = L[1943];\n// omitting isFunction check;\n$ans5546 = labeled$interval$chart$from$list5538.$var.app(anf_arg2527,xs5542,ys5543,deltas5544);\nbreak;\ncase 5: var ann_check_temp5559 = $ans5546;\n$step5540 = 6;\n$al5547 = L[1942];\nvar $ann$check5560 = R._cA(L[1942],DataSeries4507,ann_check_temp5559);\nif(R.isContinuation($ann$check5560)) {\n$ans5546 = $ann$check5560;\n}\nbreak;\ncase 6: $step5540 = 7;\n$ans5546 = ann_check_temp5559;\nbreak;\ncase 7: ++R.GAS;\nreturn $ans5546;\ndefault: R.ffi.throwSpinnakerError(L[1939],$step5540);\n}\n}\nif($step5540 !== 7) {\n$ans5546.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5547,$temp_lam5541,$step5540,[xs5542,ys5543,deltas5544],[ann_check_temp5559],$elidedFrames5549);\n}\nreturn $ans5546;\n};\nvar anf_assign5565 = R.mF($temp_lam5541,\"interval-chart-from-list\");\ninterval$chart$from$list5566.$var = anf_assign5565;\nR.nothing;\nvar $temp_lam5568 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1947($values5569) {\nvar $step5567 = 0;\nvar $elidedFrames5573 = 0;\nvar $ans5570 = D;\nvar $al5571 = L[1947];\nif(R.isAR($values5569)) {\n$step5567 = $values5569.step;\n$al5571 = $values5569.from;\n$ans5570 = $values5569.ans;\n$elidedFrames5573 = $values5569.elidedFrames;\nvalues5569 = $values5569.args[0];\nann_check_temp5587 = $values5569.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1947],1,$t,false);\n}\nvar values5569 = $values5569;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5570 = R.mC();\n}\nwhile(!R.isContinuation($ans5570)) {\nswitch($step5567) {\ncase 0: $step5567 = 1;\n$al5571 = L[1954];\nvar $ann$check5589 = R._cA(L[1954],R.gDA(L[1954],\"CL\",CL40.dict.types,\"LoLoN\"),values5569);\nif(R.isContinuation($ann$check5589)) {\n$ans5570 = $ann$check5589;\n}\nbreak;\ncase 1: var $temp_lam5575 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1948($i5576,$$underscore5577) {\nvar $step5574 = 0;\nvar $elidedFrames5581 = 0;\nvar $ans5578 = D;\nvar $al5579 = L[1948];\nif(R.isAR($i5576)) {\n$step5574 = $i5576.step;\n$al5579 = $i5576.from;\n$ans5578 = $i5576.ans;\n$elidedFrames5581 = $i5576.elidedFrames;\ni5576 = $i5576.args[0];\n$underscore5577 = $i5576.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1948],2,$t,false);\n}\nvar i5576 = $i5576;\nvar $underscore5577 = $$underscore5577;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5578 = R.mC();\n}\nwhile(!R.isContinuation($ans5578)) {\nswitch($step5574) {\ncase 0: $ans5578 = R.getMaker2(sprintf5582,(\"make2\"),L[1949],L[1950]);\nvar anf_fun5583 = $ans5578;\n$step5574 = 1;\n$al5579 = L[1950];\nif(typeof(anf_fun5583.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5579,anf_fun5583);\n}\n$ans5578 = anf_fun5583.app((\"Box \"),i5576);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans5578;\ndefault: R.ffi.throwSpinnakerError(L[1948],$step5574);\n}\n}\nif($step5574 !== 1) {\n$ans5578.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5579,$temp_lam5575,$step5574,[i5576,$underscore5577],[],$elidedFrames5581);\n}\nreturn $ans5578;\n};\nvar anf_arg2531 = R.mF($temp_lam5575,\"for-body<line 2291, column 11>\");\n$step5567 = 2;\n$al5571 = L[1948];\n// omitting isFunction check;\n$ans5570 = map_n9.app(anf_arg2531,(1),values5569);\nbreak;\ncase 2: var labels5586 = $ans5570;\nvar anf_fun2532 = labeled$box$plot$from$list5585.$var === D?U(L[1951],\"labeled-box-plot-from-list\"):labeled$box$plot$from$list5585.$var;\n$step5567 = 3;\n$al5571 = L[1953];\nif(typeof(anf_fun2532.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5571,anf_fun2532);\n}\n$ans5570 = anf_fun2532.app(labels5586,values5569);\nbreak;\ncase 3: var ann_check_temp5587 = $ans5570;\n$step5567 = 4;\n$al5571 = L[1952];\nvar $ann$check5588 = R._cA(L[1952],DataSeries4507,ann_check_temp5587);\nif(R.isContinuation($ann$check5588)) {\n$ans5570 = $ann$check5588;\n}\nbreak;\ncase 4: $step5567 = 5;\n$ans5570 = ann_check_temp5587;\nbreak;\ncase 5: ++R.GAS;\nreturn $ans5570;\ndefault: R.ffi.throwSpinnakerError(L[1947],$step5567);\n}\n}\nif($step5567 !== 5) {\n$ans5570.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5571,$temp_lam5568,$step5567,[values5569],[ann_check_temp5587],$elidedFrames5573);\n}\nreturn $ans5570;\n};\nvar anf_assign5591 = R.mF($temp_lam5568,\"box-plot-from-list\");\nbox$plot$from$list5592.$var = anf_assign5591;\nR.nothing;\nvar $temp_lam5594 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1955($labels5595,$values5596) {\nvar $step5593 = 0;\nvar $elidedFrames5600 = 0;\nvar $ans5597 = D;\nvar $al5598 = L[1955];\nif(R.isAR($labels5595)) {\n$step5593 = $labels5595.step;\n$al5598 = $labels5595.from;\n$ans5597 = $labels5595.ans;\n$elidedFrames5600 = $labels5595.elidedFrames;\nlabels5595 = $labels5595.args[0];\nvalues5596 = $labels5595.args[1];\nann_check_temp5693 = $labels5595.vars[0];\nmax$height5671 = $labels5595.vars[1];\nanf_extend5682 = $labels5595.vars[2];\nmin$height5672 = $labels5595.vars[3];\nlabel$length5601 = $labels5595.vars[4];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1955],2,$t,false);\n}\nvar labels5595 = $labels5595;\nvar values5596 = $values5596;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5597 = R.mC();\n}\nwhile(!R.isContinuation($ans5597)) {\nswitch($step5593) {\ncase 0: $step5593 = 1;\n$al5598 = L[1989];\nvar $ann$check5698 = R._cA(L[1989],R.gDA(L[1989],\"CL\",CL40.dict.types,\"LoS\"),labels5595);\nif(R.isContinuation($ann$check5698)) {\n$ans5597 = $ann$check5698;\n}\nbreak;\ncase 1: $step5593 = 2;\n$al5598 = L[1990];\nvar $ann$check5699 = R._cA(L[1990],R.gDA(L[1990],\"CL\",CL40.dict.types,\"LoLoN\"),values5596);\nif(R.isContinuation($ann$check5699)) {\n$ans5597 = $ann$check5699;\n}\nbreak;\ncase 2: $step5593 = 3;\n$ans5597 = R.maybeMethodCall0(labels5595,\"length\",L[1956]);\nbreak;\ncase 3: var label$length5601 = $ans5597;\n$step5593 = 4;\n$ans5597 = R.maybeMethodCall0(values5596,\"length\",L[1957]);\nbreak;\ncase 4: var value$length5602 = $ans5597;\n$step5593 = 5;\n$al5598 = L[1988];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5598,equal$always1);\n}\n$ans5597 = equal$always1.app(label$length5601,value$length5602);\nbreak;\ncase 5: var anf_arg5603 = $ans5597;\n$ans5597 = R.not(anf_arg5603);\nvar anf_if5697 = $ans5597;\n$step5593 = R.checkPyretTrue(anf_if5697)?6:8;\nbreak;\ncase 6: $step5593 = 7;\n$al5598 = L[1987];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5598,raise1);\n}\n$ans5597 = raise1.app((\"labeled-box-plot: labels and values should have the same length\"));\nbreak;\ncase 7: $step5593 = 9;\n$ans5597 = nothing5;\nbreak;\ncase 8: $step5593 = 9;\n$ans5597 = nothing5;\nbreak;\ncase 9: $step5593 = 10;\n$al5598 = L[1986];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5598,equal$always1);\n}\n$ans5597 = equal$always1.app(label$length5601,(0));\nbreak;\ncase 10: var anf_if5696 = $ans5597;\n$step5593 = R.checkPyretTrue(anf_if5696)?11:13;\nbreak;\ncase 11: $step5593 = 12;\n$al5598 = L[1985];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5598,raise1);\n}\n$ans5597 = raise1.app((\"labeled-box-plot: expect at least one box\"));\nbreak;\ncase 12: $step5593 = 14;\n$ans5597 = nothing5;\nbreak;\ncase 13: $step5593 = 14;\n$ans5597 = nothing5;\nbreak;\ncase 14: var $temp_lam5605 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1958($recv_5606) {\nvar $step5604 = 0;\nvar $elidedFrames5610 = 0;\nvar $ans5607 = D;\nvar $al5608 = L[1958];\nif(R.isAR($recv_5606)) {\n$step5604 = $recv_5606.step;\n$al5608 = $recv_5606.from;\n$ans5607 = $recv_5606.ans;\n$elidedFrames5610 = $recv_5606.elidedFrames;\nrecv_5606 = $recv_5606.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1958],1,$t,false);\n}\nvar recv_5606 = $recv_5606;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5607 = R.mC();\n}\nwhile(!R.isContinuation($ans5607)) {\nswitch($step5604) {\ncase 0: $step5604 = 1;\n$ans5607 = R.maybeMethodCall1(recv_5606,\"each\",L[1958],check$num588.$var);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans5607;\ndefault: R.ffi.throwSpinnakerError(L[1958],$step5604);\n}\n}\nif($step5604 !== 1) {\n$ans5607.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5608,$temp_lam5605,$step5604,[recv_5606],[],$elidedFrames5610);\n}\nreturn $ans5607;\n};\nvar anf_arg5612 = R.mF($temp_lam5605,\"\");\n$step5593 = 15;\n$ans5597 = R.maybeMethodCall1(values5596,\"each\",L[1959],anf_arg5612);\nbreak;\ncase 15: var $temp_lam5614 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1960($lst5615) {\nvar $step5613 = 0;\nvar $elidedFrames5619 = 0;\nvar $ans5616 = D;\nvar $al5617 = L[1960];\nif(R.isAR($lst5615)) {\n$step5613 = $lst5615.step;\n$al5617 = $lst5615.from;\n$ans5616 = $lst5615.ans;\n$elidedFrames5619 = $lst5615.elidedFrames;\nlst5615 = $lst5615.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1960],1,$t,false);\n}\nvar lst5615 = $lst5615;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5616 = R.mC();\n}\nwhile(!R.isContinuation($ans5616)) {\nswitch($step5613) {\ncase 0: $step5613 = 1;\n$ans5616 = R.maybeMethodCall0(lst5615,\"length\",L[1961]);\nbreak;\ncase 1: var anf_arg2538 = $ans5616;\n$step5613 = 2;\n$al5617 = L[1963];\n// omitting isFunction check;\n$ans5616 = _lessequal4.app(anf_arg2538,(1));\nbreak;\ncase 2: var anf_if5620 = $ans5616;\n$step5613 = R.checkPyretTrue(anf_if5620)?3:5;\nbreak;\ncase 3: $step5613 = 4;\n$al5617 = L[1962];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5617,raise1);\n}\n$ans5616 = raise1.app((\"labeled-box-plot: the list length should be at least 2\"));\nbreak;\ncase 4: $step5613 = 6;\n$ans5616 = nothing5;\nbreak;\ncase 5: $step5613 = 6;\n$ans5616 = nothing5;\nbreak;\ncase 6: ++R.GAS;\nreturn $ans5616;\ndefault: R.ffi.throwSpinnakerError(L[1960],$step5613);\n}\n}\nif($step5613 !== 6) {\n$ans5616.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5617,$temp_lam5614,$step5613,[lst5615],[],$elidedFrames5619);\n}\nreturn $ans5616;\n};\nvar anf_arg2540 = R.mF($temp_lam5614,\"\");\n$step5593 = 16;\n$ans5597 = R.maybeMethodCall1(values5596,\"each\",L[1964],anf_arg2540);\nbreak;\ncase 16: $step5593 = 17;\n$ans5597 = R.maybeMethodCall1(labels5595,\"each\",L[1965],check$string604.$var);\nbreak;\ncase 17: var $temp_lam5623 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1966($cur5624,$lst5625) {\nvar $step5622 = 0;\nvar $elidedFrames5629 = 0;\nvar $ans5626 = D;\nvar $al5627 = L[1966];\nif(R.isAR($cur5624)) {\n$step5622 = $cur5624.step;\n$al5627 = $cur5624.from;\n$ans5626 = $cur5624.ans;\n$elidedFrames5629 = $cur5624.elidedFrames;\ncur5624 = $cur5624.args[0];\nlst5625 = $cur5624.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1966],2,$t,false);\n}\nvar cur5624 = $cur5624;\nvar lst5625 = $lst5625;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5626 = R.mC();\n}\nwhile(!R.isContinuation($ans5626)) {\nswitch($step5622) {\ncase 0: $al5627 = L[1967];\nvar anf_method_obj5630 = G(lst5625,\"rest\",L[1967]);\n$al5627 = L[1968];\nvar anf_arg5631 = G(lst5625,\"first\",L[1968]);\n$step5622 = 1;\n$ans5626 = R.maybeMethodCall2(anf_method_obj5630,\"foldl\",L[1969],num$max18,anf_arg5631);\nbreak;\ncase 1: var anf_arg5632 = $ans5626;\n// caller optimization;\n$ans5626 = num$max18.app(anf_arg5632,cur5624);\n$step5622 = 2;\nbreak;\ncase 2: ++R.GAS;\nreturn $ans5626;\ndefault: R.ffi.throwSpinnakerError(L[1966],$step5622);\n}\n}\nif($step5622 !== 2) {\n$ans5626.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5627,$temp_lam5623,$step5622,[cur5624,lst5625],[],$elidedFrames5629);\n}\nreturn $ans5626;\n};\nvar anf_arg5637 = R.mF($temp_lam5623,\"for-body<line 2320, column 15>\");\n$al5598 = L[1970];\nvar anf_bracket5635 = G(values5596,\"first\",L[1970]);\n$al5598 = L[1971];\nvar anf_arg2571 = G(anf_bracket5635,\"first\",L[1971]);\n$step5593 = 18;\n$al5598 = L[1966];\n// omitting isFunction check;\n$ans5597 = fold24.app(anf_arg5637,anf_arg2571,values5596);\nbreak;\ncase 18: var max$height5671 = $ans5597;\nvar $temp_lam5639 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1972($cur5640,$lst5641) {\nvar $step5638 = 0;\nvar $elidedFrames5645 = 0;\nvar $ans5642 = D;\nvar $al5643 = L[1972];\nif(R.isAR($cur5640)) {\n$step5638 = $cur5640.step;\n$al5643 = $cur5640.from;\n$ans5642 = $cur5640.ans;\n$elidedFrames5645 = $cur5640.elidedFrames;\ncur5640 = $cur5640.args[0];\nlst5641 = $cur5640.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1972],2,$t,false);\n}\nvar cur5640 = $cur5640;\nvar lst5641 = $lst5641;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5642 = R.mC();\n}\nwhile(!R.isContinuation($ans5642)) {\nswitch($step5638) {\ncase 0: $al5643 = L[1973];\nvar anf_method_obj5646 = G(lst5641,\"rest\",L[1973]);\n$al5643 = L[1974];\nvar anf_arg2576 = G(lst5641,\"first\",L[1974]);\n$step5638 = 1;\n$ans5642 = R.maybeMethodCall2(anf_method_obj5646,\"foldl\",L[1975],num$min2,anf_arg2576);\nbreak;\ncase 1: var anf_arg2573 = $ans5642;\n// caller optimization;\n$ans5642 = num$max18.app(anf_arg2573,cur5640);\n$step5638 = 2;\nbreak;\ncase 2: ++R.GAS;\nreturn $ans5642;\ndefault: R.ffi.throwSpinnakerError(L[1972],$step5638);\n}\n}\nif($step5638 !== 2) {\n$ans5642.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5643,$temp_lam5639,$step5638,[cur5640,lst5641],[],$elidedFrames5645);\n}\nreturn $ans5642;\n};\nvar anf_arg2574 = R.mF($temp_lam5639,\"for-body<line 2323, column 15>\");\n$al5598 = L[1976];\nvar anf_bracket5648 = G(values5596,\"first\",L[1976]);\n$al5598 = L[1977];\nvar anf_arg2578 = G(anf_bracket5648,\"first\",L[1977]);\n$step5593 = 19;\n$al5598 = L[1972];\n// omitting isFunction check;\n$ans5597 = fold24.app(anf_arg2574,anf_arg2578,values5596);\nbreak;\ncase 19: var min$height5672 = $ans5597;\n$step5593 = 20;\n$al5598 = L[1984];\n// omitting isFunction check;\n$ans5597 = map226.app(get$box$data1866.$var,labels5595,values5596);\nbreak;\ncase 20: var anf_arg5670 = $ans5597;\n$step5593 = 21;\n$ans5597 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[1978],anf_arg5670);\nbreak;\ncase 21: var anf_extend5682 = $ans5597;\n$step5593 = 22;\n$al5598 = L[1983];\n// omitting isFunction check;\n$ans5597 = _minus12.app(max$height5671,min$height5672);\nbreak;\ncase 22: var anf_arg2581 = $ans5597;\n$step5593 = 23;\n$al5598 = L[1982];\n// omitting isFunction check;\n$ans5597 = _divide16.app(anf_arg2581,(5));\nbreak;\ncase 23: var anf_arg5680 = $ans5597;\n$step5593 = 24;\n$al5598 = L[1981];\n// omitting isFunction check;\n$ans5597 = _plus5.app(max$height5671,anf_arg5680);\nbreak;\ncase 24: var anf_arg2583 = $ans5597;\n// caller optimization;\n$ans5597 = num$ceiling14.app(anf_arg2583);\nvar anf_extend5683 = $ans5597;\nvar anf_arg5692 = R.extendObj(L[1979],default$box$plot$series5681,{\"tab\":anf_extend5682,\n\"height\":anf_extend5683,\n\"values\":values5596});\n// caller optimization;\n$ans5597 = box$plot$series3954.$var.app(anf_arg5692);\nvar ann_check_temp5693 = $ans5597;\n$step5593 = 25;\n$al5598 = L[1980];\nvar $ann$check5694 = R._cA(L[1980],DataSeries4507,ann_check_temp5693);\nif(R.isContinuation($ann$check5694)) {\n$ans5597 = $ann$check5694;\n}\nbreak;\ncase 25: $step5593 = 26;\n$ans5597 = ann_check_temp5693;\nbreak;\ncase 26: ++R.GAS;\nreturn $ans5597;\ndefault: R.ffi.throwSpinnakerError(L[1955],$step5593);\n}\n}\nif($step5593 !== 26) {\n$ans5597.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5598,$temp_lam5594,$step5593,[labels5595,values5596],[ann_check_temp5693,max$height5671,anf_extend5682,min$height5672,label$length5601],$elidedFrames5600);\n}\nreturn $ans5597;\n};\nvar anf_assign5701 = R.mF($temp_lam5594,\"labeled-box-plot-from-list\");\nlabeled$box$plot$from$list5585.$var = anf_assign5701;\nR.nothing;\nvar $temp_lam5703 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1991($label5704) {\nvar $step5702 = 0;\nvar $elidedFrames5708 = 0;\nvar $ans5705 = D;\nvar $al5706 = L[1991];\nif(R.isAR($label5704)) {\n$step5702 = $label5704.step;\n$al5706 = $label5704.from;\n$ans5705 = $label5704.ans;\n$elidedFrames5708 = $label5704.elidedFrames;\nlabel5704 = $label5704.args[0];\nanf_arg5721 = $label5704.vars[0];\nann_check_temp5742 = $label5704.vars[1];\nanf_arg2622 = $label5704.vars[2];\ntup4814 = $label5704.vars[3];\nvs5741 = $label5704.vars[4];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1991],1,$t,false);\n}\nvar label5704 = $label5704;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5705 = R.mC();\n}\nwhile(!R.isContinuation($ans5705)) {\nswitch($step5702) {\ncase 0: $step5702 = 1;\n$al5706 = L[2015];\nvar $ann$check5745 = R._cA(L[2015],R.gDA(L[2015],\"CL\",CL40.dict.types,\"LoS\"),label5704);\nif(R.isContinuation($ann$check5745)) {\n$ans5705 = $ann$check5745;\n}\nbreak;\ncase 1: var $temp_lam5710 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1992($prev5711,$e5712) {\nvar $step5709 = 0;\nvar $elidedFrames5716 = 0;\nvar $ans5713 = D;\nvar $al5714 = L[1992];\nif(R.isAR($prev5711)) {\n$step5709 = $prev5711.step;\n$al5714 = $prev5711.from;\n$ans5713 = $prev5711.ans;\n$elidedFrames5716 = $prev5711.elidedFrames;\nprev5711 = $prev5711.args[0];\ne5712 = $prev5711.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1992],2,$t,false);\n}\nvar prev5711 = $prev5711;\nvar e5712 = $e5712;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5713 = R.mC();\n}\nwhile(!R.isContinuation($ans5713)) {\nswitch($step5709) {\ncase 0: $step5709 = 1;\n$ans5713 = R.maybeMethodCall1(prev5711,\"get\",L[1993],e5712);\nbreak;\ncase 1: var anf_method_obj5717 = $ans5713;\n$step5709 = 2;\n$ans5713 = R.maybeMethodCall1(anf_method_obj5717,\"or-else\",L[1994],(0));\nbreak;\ncase 2: var anf_arg2589 = $ans5713;\n$step5709 = 3;\n$al5714 = L[1996];\n// omitting isFunction check;\n$ans5713 = _plus5.app(anf_arg2589,(1));\nbreak;\ncase 3: var anf_arg2439 = $ans5713;\n$step5709 = 4;\n$ans5713 = R.maybeMethodCall2(prev5711,\"set\",L[1995],e5712,anf_arg2439);\nbreak;\ncase 4: ++R.GAS;\nreturn $ans5713;\ndefault: R.ffi.throwSpinnakerError(L[1992],$step5709);\n}\n}\nif($step5709 !== 4) {\n$ans5713.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5714,$temp_lam5710,$step5709,[prev5711,e5712],[],$elidedFrames5716);\n}\nreturn $ans5713;\n};\nvar anf_arg5721 = R.mF($temp_lam5710,\"for-body<line 2335, column 9>\");\n$ans5705 = R.getMaker0(SD51.dict.values.dict[\"string-dict\"],(\"make0\"),L[1997],L[1998]);\nvar anf_fun2656 = $ans5705;\n$step5702 = 2;\n$al5706 = L[1998];\nif(typeof(anf_fun2656.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5706,anf_fun2656);\n}\n$ans5705 = anf_fun2656.app();\nbreak;\ncase 2: var anf_arg5722 = $ans5705;\n$step5702 = 3;\n$al5706 = L[1992];\n// omitting isFunction check;\n$ans5705 = fold24.app(anf_arg5721,anf_arg5722,label5704);\nbreak;\ncase 3: var dict5733 = $ans5705;\nvar $temp_lam5724 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__1999($tup4404,$e5725) {\nvar $step5723 = 0;\nvar $elidedFrames5729 = 0;\nvar $ans5726 = D;\nvar $al5727 = L[1999];\nif(R.isAR($tup4404)) {\n$step5723 = $tup4404.step;\n$al5727 = $tup4404.from;\n$ans5726 = $tup4404.ans;\n$elidedFrames5729 = $tup4404.elidedFrames;\ntup4404 = $tup4404.args[0];\ne5725 = $tup4404.args[1];\nls5731 = $tup4404.vars[0];\nvs5732 = $tup4404.vars[1];\nseen5730 = $tup4404.vars[2];\nanf_tuple_fields5734 = $tup4404.vars[3];\nanf_tuple_fields5735 = $tup4404.vars[4];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1999],2,$t,false);\n}\nvar tup4404 = $tup4404;\nvar e5725 = $e5725;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5726 = R.mC();\n}\nwhile(!R.isContinuation($ans5726)) {\nswitch($step5723) {\ncase 0: $step5723 = 1;\n$al5727 = L[2006];\nR.checkTupleBind(tup4404,3,L[2006]);\nbreak;\ncase 1: var ls5731 = R.getTuple(tup4404,0,L[2000]);\nvar vs5732 = R.getTuple(tup4404,1,L[2001]);\nvar seen5730 = R.getTuple(tup4404,2,L[2002]);\n$step5723 = 2;\n$ans5726 = R.maybeMethodCall1(seen5730,\"member\",L[2003],e5725);\nbreak;\ncase 2: var anf_if5737 = $ans5726;\n$step5723 = R.checkPyretTrue(anf_if5737)?3:4;\nbreak;\ncase 3: $step5723 = 7;\n$ans5726 = R.makeTuple([ls5731,vs5732,seen5730]);\nbreak;\ncase 4: // caller optimization;\n$ans5726 = link5.app(e5725,ls5731);\nvar anf_tuple_fields5734 = $ans5726;\n$step5723 = 5;\n$ans5726 = R.maybeMethodCall1(dict5733,\"get-value\",L[2004],e5725);\nbreak;\ncase 5: var anf_arg2617 = $ans5726;\n// caller optimization;\n$ans5726 = link5.app(anf_arg2617,vs5732);\nvar anf_tuple_fields5735 = $ans5726;\n$step5723 = 6;\n$ans5726 = R.maybeMethodCall1(seen5730,\"add\",L[2005],e5725);\nbreak;\ncase 6: var anf_tuple_fields5736 = $ans5726;\n$step5723 = 7;\n$ans5726 = R.makeTuple([anf_tuple_fields5734,anf_tuple_fields5735,anf_tuple_fields5736]);\nbreak;\ncase 7: ++R.GAS;\nreturn $ans5726;\ndefault: R.ffi.throwSpinnakerError(L[1999],$step5723);\n}\n}\nif($step5723 !== 7) {\n$ans5726.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5727,$temp_lam5724,$step5723,[tup4404,e5725],[ls5731,vs5732,seen5730,anf_tuple_fields5734,anf_tuple_fields5735],$elidedFrames5729);\n}\nreturn $ans5726;\n};\nvar anf_arg2620 = R.mF($temp_lam5724,\"for-body<line 2338, column 16>\");\nvar anf_arg5739 = R.makeTuple([empty18,empty18,S49.dict.values.dict[\"empty-tree-set\"]]);\n$step5702 = 4;\n$al5706 = L[1999];\n// omitting isFunction check;\n$ans5705 = fold24.app(anf_arg2620,anf_arg5739,label5704);\nbreak;\ncase 4: var tup4814 = $ans5705;\n$step5702 = 5;\n$al5706 = L[2014];\nR.checkTupleBind(tup4814,3,L[2014]);\nbreak;\ncase 5: var ls5740 = R.getTuple(tup4814,0,L[2007]);\nvar vs5741 = R.getTuple(tup4814,1,L[2008]);\nR.getTuple(tup4814,2,L[2009]);\n$step5702 = 6;\n$ans5705 = R.maybeMethodCall0(ls5740,\"reverse\",L[2010]);\nbreak;\ncase 6: var anf_arg2622 = $ans5705;\n$step5702 = 7;\n$ans5705 = R.maybeMethodCall0(vs5741,\"reverse\",L[2011]);\nbreak;\ncase 7: var anf_arg2623 = $ans5705;\n$step5702 = 8;\n$al5706 = L[2013];\n// omitting isFunction check;\n$ans5705 = bar$chart$from$list4953.$var.app(anf_arg2622,anf_arg2623);\nbreak;\ncase 8: var ann_check_temp5742 = $ans5705;\n$step5702 = 9;\n$al5706 = L[2012];\nvar $ann$check5743 = R._cA(L[2012],DataSeries4507,ann_check_temp5742);\nif(R.isContinuation($ann$check5743)) {\n$ans5705 = $ann$check5743;\n}\nbreak;\ncase 9: $step5702 = 10;\n$ans5705 = ann_check_temp5742;\nbreak;\ncase 10: ++R.GAS;\nreturn $ans5705;\ndefault: R.ffi.throwSpinnakerError(L[1991],$step5702);\n}\n}\nif($step5702 !== 10) {\n$ans5705.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5706,$temp_lam5703,$step5702,[label5704],[anf_arg5721,ann_check_temp5742,anf_arg2622,tup4814,vs5741],$elidedFrames5708);\n}\nreturn $ans5705;\n};\nvar anf_assign5747 = R.mF($temp_lam5703,\"freq-bar-chart-from-list\");\nfreq$bar$chart$from$list5748.$var = anf_assign5747;\nR.nothing;\nvar $temp_lam5750 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2016($values5751) {\nvar $step5749 = 0;\nvar $elidedFrames5755 = 0;\nvar $ans5752 = D;\nvar $al5753 = L[2016];\nif(R.isAR($values5751)) {\n$step5749 = $values5751.step;\n$al5753 = $values5751.from;\n$ans5752 = $values5751.ans;\n$elidedFrames5755 = $values5751.elidedFrames;\nvalues5751 = $values5751.args[0];\nann_check_temp5767 = $values5751.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2016],1,$t,false);\n}\nvar values5751 = $values5751;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5752 = R.mC();\n}\nwhile(!R.isContinuation($ans5752)) {\nswitch($step5749) {\ncase 0: $step5749 = 1;\n$al5753 = L[2023];\nvar $ann$check5769 = R._cA(L[2023],R.gDA(L[2023],\"CL\",CL40.dict.types,\"LoN\"),values5751);\nif(R.isContinuation($ann$check5769)) {\n$ans5752 = $ann$check5769;\n}\nbreak;\ncase 1: $step5749 = 2;\n$ans5752 = R.maybeMethodCall1(values5751,\"each\",L[2017],check$num588.$var);\nbreak;\ncase 2: var $temp_lam5757 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2018($$underscore5758) {\nvar $step5756 = 0;\nvar $elidedFrames5762 = 0;\nvar $ans5759 = D;\nvar $al5760 = L[2018];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2018],1,$t,false);\n}\nvar $underscore5758 = $$underscore5758;\n// callee optimization;\nwhile(!R.isContinuation($ans5759)) {\nswitch($step5756) {\ncase 0: $step5756 = 1;\n$ans5759 = (\"\");\nbreak;\ncase 1: return $ans5759;\ndefault: R.ffi.throwSpinnakerError(L[2018],$step5756);\n}\n}\nreturn $ans5759;\n};\nvar anf_arg2626 = R.mF($temp_lam5757,\"\");\n$step5749 = 3;\n$ans5752 = R.maybeMethodCall1(values5751,\"map\",L[2019],anf_arg2626);\nbreak;\ncase 3: var anf_arg5764 = $ans5752;\n$step5749 = 4;\n$al5753 = L[2022];\n// omitting isFunction check;\n$ans5752 = to$table2768.$var.app(anf_arg5764,values5751);\nbreak;\ncase 4: var anf_extend5766 = $ans5752;\nvar anf_arg2628 = R.extendObj(L[2020],default$histogram$series5765,{\"tab\":anf_extend5766});\n// caller optimization;\n$ans5752 = histogram$series3974.$var.app(anf_arg2628);\nvar ann_check_temp5767 = $ans5752;\n$step5749 = 5;\n$al5753 = L[2021];\nvar $ann$check5768 = R._cA(L[2021],DataSeries4507,ann_check_temp5767);\nif(R.isContinuation($ann$check5768)) {\n$ans5752 = $ann$check5768;\n}\nbreak;\ncase 5: $step5749 = 6;\n$ans5752 = ann_check_temp5767;\nbreak;\ncase 6: ++R.GAS;\nreturn $ans5752;\ndefault: R.ffi.throwSpinnakerError(L[2016],$step5749);\n}\n}\nif($step5749 !== 6) {\n$ans5752.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5753,$temp_lam5750,$step5749,[values5751],[ann_check_temp5767],$elidedFrames5755);\n}\nreturn $ans5752;\n};\nvar anf_assign5771 = R.mF($temp_lam5750,\"histogram-from-list\");\nhistogram$from$list5772.$var = anf_assign5771;\nR.nothing;\nvar $temp_lam5774 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2024($labels5775,$values5776) {\nvar $step5773 = 0;\nvar $elidedFrames5780 = 0;\nvar $ans5777 = D;\nvar $al5778 = L[2024];\nif(R.isAR($labels5775)) {\n$step5773 = $labels5775.step;\n$al5778 = $labels5775.from;\n$ans5777 = $labels5775.ans;\n$elidedFrames5780 = $labels5775.elidedFrames;\nlabels5775 = $labels5775.args[0];\nvalues5776 = $labels5775.args[1];\nann_check_temp5785 = $labels5775.vars[0];\nlabel$length5781 = $labels5775.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2024],2,$t,false);\n}\nvar labels5775 = $labels5775;\nvar values5776 = $values5776;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5777 = R.mC();\n}\nwhile(!R.isContinuation($ans5777)) {\nswitch($step5773) {\ncase 0: $step5773 = 1;\n$al5778 = L[2034];\nvar $ann$check5788 = R._cA(L[2034],R.gDA(L[2034],\"CL\",CL40.dict.types,\"LoS\"),labels5775);\nif(R.isContinuation($ann$check5788)) {\n$ans5777 = $ann$check5788;\n}\nbreak;\ncase 1: $step5773 = 2;\n$al5778 = L[2035];\nvar $ann$check5790 = R._cA(L[2035],R.gDA(L[2035],\"CL\",CL40.dict.types,\"LoN\"),values5776);\nif(R.isContinuation($ann$check5790)) {\n$ans5777 = $ann$check5790;\n}\nbreak;\ncase 2: $step5773 = 3;\n$ans5777 = R.maybeMethodCall0(labels5775,\"length\",L[2025]);\nbreak;\ncase 3: var label$length5781 = $ans5777;\n$step5773 = 4;\n$ans5777 = R.maybeMethodCall0(values5776,\"length\",L[2026]);\nbreak;\ncase 4: var value$length5782 = $ans5777;\n$step5773 = 5;\n$al5778 = L[2033];\nif(typeof(equal$always1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5778,equal$always1);\n}\n$ans5777 = equal$always1.app(label$length5781,value$length5782);\nbreak;\ncase 5: var anf_arg2654 = $ans5777;\n$ans5777 = R.not(anf_arg2654);\nvar anf_if5787 = $ans5777;\n$step5773 = R.checkPyretTrue(anf_if5787)?6:8;\nbreak;\ncase 6: $step5773 = 7;\n$al5778 = L[2032];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5778,raise1);\n}\n$ans5777 = raise1.app((\"labeled-histogram: labels and values should have the same length\"));\nbreak;\ncase 7: $step5773 = 9;\n$ans5777 = nothing5;\nbreak;\ncase 8: $step5773 = 9;\n$ans5777 = nothing5;\nbreak;\ncase 9: $step5773 = 10;\n$ans5777 = R.maybeMethodCall1(values5776,\"each\",L[2027],check$num588.$var);\nbreak;\ncase 10: $step5773 = 11;\n$ans5777 = R.maybeMethodCall1(labels5775,\"each\",L[2028],check$string604.$var);\nbreak;\ncase 11: $step5773 = 12;\n$al5778 = L[2031];\n// omitting isFunction check;\n$ans5777 = to$table2768.$var.app(labels5775,values5776);\nbreak;\ncase 12: var anf_extend5783 = $ans5777;\nvar anf_arg5784 = R.extendObj(L[2029],default$histogram$series5765,{\"tab\":anf_extend5783});\n// caller optimization;\n$ans5777 = histogram$series3974.$var.app(anf_arg5784);\nvar ann_check_temp5785 = $ans5777;\n$step5773 = 13;\n$al5778 = L[2030];\nvar $ann$check5786 = R._cA(L[2030],DataSeries4507,ann_check_temp5785);\nif(R.isContinuation($ann$check5786)) {\n$ans5777 = $ann$check5786;\n}\nbreak;\ncase 13: $step5773 = 14;\n$ans5777 = ann_check_temp5785;\nbreak;\ncase 14: ++R.GAS;\nreturn $ans5777;\ndefault: R.ffi.throwSpinnakerError(L[2024],$step5773);\n}\n}\nif($step5773 !== 14) {\n$ans5777.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5778,$temp_lam5774,$step5773,[labels5775,values5776],[ann_check_temp5785,label$length5781],$elidedFrames5780);\n}\nreturn $ans5777;\n};\nvar anf_assign5792 = R.mF($temp_lam5774,\"labeled-histogram-from-list\");\nlabeled$histogram$from$list5793.$var = anf_assign5792;\nR.nothing;\nvar $temp_lam5795 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2036($images5796,$values5797) {\nvar $step5794 = 0;\nvar $elidedFrames5801 = 0;\nvar $ans5798 = D;\nvar $al5799 = L[2036];\nif(R.isAR($images5796)) {\n$step5794 = $images5796.step;\n$al5799 = $images5796.from;\n$ans5798 = $images5796.ans;\n$elidedFrames5801 = $images5796.elidedFrames;\nimages5796 = $images5796.args[0];\nvalues5797 = $images5796.args[1];\nann_check_temp5813 = $images5796.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2036],2,$t,false);\n}\nvar images5796 = $images5796;\nvar values5797 = $values5797;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5798 = R.mC();\n}\nwhile(!R.isContinuation($ans5798)) {\nswitch($step5794) {\ncase 0: $step5794 = 1;\n$al5799 = L[2044];\nvar $ann$check5815 = R._cA(L[2044],R.gDA(L[2044],\"CL\",CL40.dict.types,\"LoI\"),images5796);\nif(R.isContinuation($ann$check5815)) {\n$ans5798 = $ann$check5815;\n}\nbreak;\ncase 1: $step5794 = 2;\n$al5799 = L[2045];\nvar $ann$check5816 = R._cA(L[2045],R.gDA(L[2045],\"CL\",CL40.dict.types,\"LoN\"),values5797);\nif(R.isContinuation($ann$check5816)) {\n$ans5798 = $ann$check5816;\n}\nbreak;\ncase 2: $step5794 = 3;\n$ans5798 = R.maybeMethodCall1(images5796,\"each\",L[2037],check$image619.$var);\nbreak;\ncase 3: $step5794 = 4;\n$ans5798 = R.maybeMethodCall1(values5797,\"each\",L[2038],check$num588.$var);\nbreak;\ncase 4: var $temp_lam5804 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2039($$underscore5805) {\nvar $step5803 = 0;\nvar $elidedFrames5809 = 0;\nvar $ans5806 = D;\nvar $al5807 = L[2039];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2039],1,$t,false);\n}\nvar $underscore5805 = $$underscore5805;\n// callee optimization;\nwhile(!R.isContinuation($ans5806)) {\nswitch($step5803) {\ncase 0: $step5803 = 1;\n$ans5806 = (\"\");\nbreak;\ncase 1: return $ans5806;\ndefault: R.ffi.throwSpinnakerError(L[2039],$step5803);\n}\n}\nreturn $ans5806;\n};\nvar anf_arg2636 = R.mF($temp_lam5804,\"\");\n$step5794 = 5;\n$ans5798 = R.maybeMethodCall1(values5797,\"map\",L[2040],anf_arg2636);\nbreak;\ncase 5: var anf_arg2639 = $ans5798;\n$step5794 = 6;\n$al5799 = L[2043];\n// omitting isFunction check;\n$ans5798 = to$table3808.$var.app(anf_arg2639,values5797,images5796);\nbreak;\ncase 6: var anf_extend5811 = $ans5798;\nvar anf_arg5812 = R.extendObj(L[2041],default$histogram$series5765,{\"tab\":anf_extend5811});\n// caller optimization;\n$ans5798 = histogram$series3974.$var.app(anf_arg5812);\nvar ann_check_temp5813 = $ans5798;\n$step5794 = 7;\n$al5799 = L[2042];\nvar $ann$check5814 = R._cA(L[2042],DataSeries4507,ann_check_temp5813);\nif(R.isContinuation($ann$check5814)) {\n$ans5798 = $ann$check5814;\n}\nbreak;\ncase 7: $step5794 = 8;\n$ans5798 = ann_check_temp5813;\nbreak;\ncase 8: ++R.GAS;\nreturn $ans5798;\ndefault: R.ffi.throwSpinnakerError(L[2036],$step5794);\n}\n}\nif($step5794 !== 8) {\n$ans5798.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5799,$temp_lam5795,$step5794,[images5796,values5797],[ann_check_temp5813],$elidedFrames5801);\n}\nreturn $ans5798;\n};\nvar anf_assign5818 = R.mF($temp_lam5795,\"image-histogram-from-list\");\nimage$histogram$from$list5819.$var = anf_assign5818;\nR.nothing;\nvar $temp_lam5821 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2046($self4631) {\nvar $step5820 = 0;\nvar $elidedFrames5825 = 0;\nvar $ans5822 = D;\nvar $al5823 = L[2046];\nif(R.isAR($self4631)) {\n$step5820 = $self4631.step;\n$al5823 = $self4631.from;\n$ans5822 = $self4631.ans;\n$elidedFrames5825 = $self4631.elidedFrames;\nself4631 = $self4631.args[0];\ncases5826 = $self4631.vars[0];\nann_check_temp5827 = $self4631.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2046],1,$t,false);\n}\nvar self4631 = $self4631;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5822 = R.mC();\n}\nwhile(!R.isContinuation($ans5822)) {\nswitch($step5820) {\ncase 0: $al5823 = L[2047];\nvar cases5826 = G(self4631,\"x-min\",L[2047]);\n$step5820 = 1;\n$al5823 = L[2057];\nvar $ann$check5849 = R._cA(L[2057],Option27,cases5826);\nif(R.isContinuation($ann$check5849)) {\n$ans5822 = $ann$check5849;\n}\nbreak;\ncase 1: $al5823 = L[2056];\n$step5820 = $cases_dispatch5848[cases5826.$name] || 3;\nbreak;\ncase 2: if(cases5826.$arity !== 1) {\nif(cases5826.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2055],1,cases5826.$arity,L[2056],cases5826.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2055],true,L[2056],cases5826.$loc);\n}\n}\n$step5820 = 4;\n$al5823 = L[2055];\nvar $temp_branch5837 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2056($x$min5830) {\nvar $step5838 = 0;\nvar $elidedFrames5842 = 0;\nvar $ans5839 = D;\nvar $al5840 = L[2053];\nif(R.isAR($x$min5830)) {\n$step5838 = $x$min5830.step;\n$al5840 = $x$min5830.from;\n$ans5839 = $x$min5830.ans;\n$elidedFrames5842 = $x$min5830.elidedFrames;\nx$min5830 = $x$min5830.args[0];\ncases5829 = $x$min5830.vars[0];\n} else {\nvar x$min5830 = $x$min5830;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5839 = R.mC();\n}\nwhile(!R.isContinuation($ans5839)) {\nswitch($step5838) {\ncase 0: $al5840 = L[2049];\nvar cases5829 = G(self4631,\"x-max\",L[2049]);\n$step5838 = 1;\n$al5840 = L[2054];\nvar $ann$check5846 = R._cA(L[2054],Option27,cases5829);\nif(R.isContinuation($ann$check5846)) {\n$ans5839 = $ann$check5846;\n}\nbreak;\ncase 1: $al5840 = L[2053];\n$step5838 = $cases_dispatch5845[cases5829.$name] || 6;\nbreak;\ncase 2: if(cases5829.$arity !== 1) {\nif(cases5829.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2052],1,cases5829.$arity,L[2053],cases5829.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2052],true,L[2053],cases5829.$loc);\n}\n}\nvar $fn5844 = cases5829.$constructor.$fieldNames;\nvar x$max5831 = R.dF(cases5829.dict[$fn5844[0]],cases5829.$mut_fields_mask[0],false);\n$step5838 = 3;\n$al5840 = L[2051];\n// omitting isFunction check;\n$ans5839 = _greaterequal2.app(x$min5830,x$max5831);\nbreak;\ncase 3: var anf_if5832 = $ans5839;\n$step5838 = R.checkPyretTrue(anf_if5832)?4:5;\nbreak;\ncase 4: $step5838 = 7;\n$al5840 = L[2050];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5840,raise1);\n}\n$ans5839 = raise1.app((\"render: x-min must be strictly less than x-max\"));\nbreak;\ncase 5: $step5838 = 7;\n$ans5839 = nothing5;\nbreak;\ncase 6: $step5838 = 7;\n$ans5839 = nothing5;\nbreak;\ncase 7: ++R.GAS;\nreturn $ans5839;\ndefault: R.ffi.throwSpinnakerError(L[2053],$step5838);\n}\n}\nif($step5838 !== 7) {\n$ans5839.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5840,$temp_branch5837,$step5838,[x$min5830],[cases5829],$elidedFrames5842);\n}\nreturn $ans5839;\n};\n$ans5822 = cases5826.$app_fields($temp_branch5837,[false]);\nbreak;\ncase 3: $step5820 = 4;\n$ans5822 = nothing5;\nbreak;\ncase 4: var ann_check_temp5827 = $ans5822;\n$step5820 = 5;\n$al5823 = L[2048];\nvar $ann$check5828 = R._cA(L[2048],$type$Nothing1,ann_check_temp5827);\nif(R.isContinuation($ann$check5828)) {\n$ans5822 = $ann$check5828;\n}\nbreak;\ncase 5: $step5820 = 6;\n$ans5822 = ann_check_temp5827;\nbreak;\ncase 6: ++R.GAS;\nreturn $ans5822;\ndefault: R.ffi.throwSpinnakerError(L[2046],$step5820);\n}\n}\nif($step5820 !== 6) {\n$ans5822.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5823,$temp_lam5821,$step5820,[self4631],[cases5826,ann_check_temp5827],$elidedFrames5825);\n}\nreturn $ans5822;\n};\nvar anf_assign5852 = R.mF($temp_lam5821,\"check-render-x-axis\");\ncheck$render$x$axis5853.$var = anf_assign5852;\nR.nothing;\nvar $temp_lam5855 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2058($self5856) {\nvar $step5854 = 0;\nvar $elidedFrames5860 = 0;\nvar $ans5857 = D;\nvar $al5858 = L[2058];\nif(R.isAR($self5856)) {\n$step5854 = $self5856.step;\n$al5858 = $self5856.from;\n$ans5857 = $self5856.ans;\n$elidedFrames5860 = $self5856.elidedFrames;\nself5856 = $self5856.args[0];\ncases5861 = $self5856.vars[0];\nann_check_temp5862 = $self5856.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2058],1,$t,false);\n}\nvar self5856 = $self5856;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5857 = R.mC();\n}\nwhile(!R.isContinuation($ans5857)) {\nswitch($step5854) {\ncase 0: $al5858 = L[2059];\nvar cases5861 = G(self5856,\"y-min\",L[2059]);\n$step5854 = 1;\n$al5858 = L[2069];\nvar $ann$check5885 = R._cA(L[2069],Option27,cases5861);\nif(R.isContinuation($ann$check5885)) {\n$ans5857 = $ann$check5885;\n}\nbreak;\ncase 1: $al5858 = L[2068];\n$step5854 = $cases_dispatch5884[cases5861.$name] || 3;\nbreak;\ncase 2: if(cases5861.$arity !== 1) {\nif(cases5861.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2067],1,cases5861.$arity,L[2068],cases5861.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2067],true,L[2068],cases5861.$loc);\n}\n}\n$step5854 = 4;\n$al5858 = L[2067];\nvar $temp_branch5872 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2068($y$min5865) {\nvar $step5874 = 0;\nvar $elidedFrames5878 = 0;\nvar $ans5875 = D;\nvar $al5876 = L[2065];\nif(R.isAR($y$min5865)) {\n$step5874 = $y$min5865.step;\n$al5876 = $y$min5865.from;\n$ans5875 = $y$min5865.ans;\n$elidedFrames5878 = $y$min5865.elidedFrames;\ny$min5865 = $y$min5865.args[0];\ncases5864 = $y$min5865.vars[0];\n} else {\nvar y$min5865 = $y$min5865;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5875 = R.mC();\n}\nwhile(!R.isContinuation($ans5875)) {\nswitch($step5874) {\ncase 0: $al5876 = L[2061];\nvar cases5864 = G(self5856,\"y-max\",L[2061]);\n$step5874 = 1;\n$al5876 = L[2066];\nvar $ann$check5882 = R._cA(L[2066],Option27,cases5864);\nif(R.isContinuation($ann$check5882)) {\n$ans5875 = $ann$check5882;\n}\nbreak;\ncase 1: $al5876 = L[2065];\n$step5874 = $cases_dispatch5881[cases5864.$name] || 6;\nbreak;\ncase 2: if(cases5864.$arity !== 1) {\nif(cases5864.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2064],1,cases5864.$arity,L[2065],cases5864.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2064],true,L[2065],cases5864.$loc);\n}\n}\nvar $fn5880 = cases5864.$constructor.$fieldNames;\nvar y$max5866 = R.dF(cases5864.dict[$fn5880[0]],cases5864.$mut_fields_mask[0],false);\n$step5874 = 3;\n$al5876 = L[2063];\n// omitting isFunction check;\n$ans5875 = _greaterequal2.app(y$min5865,y$max5866);\nbreak;\ncase 3: var anf_if5867 = $ans5875;\n$step5874 = R.checkPyretTrue(anf_if5867)?4:5;\nbreak;\ncase 4: $step5874 = 7;\n$al5876 = L[2062];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5876,raise1);\n}\n$ans5875 = raise1.app((\"render: y-min must be strictly less than y-max\"));\nbreak;\ncase 5: $step5874 = 7;\n$ans5875 = nothing5;\nbreak;\ncase 6: $step5874 = 7;\n$ans5875 = nothing5;\nbreak;\ncase 7: ++R.GAS;\nreturn $ans5875;\ndefault: R.ffi.throwSpinnakerError(L[2065],$step5874);\n}\n}\nif($step5874 !== 7) {\n$ans5875.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5876,$temp_branch5872,$step5874,[y$min5865],[cases5864],$elidedFrames5878);\n}\nreturn $ans5875;\n};\n$ans5857 = cases5861.$app_fields($temp_branch5872,[false]);\nbreak;\ncase 3: $step5854 = 4;\n$ans5857 = nothing5;\nbreak;\ncase 4: var ann_check_temp5862 = $ans5857;\n$step5854 = 5;\n$al5858 = L[2060];\nvar $ann$check5863 = R._cA(L[2060],$type$Nothing1,ann_check_temp5862);\nif(R.isContinuation($ann$check5863)) {\n$ans5857 = $ann$check5863;\n}\nbreak;\ncase 5: $step5854 = 6;\n$ans5857 = ann_check_temp5862;\nbreak;\ncase 6: ++R.GAS;\nreturn $ans5857;\ndefault: R.ffi.throwSpinnakerError(L[2058],$step5854);\n}\n}\nif($step5854 !== 6) {\n$ans5857.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5858,$temp_lam5855,$step5854,[self5856],[cases5861,ann_check_temp5862],$elidedFrames5860);\n}\nreturn $ans5857;\n};\nvar anf_assign5887 = R.mF($temp_lam5855,\"check-render-y-axis\");\ncheck$render$y$axis5888.$var = anf_assign5887;\nR.nothing;\nvar $temp_lam5890 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2070($s5891) {\nvar $step5889 = 0;\nvar $elidedFrames5895 = 0;\nvar $ans5892 = D;\nvar $al5893 = L[2070];\nif(R.isAR($s5891)) {\n$step5889 = $s5891.step;\n$al5893 = $s5891.from;\n$ans5892 = $s5891.ans;\n$elidedFrames5895 = $s5891.elidedFrames;\ns5891 = $s5891.args[0];\nanf_fun5912 = $s5891.vars[0];\nanf_fun5902 = $s5891.vars[1];\nanf_fun5907 = $s5891.vars[2];\nanf_fun5918 = $s5891.vars[3];\nann_check_temp5897 = $s5891.vars[4];\ncases5896 = $s5891.vars[5];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2070],1,$t,false);\n}\nvar s5891 = $s5891;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5892 = R.mC();\n}\nwhile(!R.isContinuation($ans5892)) {\nswitch($step5889) {\ncase 0: $step5889 = 1;\n$al5893 = L[2127];\nR._cA(L[2127],DataSeries4507,s5891);\nbreak;\ncase 1: var cases5896 = s5891;\n$step5889 = 2;\n$al5893 = L[2126];\nvar $ann$check6031 = R._cA(L[2126],DataSeries4507,cases5896);\nif(R.isContinuation($ann$check6031)) {\n$ans5892 = $ann$check6031;\n}\nbreak;\ncase 2: $al5893 = L[2077];\n$step5889 = $cases_dispatch6030[cases5896.$name] || 18;\nbreak;\ncase 3: if(cases5896.$arity !== 1) {\nif(cases5896.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2076],1,cases5896.$arity,L[2077],cases5896.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2076],true,L[2077],cases5896.$loc);\n}\n}\nvar $fn5904 = cases5896.$constructor.$fieldNames;\nR.dF(cases5896.dict[$fn5904[0]],cases5896.$mut_fields_mask[0],false);\nvar anf_fun5902 = render$charts5900.$var === D?U(L[2072],\"render-charts\"):render$charts5900.$var;\n$ans5892 = R.getMaker1(list7,(\"make1\"),L[2073],L[2074]);\nvar anf_fun5901 = $ans5892;\n$step5889 = 4;\n$al5893 = L[2074];\nif(typeof(anf_fun5901.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5893,anf_fun5901);\n}\n$ans5892 = anf_fun5901.app(s5891);\nbreak;\ncase 4: var anf_arg2655 = $ans5892;\n$step5889 = 19;\n$al5893 = L[2075];\nif(typeof(anf_fun5902.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5893,anf_fun5902);\n}\n$ans5892 = anf_fun5902.app(anf_arg2655);\nbreak;\ncase 5: if(cases5896.$arity !== 1) {\nif(cases5896.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2082],1,cases5896.$arity,L[2077],cases5896.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2082],true,L[2077],cases5896.$loc);\n}\n}\nvar $fn5909 = cases5896.$constructor.$fieldNames;\nR.dF(cases5896.dict[$fn5909[0]],cases5896.$mut_fields_mask[0],false);\nvar anf_fun5907 = render$charts5900.$var === D?U(L[2078],\"render-charts\"):render$charts5900.$var;\n$ans5892 = R.getMaker1(list7,(\"make1\"),L[2079],L[2080]);\nvar anf_fun5906 = $ans5892;\n$step5889 = 6;\n$al5893 = L[2080];\nif(typeof(anf_fun5906.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5893,anf_fun5906);\n}\n$ans5892 = anf_fun5906.app(s5891);\nbreak;\ncase 6: var anf_arg2686 = $ans5892;\n$step5889 = 19;\n$al5893 = L[2081];\nif(typeof(anf_fun5907.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5893,anf_fun5907);\n}\n$ans5892 = anf_fun5907.app(anf_arg2686);\nbreak;\ncase 7: if(cases5896.$arity !== 1) {\nif(cases5896.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2087],1,cases5896.$arity,L[2077],cases5896.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2087],true,L[2077],cases5896.$loc);\n}\n}\nvar $fn5915 = cases5896.$constructor.$fieldNames;\nR.dF(cases5896.dict[$fn5915[0]],cases5896.$mut_fields_mask[0],false);\nvar anf_fun5912 = render$charts5900.$var === D?U(L[2083],\"render-charts\"):render$charts5900.$var;\n$ans5892 = R.getMaker1(list7,(\"make1\"),L[2084],L[2085]);\nvar anf_fun5911 = $ans5892;\n$step5889 = 8;\n$al5893 = L[2085];\nif(typeof(anf_fun5911.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5893,anf_fun5911);\n}\n$ans5892 = anf_fun5911.app(s5891);\nbreak;\ncase 8: var anf_arg5913 = $ans5892;\n$step5889 = 19;\n$al5893 = L[2086];\nif(typeof(anf_fun5912.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5893,anf_fun5912);\n}\n$ans5892 = anf_fun5912.app(anf_arg5913);\nbreak;\ncase 9: if(cases5896.$arity !== 1) {\nif(cases5896.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2092],1,cases5896.$arity,L[2077],cases5896.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2092],true,L[2077],cases5896.$loc);\n}\n}\nvar $fn5921 = cases5896.$constructor.$fieldNames;\nR.dF(cases5896.dict[$fn5921[0]],cases5896.$mut_fields_mask[0],false);\nvar anf_fun5918 = render$charts5900.$var === D?U(L[2088],\"render-charts\"):render$charts5900.$var;\n$ans5892 = R.getMaker1(list7,(\"make1\"),L[2089],L[2090]);\nvar anf_fun5917 = $ans5892;\n$step5889 = 10;\n$al5893 = L[2090];\nif(typeof(anf_fun5917.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5893,anf_fun5917);\n}\n$ans5892 = anf_fun5917.app(s5891);\nbreak;\ncase 10: var anf_arg5919 = $ans5892;\n$step5889 = 19;\n$al5893 = L[2091];\nif(typeof(anf_fun5918.app) !== \"function\") {\nR.ffi.throwNonFunApp($al5893,anf_fun5918);\n}\n$ans5892 = anf_fun5918.app(anf_arg5919);\nbreak;\ncase 11: if(cases5896.$arity !== 1) {\nif(cases5896.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2096],1,cases5896.$arity,L[2077],cases5896.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2096],true,L[2077],cases5896.$loc);\n}\n}\nvar $fn5938 = cases5896.$constructor.$fieldNames;\nvar obj5931 = R.dF(cases5896.dict[$fn5938[0]],cases5896.$mut_fields_mask[0],false);\nvar $temp_full5925 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2093($self4727) {\nvar $step5924 = 0;\nvar $elidedFrames5930 = 0;\nvar $ans5927 = D;\nvar $al5928 = L[2093];\nif(R.isAR($self4727)) {\n$step5924 = $self4727.step;\n$al5928 = $self4727.from;\n$ans5927 = $self4727.ans;\n$elidedFrames5930 = $self4727.elidedFrames;\nself4727 = $self4727.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2093],1,$t,true);\n}\nvar self4727 = $self4727;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5927 = R.mC();\n}\nwhile(!R.isContinuation($ans5927)) {\nswitch($step5924) {\ncase 0: $step5924 = 1;\n$al5928 = L[2094];\nif(typeof(CL40.dict.values.dict[\"dot-chart\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al5928,CL40.dict.values.dict[\"dot-chart\"]);\n}\n$ans5927 = CL40.dict.values.dict[\"dot-chart\"].app(self4727,obj5931);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans5927;\ndefault: R.ffi.throwSpinnakerError(L[2093],$step5924);\n}\n}\nif($step5924 !== 1) {\n$ans5927.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5928,$temp_full5925,$step5924,[self4727],[],$elidedFrames5930);\n}\nreturn $ans5927;\n};\nvar anf_extend5935 = R.makeMethod0($temp_full5925,\"render\");\nvar anf_arg5936 = R.extendObj(L[2095],default$dot$chart$window$object5934,{\"render\":anf_extend5935});\n// caller optimization;\n$ans5892 = dot$chart$window4329.$var.app(anf_arg5936);\n$step5889 = 19;\nbreak;\ncase 12: if(cases5896.$arity !== 1) {\nif(cases5896.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2100],1,cases5896.$arity,L[2077],cases5896.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2100],true,L[2077],cases5896.$loc);\n}\n}\nvar $fn5951 = cases5896.$constructor.$fieldNames;\nvar obj5946 = R.dF(cases5896.dict[$fn5951[0]],cases5896.$mut_fields_mask[0],false);\nvar $temp_full5940 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2097($self5941) {\nvar $step5939 = 0;\nvar $elidedFrames5945 = 0;\nvar $ans5942 = D;\nvar $al5943 = L[2097];\nif(R.isAR($self5941)) {\n$step5939 = $self5941.step;\n$al5943 = $self5941.from;\n$ans5942 = $self5941.ans;\n$elidedFrames5945 = $self5941.elidedFrames;\nself5941 = $self5941.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2097],1,$t,true);\n}\nvar self5941 = $self5941;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5942 = R.mC();\n}\nwhile(!R.isContinuation($ans5942)) {\nswitch($step5939) {\ncase 0: $step5939 = 1;\n$al5943 = L[2098];\nif(typeof(CL40.dict.values.dict[\"categorical-dot-chart\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al5943,CL40.dict.values.dict[\"categorical-dot-chart\"]);\n}\n$ans5942 = CL40.dict.values.dict[\"categorical-dot-chart\"].app(self5941,obj5946);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans5942;\ndefault: R.ffi.throwSpinnakerError(L[2097],$step5939);\n}\n}\nif($step5939 !== 1) {\n$ans5942.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5943,$temp_full5940,$step5939,[self5941],[],$elidedFrames5945);\n}\nreturn $ans5942;\n};\nvar anf_extend5948 = R.makeMethod0($temp_full5940,\"render\");\nvar anf_arg5949 = R.extendObj(L[2099],default$dot$chart$window$object5934,{\"render\":anf_extend5948});\n// caller optimization;\n$ans5892 = dot$chart$window4329.$var.app(anf_arg5949);\n$step5889 = 19;\nbreak;\ncase 13: if(cases5896.$arity !== 1) {\nif(cases5896.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2104],1,cases5896.$arity,L[2077],cases5896.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2104],true,L[2077],cases5896.$loc);\n}\n}\nvar $fn5966 = cases5896.$constructor.$fieldNames;\nvar obj5958 = R.dF(cases5896.dict[$fn5966[0]],cases5896.$mut_fields_mask[0],false);\nvar $temp_full5953 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2101($self4769) {\nvar $step5952 = 0;\nvar $elidedFrames5957 = 0;\nvar $ans5954 = D;\nvar $al5955 = L[2101];\nif(R.isAR($self4769)) {\n$step5952 = $self4769.step;\n$al5955 = $self4769.from;\n$ans5954 = $self4769.ans;\n$elidedFrames5957 = $self4769.elidedFrames;\nself4769 = $self4769.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2101],1,$t,true);\n}\nvar self4769 = $self4769;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5954 = R.mC();\n}\nwhile(!R.isContinuation($ans5954)) {\nswitch($step5952) {\ncase 0: $step5952 = 1;\n$al5955 = L[2102];\nif(typeof(CL40.dict.values.dict[\"pie-chart\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al5955,CL40.dict.values.dict[\"pie-chart\"]);\n}\n$ans5954 = CL40.dict.values.dict[\"pie-chart\"].app(self4769,obj5958);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans5954;\ndefault: R.ffi.throwSpinnakerError(L[2101],$step5952);\n}\n}\nif($step5952 !== 1) {\n$ans5954.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5955,$temp_full5953,$step5952,[self4769],[],$elidedFrames5957);\n}\nreturn $ans5954;\n};\nvar anf_extend5962 = R.makeMethod0($temp_full5953,\"render\");\nvar anf_arg5964 = R.extendObj(L[2103],default$pie$chart$window$object5961,{\"render\":anf_extend5962});\n// caller optimization;\n$ans5892 = pie$chart$window4321.$var.app(anf_arg5964);\n$step5889 = 19;\nbreak;\ncase 14: if(cases5896.$arity !== 1) {\nif(cases5896.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2109],1,cases5896.$arity,L[2077],cases5896.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2109],true,L[2077],cases5896.$loc);\n}\n}\nvar $fn5981 = cases5896.$constructor.$fieldNames;\nvar obj5974 = R.dF(cases5896.dict[$fn5981[0]],cases5896.$mut_fields_mask[0],false);\nvar $temp_full5968 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2105($self5969) {\nvar $step5967 = 0;\nvar $elidedFrames5973 = 0;\nvar $ans5970 = D;\nvar $al5971 = L[2105];\nif(R.isAR($self5969)) {\n$step5967 = $self5969.step;\n$al5971 = $self5969.from;\n$ans5970 = $self5969.ans;\n$elidedFrames5973 = $self5969.elidedFrames;\nself5969 = $self5969.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2105],1,$t,true);\n}\nvar self5969 = $self5969;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5970 = R.mC();\n}\nwhile(!R.isContinuation($ans5970)) {\nswitch($step5967) {\ncase 0: $step5967 = 1;\n$al5971 = L[2107];\n// omitting isFunction check;\n$ans5970 = check$render$y$axis5888.$var.app(self5969);\nbreak;\ncase 1: $step5967 = 2;\n$al5971 = L[2106];\nif(typeof(CL40.dict.values.dict[\"bar-chart\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al5971,CL40.dict.values.dict[\"bar-chart\"]);\n}\n$ans5970 = CL40.dict.values.dict[\"bar-chart\"].app(self5969,obj5974);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans5970;\ndefault: R.ffi.throwSpinnakerError(L[2105],$step5967);\n}\n}\nif($step5967 !== 2) {\n$ans5970.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5971,$temp_full5968,$step5967,[self5969],[],$elidedFrames5973);\n}\nreturn $ans5970;\n};\nvar anf_extend5978 = R.makeMethod0($temp_full5968,\"render\");\nvar anf_arg5979 = R.extendObj(L[2108],default$bar$chart$window$object5977,{\"render\":anf_extend5978});\n// caller optimization;\n$ans5892 = bar$chart$window4348.$var.app(anf_arg5979);\n$step5889 = 19;\nbreak;\ncase 15: if(cases5896.$arity !== 1) {\nif(cases5896.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2114],1,cases5896.$arity,L[2077],cases5896.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2114],true,L[2077],cases5896.$loc);\n}\n}\nvar $fn5997 = cases5896.$constructor.$fieldNames;\nvar obj5988 = R.dF(cases5896.dict[$fn5997[0]],cases5896.$mut_fields_mask[0],false);\nvar $temp_full5983 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2110($self4815) {\nvar $step5982 = 0;\nvar $elidedFrames5987 = 0;\nvar $ans5984 = D;\nvar $al5985 = L[2110];\nif(R.isAR($self4815)) {\n$step5982 = $self4815.step;\n$al5985 = $self4815.from;\n$ans5984 = $self4815.ans;\n$elidedFrames5987 = $self4815.elidedFrames;\nself4815 = $self4815.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2110],1,$t,true);\n}\nvar self4815 = $self4815;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans5984 = R.mC();\n}\nwhile(!R.isContinuation($ans5984)) {\nswitch($step5982) {\ncase 0: $step5982 = 1;\n$al5985 = L[2112];\n// omitting isFunction check;\n$ans5984 = check$render$y$axis5888.$var.app(self4815);\nbreak;\ncase 1: $step5982 = 2;\n$al5985 = L[2111];\nif(typeof(CL40.dict.values.dict[\"multi-bar-chart\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al5985,CL40.dict.values.dict[\"multi-bar-chart\"]);\n}\n$ans5984 = CL40.dict.values.dict[\"multi-bar-chart\"].app(self4815,obj5988);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans5984;\ndefault: R.ffi.throwSpinnakerError(L[2110],$step5982);\n}\n}\nif($step5982 !== 2) {\n$ans5984.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5985,$temp_full5983,$step5982,[self4815],[],$elidedFrames5987);\n}\nreturn $ans5984;\n};\nvar anf_extend5991 = R.makeMethod0($temp_full5983,\"render\");\nvar anf_arg5995 = R.extendObj(L[2113],default$bar$chart$window$object5977,{\"render\":anf_extend5991});\n// caller optimization;\n$ans5892 = bar$chart$window4348.$var.app(anf_arg5995);\n$step5889 = 19;\nbreak;\ncase 16: if(cases5896.$arity !== 1) {\nif(cases5896.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2118],1,cases5896.$arity,L[2077],cases5896.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2118],true,L[2077],cases5896.$loc);\n}\n}\nvar $fn6011 = cases5896.$constructor.$fieldNames;\nvar obj6005 = R.dF(cases5896.dict[$fn6011[0]],cases5896.$mut_fields_mask[0],false);\nvar $temp_full5999 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2115($self6000) {\nvar $step5998 = 0;\nvar $elidedFrames6004 = 0;\nvar $ans6001 = D;\nvar $al6002 = L[2115];\nif(R.isAR($self6000)) {\n$step5998 = $self6000.step;\n$al6002 = $self6000.from;\n$ans6001 = $self6000.ans;\n$elidedFrames6004 = $self6000.elidedFrames;\nself6000 = $self6000.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2115],1,$t,true);\n}\nvar self6000 = $self6000;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6001 = R.mC();\n}\nwhile(!R.isContinuation($ans6001)) {\nswitch($step5998) {\ncase 0: $step5998 = 1;\n$al6002 = L[2116];\nif(typeof(CL40.dict.values.dict[\"box-plot\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al6002,CL40.dict.values.dict[\"box-plot\"]);\n}\n$ans6001 = CL40.dict.values.dict[\"box-plot\"].app(self6000,obj6005);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans6001;\ndefault: R.ffi.throwSpinnakerError(L[2115],$step5998);\n}\n}\nif($step5998 !== 1) {\n$ans6001.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6002,$temp_full5999,$step5998,[self6000],[],$elidedFrames6004);\n}\nreturn $ans6001;\n};\nvar anf_extend6008 = R.makeMethod0($temp_full5999,\"render\");\nvar anf_arg6009 = R.extendObj(L[2117],default$box$plot$chart$window$object6007,{\"render\":anf_extend6008});\n// caller optimization;\n$ans5892 = box$plot$chart$window4339.$var.app(anf_arg6009);\n$step5889 = 19;\nbreak;\ncase 17: if(cases5896.$arity !== 1) {\nif(cases5896.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2125],1,cases5896.$arity,L[2077],cases5896.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2125],true,L[2077],cases5896.$loc);\n}\n}\nvar $fn6029 = cases5896.$constructor.$fieldNames;\nvar obj6020 = R.dF(cases5896.dict[$fn6029[0]],cases5896.$mut_fields_mask[0],false);\nvar $temp_full6013 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2119($self6014) {\nvar $step6012 = 0;\nvar $elidedFrames6018 = 0;\nvar $ans6015 = D;\nvar $al6016 = L[2119];\nif(R.isAR($self6014)) {\n$step6012 = $self6014.step;\n$al6016 = $self6014.from;\n$ans6015 = $self6014.ans;\n$elidedFrames6018 = $self6014.elidedFrames;\nself6014 = $self6014.args[0];\nself6019 = $self6014.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2119],1,$t,true);\n}\nvar self6014 = $self6014;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6015 = R.mC();\n}\nwhile(!R.isContinuation($ans6015)) {\nswitch($step6012) {\ncase 0: var self6019 = R.extendObj(L[2120],self6014,{\"y-min\":none28});\n$step6012 = 1;\n$al6016 = L[2123];\n// omitting isFunction check;\n$ans6015 = check$render$x$axis5853.$var.app(self6019);\nbreak;\ncase 1: $step6012 = 2;\n$al6016 = L[2122];\n// omitting isFunction check;\n$ans6015 = check$render$y$axis5888.$var.app(self6019);\nbreak;\ncase 2: $step6012 = 3;\n$al6016 = L[2121];\nif(typeof(CL40.dict.values.dict[\"histogram\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al6016,CL40.dict.values.dict[\"histogram\"]);\n}\n$ans6015 = CL40.dict.values.dict[\"histogram\"].app(self6019,obj6020);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans6015;\ndefault: R.ffi.throwSpinnakerError(L[2119],$step6012);\n}\n}\nif($step6012 !== 3) {\n$ans6015.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6016,$temp_full6013,$step6012,[self6014],[self6019],$elidedFrames6018);\n}\nreturn $ans6015;\n};\nvar anf_extend6026 = R.makeMethod0($temp_full6013,\"render\");\nvar anf_arg6027 = R.extendObj(L[2124],default$histogram$chart$window$object6025,{\"render\":anf_extend6026});\n// caller optimization;\n$ans5892 = histogram$chart$window4365.$var.app(anf_arg6027);\n$step5889 = 19;\nbreak;\ncase 18: $ans5892 = R.throwNoCasesMatched(L[2077],cases5896);\n$step5889 = 19;\nbreak;\ncase 19: var ann_check_temp5897 = $ans5892;\n$step5889 = 20;\n$al5893 = L[2071];\nvar $ann$check5899 = R._cA(L[2071],ChartWindow5898,ann_check_temp5897);\nif(R.isContinuation($ann$check5899)) {\n$ans5892 = $ann$check5899;\n}\nbreak;\ncase 20: $step5889 = 21;\n$ans5892 = ann_check_temp5897;\nbreak;\ncase 21: ++R.GAS;\nreturn $ans5892;\ndefault: R.ffi.throwSpinnakerError(L[2070],$step5889);\n}\n}\nif($step5889 !== 21) {\n$ans5892.stack[R.EXN_STACKHEIGHT++] = R.mAR($al5893,$temp_lam5890,$step5889,[s5891],[anf_fun5912,anf_fun5902,anf_fun5907,anf_fun5918,ann_check_temp5897,cases5896],$elidedFrames5895);\n}\nreturn $ans5892;\n};\nvar anf_assign6033 = R.mF($temp_lam5890,\"render-chart\");\nrender$chart3742.$var = anf_assign6033;\nR.nothing;\nvar $temp_lam6035 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2128($p6036,$x$min6037,$x$max6038,$num$samples6039) {\nvar $step6034 = 0;\nvar $elidedFrames6043 = 0;\nvar $ans6040 = D;\nvar $al6041 = L[2128];\nif(R.isAR($p6036)) {\n$step6034 = $p6036.step;\n$al6041 = $p6036.from;\n$ans6040 = $p6036.ans;\n$elidedFrames6043 = $p6036.elidedFrames;\np6036 = $p6036.args[0];\nx$min6037 = $p6036.args[1];\nx$max6038 = $p6036.args[2];\nnum$samples6039 = $p6036.args[3];\nanf_arg6078 = $p6036.vars[0];\nanf_arg2799 = $p6036.vars[1];\nann_check_temp6083 = $p6036.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2128],4,$t,false);\n}\nvar p6036 = $p6036;\nvar x$min6037 = $x$min6037;\nvar x$max6038 = $x$max6038;\nvar num$samples6039 = $num$samples6039;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6040 = R.mC();\n}\nwhile(!R.isContinuation($ans6040)) {\nswitch($step6034) {\ncase 0: $step6034 = 1;\n$al6041 = L[2149];\nR._cA(L[2149],FunctionPlotSeries4089,p6036);\nbreak;\ncase 1: $step6034 = 2;\n$al6041 = L[2150];\nR._cA(L[2150],$type$Number3,x$min6037);\nbreak;\ncase 2: $step6034 = 3;\n$al6041 = L[2151];\nR._cA(L[2151],$type$Number3,x$max6038);\nbreak;\ncase 3: $step6034 = 4;\n$al6041 = L[2152];\nR._cA(L[2152],$type$Number3,num$samples6039);\nbreak;\ncase 4: $step6034 = 5;\n$al6041 = L[2148];\n// omitting isFunction check;\n$ans6040 = _minus12.app(x$max6038,x$min6037);\nbreak;\ncase 5: var anf_arg2799 = $ans6040;\n$step6034 = 6;\n$al6041 = L[2147];\n// omitting isFunction check;\n$ans6040 = _minus12.app(num$samples6039,(1));\nbreak;\ncase 6: var anf_arg6047 = $ans6040;\n$step6034 = 7;\n$al6041 = L[2146];\n// omitting isFunction check;\n$ans6040 = _divide16.app(anf_arg2799,anf_arg6047);\nbreak;\ncase 7: var fraction6056 = $ans6040;\nvar $temp_lam6050 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2129($i6051) {\nvar $step6049 = 0;\nvar $elidedFrames6055 = 0;\nvar $ans6052 = D;\nvar $al6053 = L[2129];\nif(R.isAR($i6051)) {\n$step6049 = $i6051.step;\n$al6053 = $i6051.from;\n$ans6052 = $i6051.ans;\n$elidedFrames6055 = $i6051.elidedFrames;\ni6051 = $i6051.args[0];\ncases6067 = $i6051.vars[0];\nx6064 = $i6051.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2129],1,$t,false);\n}\nvar i6051 = $i6051;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6052 = R.mC();\n}\nwhile(!R.isContinuation($ans6052)) {\nswitch($step6049) {\ncase 0: $step6049 = 1;\n$al6053 = L[2140];\n// omitting isFunction check;\n$ans6052 = _times5.app(fraction6056,i6051);\nbreak;\ncase 1: var anf_arg6057 = $ans6052;\n$step6049 = 2;\n$al6053 = L[2139];\n// omitting isFunction check;\n$ans6052 = _plus5.app(x$min6037,anf_arg6057);\nbreak;\ncase 2: var x6064 = $ans6052;\nvar $temp_lam6059 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2130($$resumer11) {\nvar $step6058 = 0;\nvar $elidedFrames6063 = 0;\nvar $ans6060 = D;\nvar $al6061 = L[2130];\nif(R.isAR($$resumer11)) {\n$step6058 = $$resumer11.step;\n$al6061 = $$resumer11.from;\n$ans6060 = $$resumer11.ans;\n$elidedFrames6063 = $$resumer11.elidedFrames;\n$resumer11 = $$resumer11.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2130],0,$t,false);\n}\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6060 = R.mC();\n}\nwhile(!R.isContinuation($ans6060)) {\nswitch($step6058) {\ncase 0: $step6058 = 1;\n$ans6060 = R.maybeMethodCall1(p6036,\"f\",L[2131],x6064);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans6060;\ndefault: R.ffi.throwSpinnakerError(L[2130],$step6058);\n}\n}\nif($step6058 !== 1) {\n$ans6060.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6061,$temp_lam6059,$step6058,[],[],$elidedFrames6063);\n}\nreturn $ans6060;\n};\nvar anf_arg6066 = R.mF($temp_lam6059,\"\");\n$step6049 = 3;\n$al6053 = L[2138];\nif(typeof(run$task1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6053,run$task1);\n}\n$ans6052 = run$task1.app(anf_arg6066);\nbreak;\ncase 3: var cases6067 = $ans6052;\n$step6049 = 4;\n$al6053 = L[2137];\nvar $ann$check6076 = R._cA(L[2137],R.gDA(L[2137],\"E\",E42.dict.types,\"Either\"),cases6067);\nif(R.isContinuation($ann$check6076)) {\n$ans6052 = $ann$check6076;\n}\nbreak;\ncase 4: $al6053 = L[2135];\n$step6049 = $cases_dispatch6075[cases6067.$name] || 8;\nbreak;\ncase 5: if(cases6067.$arity !== 1) {\nif(cases6067.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2134],1,cases6067.$arity,L[2135],cases6067.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2134],true,L[2135],cases6067.$loc);\n}\n}\nvar $fn6071 = cases6067.$constructor.$fieldNames;\nvar y6068 = R.dF(cases6067.dict[$fn6071[0]],cases6067.$mut_fields_mask[0],false);\n$ans6052 = R.getMaker2(raw$array2,(\"make2\"),L[2132],L[2133]);\nvar anf_fun2816 = $ans6052;\n$step6049 = 6;\n$al6053 = L[2133];\nif(typeof(anf_fun2816.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6053,anf_fun2816);\n}\n$ans6052 = anf_fun2816.app(x6064,y6068);\nbreak;\ncase 6: var anf_arg6069 = $ans6052;\n// caller optimization;\n$ans6052 = some33.app(anf_arg6069);\n$step6049 = 9;\nbreak;\ncase 7: if(cases6067.$arity !== 1) {\nif(cases6067.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2136],1,cases6067.$arity,L[2135],cases6067.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2136],true,L[2135],cases6067.$loc);\n}\n}\nvar $fn6073 = cases6067.$constructor.$fieldNames;\nR.dF(cases6067.dict[$fn6073[0]],cases6067.$mut_fields_mask[0],false);\n$step6049 = 9;\n$ans6052 = none28;\nbreak;\ncase 8: $ans6052 = R.throwNoCasesMatched(L[2135],cases6067);\n$step6049 = 9;\nbreak;\ncase 9: ++R.GAS;\nreturn $ans6052;\ndefault: R.ffi.throwSpinnakerError(L[2129],$step6049);\n}\n}\nif($step6049 !== 9) {\n$ans6052.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6053,$temp_lam6050,$step6049,[i6051],[cases6067,x6064],$elidedFrames6055);\n}\nreturn $ans6052;\n};\nvar anf_arg6078 = R.mF($temp_lam6050,\"for-body<line 2544, column 7>\");\n$step6034 = 8;\n$al6041 = L[2145];\n// omitting isFunction check;\n$ans6040 = range32.app((0),num$samples6039);\nbreak;\ncase 8: var anf_arg2817 = $ans6040;\n$step6034 = 9;\n$al6041 = L[2129];\n// omitting isFunction check;\n$ans6040 = filter$map20.app(anf_arg6078,anf_arg2817);\nbreak;\ncase 9: var ps6079 = $ans6040;\n$al6041 = L[2141];\nvar anf_extend6081 = G(p6036,\"color\",L[2141]);\n$al6041 = L[2142];\nvar anf_extend6082 = G(p6036,\"legend\",L[2142]);\nvar ann_check_temp6083 = R.extendObj(L[2143],default$scatter$plot$series4657,{\"ps\":ps6079,\n\"point-size\":FUNCTION$POINT$SIZE6080,\n\"color\":anf_extend6081,\n\"legend\":anf_extend6082});\n$step6034 = 10;\n$al6041 = L[2144];\nvar $ann$check6084 = R._cA(L[2144],ScatterPlotSeries4060,ann_check_temp6083);\nif(R.isContinuation($ann$check6084)) {\n$ans6040 = $ann$check6084;\n}\nbreak;\ncase 10: $step6034 = 11;\n$ans6040 = ann_check_temp6083;\nbreak;\ncase 11: ++R.GAS;\nreturn $ans6040;\ndefault: R.ffi.throwSpinnakerError(L[2128],$step6034);\n}\n}\nif($step6034 !== 11) {\n$ans6040.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6041,$temp_lam6035,$step6034,[p6036,x$min6037,x$max6038,num$samples6039],[anf_arg6078,anf_arg2799,ann_check_temp6083],$elidedFrames6043);\n}\nreturn $ans6040;\n};\nvar anf_assign6086 = R.mF($temp_lam6035,\"generate-xy\");\ngenerate$xy6087.$var = anf_assign6086;\nR.nothing;\nvar $temp_lam6089 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2153($min6090,$max6091) {\nvar $step6088 = 0;\nvar $elidedFrames6095 = 0;\nvar $ans6092 = D;\nvar $al6093 = L[2153];\nif(R.isAR($min6090)) {\n$step6088 = $min6090.step;\n$al6093 = $min6090.from;\n$ans6092 = $min6090.ans;\n$elidedFrames6095 = $min6090.elidedFrames;\nmin6090 = $min6090.args[0];\nmax6091 = $min6090.args[1];\nann_check_temp6103 = $min6090.vars[0];\nanf_tuple_fields6101 = $min6090.vars[1];\noffset6099 = $min6090.vars[2];\noffset6100 = $min6090.vars[3];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2153],2,$t,false);\n}\nvar min6090 = $min6090;\nvar max6091 = $max6091;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6092 = R.mC();\n}\nwhile(!R.isContinuation($ans6092)) {\nswitch($step6088) {\ncase 0: $step6088 = 1;\n$al6093 = L[2162];\nR._cA(L[2162],$type$Number3,min6090);\nbreak;\ncase 1: $step6088 = 2;\n$al6093 = L[2163];\nR._cA(L[2163],$type$Number3,max6091);\nbreak;\ncase 2: $step6088 = 3;\n$al6093 = L[2161];\n// omitting isFunction check;\n$ans6092 = _minus12.app(max6091,min6090);\nbreak;\ncase 3: var anf_arg6096 = $ans6092;\n$step6088 = 4;\n$al6093 = L[2160];\n// omitting isFunction check;\n$ans6092 = _divide16.app(anf_arg6096,(40));\nbreak;\ncase 4: var anf_arg6097 = $ans6092;\n// caller optimization;\n$ans6092 = num$min2.app(anf_arg6097,(1));\nvar offset6099 = $ans6092;\n$step6088 = 5;\n$al6093 = L[2159];\n// omitting isFunction check;\n$ans6092 = unsafe$equal6098.app(offset6099,(0));\nbreak;\ncase 5: var anf_if6105 = $ans6092;\n$step6088 = R.checkPyretTrue(anf_if6105)?6:7;\nbreak;\ncase 6: $step6088 = 8;\n$ans6092 = (1);\nbreak;\ncase 7: $step6088 = 8;\n$ans6092 = offset6099;\nbreak;\ncase 8: var offset6100 = $ans6092;\n$step6088 = 9;\n$al6093 = L[2158];\n// omitting isFunction check;\n$ans6092 = _minus12.app(min6090,offset6100);\nbreak;\ncase 9: var anf_tuple_fields6101 = $ans6092;\n$step6088 = 10;\n$al6093 = L[2157];\n// omitting isFunction check;\n$ans6092 = _plus5.app(max6091,offset6100);\nbreak;\ncase 10: var anf_tuple_fields6102 = $ans6092;\nvar ann_check_temp6103 = R.makeTuple([anf_tuple_fields6101,anf_tuple_fields6102]);\n$step6088 = 11;\n$al6093 = L[2156];\nvar $ann$check6104 = R._cA(L[2156],R.mTA([L[2154],L[2155]],[$type$Number3,$type$Number3],undefined),ann_check_temp6103);\nif(R.isContinuation($ann$check6104)) {\n$ans6092 = $ann$check6104;\n}\nbreak;\ncase 11: $step6088 = 12;\n$ans6092 = ann_check_temp6103;\nbreak;\ncase 12: ++R.GAS;\nreturn $ans6092;\ndefault: R.ffi.throwSpinnakerError(L[2153],$step6088);\n}\n}\nif($step6088 !== 12) {\n$ans6092.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6093,$temp_lam6089,$step6088,[min6090,max6091],[ann_check_temp6103,anf_tuple_fields6101,offset6099,offset6100],$elidedFrames6095);\n}\nreturn $ans6092;\n};\nvar anf_assign6107 = R.mF($temp_lam6089,\"widen-range\");\nwiden$range6108.$var = anf_assign6107;\nR.nothing;\nvar $temp_lam6110 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2164($obj6111) {\nvar $step6109 = 0;\nvar $elidedFrames6115 = 0;\nvar $ans6112 = D;\nvar $al6113 = L[2164];\nif(R.isAR($obj6111)) {\n$step6109 = $obj6111.step;\n$al6113 = $obj6111.from;\n$ans6112 = $obj6111.ans;\n$elidedFrames6115 = $obj6111.elidedFrames;\nobj6111 = $obj6111.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2164],1,$t,false);\n}\nvar obj6111 = $obj6111;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6112 = R.mC();\n}\nwhile(!R.isContinuation($ans6112)) {\nswitch($step6109) {\ncase 0: $al6113 = L[2165];\nvar anf_arg6116 = G(obj6111,\"ps\",L[2165]);\n$step6109 = 1;\n$ans6112 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[2166],anf_arg6116);\nbreak;\ncase 1: var anf_extend6117 = $ans6112;\n$step6109 = 2;\n$ans6112 = R.extendObj(L[2167],obj6111,{\"ps\":anf_extend6117});\nbreak;\ncase 2: ++R.GAS;\nreturn $ans6112;\ndefault: R.ffi.throwSpinnakerError(L[2164],$step6109);\n}\n}\nif($step6109 !== 2) {\n$ans6112.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6113,$temp_lam6110,$step6109,[obj6111],[],$elidedFrames6115);\n}\nreturn $ans6112;\n};\nvar anf_assign6119 = R.mF($temp_lam6110,\"ps-to-arr\");\nps$to$arr6120.$var = anf_assign6119;\nR.nothing;\nvar $temp_lam6122 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2168($p6123,$self6124) {\nvar $step6121 = 0;\nvar $elidedFrames6128 = 0;\nvar $ans6125 = D;\nvar $al6126 = L[2168];\nif(R.isAR($p6123)) {\n$step6121 = $p6123.step;\n$al6126 = $p6123.from;\n$ans6125 = $p6123.ans;\n$elidedFrames6128 = $p6123.elidedFrames;\np6123 = $p6123.args[0];\nself6124 = $p6123.args[1];\nann_check_temp6131 = $p6123.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2168],2,$t,false);\n}\nvar p6123 = $p6123;\nvar self6124 = $self6124;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6125 = R.mC();\n}\nwhile(!R.isContinuation($ans6125)) {\nswitch($step6121) {\ncase 0: $step6121 = 1;\n$al6126 = L[2176];\nR._cA(L[2176],Posn6135,p6123);\nbreak;\ncase 1: $al6126 = L[2169];\nvar anf_bracket6129 = G(self6124,\"x-min\",L[2169]);\n$al6126 = L[2170];\nvar anf_arg2845 = G(anf_bracket6129,\"value\",L[2170]);\n// caller optimization;\n$ans6125 = fst3606.app(p6123);\nvar anf_arg6130 = $ans6125;\n$step6121 = 2;\n$al6126 = L[2175];\n// omitting isFunction check;\n$ans6125 = _lessequal4.app(anf_arg2845,anf_arg6130);\nbreak;\ncase 2: var anf_if2874 = $ans6125;\n$step6121 = R.checkPyretTrue(anf_if2874)?3:5;\nbreak;\ncase 3: // caller optimization;\n$ans6125 = fst3606.app(p6123);\nvar anf_arg2878 = $ans6125;\n$al6126 = L[2172];\nvar anf_bracket6133 = G(self6124,\"x-max\",L[2172]);\n$al6126 = L[2173];\nvar anf_arg2888 = G(anf_bracket6133,\"value\",L[2173]);\n$step6121 = 4;\n$al6126 = L[2174];\n// omitting isFunction check;\n$ans6125 = _lessequal4.app(anf_arg2878,anf_arg2888);\nbreak;\ncase 4: var anf_arg6134 = $ans6125;\n$ans6125 = R.checkWrapBoolean(anf_arg6134);\n$step6121 = 6;\nbreak;\ncase 5: $step6121 = 6;\n$ans6125 = (false);\nbreak;\ncase 6: var ann_check_temp6131 = $ans6125;\n$step6121 = 7;\n$al6126 = L[2171];\nvar $ann$check6132 = R._cA(L[2171],$type$Boolean6,ann_check_temp6131);\nif(R.isContinuation($ann$check6132)) {\n$ans6125 = $ann$check6132;\n}\nbreak;\ncase 7: $step6121 = 8;\n$ans6125 = ann_check_temp6131;\nbreak;\ncase 8: ++R.GAS;\nreturn $ans6125;\ndefault: R.ffi.throwSpinnakerError(L[2168],$step6121);\n}\n}\nif($step6121 !== 8) {\n$ans6125.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6126,$temp_lam6122,$step6121,[p6123,self6124],[ann_check_temp6131],$elidedFrames6128);\n}\nreturn $ans6125;\n};\nvar anf_assign6137 = R.mF($temp_lam6122,\"in-bound-x\");\nin$bound$x6138.$var = anf_assign6137;\nR.nothing;\nvar $temp_lam6140 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2177($p6141,$self6142) {\nvar $step6139 = 0;\nvar $elidedFrames6146 = 0;\nvar $ans6143 = D;\nvar $al6144 = L[2177];\nif(R.isAR($p6141)) {\n$step6139 = $p6141.step;\n$al6144 = $p6141.from;\n$ans6143 = $p6141.ans;\n$elidedFrames6146 = $p6141.elidedFrames;\np6141 = $p6141.args[0];\nself6142 = $p6141.args[1];\nann_check_temp6149 = $p6141.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2177],2,$t,false);\n}\nvar p6141 = $p6141;\nvar self6142 = $self6142;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6143 = R.mC();\n}\nwhile(!R.isContinuation($ans6143)) {\nswitch($step6139) {\ncase 0: $step6139 = 1;\n$al6144 = L[2185];\nR._cA(L[2185],Posn6135,p6141);\nbreak;\ncase 1: $al6144 = L[2178];\nvar anf_bracket6147 = G(self6142,\"y-min\",L[2178]);\n$al6144 = L[2179];\nvar anf_arg2912 = G(anf_bracket6147,\"value\",L[2179]);\n// caller optimization;\n$ans6143 = snd3607.app(p6141);\nvar anf_arg6148 = $ans6143;\n$step6139 = 2;\n$al6144 = L[2184];\n// omitting isFunction check;\n$ans6143 = _lessequal4.app(anf_arg2912,anf_arg6148);\nbreak;\ncase 2: var anf_if6154 = $ans6143;\n$step6139 = R.checkPyretTrue(anf_if6154)?3:5;\nbreak;\ncase 3: // caller optimization;\n$ans6143 = snd3607.app(p6141);\nvar anf_arg6152 = $ans6143;\n$al6144 = L[2181];\nvar anf_bracket6151 = G(self6142,\"y-max\",L[2181]);\n$al6144 = L[2182];\nvar anf_arg6153 = G(anf_bracket6151,\"value\",L[2182]);\n$step6139 = 4;\n$al6144 = L[2183];\n// omitting isFunction check;\n$ans6143 = _lessequal4.app(anf_arg6152,anf_arg6153);\nbreak;\ncase 4: var anf_arg2961 = $ans6143;\n$ans6143 = R.checkWrapBoolean(anf_arg2961);\n$step6139 = 6;\nbreak;\ncase 5: $step6139 = 6;\n$ans6143 = (false);\nbreak;\ncase 6: var ann_check_temp6149 = $ans6143;\n$step6139 = 7;\n$al6144 = L[2180];\nvar $ann$check6150 = R._cA(L[2180],$type$Boolean6,ann_check_temp6149);\nif(R.isContinuation($ann$check6150)) {\n$ans6143 = $ann$check6150;\n}\nbreak;\ncase 7: $step6139 = 8;\n$ans6143 = ann_check_temp6149;\nbreak;\ncase 8: ++R.GAS;\nreturn $ans6143;\ndefault: R.ffi.throwSpinnakerError(L[2177],$step6139);\n}\n}\nif($step6139 !== 8) {\n$ans6143.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6144,$temp_lam6140,$step6139,[p6141,self6142],[ann_check_temp6149],$elidedFrames6146);\n}\nreturn $ans6143;\n};\nvar anf_assign6156 = R.mF($temp_lam6140,\"in-bound-y\");\nin$bound$y6157.$var = anf_assign6156;\nR.nothing;\nvar $temp_lam6159 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2186($p6160,$self4977) {\nvar $step6158 = 0;\nvar $elidedFrames6164 = 0;\nvar $ans6161 = D;\nvar $al6162 = L[2186];\nif(R.isAR($p6160)) {\n$step6158 = $p6160.step;\n$al6162 = $p6160.from;\n$ans6161 = $p6160.ans;\n$elidedFrames6164 = $p6160.elidedFrames;\np6160 = $p6160.args[0];\nself4977 = $p6160.args[1];\nann_check_temp6165 = $p6160.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2186],2,$t,false);\n}\nvar p6160 = $p6160;\nvar self4977 = $self4977;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6161 = R.mC();\n}\nwhile(!R.isContinuation($ans6161)) {\nswitch($step6158) {\ncase 0: $step6158 = 1;\n$al6162 = L[2190];\nR._cA(L[2190],Posn6135,p6160);\nbreak;\ncase 1: $step6158 = 2;\n$al6162 = L[2189];\n// omitting isFunction check;\n$ans6161 = in$bound$x6138.$var.app(p6160,self4977);\nbreak;\ncase 2: var anf_if6168 = $ans6161;\n$step6158 = R.checkPyretTrue(anf_if6168)?3:5;\nbreak;\ncase 3: $step6158 = 4;\n$al6162 = L[2188];\n// omitting isFunction check;\n$ans6161 = in$bound$y6157.$var.app(p6160,self4977);\nbreak;\ncase 4: var anf_arg6167 = $ans6161;\n$ans6161 = R.checkWrapBoolean(anf_arg6167);\n$step6158 = 6;\nbreak;\ncase 5: $step6158 = 6;\n$ans6161 = (false);\nbreak;\ncase 6: var ann_check_temp6165 = $ans6161;\n$step6158 = 7;\n$al6162 = L[2187];\nvar $ann$check6166 = R._cA(L[2187],$type$Boolean6,ann_check_temp6165);\nif(R.isContinuation($ann$check6166)) {\n$ans6161 = $ann$check6166;\n}\nbreak;\ncase 7: $step6158 = 8;\n$ans6161 = ann_check_temp6165;\nbreak;\ncase 8: ++R.GAS;\nreturn $ans6161;\ndefault: R.ffi.throwSpinnakerError(L[2186],$step6158);\n}\n}\nif($step6158 !== 8) {\n$ans6161.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6162,$temp_lam6159,$step6158,[p6160,self4977],[ann_check_temp6165],$elidedFrames6164);\n}\nreturn $ans6161;\n};\nvar anf_assign6170 = R.mF($temp_lam6159,\"in-bound-xy\");\nin$bound$xy6171.$var = anf_assign6170;\nR.nothing;\nvar $temp_lam6173 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2191($a6174,$b6175) {\nvar $step6172 = 0;\nvar $elidedFrames6179 = 0;\nvar $ans6176 = D;\nvar $al6177 = L[2191];\nif(R.isAR($a6174)) {\n$step6172 = $a6174.step;\n$al6177 = $a6174.from;\n$ans6176 = $a6174.ans;\n$elidedFrames6179 = $a6174.elidedFrames;\na6174 = $a6174.args[0];\nb6175 = $a6174.args[1];\nanf_arg6183 = $a6174.vars[0];\nann_check_temp6184 = $a6174.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2191],2,$t,false);\n}\nvar a6174 = $a6174;\nvar b6175 = $b6175;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6176 = R.mC();\n}\nwhile(!R.isContinuation($ans6176)) {\nswitch($step6172) {\ncase 0: $step6172 = 1;\n$al6177 = L[2196];\nR._cA(L[2196],Posn6135,a6174);\nbreak;\ncase 1: $step6172 = 2;\n$al6177 = L[2197];\nR._cA(L[2197],Posn6135,b6175);\nbreak;\ncase 2: // caller optimization;\n$ans6176 = fst3606.app(a6174);\nvar anf_arg6180 = $ans6176;\n// caller optimization;\n$ans6176 = fst3606.app(b6175);\nvar anf_arg2980 = $ans6176;\n$step6172 = 3;\n$al6177 = L[2195];\n// omitting isFunction check;\n$ans6176 = _minus12.app(anf_arg6180,anf_arg2980);\nbreak;\ncase 3: var anf_arg6181 = $ans6176;\n// caller optimization;\n$ans6176 = num$sqr2.app(anf_arg6181);\nvar anf_arg6183 = $ans6176;\n// caller optimization;\n$ans6176 = snd3607.app(a6174);\nvar anf_arg6182 = $ans6176;\n// caller optimization;\n$ans6176 = snd3607.app(b6175);\nvar anf_arg2992 = $ans6176;\n$step6172 = 4;\n$al6177 = L[2194];\n// omitting isFunction check;\n$ans6176 = _minus12.app(anf_arg6182,anf_arg2992);\nbreak;\ncase 4: var anf_arg2990 = $ans6176;\n// caller optimization;\n$ans6176 = num$sqr2.app(anf_arg2990);\nvar anf_arg2993 = $ans6176;\n$step6172 = 5;\n$al6177 = L[2193];\n// omitting isFunction check;\n$ans6176 = _plus5.app(anf_arg6183,anf_arg2993);\nbreak;\ncase 5: var ann_check_temp6184 = $ans6176;\n$step6172 = 6;\n$al6177 = L[2192];\nvar $ann$check6185 = R._cA(L[2192],$type$Number3,ann_check_temp6184);\nif(R.isContinuation($ann$check6185)) {\n$ans6176 = $ann$check6185;\n}\nbreak;\ncase 6: $step6172 = 7;\n$ans6176 = ann_check_temp6184;\nbreak;\ncase 7: ++R.GAS;\nreturn $ans6176;\ndefault: R.ffi.throwSpinnakerError(L[2191],$step6172);\n}\n}\nif($step6172 !== 7) {\n$ans6176.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6177,$temp_lam6173,$step6172,[a6174,b6175],[anf_arg6183,ann_check_temp6184],$elidedFrames6179);\n}\nreturn $ans6176;\n};\nvar anf_assign6187 = R.mF($temp_lam6173,\"dist\");\ndist6188.$var = anf_assign6187;\nR.nothing;\nvar $temp_lam6190 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2198($lst6191,$p6192) {\nvar $step6189 = 0;\nvar $elidedFrames6196 = 0;\nvar $ans6193 = D;\nvar $al6194 = L[2198];\nif(R.isAR($lst6191)) {\n$step6189 = $lst6191.step;\n$al6194 = $lst6191.from;\n$ans6193 = $lst6191.ans;\n$elidedFrames6196 = $lst6191.elidedFrames;\nlst6191 = $lst6191.args[0];\np6192 = $lst6191.args[1];\ntup6221 = $lst6191.vars[0];\nann_check_temp6198 = $lst6191.vars[1];\nanf_arg3001 = $lst6191.vars[2];\ncases6197 = $lst6191.vars[3];\nf6213 = $lst6191.vars[4];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2198],2,$t,false);\n}\nvar lst6191 = $lst6191;\nvar p6192 = $p6192;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6193 = R.mC();\n}\nwhile(!R.isContinuation($ans6193)) {\nswitch($step6189) {\ncase 0: $step6189 = 1;\n$al6194 = L[2214];\nR._cA(L[2214],List16,lst6191);\nbreak;\ncase 1: $step6189 = 2;\n$al6194 = L[2215];\nR._cA(L[2215],Posn6135,p6192);\nbreak;\ncase 2: var cases6197 = lst6191;\n$step6189 = 3;\n$al6194 = L[2213];\nvar $ann$check6228 = R._cA(L[2213],List16,cases6197);\nif(R.isContinuation($ann$check6228)) {\n$ans6193 = $ann$check6228;\n}\nbreak;\ncase 3: $al6194 = L[2201];\n$step6189 = $cases_dispatch6227[cases6197.$name] || 9;\nbreak;\ncase 4: if(cases6197.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[2200],false,L[2201],cases6197.$loc);\n}\n$step6189 = 10;\n$ans6193 = none28;\nbreak;\ncase 5: if(cases6197.$arity !== 2) {\nif(cases6197.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2212],2,cases6197.$arity,L[2201],cases6197.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2212],true,L[2201],cases6197.$loc);\n}\n}\nvar $fn6225 = cases6197.$constructor.$fieldNames;\nvar f6213 = R.dF(cases6197.dict[$fn6225[0]],cases6197.$mut_fields_mask[0],false);\nR.dF(cases6197.dict[$fn6225[1]],cases6197.$mut_fields_mask[1],false);\nvar $temp_lam6201 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2202($tup6202,$e6203) {\nvar $step6200 = 0;\nvar $elidedFrames6207 = 0;\nvar $ans6204 = D;\nvar $al6205 = L[2202];\nif(R.isAR($tup6202)) {\n$step6200 = $tup6202.step;\n$al6205 = $tup6202.from;\n$ans6204 = $tup6202.ans;\n$elidedFrames6207 = $tup6202.elidedFrames;\ntup6202 = $tup6202.args[0];\ne6203 = $tup6202.args[1];\nbest6209 = $tup6202.vars[0];\nsol6210 = $tup6202.vars[1];\nnew$dist6208 = $tup6202.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2202],2,$t,false);\n}\nvar tup6202 = $tup6202;\nvar e6203 = $e6203;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6204 = R.mC();\n}\nwhile(!R.isContinuation($ans6204)) {\nswitch($step6200) {\ncase 0: $step6200 = 1;\n$al6205 = L[2207];\nR.checkTupleBind(tup6202,2,L[2207]);\nbreak;\ncase 1: var best6209 = R.getTuple(tup6202,0,L[2203]);\nvar sol6210 = R.getTuple(tup6202,1,L[2204]);\n$step6200 = 2;\n$al6205 = L[2206];\n// omitting isFunction check;\n$ans6204 = dist6188.$var.app(p6192,e6203);\nbreak;\ncase 2: var new$dist6208 = $ans6204;\n$step6200 = 3;\n$al6205 = L[2205];\n// omitting isFunction check;\n$ans6204 = _lessthan3.app(new$dist6208,best6209);\nbreak;\ncase 3: var anf_if6211 = $ans6204;\n$step6200 = R.checkPyretTrue(anf_if6211)?4:5;\nbreak;\ncase 4: $step6200 = 6;\n$ans6204 = R.makeTuple([new$dist6208,e6203]);\nbreak;\ncase 5: $step6200 = 6;\n$ans6204 = R.makeTuple([best6209,sol6210]);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans6204;\ndefault: R.ffi.throwSpinnakerError(L[2202],$step6200);\n}\n}\nif($step6200 !== 6) {\n$ans6204.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6205,$temp_lam6201,$step6200,[tup6202,e6203],[best6209,sol6210,new$dist6208],$elidedFrames6207);\n}\nreturn $ans6204;\n};\nvar anf_arg3001 = R.mF($temp_lam6201,\"for-body<line 2598, column 17>\");\n$step6189 = 6;\n$al6194 = L[2211];\n// omitting isFunction check;\n$ans6193 = dist6188.$var.app(p6192,f6213);\nbreak;\ncase 6: var anf_tuple_fields6214 = $ans6193;\nvar anf_arg6220 = R.makeTuple([anf_tuple_fields6214,f6213]);\n$step6189 = 7;\n$al6194 = L[2202];\n// omitting isFunction check;\n$ans6193 = fold24.app(anf_arg3001,anf_arg6220,lst6191);\nbreak;\ncase 7: var tup6221 = $ans6193;\n$step6189 = 8;\n$al6194 = L[2210];\nR.checkTupleBind(tup6221,2,L[2210]);\nbreak;\ncase 8: R.getTuple(tup6221,0,L[2208]);\nvar sol6222 = R.getTuple(tup6221,1,L[2209]);\n// caller optimization;\n$ans6193 = some33.app(sol6222);\n$step6189 = 10;\nbreak;\ncase 9: $ans6193 = R.throwNoCasesMatched(L[2201],cases6197);\n$step6189 = 10;\nbreak;\ncase 10: var ann_check_temp6198 = $ans6193;\n$step6189 = 11;\n$al6194 = L[2199];\nvar $ann$check6199 = R._cA(L[2199],Option27,ann_check_temp6198);\nif(R.isContinuation($ann$check6199)) {\n$ans6193 = $ann$check6199;\n}\nbreak;\ncase 11: $step6189 = 12;\n$ans6193 = ann_check_temp6198;\nbreak;\ncase 12: ++R.GAS;\nreturn $ans6193;\ndefault: R.ffi.throwSpinnakerError(L[2198],$step6189);\n}\n}\nif($step6189 !== 12) {\n$ans6193.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6194,$temp_lam6190,$step6189,[lst6191,p6192],[tup6221,ann_check_temp6198,anf_arg3001,cases6197,f6213],$elidedFrames6196);\n}\nreturn $ans6193;\n};\nvar anf_assign6230 = R.mF($temp_lam6190,\"nearest\");\nnearest6231.$var = anf_assign6230;\nR.nothing;\nvar $temp_lam6233 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2216($in6234,$out6235,$self5098) {\nvar $step6232 = 0;\nvar $elidedFrames6239 = 0;\nvar $ans6236 = D;\nvar $al6237 = L[2216];\nif(R.isAR($in6234)) {\n$step6232 = $in6234.step;\n$al6237 = $in6234.from;\n$ans6236 = $in6234.ans;\n$elidedFrames6239 = $in6234.elidedFrames;\nin6234 = $in6234.args[0];\nout6235 = $in6234.args[1];\nself5098 = $in6234.args[2];\nanf_arg3042 = $in6234.vars[0];\nanf_arg3075 = $in6234.vars[1];\nanf_arg6321 = $in6234.vars[2];\nanf_arg3077 = $in6234.vars[3];\nann_check_temp6275 = $in6234.vars[4];\npx$max6264 = $in6234.vars[5];\nanf_arg6334 = $in6234.vars[6];\nanf_arg3168 = $in6234.vars[7];\npy$max6267 = $in6234.vars[8];\nanf_arg6317 = $in6234.vars[9];\nanf_arg3139 = $in6234.vars[10];\ng6326 = $in6234.vars[11];\nf6316 = $in6234.vars[12];\npx$min6263 = $in6234.vars[13];\npy$min6265 = $in6234.vars[14];\nanf_fun3172 = $in6234.vars[15];\nanf_fun3044 = $in6234.vars[16];\nanf_fun6322 = $in6234.vars[17];\nm6294 = $in6234.vars[18];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2216],3,$t,false);\n}\nvar in6234 = $in6234;\nvar out6235 = $out6235;\nvar self5098 = $self5098;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6236 = R.mC();\n}\nwhile(!R.isContinuation($ans6236)) {\nswitch($step6232) {\ncase 0: $step6232 = 1;\n$al6237 = L[2283];\nR._cA(L[2283],Posn6135,in6234);\nbreak;\ncase 1: $step6232 = 2;\n$al6237 = L[2284];\nR._cA(L[2284],Posn6135,out6235);\nbreak;\ncase 2: // caller optimization;\n$ans6236 = fst3606.app(in6234);\nvar anf_arg3018 = $ans6236;\n// caller optimization;\n$ans6236 = fst3606.app(out6235);\nvar anf_arg3006 = $ans6236;\n// caller optimization;\n$ans6236 = num$max18.app(anf_arg3018,anf_arg3006);\nvar anf_arg3011 = $ans6236;\n$al6237 = L[2217];\nvar anf_bracket6240 = G(self5098,\"x-max\",L[2217]);\n$al6237 = L[2218];\nvar anf_arg3012 = G(anf_bracket6240,\"value\",L[2218]);\n// caller optimization;\n$ans6236 = num$min2.app(anf_arg3011,anf_arg3012);\nvar px$max6264 = $ans6236;\n// caller optimization;\n$ans6236 = fst3606.app(in6234);\nvar anf_arg3010 = $ans6236;\n// caller optimization;\n$ans6236 = fst3606.app(out6235);\nvar anf_arg3014 = $ans6236;\n// caller optimization;\n$ans6236 = num$min2.app(anf_arg3010,anf_arg3014);\nvar anf_arg3019 = $ans6236;\n$al6237 = L[2219];\nvar anf_bracket6241 = G(self5098,\"x-min\",L[2219]);\n$al6237 = L[2220];\nvar anf_arg3016 = G(anf_bracket6241,\"value\",L[2220]);\n// caller optimization;\n$ans6236 = num$max18.app(anf_arg3019,anf_arg3016);\nvar px$min6263 = $ans6236;\n// caller optimization;\n$ans6236 = snd3607.app(in6234);\nvar anf_arg3020 = $ans6236;\n// caller optimization;\n$ans6236 = snd3607.app(out6235);\nvar anf_arg6242 = $ans6236;\n// caller optimization;\n$ans6236 = num$max18.app(anf_arg3020,anf_arg6242);\nvar anf_arg6244 = $ans6236;\n$al6237 = L[2221];\nvar anf_bracket6243 = G(self5098,\"y-max\",L[2221]);\n$al6237 = L[2222];\nvar anf_arg6245 = G(anf_bracket6243,\"value\",L[2222]);\n// caller optimization;\n$ans6236 = num$min2.app(anf_arg6244,anf_arg6245);\nvar py$max6267 = $ans6236;\n// caller optimization;\n$ans6236 = snd3607.app(in6234);\nvar anf_arg6253 = $ans6236;\n// caller optimization;\n$ans6236 = snd3607.app(out6235);\nvar anf_arg3032 = $ans6236;\n// caller optimization;\n$ans6236 = num$min2.app(anf_arg6253,anf_arg3032);\nvar anf_arg3030 = $ans6236;\n$al6237 = L[2223];\nvar anf_bracket6254 = G(self5098,\"y-min\",L[2223]);\n$al6237 = L[2224];\nvar anf_arg6255 = G(anf_bracket6254,\"value\",L[2224]);\n// caller optimization;\n$ans6236 = num$max18.app(anf_arg3030,anf_arg6255);\nvar py$min6265 = $ans6236;\n// caller optimization;\n$ans6236 = fst3606.app(in6234);\nvar anf_arg3034 = $ans6236;\n// caller optimization;\n$ans6236 = fst3606.app(out6235);\nvar anf_arg3036 = $ans6236;\n$step6232 = 3;\n$al6237 = L[2282];\n// omitting isFunction check;\n$ans6236 = unsafe$equal6098.app(anf_arg3034,anf_arg3036);\nbreak;\ncase 3: var anf_if6335 = $ans6236;\n$step6232 = R.checkPyretTrue(anf_if6335)?4:7;\nbreak;\ncase 4: $ans6236 = R.getMaker2(list7,(\"make2\"),L[2233],L[2234]);\nvar anf_fun3044 = $ans6236;\n// caller optimization;\n$ans6236 = fst3606.app(in6234);\nvar anf_arg6286 = $ans6236;\n$al6237 = L[2235];\nvar anf_bracket6277 = G(self5098,\"y-min\",L[2235]);\n$al6237 = L[2236];\nvar anf_arg3039 = G(anf_bracket6277,\"value\",L[2236]);\n$step6232 = 5;\n$al6237 = L[2240];\n// omitting isFunction check;\n$ans6236 = posn6278.app(anf_arg6286,anf_arg3039);\nbreak;\ncase 5: var anf_arg3042 = $ans6236;\n// caller optimization;\n$ans6236 = fst3606.app(in6234);\nvar anf_arg6288 = $ans6236;\n$al6237 = L[2237];\nvar anf_bracket6287 = G(self5098,\"y-max\",L[2237]);\n$al6237 = L[2238];\nvar anf_arg3045 = G(anf_bracket6287,\"value\",L[2238]);\n$step6232 = 6;\n$al6237 = L[2239];\n// omitting isFunction check;\n$ans6236 = posn6278.app(anf_arg6288,anf_arg3045);\nbreak;\ncase 6: var anf_arg6289 = $ans6236;\n$step6232 = 26;\n$al6237 = L[2234];\nif(typeof(anf_fun3044.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6237,anf_fun3044);\n}\n$ans6236 = anf_fun3044.app(anf_arg3042,anf_arg6289);\nbreak;\ncase 7: // caller optimization;\n$ans6236 = snd3607.app(in6234);\nvar anf_arg3059 = $ans6236;\n// caller optimization;\n$ans6236 = snd3607.app(out6235);\nvar anf_arg6290 = $ans6236;\n$step6232 = 8;\n$al6237 = L[2281];\n// omitting isFunction check;\n$ans6236 = _minus12.app(anf_arg3059,anf_arg6290);\nbreak;\ncase 8: var anf_arg3075 = $ans6236;\n// caller optimization;\n$ans6236 = fst3606.app(in6234);\nvar anf_arg6291 = $ans6236;\n// caller optimization;\n$ans6236 = fst3606.app(out6235);\nvar anf_arg6292 = $ans6236;\n$step6232 = 9;\n$al6237 = L[2280];\n// omitting isFunction check;\n$ans6236 = _minus12.app(anf_arg6291,anf_arg6292);\nbreak;\ncase 9: var anf_arg6293 = $ans6236;\n$step6232 = 10;\n$al6237 = L[2279];\n// omitting isFunction check;\n$ans6236 = _divide16.app(anf_arg3075,anf_arg6293);\nbreak;\ncase 10: var m6294 = $ans6236;\n// caller optimization;\n$ans6236 = snd3607.app(in6234);\nvar anf_arg3077 = $ans6236;\n// caller optimization;\n$ans6236 = fst3606.app(in6234);\nvar anf_arg3079 = $ans6236;\n$step6232 = 11;\n$al6237 = L[2278];\n// omitting isFunction check;\n$ans6236 = _times5.app(m6294,anf_arg3079);\nbreak;\ncase 11: var anf_arg6295 = $ans6236;\n$step6232 = 12;\n$al6237 = L[2277];\n// omitting isFunction check;\n$ans6236 = _minus12.app(anf_arg3077,anf_arg6295);\nbreak;\ncase 12: var c6303 = $ans6236;\nvar $temp_lam6297 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2241($x6298) {\nvar $step6296 = 0;\nvar $elidedFrames6302 = 0;\nvar $ans6299 = D;\nvar $al6300 = L[2241];\nif(R.isAR($x6298)) {\n$step6296 = $x6298.step;\n$al6300 = $x6298.from;\n$ans6299 = $x6298.ans;\n$elidedFrames6302 = $x6298.elidedFrames;\nx6298 = $x6298.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2241],1,$t,false);\n}\nvar x6298 = $x6298;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6299 = R.mC();\n}\nwhile(!R.isContinuation($ans6299)) {\nswitch($step6296) {\ncase 0: $step6296 = 1;\n$al6300 = L[2243];\n// omitting isFunction check;\n$ans6299 = _times5.app(m6294,x6298);\nbreak;\ncase 1: var anf_arg3094 = $ans6299;\n$step6296 = 2;\n$al6300 = L[2242];\n// omitting isFunction check;\n$ans6299 = _plus5.app(anf_arg3094,c6303);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans6299;\ndefault: R.ffi.throwSpinnakerError(L[2241],$step6296);\n}\n}\nif($step6296 !== 2) {\n$ans6299.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6300,$temp_lam6297,$step6296,[x6298],[],$elidedFrames6302);\n}\nreturn $ans6299;\n};\nvar f6316 = R.mF($temp_lam6297,\"\");\nvar $temp_lam6306 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2244($y6307) {\nvar $step6305 = 0;\nvar $elidedFrames6311 = 0;\nvar $ans6308 = D;\nvar $al6309 = L[2244];\nif(R.isAR($y6307)) {\n$step6305 = $y6307.step;\n$al6309 = $y6307.from;\n$ans6308 = $y6307.ans;\n$elidedFrames6311 = $y6307.elidedFrames;\ny6307 = $y6307.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2244],1,$t,false);\n}\nvar y6307 = $y6307;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6308 = R.mC();\n}\nwhile(!R.isContinuation($ans6308)) {\nswitch($step6305) {\ncase 0: $step6305 = 1;\n$al6309 = L[2246];\n// omitting isFunction check;\n$ans6308 = _minus12.app(y6307,c6303);\nbreak;\ncase 1: var anf_arg6312 = $ans6308;\n$step6305 = 2;\n$al6309 = L[2245];\n// omitting isFunction check;\n$ans6308 = _divide16.app(anf_arg6312,m6294);\nbreak;\ncase 2: ++R.GAS;\nreturn $ans6308;\ndefault: R.ffi.throwSpinnakerError(L[2244],$step6305);\n}\n}\nif($step6305 !== 2) {\n$ans6308.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6309,$temp_lam6306,$step6305,[y6307],[],$elidedFrames6311);\n}\nreturn $ans6308;\n};\nvar g6326 = R.mF($temp_lam6306,\"\");\n$ans6236 = R.getMaker2(list7,(\"make2\"),L[2247],L[2248]);\nvar anf_fun6322 = $ans6236;\n$al6237 = L[2249];\nvar anf_bracket6314 = G(self5098,\"x-min\",L[2249]);\n$al6237 = L[2250];\nvar anf_arg6317 = G(anf_bracket6314,\"value\",L[2250]);\n$al6237 = L[2251];\nvar anf_bracket6315 = G(self5098,\"x-min\",L[2251]);\n$al6237 = L[2252];\nvar anf_arg3135 = G(anf_bracket6315,\"value\",L[2252]);\n$step6232 = 13;\n$al6237 = L[2276];\n// omitting isFunction check;\n$ans6236 = f6316.app(anf_arg3135);\nbreak;\ncase 13: var anf_arg6318 = $ans6236;\n$step6232 = 14;\n$al6237 = L[2275];\n// omitting isFunction check;\n$ans6236 = posn6278.app(anf_arg6317,anf_arg6318);\nbreak;\ncase 14: var anf_arg3139 = $ans6236;\n$al6237 = L[2253];\nvar anf_bracket6319 = G(self5098,\"x-max\",L[2253]);\n$al6237 = L[2254];\nvar anf_arg6321 = G(anf_bracket6319,\"value\",L[2254]);\n$al6237 = L[2255];\nvar anf_bracket6320 = G(self5098,\"x-max\",L[2255]);\n$al6237 = L[2256];\nvar anf_arg3153 = G(anf_bracket6320,\"value\",L[2256]);\n$step6232 = 15;\n$al6237 = L[2274];\n// omitting isFunction check;\n$ans6236 = f6316.app(anf_arg3153);\nbreak;\ncase 15: var anf_arg3154 = $ans6236;\n$step6232 = 16;\n$al6237 = L[2273];\n// omitting isFunction check;\n$ans6236 = posn6278.app(anf_arg6321,anf_arg3154);\nbreak;\ncase 16: var anf_arg6323 = $ans6236;\n$step6232 = 17;\n$al6237 = L[2248];\nif(typeof(anf_fun6322.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6237,anf_fun6322);\n}\n$ans6236 = anf_fun6322.app(anf_arg3139,anf_arg6323);\nbreak;\ncase 17: var anf_arg3168 = $ans6236;\n$step6232 = 18;\n$al6237 = L[2272];\n// omitting isFunction check;\n$ans6236 = unsafe$equal6098.app(m6294,(0));\nbreak;\ncase 18: var anf_if3177 = $ans6236;\n$step6232 = R.checkPyretTrue(anf_if3177)?19:20;\nbreak;\ncase 19: $step6232 = 25;\n$ans6236 = empty18;\nbreak;\ncase 20: $ans6236 = R.getMaker2(list7,(\"make2\"),L[2258],L[2259]);\nvar anf_fun3172 = $ans6236;\n$al6237 = L[2260];\nvar anf_bracket6325 = G(self5098,\"y-min\",L[2260]);\n$al6237 = L[2261];\nvar anf_arg6327 = G(anf_bracket6325,\"value\",L[2261]);\n$step6232 = 21;\n$al6237 = L[2271];\n// omitting isFunction check;\n$ans6236 = g6326.app(anf_arg6327);\nbreak;\ncase 21: var anf_arg3173 = $ans6236;\n$al6237 = L[2262];\nvar anf_bracket6328 = G(self5098,\"y-min\",L[2262]);\n$al6237 = L[2263];\nvar anf_arg3174 = G(anf_bracket6328,\"value\",L[2263]);\n$step6232 = 22;\n$al6237 = L[2270];\n// omitting isFunction check;\n$ans6236 = posn6278.app(anf_arg3173,anf_arg3174);\nbreak;\ncase 22: var anf_arg6334 = $ans6236;\n$al6237 = L[2264];\nvar anf_bracket6329 = G(self5098,\"y-max\",L[2264]);\n$al6237 = L[2265];\nvar anf_arg6330 = G(anf_bracket6329,\"value\",L[2265]);\n$step6232 = 23;\n$al6237 = L[2269];\n// omitting isFunction check;\n$ans6236 = g6326.app(anf_arg6330);\nbreak;\ncase 23: var anf_arg6332 = $ans6236;\n$al6237 = L[2266];\nvar anf_bracket6331 = G(self5098,\"y-max\",L[2266]);\n$al6237 = L[2267];\nvar anf_arg6333 = G(anf_bracket6331,\"value\",L[2267]);\n$step6232 = 24;\n$al6237 = L[2268];\n// omitting isFunction check;\n$ans6236 = posn6278.app(anf_arg6332,anf_arg6333);\nbreak;\ncase 24: var anf_arg3215 = $ans6236;\n$step6232 = 25;\n$al6237 = L[2259];\nif(typeof(anf_fun3172.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6237,anf_fun3172);\n}\n$ans6236 = anf_fun3172.app(anf_arg6334,anf_arg3215);\nbreak;\ncase 25: var anf_arg6324 = $ans6236;\n$step6232 = 26;\n$al6237 = L[2257];\n// omitting isFunction check;\n$ans6236 = _plus5.app(anf_arg3168,anf_arg6324);\nbreak;\ncase 26: var candidates6273 = $ans6236;\nvar $temp_lam6257 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2225($p6258) {\nvar $step6256 = 0;\nvar $elidedFrames6262 = 0;\nvar $ans6259 = D;\nvar $al6260 = L[2225];\nif(R.isAR($p6258)) {\n$step6256 = $p6258.step;\n$al6260 = $p6258.from;\n$ans6259 = $p6258.ans;\n$elidedFrames6262 = $p6258.elidedFrames;\np6258 = $p6258.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2225],1,$t,false);\n}\nvar p6258 = $p6258;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6259 = R.mC();\n}\nwhile(!R.isContinuation($ans6259)) {\nswitch($step6256) {\ncase 0: // caller optimization;\n$ans6259 = fst3606.app(p6258);\nvar anf_arg3225 = $ans6259;\n$step6256 = 1;\n$al6260 = L[2229];\n// omitting isFunction check;\n$ans6259 = _lessequal4.app(px$min6263,anf_arg3225);\nbreak;\ncase 1: var anf_if6271 = $ans6259;\n$step6256 = R.checkPyretTrue(anf_if6271)?2:10;\nbreak;\ncase 2: // caller optimization;\n$ans6259 = fst3606.app(p6258);\nvar anf_arg3243 = $ans6259;\n$step6256 = 3;\n$al6260 = L[2228];\n// omitting isFunction check;\n$ans6259 = _lessequal4.app(anf_arg3243,px$max6264);\nbreak;\ncase 3: var anf_if6270 = $ans6259;\n$step6256 = R.checkPyretTrue(anf_if6270)?4:9;\nbreak;\ncase 4: // caller optimization;\n$ans6259 = snd3607.app(p6258);\nvar anf_arg6266 = $ans6259;\n$step6256 = 5;\n$al6260 = L[2227];\n// omitting isFunction check;\n$ans6259 = _lessequal4.app(py$min6265,anf_arg6266);\nbreak;\ncase 5: var anf_if6269 = $ans6259;\n$step6256 = R.checkPyretTrue(anf_if6269)?6:8;\nbreak;\ncase 6: // caller optimization;\n$ans6259 = snd3607.app(p6258);\nvar anf_arg3278 = $ans6259;\n$step6256 = 7;\n$al6260 = L[2226];\n// omitting isFunction check;\n$ans6259 = _lessequal4.app(anf_arg3278,py$max6267);\nbreak;\ncase 7: var anf_arg6268 = $ans6259;\n$ans6259 = R.checkWrapBoolean(anf_arg6268);\n$step6256 = 11;\nbreak;\ncase 8: $step6256 = 11;\n$ans6259 = (false);\nbreak;\ncase 9: $step6256 = 11;\n$ans6259 = (false);\nbreak;\ncase 10: $step6256 = 11;\n$ans6259 = (false);\nbreak;\ncase 11: ++R.GAS;\nreturn $ans6259;\ndefault: R.ffi.throwSpinnakerError(L[2225],$step6256);\n}\n}\nif($step6256 !== 11) {\n$ans6259.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6260,$temp_lam6257,$step6256,[p6258],[],$elidedFrames6262);\n}\nreturn $ans6259;\n};\nvar anf_arg3288 = R.mF($temp_lam6257,\"\");\n$step6232 = 27;\n$ans6236 = R.maybeMethodCall1(candidates6273,\"filter\",L[2230],anf_arg3288);\nbreak;\ncase 27: var arg_6274 = $ans6236;\n$step6232 = 28;\n$al6237 = L[2232];\n// omitting isFunction check;\n$ans6236 = nearest6231.$var.app(arg_6274,in6234);\nbreak;\ncase 28: var ann_check_temp6275 = $ans6236;\n$step6232 = 29;\n$al6237 = L[2231];\nvar $ann$check6276 = R._cA(L[2231],Option27,ann_check_temp6275);\nif(R.isContinuation($ann$check6276)) {\n$ans6236 = $ann$check6276;\n}\nbreak;\ncase 29: $step6232 = 30;\n$ans6236 = ann_check_temp6275;\nbreak;\ncase 30: ++R.GAS;\nreturn $ans6236;\ndefault: R.ffi.throwSpinnakerError(L[2216],$step6232);\n}\n}\nif($step6232 !== 30) {\n$ans6236.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6237,$temp_lam6233,$step6232,[in6234,out6235,self5098],[anf_arg3042,anf_arg3075,anf_arg6321,anf_arg3077,ann_check_temp6275,px$max6264,anf_arg6334,anf_arg3168,py$max6267,anf_arg6317,anf_arg3139,g6326,f6316,px$min6263,py$min6265,anf_fun3172,anf_fun3044,anf_fun6322,m6294],$elidedFrames6239);\n}\nreturn $ans6236;\n};\nvar anf_assign6337 = R.mF($temp_lam6233,\"find-pt-on-edge\");\nfind$pt$on$edge6338.$var = anf_assign6337;\nR.nothing;\nvar $temp_lam6340 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2285($pts6341,$self5172) {\nvar $step6339 = 0;\nvar $elidedFrames6345 = 0;\nvar $ans6342 = D;\nvar $al6343 = L[2285];\nif(R.isAR($pts6341)) {\n$step6339 = $pts6341.step;\n$al6343 = $pts6341.from;\n$ans6342 = $pts6341.ans;\n$elidedFrames6345 = $pts6341.elidedFrames;\npts6341 = $pts6341.args[0];\nself5172 = $pts6341.args[1];\ntup6437 = $pts6341.vars[0];\nann_check_temp6349 = $pts6341.vars[1];\ncases6346 = $pts6341.vars[2];\ncases6348 = $pts6341.vars[3];\ntup6373 = $pts6341.vars[4];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2285],2,$t,false);\n}\nvar pts6341 = $pts6341;\nvar self5172 = $self5172;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6342 = R.mC();\n}\nwhile(!R.isContinuation($ans6342)) {\nswitch($step6339) {\ncase 0: $step6339 = 1;\n$al6343 = L[2350];\nR._cA(L[2350],List16,pts6341);\nbreak;\ncase 1: var cases6346 = pts6341;\n$step6339 = 2;\n$al6343 = L[2349];\nvar $ann$check6443 = R._cA(L[2349],List16,cases6346);\nif(R.isContinuation($ann$check6443)) {\n$ans6342 = $ann$check6443;\n}\nbreak;\ncase 2: $al6343 = L[2307];\n$step6339 = $cases_dispatch6442[cases6346.$name] || 7;\nbreak;\ncase 3: if(cases6346.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[2306],false,L[2307],cases6346.$loc);\n}\n$step6339 = 8;\n$ans6342 = empty18;\nbreak;\ncase 4: if(cases6346.$arity !== 2) {\nif(cases6346.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2348],2,cases6346.$arity,L[2307],cases6346.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2348],true,L[2307],cases6346.$loc);\n}\n}\nvar $fn6441 = cases6346.$constructor.$fieldNames;\nvar f6435 = R.dF(cases6346.dict[$fn6441[0]],cases6346.$mut_fields_mask[0],false);\nvar r6436 = R.dF(cases6346.dict[$fn6441[1]],cases6346.$mut_fields_mask[1],false);\nvar $temp_lam6381 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2308($tup6382,$stop6383) {\nvar $step6380 = 0;\nvar $elidedFrames6387 = 0;\nvar $ans6384 = D;\nvar $al6385 = L[2308];\nif(R.isAR($tup6382)) {\n$step6380 = $tup6382.step;\n$al6385 = $tup6382.from;\n$ans6384 = $tup6382.ans;\n$elidedFrames6387 = $tup6382.elidedFrames;\ntup6382 = $tup6382.args[0];\nstop6383 = $tup6382.args[1];\nsegment6389 = $tup6382.vars[0];\nsegments6391 = $tup6382.vars[1];\ncases6390 = $tup6382.vars[2];\ncases6421 = $tup6382.vars[3];\nstart6388 = $tup6382.vars[4];\nresult6401 = $tup6382.vars[5];\nresult6424 = $tup6382.vars[6];\nanf_fun6420 = $tup6382.vars[7];\nanf_fun6415 = $tup6382.vars[8];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2308],2,$t,false);\n}\nvar tup6382 = $tup6382;\nvar stop6383 = $stop6383;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6384 = R.mC();\n}\nwhile(!R.isContinuation($ans6384)) {\nswitch($step6380) {\ncase 0: $step6380 = 1;\n$al6385 = L[2344];\nR.checkTupleBind(tup6382,2,L[2344]);\nbreak;\ncase 1: var segments6391 = R.getTuple(tup6382,0,L[2309]);\nvar start6388 = R.getTuple(tup6382,1,L[2310]);\n$step6380 = 2;\n$al6385 = L[2343];\n// omitting isFunction check;\n$ans6384 = in$bound$xy6171.$var.app(start6388,self5172);\nbreak;\ncase 2: var anf_if6433 = $ans6384;\n$step6380 = R.checkPyretTrue(anf_if6433)?3:5;\nbreak;\ncase 3: $step6380 = 4;\n$al6385 = L[2342];\n// omitting isFunction check;\n$ans6384 = in$bound$xy6171.$var.app(stop6383,self5172);\nbreak;\ncase 4: var anf_arg3299 = $ans6384;\n$ans6384 = R.checkWrapBoolean(anf_arg3299);\n$step6380 = 6;\nbreak;\ncase 5: $step6380 = 6;\n$ans6384 = (false);\nbreak;\ncase 6: var anf_if6432 = $ans6384;\n$step6380 = R.checkPyretTrue(anf_if6432)?7:8;\nbreak;\ncase 7: $ans6384 = R.getMaker2(list7,(\"make2\"),L[2315],L[2316]);\nvar anf_fun6399 = $ans6384;\n$step6380 = 31;\n$al6385 = L[2316];\nif(typeof(anf_fun6399.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6385,anf_fun6399);\n}\n$ans6384 = anf_fun6399.app(start6388,stop6383);\nbreak;\ncase 8: $step6380 = 9;\n$al6385 = L[2341];\n// omitting isFunction check;\n$ans6384 = in$bound$xy6171.$var.app(start6388,self5172);\nbreak;\ncase 9: var anf_if6431 = $ans6384;\n$step6380 = R.checkPyretTrue(anf_if6431)?10:20;\nbreak;\ncase 10: $step6380 = 11;\n$al6385 = L[2326];\n// omitting isFunction check;\n$ans6384 = find$pt$on$edge6338.$var.app(start6388,stop6383,self5172);\nbreak;\ncase 11: var anf_bracket6400 = $ans6384;\n$al6385 = L[2317];\nvar result6401 = G(anf_bracket6400,\"value\",L[2317]);\n// caller optimization;\n$ans6384 = fst3606.app(start6388);\nvar anf_arg6412 = $ans6384;\n// caller optimization;\n$ans6384 = fst3606.app(result6401);\nvar anf_arg6413 = $ans6384;\n$step6380 = 12;\n$al6385 = L[2325];\n// omitting isFunction check;\n$ans6384 = unsafe$equal6098.app(anf_arg6412,anf_arg6413);\nbreak;\ncase 12: var anf_if6418 = $ans6384;\n$step6380 = R.checkPyretTrue(anf_if6418)?13:15;\nbreak;\ncase 13: // caller optimization;\n$ans6384 = snd3607.app(start6388);\nvar anf_arg3313 = $ans6384;\n// caller optimization;\n$ans6384 = snd3607.app(result6401);\nvar anf_arg3316 = $ans6384;\n$step6380 = 14;\n$al6385 = L[2324];\n// omitting isFunction check;\n$ans6384 = unsafe$equal6098.app(anf_arg3313,anf_arg3316);\nbreak;\ncase 14: var anf_arg3317 = $ans6384;\n$ans6384 = R.checkWrapBoolean(anf_arg3317);\n$step6380 = 16;\nbreak;\ncase 15: $step6380 = 16;\n$ans6384 = (false);\nbreak;\ncase 16: var anf_if6417 = $ans6384;\n$step6380 = R.checkPyretTrue(anf_if6417)?17:19;\nbreak;\ncase 17: $ans6384 = R.getMaker2(list7,(\"make2\"),L[2318],L[2319]);\nvar anf_fun6415 = $ans6384;\n$step6380 = 18;\n$al6385 = L[2321];\n// omitting isFunction check;\n$ans6384 = find$pt$on$edge6338.$var.app(stop6383,start6388,self5172);\nbreak;\ncase 18: var anf_bracket6414 = $ans6384;\n$al6385 = L[2320];\nvar anf_arg6416 = G(anf_bracket6414,\"value\",L[2320]);\n$step6380 = 31;\n$al6385 = L[2319];\nif(typeof(anf_fun6415.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6385,anf_fun6415);\n}\n$ans6384 = anf_fun6415.app(start6388,anf_arg6416);\nbreak;\ncase 19: $ans6384 = R.getMaker2(list7,(\"make2\"),L[2322],L[2323]);\nvar anf_fun3325 = $ans6384;\n$step6380 = 31;\n$al6385 = L[2323];\nif(typeof(anf_fun3325.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6385,anf_fun3325);\n}\n$ans6384 = anf_fun3325.app(start6388,result6401);\nbreak;\ncase 20: $step6380 = 21;\n$al6385 = L[2340];\n// omitting isFunction check;\n$ans6384 = in$bound$xy6171.$var.app(stop6383,self5172);\nbreak;\ncase 21: var anf_if6430 = $ans6384;\n$step6380 = R.checkPyretTrue(anf_if6430)?22:24;\nbreak;\ncase 22: $ans6384 = R.getMaker2(list7,(\"make2\"),L[2327],L[2328]);\nvar anf_fun6420 = $ans6384;\n$step6380 = 23;\n$al6385 = L[2330];\n// omitting isFunction check;\n$ans6384 = find$pt$on$edge6338.$var.app(start6388,stop6383,self5172);\nbreak;\ncase 23: var anf_bracket6419 = $ans6384;\n$al6385 = L[2329];\nvar anf_arg3329 = G(anf_bracket6419,\"value\",L[2329]);\n$step6380 = 31;\n$al6385 = L[2328];\nif(typeof(anf_fun6420.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6385,anf_fun6420);\n}\n$ans6384 = anf_fun6420.app(anf_arg3329,stop6383);\nbreak;\ncase 24: $step6380 = 25;\n$al6385 = L[2339];\n// omitting isFunction check;\n$ans6384 = find$pt$on$edge6338.$var.app(start6388,stop6383,self5172);\nbreak;\ncase 25: var cases6421 = $ans6384;\n$step6380 = 26;\n$al6385 = L[2338];\nvar $ann$check6429 = R._cA(L[2338],Option27,cases6421);\nif(R.isContinuation($ann$check6429)) {\n$ans6384 = $ann$check6429;\n}\nbreak;\ncase 26: $al6385 = L[2332];\n$step6380 = $cases_dispatch6428[cases6421.$name] || 30;\nbreak;\ncase 27: if(cases6421.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[2331],false,L[2332],cases6421.$loc);\n}\n$step6380 = 31;\n$ans6384 = empty18;\nbreak;\ncase 28: if(cases6421.$arity !== 1) {\nif(cases6421.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2337],1,cases6421.$arity,L[2332],cases6421.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2337],true,L[2332],cases6421.$loc);\n}\n}\nvar $fn6427 = cases6421.$constructor.$fieldNames;\nvar result6424 = R.dF(cases6421.dict[$fn6427[0]],cases6421.$mut_fields_mask[0],false);\n$step6380 = 29;\n$al6385 = L[2336];\n// omitting isFunction check;\n$ans6384 = find$pt$on$edge6338.$var.app(stop6383,start6388,self5172);\nbreak;\ncase 29: var anf_bracket6422 = $ans6384;\n$al6385 = L[2333];\nvar result26425 = G(anf_bracket6422,\"value\",L[2333]);\n$ans6384 = R.getMaker2(list7,(\"make2\"),L[2334],L[2335]);\nvar anf_fun6423 = $ans6384;\n$step6380 = 31;\n$al6385 = L[2335];\nif(typeof(anf_fun6423.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6385,anf_fun6423);\n}\n$ans6384 = anf_fun6423.app(result6424,result26425);\nbreak;\ncase 30: $ans6384 = R.throwNoCasesMatched(L[2332],cases6421);\n$step6380 = 31;\nbreak;\ncase 31: var segment6389 = $ans6384;\nvar cases6390 = segment6389;\n$step6380 = 32;\n$al6385 = L[2314];\nvar $ann$check6398 = R._cA(L[2314],List16,cases6390);\nif(R.isContinuation($ann$check6398)) {\n$ans6384 = $ann$check6398;\n}\nbreak;\ncase 32: $al6385 = L[2312];\n$step6380 = $cases_dispatch6397[cases6390.$name] || 35;\nbreak;\ncase 33: if(cases6390.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[2311],false,L[2312],cases6390.$loc);\n}\n$step6380 = 36;\n$ans6384 = R.makeTuple([segments6391,stop6383]);\nbreak;\ncase 34: if(cases6390.$arity !== 2) {\nif(cases6390.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2313],2,cases6390.$arity,L[2312],cases6390.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2313],true,L[2312],cases6390.$loc);\n}\n}\nvar $fn6394 = cases6390.$constructor.$fieldNames;\nR.dF(cases6390.dict[$fn6394[0]],cases6390.$mut_fields_mask[0],false);\nR.dF(cases6390.dict[$fn6394[1]],cases6390.$mut_fields_mask[1],false);\n// caller optimization;\n$ans6384 = link5.app(segment6389,segments6391);\nvar anf_tuple_fields6392 = $ans6384;\n$step6380 = 36;\n$ans6384 = R.makeTuple([anf_tuple_fields6392,stop6383]);\nbreak;\ncase 35: $ans6384 = R.throwNoCasesMatched(L[2312],cases6390);\n$step6380 = 36;\nbreak;\ncase 36: ++R.GAS;\nreturn $ans6384;\ndefault: R.ffi.throwSpinnakerError(L[2308],$step6380);\n}\n}\nif($step6380 !== 36) {\n$ans6384.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6385,$temp_lam6381,$step6380,[tup6382,stop6383],[segment6389,segments6391,cases6390,cases6421,start6388,result6401,result6424,anf_fun6420,anf_fun6415],$elidedFrames6387);\n}\nreturn $ans6384;\n};\nvar anf_arg3337 = R.mF($temp_lam6381,\"for-body<line 2652, column 22>\");\nvar anf_arg3333 = R.makeTuple([empty18,f6435]);\n$step6339 = 5;\n$al6343 = L[2308];\n// omitting isFunction check;\n$ans6342 = fold24.app(anf_arg3337,anf_arg3333,r6436);\nbreak;\ncase 5: var tup6437 = $ans6342;\n$step6339 = 6;\n$al6343 = L[2347];\nR.checkTupleBind(tup6437,2,L[2347]);\nbreak;\ncase 6: var segments6438 = R.getTuple(tup6437,0,L[2345]);\nR.getTuple(tup6437,1,L[2346]);\n$step6339 = 8;\n$ans6342 = segments6438;\nbreak;\ncase 7: $ans6342 = R.throwNoCasesMatched(L[2307],cases6346);\n$step6339 = 8;\nbreak;\ncase 8: var segments6347 = $ans6342;\nvar cases6348 = segments6347;\n$step6339 = 9;\n$al6343 = L[2305];\nvar $ann$check6379 = R._cA(L[2305],List16,cases6348);\nif(R.isContinuation($ann$check6379)) {\n$ans6342 = $ann$check6379;\n}\nbreak;\ncase 9: $al6343 = L[2288];\n$step6339 = $cases_dispatch6378[cases6348.$name] || 14;\nbreak;\ncase 10: if(cases6348.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[2287],false,L[2288],cases6348.$loc);\n}\n$step6339 = 15;\n$ans6342 = empty18;\nbreak;\ncase 11: if(cases6348.$arity !== 2) {\nif(cases6348.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2304],2,cases6348.$arity,L[2288],cases6348.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2304],true,L[2288],cases6348.$loc);\n}\n}\nvar $fn6377 = cases6348.$constructor.$fieldNames;\nvar f6369 = R.dF(cases6348.dict[$fn6377[0]],cases6348.$mut_fields_mask[0],false);\nvar r6372 = R.dF(cases6348.dict[$fn6377[1]],cases6348.$mut_fields_mask[1],false);\nvar $temp_lam6352 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2289($tup6353,$segment6354) {\nvar $step6351 = 0;\nvar $elidedFrames6358 = 0;\nvar $ans6355 = D;\nvar $al6356 = L[2289];\nif(R.isAR($tup6353)) {\n$step6351 = $tup6353.step;\n$al6356 = $tup6353.from;\n$ans6355 = $tup6353.ans;\n$elidedFrames6358 = $tup6353.elidedFrames;\ntup6353 = $tup6353.args[0];\nsegment6354 = $tup6353.args[1];\nlst6363 = $tup6353.vars[0];\npt$a6360 = $tup6353.vars[1];\npt$b6361 = $tup6353.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2289],2,$t,false);\n}\nvar tup6353 = $tup6353;\nvar segment6354 = $segment6354;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6355 = R.mC();\n}\nwhile(!R.isContinuation($ans6355)) {\nswitch($step6351) {\ncase 0: $step6351 = 1;\n$al6356 = L[2300];\nR.checkTupleBind(tup6353,2,L[2300]);\nbreak;\ncase 1: var prev6359 = R.getTuple(tup6353,0,L[2290]);\nvar lst6363 = R.getTuple(tup6353,1,L[2291]);\n$step6351 = 2;\n$ans6355 = R.maybeMethodCall1(prev6359,\"get\",L[2292],(0));\nbreak;\ncase 2: var pt$a6360 = $ans6355;\n$step6351 = 3;\n$ans6355 = R.maybeMethodCall1(segment6354,\"get\",L[2293],(1));\nbreak;\ncase 3: var pt$b6361 = $ans6355;\n// caller optimization;\n$ans6355 = fst3606.app(pt$a6360);\nvar anf_arg3335 = $ans6355;\n// caller optimization;\n$ans6355 = fst3606.app(pt$b6361);\nvar anf_arg3339 = $ans6355;\n$step6351 = 4;\n$al6356 = L[2299];\n// omitting isFunction check;\n$ans6355 = unsafe$equal6098.app(anf_arg3335,anf_arg3339);\nbreak;\ncase 4: var anf_if6367 = $ans6355;\n$step6351 = R.checkPyretTrue(anf_if6367)?5:7;\nbreak;\ncase 5: // caller optimization;\n$ans6355 = snd3607.app(pt$a6360);\nvar anf_arg3340 = $ans6355;\n// caller optimization;\n$ans6355 = snd3607.app(pt$b6361);\nvar anf_arg3343 = $ans6355;\n$step6351 = 6;\n$al6356 = L[2298];\n// omitting isFunction check;\n$ans6355 = unsafe$equal6098.app(anf_arg3340,anf_arg3343);\nbreak;\ncase 6: var anf_arg3341 = $ans6355;\n$ans6355 = R.checkWrapBoolean(anf_arg3341);\n$step6351 = 8;\nbreak;\ncase 7: $step6351 = 8;\n$ans6355 = (false);\nbreak;\ncase 8: var anf_if6366 = $ans6355;\n$step6351 = R.checkPyretTrue(anf_if6366)?9:11;\nbreak;\ncase 9: $step6351 = 10;\n$ans6355 = R.maybeMethodCall1(segment6354,\"get\",L[2294],(0));\nbreak;\ncase 10: var anf_arg3342 = $ans6355;\n// caller optimization;\n$ans6355 = link5.app(anf_arg3342,lst6363);\n$step6351 = 13;\nbreak;\ncase 11: $ans6355 = R.getMaker0(raw$array2,(\"make0\"),L[2295],L[2296]);\nvar anf_fun6364 = $ans6355;\n$step6351 = 12;\n$al6356 = L[2296];\nif(typeof(anf_fun6364.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6356,anf_fun6364);\n}\n$ans6355 = anf_fun6364.app();\nbreak;\ncase 12: var anf_arg3349 = $ans6355;\n// caller optimization;\n$ans6355 = link5.app(anf_arg3349,lst6363);\nvar anf_arg6365 = $ans6355;\n$step6351 = 13;\n$al6356 = L[2297];\n// omitting isFunction check;\n$ans6355 = _plus5.app(segment6354,anf_arg6365);\nbreak;\ncase 13: var new$lst6362 = $ans6355;\n$step6351 = 14;\n$ans6355 = R.makeTuple([segment6354,new$lst6362]);\nbreak;\ncase 14: ++R.GAS;\nreturn $ans6355;\ndefault: R.ffi.throwSpinnakerError(L[2289],$step6351);\n}\n}\nif($step6351 !== 14) {\n$ans6355.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6356,$temp_lam6352,$step6351,[tup6353,segment6354],[lst6363,pt$a6360,pt$b6361],$elidedFrames6358);\n}\nreturn $ans6355;\n};\nvar anf_arg6370 = R.mF($temp_lam6352,\"for-body<line 2685, column 20>\");\nvar anf_arg6371 = R.makeTuple([f6369,f6369]);\n$step6339 = 12;\n$al6343 = L[2289];\n// omitting isFunction check;\n$ans6342 = fold24.app(anf_arg6370,anf_arg6371,r6372);\nbreak;\ncase 12: var tup6373 = $ans6342;\n$step6339 = 13;\n$al6343 = L[2303];\nR.checkTupleBind(tup6373,2,L[2303]);\nbreak;\ncase 13: R.getTuple(tup6373,0,L[2301]);\nvar result6374 = R.getTuple(tup6373,1,L[2302]);\n$step6339 = 15;\n$ans6342 = result6374;\nbreak;\ncase 14: $ans6342 = R.throwNoCasesMatched(L[2288],cases6348);\n$step6339 = 15;\nbreak;\ncase 15: var ann_check_temp6349 = $ans6342;\n$step6339 = 16;\n$al6343 = L[2286];\nvar $ann$check6350 = R._cA(L[2286],List16,ann_check_temp6349);\nif(R.isContinuation($ann$check6350)) {\n$ans6342 = $ann$check6350;\n}\nbreak;\ncase 16: $step6339 = 17;\n$ans6342 = ann_check_temp6349;\nbreak;\ncase 17: ++R.GAS;\nreturn $ans6342;\ndefault: R.ffi.throwSpinnakerError(L[2285],$step6339);\n}\n}\nif($step6339 !== 17) {\n$ans6342.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6343,$temp_lam6340,$step6339,[pts6341,self5172],[tup6437,ann_check_temp6349,cases6346,cases6348,tup6373],$elidedFrames6345);\n}\nreturn $ans6342;\n};\nvar anf_assign6445 = R.mF($temp_lam6340,\"line-plot-edge-cut\");\nline$plot$edge$cut6446.$var = anf_assign6445;\nR.nothing;\nvar $exact$bound_getfields6451 = function singleton_variant(f) {\nreturn f(this.dict[\"n\"]);\n};\nvar $exact$bound_mutablemask6450 = [false];\nvar $exact$bound$base6447 = {\"$fieldNames\":[\"n\"],\n\"_match\":R.mM(\"exact-bound\",1)};\nvar $exact$bound$brander6448 = R.nB(\"exact-bound\",L[2351]);\nvar $exact$bound$brands6449 = {};\n$exact$bound$brands6449[BoundResult342._brand] = true;\n$exact$bound$brands6449[$exact$bound$brander6448._brand] = true;\nvar exact$bound6452 = R.mVC(L[2351],function $synthesizedConstructor_$exact$bound$base() {\nreturn [$type$Number3];\n},[\"n6453\"],[L[2352]],[false],[\"n6453\"],$exact$bound_mutablemask6450,$exact$bound$base6447,$exact$bound$brands6449,\"exact-bound\",$exact$bound_getfields6451,$exact$bound$base6447);\nvar $inferred$bound_getfields6458 = function singleton_variant(f) {\nreturn f(this.dict[\"n\"]);\n};\nvar $inferred$bound_mutablemask6457 = [false];\nvar $inferred$bound$base6454 = {\"$fieldNames\":[\"n\"],\n\"_match\":R.mM(\"inferred-bound\",1)};\nvar $inferred$bound$brander6455 = R.nB(\"inferred-bound\",L[2353]);\nvar $inferred$bound$brands6456 = {};\n$inferred$bound$brands6456[BoundResult342._brand] = true;\n$inferred$bound$brands6456[$inferred$bound$brander6455._brand] = true;\nvar inferred$bound6459 = R.mVC(L[2353],function $synthesizedConstructor_$inferred$bound$base() {\nreturn [$type$Number3];\n},[\"n6460\"],[L[2354]],[false],[\"n6460\"],$inferred$bound_mutablemask6457,$inferred$bound$base6454,$inferred$bound$brands6456,\"inferred-bound\",$inferred$bound_getfields6458,$inferred$bound$base6454);\nvar $unknown$bound_getfields6465 = function variant(f) {\nreturn f();\n};\nvar $unknown$bound_mutablemask6464 = [];\nvar $unknown$bound$base6461 = {\"_match\":R.mM(\"unknown-bound\",0)};\nvar $unknown$bound$brander6462 = R.nB(\"unknown-bound\",L[2355]);\nvar $unknown$bound$brands6463 = {};\n$unknown$bound$brands6463[BoundResult342._brand] = true;\n$unknown$bound$brands6463[$unknown$bound$brander6462._brand] = true;\nvar anf_assign6467 = R.mO({\"BoundResult\":G(BoundResult342,\"test\",L[2356]),\n\"is-exact-bound\":G($exact$bound$brander6448,\"test\",L[2351]),\n\"exact-bound\":exact$bound6452,\n\"is-inferred-bound\":G($inferred$bound$brander6455,\"test\",L[2353]),\n\"inferred-bound\":inferred$bound6459,\n\"is-unknown-bound\":G($unknown$bound$brander6462,\"test\",L[2355]),\n\"unknown-bound\":R.mDV($unknown$bound$base6461,$unknown$bound$brands6463,\"unknown-bound\",$unknown$bound_getfields6465,-1,$unknown$bound_mutablemask6464,$unknown$bound$base6461,false,L[2355])});\nBoundResult6468.$var = anf_assign6467;\nR.nothing;\n$al331 = L[2356];\nvar anf_assign6469 = G(BoundResult6468.$var,\"BoundResult\",L[2356]);\nis$BoundResult6470.$var = anf_assign6469;\nR.nothing;\n$al331 = L[2351];\nvar anf_assign6471 = G(BoundResult6468.$var,\"is-exact-bound\",L[2351]);\nis$exact$bound6472.$var = anf_assign6471;\nR.nothing;\n$al331 = L[2351];\nvar anf_assign6473 = G(BoundResult6468.$var,\"exact-bound\",L[2351]);\nexact$bound6474.$var = anf_assign6473;\nR.nothing;\n$al331 = L[2353];\nvar anf_assign6475 = G(BoundResult6468.$var,\"is-inferred-bound\",L[2353]);\nis$inferred$bound6476.$var = anf_assign6475;\nR.nothing;\n$al331 = L[2353];\nvar anf_assign6477 = G(BoundResult6468.$var,\"inferred-bound\",L[2353]);\ninferred$bound6478.$var = anf_assign6477;\nR.nothing;\n$al331 = L[2355];\nvar anf_assign6479 = G(BoundResult6468.$var,\"is-unknown-bound\",L[2355]);\nis$unknown$bound6480.$var = anf_assign6479;\nR.nothing;\n$al331 = L[2355];\nvar anf_assign6481 = G(BoundResult6468.$var,\"unknown-bound\",L[2355]);\nunknown$bound6482.$var = anf_assign6481;\nR.nothing;\nvar $temp_lam6484 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2357($b$min6485,$b$max6486) {\nvar $step6483 = 0;\nvar $elidedFrames6490 = 0;\nvar $ans6487 = D;\nvar $al6488 = L[2357];\nif(R.isAR($b$min6485)) {\n$step6483 = $b$min6485.step;\n$al6488 = $b$min6485.from;\n$ans6487 = $b$min6485.ans;\n$elidedFrames6490 = $b$min6485.elidedFrames;\nb$min6485 = $b$min6485.args[0];\nb$max6486 = $b$min6485.args[1];\nann_check_temp6497 = $b$min6485.vars[0];\ncases6491 = $b$min6485.vars[1];\ntup6492 = $b$min6485.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2357],2,$t,false);\n}\nvar b$min6485 = $b$min6485;\nvar b$max6486 = $b$max6486;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6487 = R.mC();\n}\nwhile(!R.isContinuation($ans6487)) {\nswitch($step6483) {\ncase 0: $step6483 = 1;\n$al6488 = L[2397];\nR._cA(L[2397],BoundResult6511,b$min6485);\nbreak;\ncase 1: $step6483 = 2;\n$al6488 = L[2398];\nR._cA(L[2398],BoundResult6511,b$max6486);\nbreak;\ncase 2: var cases6491 = b$min6485;\n$step6483 = 3;\n$al6488 = L[2396];\nvar $ann$check6580 = R._cA(L[2396],BoundResult6511,cases6491);\nif(R.isContinuation($ann$check6580)) {\n$ans6487 = $ann$check6580;\n}\nbreak;\ncase 3: $al6488 = L[2373];\n$step6483 = $cases_dispatch6579[cases6491.$name] || 7;\nbreak;\ncase 4: if(cases6491.$arity !== 1) {\nif(cases6491.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2372],1,cases6491.$arity,L[2373],cases6491.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2372],true,L[2373],cases6491.$loc);\n}\n}\n$step6483 = 8;\n$al6488 = L[2372];\nvar $temp_branch6513 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2373($v$min6500) {\nvar $step6514 = 0;\nvar $elidedFrames6518 = 0;\nvar $ans6515 = D;\nvar $al6516 = L[2365];\nif(R.isAR($v$min6500)) {\n$step6514 = $v$min6500.step;\n$al6516 = $v$min6500.from;\n$ans6515 = $v$min6500.ans;\n$elidedFrames6518 = $v$min6500.elidedFrames;\nv$min6500 = $v$min6500.args[0];\ncases6499 = $v$min6500.vars[0];\n} else {\nvar v$min6500 = $v$min6500;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6515 = R.mC();\n}\nwhile(!R.isContinuation($ans6515)) {\nswitch($step6514) {\ncase 0: var cases6499 = b$max6486;\n$step6514 = 1;\n$al6516 = L[2371];\nvar $ann$check6524 = R._cA(L[2371],BoundResult6511,cases6499);\nif(R.isContinuation($ann$check6524)) {\n$ans6515 = $ann$check6524;\n}\nbreak;\ncase 1: $al6516 = L[2365];\n$step6514 = $cases_dispatch6523[cases6499.$name] || 7;\nbreak;\ncase 2: if(cases6499.$arity !== 1) {\nif(cases6499.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2364],1,cases6499.$arity,L[2365],cases6499.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2364],true,L[2365],cases6499.$loc);\n}\n}\nvar $fn6520 = cases6499.$constructor.$fieldNames;\nvar v$max6501 = R.dF(cases6499.dict[$fn6520[0]],cases6499.$mut_fields_mask[0],false);\n$step6514 = 8;\n$ans6515 = R.makeTuple([v$min6500,v$max6501]);\nbreak;\ncase 3: if(cases6499.$arity !== 1) {\nif(cases6499.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2368],1,cases6499.$arity,L[2365],cases6499.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2368],true,L[2365],cases6499.$loc);\n}\n}\nvar $fn6522 = cases6499.$constructor.$fieldNames;\nvar v$max6504 = R.dF(cases6499.dict[$fn6522[0]],cases6499.$mut_fields_mask[0],false);\n$step6514 = 4;\n$al6516 = L[2367];\n// omitting isFunction check;\n$ans6515 = widen$range6108.$var.app(v$min6500,v$max6504);\nbreak;\ncase 4: var anf_tuple_get6505 = $ans6515;\nvar anf_tuple_fields6506 = R.getTuple(anf_tuple_get6505,1,L[2366]);\n$step6514 = 8;\n$ans6515 = R.makeTuple([v$min6500,anf_tuple_fields6506]);\nbreak;\ncase 5: if(cases6499.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[2370],false,L[2365],cases6499.$loc);\n}\n$step6514 = 6;\n$al6516 = L[2369];\n// omitting isFunction check;\n$ans6515 = _plus5.app(v$min6500,(10));\nbreak;\ncase 6: var anf_tuple_fields6509 = $ans6515;\n$step6514 = 8;\n$ans6515 = R.makeTuple([v$min6500,anf_tuple_fields6509]);\nbreak;\ncase 7: $ans6515 = R.throwNoCasesMatched(L[2365],cases6499);\n$step6514 = 8;\nbreak;\ncase 8: ++R.GAS;\nreturn $ans6515;\ndefault: R.ffi.throwSpinnakerError(L[2365],$step6514);\n}\n}\nif($step6514 !== 8) {\n$ans6515.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6516,$temp_branch6513,$step6514,[v$min6500],[cases6499],$elidedFrames6518);\n}\nreturn $ans6515;\n};\n$ans6487 = cases6491.$app_fields($temp_branch6513,[false]);\nbreak;\ncase 5: if(cases6491.$arity !== 1) {\nif(cases6491.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2385],1,cases6491.$arity,L[2373],cases6491.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2385],true,L[2373],cases6491.$loc);\n}\n}\n$step6483 = 8;\n$al6488 = L[2385];\nvar $temp_branch6540 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2373($v$min6527) {\nvar $step6541 = 0;\nvar $elidedFrames6545 = 0;\nvar $ans6542 = D;\nvar $al6543 = L[2377];\nif(R.isAR($v$min6527)) {\n$step6541 = $v$min6527.step;\n$al6543 = $v$min6527.from;\n$ans6542 = $v$min6527.ans;\n$elidedFrames6545 = $v$min6527.elidedFrames;\nv$min6527 = $v$min6527.args[0];\nv$max6528 = $v$min6527.vars[0];\ncases6526 = $v$min6527.vars[1];\nanf_tuple_fields6536 = $v$min6527.vars[2];\n} else {\nvar v$min6527 = $v$min6527;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6542 = R.mC();\n}\nwhile(!R.isContinuation($ans6542)) {\nswitch($step6541) {\ncase 0: var cases6526 = b$max6486;\n$step6541 = 1;\n$al6543 = L[2384];\nvar $ann$check6551 = R._cA(L[2384],BoundResult6511,cases6526);\nif(R.isContinuation($ann$check6551)) {\n$ans6542 = $ann$check6551;\n}\nbreak;\ncase 1: $al6543 = L[2377];\n$step6541 = $cases_dispatch6550[cases6526.$name] || 9;\nbreak;\ncase 2: if(cases6526.$arity !== 1) {\nif(cases6526.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2376],1,cases6526.$arity,L[2377],cases6526.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2376],true,L[2377],cases6526.$loc);\n}\n}\nvar $fn6547 = cases6526.$constructor.$fieldNames;\nvar v$max6528 = R.dF(cases6526.dict[$fn6547[0]],cases6526.$mut_fields_mask[0],false);\n$step6541 = 3;\n$al6543 = L[2375];\n// omitting isFunction check;\n$ans6542 = widen$range6108.$var.app(v$min6527,v$max6528);\nbreak;\ncase 3: var anf_tuple_get6529 = $ans6542;\nvar anf_tuple_fields6530 = R.getTuple(anf_tuple_get6529,0,L[2374]);\n$step6541 = 10;\n$ans6542 = R.makeTuple([anf_tuple_fields6530,v$max6528]);\nbreak;\ncase 4: if(cases6526.$arity !== 1) {\nif(cases6526.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2379],1,cases6526.$arity,L[2377],cases6526.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2379],true,L[2377],cases6526.$loc);\n}\n}\nvar $fn6549 = cases6526.$constructor.$fieldNames;\nvar v$max6533 = R.dF(cases6526.dict[$fn6549[0]],cases6526.$mut_fields_mask[0],false);\n$step6541 = 10;\n$al6543 = L[2378];\n// omitting isFunction check;\n$ans6542 = widen$range6108.$var.app(v$min6527,v$max6533);\nbreak;\ncase 5: if(cases6526.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[2383],false,L[2377],cases6526.$loc);\n}\n$step6541 = 6;\n$al6543 = L[2382];\n// omitting isFunction check;\n$ans6542 = _minus12.app(v$min6527,(1));\nbreak;\ncase 6: var anf_tuple_fields6536 = $ans6542;\n$step6541 = 7;\n$al6543 = L[2381];\n// omitting isFunction check;\n$ans6542 = _minus12.app(v$min6527,(1));\nbreak;\ncase 7: var anf_arg3373 = $ans6542;\n$step6541 = 8;\n$al6543 = L[2380];\n// omitting isFunction check;\n$ans6542 = _plus5.app(anf_arg3373,(10));\nbreak;\ncase 8: var anf_tuple_fields6537 = $ans6542;\n$step6541 = 10;\n$ans6542 = R.makeTuple([anf_tuple_fields6536,anf_tuple_fields6537]);\nbreak;\ncase 9: $ans6542 = R.throwNoCasesMatched(L[2377],cases6526);\n$step6541 = 10;\nbreak;\ncase 10: ++R.GAS;\nreturn $ans6542;\ndefault: R.ffi.throwSpinnakerError(L[2377],$step6541);\n}\n}\nif($step6541 !== 10) {\n$ans6542.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6543,$temp_branch6540,$step6541,[v$min6527],[v$max6528,cases6526,anf_tuple_fields6536],$elidedFrames6545);\n}\nreturn $ans6542;\n};\n$ans6487 = cases6491.$app_fields($temp_branch6540,[false]);\nbreak;\ncase 6: if(cases6491.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[2395],false,L[2373],cases6491.$loc);\n}\n$step6483 = 8;\n$al6488 = L[2395];\nvar $temp_branch6566 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2373($$resumer11) {\nvar $step6567 = 0;\nvar $elidedFrames6571 = 0;\nvar $ans6568 = D;\nvar $al6569 = L[2388];\nif(R.isAR($$resumer11)) {\n$step6567 = $$resumer11.step;\n$al6569 = $$resumer11.from;\n$ans6568 = $$resumer11.ans;\n$elidedFrames6571 = $$resumer11.elidedFrames;\n$resumer11 = $$resumer11.args[0];\nv$max6558 = $$resumer11.vars[0];\ncases6553 = $$resumer11.vars[1];\nanf_tuple_fields6560 = $$resumer11.vars[2];\nv$max6554 = $$resumer11.vars[3];\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6568 = R.mC();\n}\nwhile(!R.isContinuation($ans6568)) {\nswitch($step6567) {\ncase 0: var cases6553 = b$max6486;\n$step6567 = 1;\n$al6569 = L[2394];\nvar $ann$check6577 = R._cA(L[2394],BoundResult6511,cases6553);\nif(R.isContinuation($ann$check6577)) {\n$ans6568 = $ann$check6577;\n}\nbreak;\ncase 1: $al6569 = L[2388];\n$step6567 = $cases_dispatch6576[cases6553.$name] || 9;\nbreak;\ncase 2: if(cases6553.$arity !== 1) {\nif(cases6553.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2387],1,cases6553.$arity,L[2388],cases6553.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2387],true,L[2388],cases6553.$loc);\n}\n}\nvar $fn6573 = cases6553.$constructor.$fieldNames;\nvar v$max6554 = R.dF(cases6553.dict[$fn6573[0]],cases6553.$mut_fields_mask[0],false);\n$step6567 = 3;\n$al6569 = L[2386];\n// omitting isFunction check;\n$ans6568 = _minus12.app(v$max6554,(10));\nbreak;\ncase 3: var anf_tuple_fields6555 = $ans6568;\n$step6567 = 10;\n$ans6568 = R.makeTuple([anf_tuple_fields6555,v$max6554]);\nbreak;\ncase 4: if(cases6553.$arity !== 1) {\nif(cases6553.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2392],1,cases6553.$arity,L[2388],cases6553.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2392],true,L[2388],cases6553.$loc);\n}\n}\nvar $fn6575 = cases6553.$constructor.$fieldNames;\nvar v$max6558 = R.dF(cases6553.dict[$fn6575[0]],cases6553.$mut_fields_mask[0],false);\n$step6567 = 5;\n$al6569 = L[2391];\n// omitting isFunction check;\n$ans6568 = _plus5.app(v$max6558,(1));\nbreak;\ncase 5: var anf_arg6559 = $ans6568;\n$step6567 = 6;\n$al6569 = L[2390];\n// omitting isFunction check;\n$ans6568 = _minus12.app(anf_arg6559,(10));\nbreak;\ncase 6: var anf_tuple_fields6560 = $ans6568;\n$step6567 = 7;\n$al6569 = L[2389];\n// omitting isFunction check;\n$ans6568 = _plus5.app(v$max6558,(1));\nbreak;\ncase 7: var anf_tuple_fields6561 = $ans6568;\n$step6567 = 10;\n$ans6568 = R.makeTuple([anf_tuple_fields6560,anf_tuple_fields6561]);\nbreak;\ncase 8: if(cases6553.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[2393],false,L[2388],cases6553.$loc);\n}\n$step6567 = 10;\n$ans6568 = R.makeTuple([(-10),(10)]);\nbreak;\ncase 9: $ans6568 = R.throwNoCasesMatched(L[2388],cases6553);\n$step6567 = 10;\nbreak;\ncase 10: ++R.GAS;\nreturn $ans6568;\ndefault: R.ffi.throwSpinnakerError(L[2388],$step6567);\n}\n}\nif($step6567 !== 10) {\n$ans6568.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6569,$temp_branch6566,$step6567,[],[v$max6558,cases6553,anf_tuple_fields6560,v$max6554],$elidedFrames6571);\n}\nreturn $ans6568;\n};\n$ans6487 = cases6491.$app_fields($temp_branch6566,[]);\nbreak;\ncase 7: $ans6487 = R.throwNoCasesMatched(L[2373],cases6491);\n$step6483 = 8;\nbreak;\ncase 8: var tup6492 = $ans6487;\n$step6483 = 9;\n$al6488 = L[2363];\nR.checkTupleBind(tup6492,2,L[2363]);\nbreak;\ncase 9: var l6493 = R.getTuple(tup6492,0,L[2358]);\nvar r6494 = R.getTuple(tup6492,1,L[2359]);\n// caller optimization;\n$ans6487 = some33.app(l6493);\nvar anf_tuple_fields6495 = $ans6487;\n// caller optimization;\n$ans6487 = some33.app(r6494);\nvar anf_tuple_fields6496 = $ans6487;\nvar ann_check_temp6497 = R.makeTuple([anf_tuple_fields6495,anf_tuple_fields6496]);\n$step6483 = 10;\n$al6488 = L[2362];\nvar $ann$check6498 = R._cA(L[2362],R.mTA([L[2360],L[2361]],[Option27,Option27],undefined),ann_check_temp6497);\nif(R.isContinuation($ann$check6498)) {\n$ans6487 = $ann$check6498;\n}\nbreak;\ncase 10: $step6483 = 11;\n$ans6487 = ann_check_temp6497;\nbreak;\ncase 11: ++R.GAS;\nreturn $ans6487;\ndefault: R.ffi.throwSpinnakerError(L[2357],$step6483);\n}\n}\nif($step6483 !== 11) {\n$ans6487.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6488,$temp_lam6484,$step6483,[b$min6485,b$max6486],[ann_check_temp6497,cases6491,tup6492],$elidedFrames6490);\n}\nreturn $ans6487;\n};\nvar anf_assign6583 = R.mF($temp_lam6484,\"bound-result-to-bounds\");\nbound$result$to$bounds6584.$var = anf_assign6583;\nR.nothing;\nvar $temp_lam6586 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2399($d6587,$bbox6588,$f6589) {\nvar $step6585 = 0;\nvar $elidedFrames6593 = 0;\nvar $ans6590 = D;\nvar $al6591 = L[2399];\nif(R.isAR($d6587)) {\n$step6585 = $d6587.step;\n$al6591 = $d6587.from;\n$ans6590 = $d6587.ans;\n$elidedFrames6593 = $d6587.elidedFrames;\nd6587 = $d6587.args[0];\nbbox6588 = $d6587.args[1];\nf6589 = $d6587.args[2];\ncases6594 = $d6587.vars[0];\nann_check_temp6595 = $d6587.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2399],3,$t,false);\n}\nvar d6587 = $d6587;\nvar bbox6588 = $bbox6588;\nvar f6589 = $f6589;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6590 = R.mC();\n}\nwhile(!R.isContinuation($ans6590)) {\nswitch($step6585) {\ncase 0: $step6585 = 1;\n$al6591 = L[2407];\nR._cA(L[2407],Option27,d6587);\nbreak;\ncase 1: $step6585 = 2;\n$al6591 = L[2408];\nR._cA(L[2408],BoundingBox3580,bbox6588);\nbreak;\ncase 2: $step6585 = 3;\n$al6591 = L[2409];\nR._cA(L[2409],R.Function,f6589);\nbreak;\ncase 3: var cases6594 = d6587;\n$step6585 = 4;\n$al6591 = L[2406];\nvar $ann$check6603 = R._cA(L[2406],Option27,cases6594);\nif(R.isContinuation($ann$check6603)) {\n$ans6590 = $ann$check6603;\n}\nbreak;\ncase 4: $al6591 = L[2404];\n$step6585 = $cases_dispatch6602[cases6594.$name] || 10;\nbreak;\ncase 5: if(cases6594.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[2403],false,L[2404],cases6594.$loc);\n}\n$al6591 = L[2401];\nvar anf_if6598 = G(bbox6588,\"is-valid\",L[2401]);\n$step6585 = R.checkPyretTrue(anf_if6598)?6:8;\nbreak;\ncase 6: $step6585 = 7;\n$al6591 = L[2402];\nif(typeof(f6589.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6591,f6589);\n}\n$ans6590 = f6589.app(bbox6588);\nbreak;\ncase 7: var anf_arg6597 = $ans6590;\n// caller optimization;\n$ans6590 = inferred$bound6478.$var.app(anf_arg6597);\n$step6585 = 11;\nbreak;\ncase 8: $step6585 = 11;\n$ans6590 = unknown$bound6482.$var;\nbreak;\ncase 9: if(cases6594.$arity !== 1) {\nif(cases6594.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2405],1,cases6594.$arity,L[2404],cases6594.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2405],true,L[2404],cases6594.$loc);\n}\n}\nvar $fn6601 = cases6594.$constructor.$fieldNames;\nvar v6599 = R.dF(cases6594.dict[$fn6601[0]],cases6594.$mut_fields_mask[0],false);\n// caller optimization;\n$ans6590 = exact$bound6474.$var.app(v6599);\n$step6585 = 11;\nbreak;\ncase 10: $ans6590 = R.throwNoCasesMatched(L[2404],cases6594);\n$step6585 = 11;\nbreak;\ncase 11: var ann_check_temp6595 = $ans6590;\n$step6585 = 12;\n$al6591 = L[2400];\nvar $ann$check6596 = R._cA(L[2400],BoundResult6511,ann_check_temp6595);\nif(R.isContinuation($ann$check6596)) {\n$ans6590 = $ann$check6596;\n}\nbreak;\ncase 12: $step6585 = 13;\n$ans6590 = ann_check_temp6595;\nbreak;\ncase 13: ++R.GAS;\nreturn $ans6590;\ndefault: R.ffi.throwSpinnakerError(L[2399],$step6585);\n}\n}\nif($step6585 !== 13) {\n$ans6590.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6591,$temp_lam6586,$step6585,[d6587,bbox6588,f6589],[cases6594,ann_check_temp6595],$elidedFrames6593);\n}\nreturn $ans6590;\n};\nvar anf_assign6605 = R.mF($temp_lam6586,\"get-bound-result\");\nget$bound$result6606.$var = anf_assign6605;\nR.nothing;\nvar $temp_lam6608 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2410($lst6609) {\nvar $step6607 = 0;\nvar $elidedFrames6613 = 0;\nvar $ans6610 = D;\nvar $al6611 = L[2410];\nif(R.isAR($lst6609)) {\n$step6607 = $lst6609.step;\n$al6611 = $lst6609.from;\n$ans6610 = $lst6609.ans;\n$elidedFrames6613 = $lst6609.elidedFrames;\nlst6609 = $lst6609.args[0];\nis$show$samples6718 = $lst6609.vars[0];\nann_check_temp6799 = $lst6609.vars[1];\nfunction$plots6645 = $lst6609.vars[2];\npartitioned6634 = $lst6609.vars[3];\npartitioned6656 = $lst6609.vars[4];\nline$plots6730 = $lst6609.vars[5];\npartitioned6646 = $lst6609.vars[6];\nscatter$plots6729 = $lst6609.vars[7];\ncases6623 = $lst6609.vars[8];\ncases6624 = $lst6609.vars[9];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2410],1,$t,false);\n}\nvar lst6609 = $lst6609;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6610 = R.mC();\n}\nwhile(!R.isContinuation($ans6610)) {\nswitch($step6607) {\ncase 0: $step6607 = 1;\n$al6611 = L[2485];\nR._cA(L[2485],List16,lst6609);\nbreak;\ncase 1: var $temp_lam6615 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2411($recv_6616) {\nvar $step6614 = 0;\nvar $elidedFrames6620 = 0;\nvar $ans6617 = D;\nvar $al6618 = L[2411];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2411],1,$t,false);\n}\nvar recv_6616 = $recv_6616;\n// callee optimization;\nwhile(!R.isContinuation($ans6617)) {\nswitch($step6614) {\ncase 0: $step6614 = 1;\n$al6618 = L[2411];\n$ans6617 = G(recv_6616,\"is-single\",L[2411]);\nbreak;\ncase 1: return $ans6617;\ndefault: R.ffi.throwSpinnakerError(L[2411],$step6614);\n}\n}\nreturn $ans6617;\n};\nvar anf_arg6622 = R.mF($temp_lam6615,\"\");\n$step6607 = 2;\n$al6611 = L[2484];\n// omitting isFunction check;\n$ans6610 = find35.app(anf_arg6622,lst6609);\nbreak;\ncase 2: var cases6623 = $ans6610;\n$step6607 = 3;\n$al6611 = L[2483];\nvar $ann$check6824 = R._cA(L[2483],Option27,cases6623);\nif(R.isContinuation($ann$check6824)) {\n$ans6610 = $ann$check6824;\n}\nbreak;\ncase 3: $al6611 = L[2482];\n$step6607 = $cases_dispatch6823[cases6623.$name] || 6;\nbreak;\ncase 4: if(cases6623.$arity !== 1) {\nif(cases6623.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2481],1,cases6623.$arity,L[2482],cases6623.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2481],true,L[2482],cases6623.$loc);\n}\n}\nvar $fn6822 = cases6623.$constructor.$fieldNames;\nvar v6820 = R.dF(cases6623.dict[$fn6822[0]],cases6623.$mut_fields_mask[0],false);\n$ans6610 = R.getMaker3(sprintf5582,(\"make3\"),L[2478],L[2479]);\nvar anf_fun6819 = $ans6610;\n$step6607 = 5;\n$al6611 = L[2479];\nif(typeof(anf_fun6819.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6611,anf_fun6819);\n}\n$ans6610 = anf_fun6819.app((\"render-charts: can't draw \"),v6820,(\" with `render-charts`. Use `render-chart` instead.\"));\nbreak;\ncase 5: var anf_arg3432 = $ans6610;\n$step6607 = 7;\n$al6611 = L[2480];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6611,raise1);\n}\n$ans6610 = raise1.app(anf_arg3432);\nbreak;\ncase 6: $step6607 = 7;\n$ans6610 = nothing5;\nbreak;\ncase 7: var cases6624 = lst6609;\n$step6607 = 8;\n$al6611 = L[2477];\nvar $ann$check6818 = R._cA(L[2477],List16,cases6624);\nif(R.isContinuation($ann$check6818)) {\n$ans6610 = $ann$check6818;\n}\nbreak;\ncase 8: $al6611 = L[2476];\n$step6607 = $cases_dispatch6817[cases6624.$name] || 10;\nbreak;\ncase 9: if(cases6624.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[2475],false,L[2476],cases6624.$loc);\n}\n$step6607 = 11;\n$al6611 = L[2474];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6611,raise1);\n}\n$ans6610 = raise1.app((\"render-charts: need at least one series to plot\"));\nbreak;\ncase 10: $step6607 = 11;\n$ans6610 = nothing5;\nbreak;\ncase 11: var $temp_lam6626 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2412($ds6627) {\nvar $step6625 = 0;\nvar $elidedFrames6631 = 0;\nvar $ans6628 = D;\nvar $al6629 = L[2412];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2412],1,$t,false);\n}\nvar ds6627 = $ds6627;\n// callee optimization;\nwhile(!R.isContinuation($ans6628)) {\nswitch($step6625) {\ncase 0: $al6629 = L[2413];\nvar anf_bracket6632 = G(ds6627,\"obj\",L[2413]);\n$step6625 = 1;\n$al6629 = L[2414];\n$ans6628 = G(anf_bracket6632,\"horizontal\",L[2414]);\nbreak;\ncase 1: return $ans6628;\ndefault: R.ffi.throwSpinnakerError(L[2412],$step6625);\n}\n}\nreturn $ans6628;\n};\nvar anf_arg3433 = R.mF($temp_lam6626,\"\");\n$step6607 = 12;\n$ans6610 = R.maybeMethodCall1(lst6609,\"any\",L[2415],anf_arg3433);\nbreak;\ncase 12: var anf_if6816 = $ans6610;\n$step6607 = R.checkPyretTrue(anf_if6816)?13:16;\nbreak;\ncase 13: var $temp_lam6808 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2469($ds6809) {\nvar $step6807 = 0;\nvar $elidedFrames6813 = 0;\nvar $ans6810 = D;\nvar $al6811 = L[2469];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2469],1,$t,false);\n}\nvar ds6809 = $ds6809;\n// callee optimization;\nwhile(!R.isContinuation($ans6810)) {\nswitch($step6807) {\ncase 0: $al6811 = L[2470];\nvar anf_bracket6814 = G(ds6809,\"obj\",L[2470]);\n$step6807 = 1;\n$al6811 = L[2471];\n$ans6810 = G(anf_bracket6814,\"horizontal\",L[2471]);\nbreak;\ncase 1: return $ans6810;\ndefault: R.ffi.throwSpinnakerError(L[2469],$step6807);\n}\n}\nreturn $ans6810;\n};\nvar anf_arg3450 = R.mF($temp_lam6808,\"\");\n$step6607 = 14;\n$ans6610 = R.maybeMethodCall1(lst6609,\"all\",L[2472],anf_arg3450);\nbreak;\ncase 14: var anf_arg3449 = $ans6610;\n$step6607 = 15;\n$al6611 = L[2473];\nif(typeof(not6.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6611,not6);\n}\n$ans6610 = not6.app(anf_arg3449);\nbreak;\ncase 15: var anf_arg3451 = $ans6610;\n$ans6610 = R.checkWrapBoolean(anf_arg3451);\n$step6607 = 17;\nbreak;\ncase 16: $step6607 = 17;\n$ans6610 = (false);\nbreak;\ncase 17: var anf_if6806 = $ans6610;\n$step6607 = R.checkPyretTrue(anf_if6806)?18:21;\nbreak;\ncase 18: $step6607 = 19;\n$al6611 = L[2468];\n// omitting isFunction check;\n$ans6610 = _plus5.app((\"render-charts: Cannot render a mix of horizontal and vertical charts.  \"),(\"Make sure all charts have the same direction.\"));\nbreak;\ncase 19: var anf_arg6805 = $ans6610;\n$step6607 = 20;\n$al6611 = L[2467];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6611,raise1);\n}\n$ans6610 = raise1.app(anf_arg6805);\nbreak;\ncase 20: $step6607 = 22;\n$ans6610 = nothing5;\nbreak;\ncase 21: $step6607 = 22;\n$ans6610 = nothing5;\nbreak;\ncase 22: $step6607 = 23;\n$al6611 = L[2466];\n// omitting isFunction check;\n$ans6610 = partition22.app(is$function$plot$series4197.$var,lst6609);\nbreak;\ncase 23: var partitioned6634 = $ans6610;\n$al6611 = L[2416];\nvar anf_method_obj6643 = G(partitioned6634,\"is-true\",L[2416]);\nvar $temp_lam6636 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2417($recv_6637) {\nvar $step6635 = 0;\nvar $elidedFrames6641 = 0;\nvar $ans6638 = D;\nvar $al6639 = L[2417];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2417],1,$t,false);\n}\nvar recv_6637 = $recv_6637;\n// callee optimization;\nwhile(!R.isContinuation($ans6638)) {\nswitch($step6635) {\ncase 0: $step6635 = 1;\n$al6639 = L[2417];\n$ans6638 = G(recv_6637,\"obj\",L[2417]);\nbreak;\ncase 1: return $ans6638;\ndefault: R.ffi.throwSpinnakerError(L[2417],$step6635);\n}\n}\nreturn $ans6638;\n};\nvar anf_arg6644 = R.mF($temp_lam6636,\"\");\n$step6607 = 24;\n$ans6610 = R.maybeMethodCall1(anf_method_obj6643,\"map\",L[2418],anf_arg6644);\nbreak;\ncase 24: var function$plots6645 = $ans6610;\n// caller optimization;\n$ans6610 = is$link36.app(function$plots6645);\nvar is$show$samples6718 = $ans6610;\n$al6611 = L[2419];\nvar anf_arg3460 = G(partitioned6634,\"is-false\",L[2419]);\n$step6607 = 25;\n$al6611 = L[2465];\n// omitting isFunction check;\n$ans6610 = partition22.app(is$line$plot$series4183.$var,anf_arg3460);\nbreak;\ncase 25: var partitioned6646 = $ans6610;\n$al6611 = L[2420];\nvar anf_method_obj6655 = G(partitioned6646,\"is-true\",L[2420]);\nvar $temp_lam6648 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2421($recv_6649) {\nvar $step6647 = 0;\nvar $elidedFrames6653 = 0;\nvar $ans6650 = D;\nvar $al6651 = L[2421];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2421],1,$t,false);\n}\nvar recv_6649 = $recv_6649;\n// callee optimization;\nwhile(!R.isContinuation($ans6650)) {\nswitch($step6647) {\ncase 0: $step6647 = 1;\n$al6651 = L[2421];\n$ans6650 = G(recv_6649,\"obj\",L[2421]);\nbreak;\ncase 1: return $ans6650;\ndefault: R.ffi.throwSpinnakerError(L[2421],$step6647);\n}\n}\nreturn $ans6650;\n};\nvar anf_arg3470 = R.mF($temp_lam6648,\"\");\n$step6607 = 26;\n$ans6610 = R.maybeMethodCall1(anf_method_obj6655,\"map\",L[2422],anf_arg3470);\nbreak;\ncase 26: var line$plots6730 = $ans6610;\n$al6611 = L[2423];\nvar anf_arg3472 = G(partitioned6646,\"is-false\",L[2423]);\n$step6607 = 27;\n$al6611 = L[2464];\n// omitting isFunction check;\n$ans6610 = partition22.app(is$scatter$plot$series4186.$var,anf_arg3472);\nbreak;\ncase 27: var partitioned6656 = $ans6610;\n$al6611 = L[2424];\nvar anf_method_obj6665 = G(partitioned6656,\"is-true\",L[2424]);\nvar $temp_lam6658 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2425($recv_6659) {\nvar $step6657 = 0;\nvar $elidedFrames6663 = 0;\nvar $ans6660 = D;\nvar $al6661 = L[2425];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2425],1,$t,false);\n}\nvar recv_6659 = $recv_6659;\n// callee optimization;\nwhile(!R.isContinuation($ans6660)) {\nswitch($step6657) {\ncase 0: $step6657 = 1;\n$al6661 = L[2425];\n$ans6660 = G(recv_6659,\"obj\",L[2425]);\nbreak;\ncase 1: return $ans6660;\ndefault: R.ffi.throwSpinnakerError(L[2425],$step6657);\n}\n}\nreturn $ans6660;\n};\nvar anf_arg6684 = R.mF($temp_lam6658,\"\");\n$step6607 = 28;\n$ans6610 = R.maybeMethodCall1(anf_method_obj6665,\"map\",L[2426],anf_arg6684);\nbreak;\ncase 28: var scatter$plots6729 = $ans6610;\n$al6611 = L[2427];\nvar anf_method_obj6693 = G(partitioned6656,\"is-false\",L[2427]);\nvar $temp_lam6686 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2428($recv_6687) {\nvar $step6685 = 0;\nvar $elidedFrames6691 = 0;\nvar $ans6688 = D;\nvar $al6689 = L[2428];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2428],1,$t,false);\n}\nvar recv_6687 = $recv_6687;\n// callee optimization;\nwhile(!R.isContinuation($ans6688)) {\nswitch($step6685) {\ncase 0: $step6685 = 1;\n$al6689 = L[2428];\n$ans6688 = G(recv_6687,\"obj\",L[2428]);\nbreak;\ncase 1: return $ans6688;\ndefault: R.ffi.throwSpinnakerError(L[2428],$step6685);\n}\n}\nreturn $ans6688;\n};\nvar anf_arg6708 = R.mF($temp_lam6686,\"\");\n$step6607 = 29;\n$ans6610 = R.maybeMethodCall1(anf_method_obj6693,\"map\",L[2429],anf_arg6708);\nbreak;\ncase 29: var interval$plots6731 = $ans6610;\nvar $temp_full6711 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2430($self6712) {\nvar $step6710 = 0;\nvar $elidedFrames6717 = 0;\nvar $ans6714 = D;\nvar $al6715 = L[2430];\nif(R.isAR($self6712)) {\n$step6710 = $self6712.step;\n$al6715 = $self6712.from;\n$ans6714 = $self6712.ans;\n$elidedFrames6717 = $self6712.elidedFrames;\nself6712 = $self6712.args[0];\nself6719 = $self6712.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2430],1,$t,true);\n}\nvar self6712 = $self6712;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6714 = R.mC();\n}\nwhile(!R.isContinuation($ans6714)) {\nswitch($step6710) {\ncase 0: var self6719 = R.extendObj(L[2431],self6712,{\"is-show-samples\":is$show$samples6718});\n$step6710 = 1;\n$al6715 = L[2461];\n// omitting isFunction check;\n$ans6714 = check$render$x$axis5853.$var.app(self6719);\nbreak;\ncase 1: $step6710 = 2;\n$al6715 = L[2460];\n// omitting isFunction check;\n$ans6714 = check$render$y$axis5888.$var.app(self6719);\nbreak;\ncase 2: $step6710 = 3;\n$al6715 = L[2459];\n// omitting isFunction check;\n$ans6714 = get$list$of$bounding$boxes3677.$var.app(empty18,self6719,snd3607);\nbreak;\ncase 3: var helper6740 = {\"$var\":D};\nvar $temp_lam6721 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2432($self6722,$function$plots$data6723) {\nvar $step6720 = 0;\nvar $elidedFrames6727 = 0;\nvar $ans6724 = D;\nvar $al6725 = L[2432];\nif(R.isAR($self6722)) {\n$step6720 = $self6722.step;\n$al6725 = $self6722.from;\n$ans6724 = $self6722.ans;\n$elidedFrames6727 = $self6722.elidedFrames;\nself6722 = $self6722.args[0];\nfunction$plots$data6723 = $self6722.args[1];\nanf_obj6732 = $self6722.vars[0];\nanf_obj6733 = $self6722.vars[1];\nanf_obj6734 = $self6722.vars[2];\nann_check_temp6737 = $self6722.vars[3];\nret6736 = $self6722.vars[4];\ncases6728 = $self6722.vars[5];\ncases6739 = $self6722.vars[6];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2432],2,$t,false);\n}\nvar self6722 = $self6722;\nvar function$plots$data6723 = $function$plots$data6723;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6724 = R.mC();\n}\nwhile(!R.isContinuation($ans6724)) {\nswitch($step6720) {\ncase 0: $step6720 = 1;\n$al6725 = L[2457];\nR._cA(L[2457],Option27,function$plots$data6723);\nbreak;\ncase 1: var cases6728 = function$plots$data6723;\n$step6720 = 2;\n$al6725 = L[2456];\nvar $ann$check6777 = R._cA(L[2456],Option27,cases6728);\nif(R.isContinuation($ann$check6777)) {\n$ans6724 = $ann$check6777;\n}\nbreak;\ncase 2: $al6725 = L[2454];\n$step6720 = $cases_dispatch6776[cases6728.$name] || 5;\nbreak;\ncase 3: if(cases6728.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[2453],false,L[2454],cases6728.$loc);\n}\nvar $temp_lam6753 = function _d9ab4ce9dff6abe771a0ea5d7862476d87e5f7e2a7574918748d38ff2dc812d2__2446($arg_6754) {\nvar $step6752 = 0;\nvar $elidedFrames6758 = 0;\nvar $ans6755 = D;\nvar $al6756 = L[2446];\nif(R.isAR($arg_6754)) {\n$step6752 = $arg_6754.step;\n$al6756 = $arg_6754.from;\n$ans6755 = $arg_6754.ans;\n$elidedFrames6758 = $arg_6754.elidedFrames;\narg_6754 = $arg_6754.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[2446],1,$t,false);\n}\nvar arg_6754 = $arg_6754;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans6755 = R.mC();\n}\nwhile(!R.isContinuation($ans6755)) {\nswitch($step6752) {\ncase 0: $al6756 = L[2447];\nvar anf_bracket6759 = G(self6722,\"x-min\",L[2447]);\n$al6756 = L[2448];\nvar anf_arg6769 = G(anf_bracket6759,\"value\",L[2448]);\n$al6756 = L[2449];\nvar anf_bracket6760 = G(self6722,\"x-max\",L[2449]);\n$al6756 = L[2450];\nvar anf_arg6770 = G(anf_bracket6760,\"value\",L[2450]);\n$al6756 = L[2451];\nvar anf_arg3494 = G(self6722,\"num-samples\",L[2451]);\n$step6752 = 1;\n$al6756 = L[2446];\n// omitting isFunction check;\n$ans6755 = generate$xy6087.$var.app(arg_6754,anf_arg6769,anf_arg6770,anf_arg3494);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans6755;\ndefault: R.ffi.throwSpinnakerError(L[2446],$step6752);\n}\n}\nif($step6752 !== 1) {\n$ans6755.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6756,$temp_lam6753,$step6752,[arg_6754],[],$elidedFrames6758);\n}\nreturn $ans6755;\n};\nvar anf_arg6772 = R.mF($temp_lam6753,\"\");\n$step6720 = 6;\n$ans6724 = R.maybeMethodCall1(function$plots6645,\"map\",L[2452],anf_arg6772);\nbreak;\ncase 4: if(cases6728.$arity !== 1) {\nif(cases6728.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2455],1,cases6728.$arity,L[2454],cases6728.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2455],true,L[2454],cases6728.$loc);\n}\n}\nvar $fn6775 = cases6728.$constructor.$fieldNames;\nvar function$plots$data6773 = R.dF(cases6728.dict[$fn6775[0]],cases6728.$mut_fields_mask[0],false);\n$step6720 = 6;\n$ans6724 = function$plots$data6773;\nbreak;\ncase 5: $ans6724 = R.throwNoCasesMatched(L[2454],cases6728);\n$step6720 = 6;\nbreak;\ncase 6: $step6720 = 7;\n$ans6724 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[2433],scatter$plots6729);\nbreak;\ncase 7: var anf_obj6732 = $ans6724;\n$step6720 = 8;\n$ans6724 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[2434],line$plots6730);\nbreak;\ncase 8: var anf_obj6733 = $ans6724;\n$step6720 = 9;\n$ans6724 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[2435],interval$plots6731);\nbreak;\ncase 9: var anf_obj6734 = $ans6724;\n$step6720 = 10;\n$ans6724 = R.maybeMethodCall1(builtins10,\"raw-array-from-list\",L[2436],function$plots6645);\nbreak;\ncase 10: var anf_obj6735 = $ans6724;\nvar anf_arg3538 = R.mO({\"scatters\":anf_obj6732,\n\"lines\":anf_obj6733,\n\"intervals\":anf_obj6734,\n\"functions\":anf_obj6735});\n$step6720 = 11;\n$al6725 = L[2445];\nif(typeof(CL40.dict.values.dict[\"plot\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al6725,CL40.dict.values.dict[\"plot\"]);\n}\n$ans6724 = CL40.dict.values.dict[\"plot\"].app(self6722,anf_arg3538);\nbreak;\ncase 11: var ret6736 = $ans6724;\n$step6720 = 12;\n$al6725 = L[2444];\nif(typeof(IM45.dict.values.dict[\"is-image\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al6725,IM45.dict.values.dict[\"is-image\"]);\n}\n$ans6724 = IM45.dict.values.dict[\"is-image\"].app(ret6736);\nbreak;\ncase 12: var anf_if6750 = $ans6724;\n$step6720 = R.checkPyretTrue(anf_if6750)?13:14;\nbreak;\ncase 13: $step6720 = 19;\n$ans6724 = ret6736;\nbreak;\ncase 14: var cases6739 = ret6736;\n$step6720 = 15;\n$al6725 = L[2443];\nvar $ann$check6748 = R._cA(L[2443],R.gDA(L[2442],\"E\",E42.dict.types,\"Either\"),cases6739);\nif(R.isContinuation($ann$check6748)) {\n$ans6724 = $ann$check6748;\n}\nbreak;\ncase 15: $al6725 = L[2440];\n$step6720 = $cases_dispatch6747[cases6739.$name] || 18;\nbreak;\ncase 16: if(cases6739.$arity !== 1) {\nif(cases6739.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2439],1,cases6739.$arity,L[2440],cases6739.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2439],true,L[2440],cases6739.$loc);\n}\n}\nvar $fn6743 = cases6739.$constructor.$fieldNames;\nvar new$self6741 = R.dF(cases6739.dict[$fn6743[0]],cases6739.$mut_fields_mask[0],false);\n$step6720 = 19;\n$al6725 = L[2438];\nif(typeof(helper6740.$var.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6725,helper6740.$var);\n}\n$ans6724 = helper6740.$var.app(new$self6741,none28);\nbreak;\ncase 17: if(cases6739.$arity !== 1) {\nif(cases6739.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[2441],1,cases6739.$arity,L[2440],cases6739.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[2441],true,L[2440],cases6739.$loc);\n}\n}\nvar $fn6746 = cases6739.$constructor.$fieldNames;\nvar image6744 = R.dF(cases6739.dict[$fn6746[0]],cases6739.$mut_fields_mask[0],false);\n$step6720 = 19;\n$ans6724 = image6744;\nbreak;\ncase 18: $ans6724 = R.throwNoCasesMatched(L[2440],cases6739);\n$step6720 = 19;\nbreak;\ncase 19: var ann_check_temp6737 = $ans6724;\n$step6720 = 20;\n$al6725 = L[2437];\nvar $ann$check6738 = R._cA(L[2437],R.gDA(L[2437],\"IM\",IM45.dict.types,\"Image\"),ann_check_temp6737);\nif(R.isContinuation($ann$check6738)) {\n$ans6724 = $ann$check6738;\n}\nbreak;\ncase 20: $step6720 = 21;\n$ans6724 = ann_check_temp6737;\nbreak;\ncase 21: ++R.GAS;\nreturn $ans6724;\ndefault: R.ffi.throwSpinnakerError(L[2432],$step6720);\n}\n}\nif($step6720 !== 21) {\n$ans6724.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6725,$temp_lam6721,$step6720,[self6722,function$plots$data6723],[anf_obj6732,anf_obj6733,anf_obj6734,ann_check_temp6737,ret6736,cases6728,cases6739],$elidedFrames6727);\n}\nreturn $ans6724;\n};\nvar anf_assign6779 = R.mF($temp_lam6721,\"helper\");\nhelper6740.$var = anf_assign6779;\nR.nothing;\n// caller optimization;\n$ans6714 = some33.app(empty18);\nvar anf_arg6790 = $ans6714;\n$step6710 = 4;\n$al6715 = L[2458];\nif(typeof(helper6740.$var.app) !== \"function\") {\nR.ffi.throwNonFunApp($al6715,helper6740.$var);\n}\n$ans6714 = helper6740.$var.app(self6719,anf_arg6790);\nbreak;\ncase 4: ++R.GAS;\nreturn $ans6714;\ndefault: R.ffi.throwSpinnakerError(L[2430],$step6710);\n}\n}\nif($step6710 !== 4) {\n$ans6714.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6715,$temp_full6711,$step6710,[self6712],[self6719],$elidedFrames6717);\n}\nreturn $ans6714;\n};\nvar anf_extend6796 = R.makeMethod0($temp_full6711,\"render\");\nvar anf_arg6798 = R.extendObj(L[2462],default$plot$chart$window$object6795,{\"render\":anf_extend6796});\n// caller optimization;\n$ans6610 = plot$chart$window4375.$var.app(anf_arg6798);\nvar ann_check_temp6799 = $ans6610;\n$step6607 = 30;\n$al6611 = L[2463];\nvar $ann$check6800 = R._cA(L[2463],ChartWindow5898,ann_check_temp6799);\nif(R.isContinuation($ann$check6800)) {\n$ans6610 = $ann$check6800;\n}\nbreak;\ncase 30: $step6607 = 31;\n$ans6610 = ann_check_temp6799;\nbreak;\ncase 31: ++R.GAS;\nreturn $ans6610;\ndefault: R.ffi.throwSpinnakerError(L[2410],$step6607);\n}\n}\nif($step6607 !== 31) {\n$ans6610.stack[R.EXN_STACKHEIGHT++] = R.mAR($al6611,$temp_lam6608,$step6607,[lst6609],[is$show$samples6718,ann_check_temp6799,function$plots6645,partitioned6634,partitioned6656,line$plots6730,partitioned6646,scatter$plots6729,cases6623,cases6624],$elidedFrames6613);\n}\nreturn $ans6610;\n};\nvar anf_assign6826 = R.mF($temp_lam6608,\"render-charts\");\nrender$charts5900.$var = anf_assign6826;\nR.nothing;\nvar from$list6832 = R.mO({\"line-plot\":line$plot$from$list4551.$var,\n\"labeled-line-plot\":labeled$line$plot$from$list4578.$var,\n\"image-line-plot\":image$line$plot$from$list4608.$var,\n\"labeled-scatter-plot\":labeled$scatter$plot$from$list4696.$var,\n\"image-scatter-plot\":image$scatter$plot$from$list4733.$var,\n\"scatter-plot\":scatter$plot$from$list4666.$var,\n\"function-plot\":function$plot$from$list4513.$var,\n\"histogram\":histogram$from$list5772.$var,\n\"labeled-histogram\":labeled$histogram$from$list5793.$var,\n\"image-histogram\":image$histogram$from$list5819.$var,\n\"pie-chart\":pie$chart$from$list4869.$var,\n\"exploding-pie-chart\":exploding$pie$chart$from$list4830.$var,\n\"image-pie-chart\":image$pie$chart$from$list4908.$var,\n\"bar-chart\":bar$chart$from$list4953.$var,\n\"dot-chart\":dot$chart$from$list5195.$var,\n\"num-dot-chart\":num$dot$chart$from$list5017.$var,\n\"image-num-dot-chart\":image$num$dot$chart$from$list5095.$var,\n\"labeled-num-dot-chart\":labeled$num$dot$chart$from$list5140.$var,\n\"image-bar-chart\":image$bar$chart$from$list4786.$var,\n\"grouped-bar-chart\":grouped$bar$chart$from$list5321.$var,\n\"stacked-bar-chart\":stacked$bar$chart$from$list5437.$var,\n\"freq-bar-chart\":freq$bar$chart$from$list5748.$var,\n\"labeled-box-plot\":labeled$box$plot$from$list5585.$var,\n\"box-plot\":box$plot$from$list5592.$var,\n\"interval-chart\":interval$chart$from$list5566.$var,\n\"labeled-interval-chart\":labeled$interval$chart$from$list5538.$var});\n$step95 = 13;\n$al331 = L[2486];\nvar $obj6827 = R.builtins;\nvar $field6828 = R.gCFL($obj6827,\"trace-value\",L[2486]);\nif(R.isM($field6828)) {\n$ans330 = $field6828.full_meth($obj6827,L[2486],R.nothing);\n} else {\nif(typeof($field6828.app) !== \"function\") {\nR.ffi.throwNonFunApp(L[2486],$field6828);\n}\n$ans330 = $field6828.app(L[2486],R.nothing);\n}\nbreak;\ncase 13: var answer6833 = $ans330;\n$step95 = 14;\n$al331 = L[3];\nvar $obj6829 = R.builtins;\nvar $field6830 = R.gCFL($obj6829,\"current-checker\",L[3]);\nif(R.isM($field6830)) {\n$ans330 = $field6830.full_meth($obj6829);\n} else {\nif(typeof($field6830.app) !== \"function\") {\nR.ffi.throwNonFunApp(L[3],$field6830);\n}\n$ans330 = $field6830.app();\n}\nbreak;\ncase 14: var anf_method_obj6831 = $ans330;\n$step95 = 15;\n$ans330 = R.maybeMethodCall0(anf_method_obj6831,\"results\",L[3]);\nbreak;\ncase 15: var checks6834 = $ans330;\n$step95 = 16;\n$ans330 = R.mO({\"answer\":answer6833,\n\"namespace\":NAMESPACE,\n\"locations\":L,\n\"defined-modules\":{\"ST\":ST50,\n\"B\":B39,\n\"C\":C41,\n\"IM\":IM45,\n\"E\":E42,\n\"G\":G43,\n\"I\":I44,\n\"CL\":CL40,\n\"RED\":RED48,\n\"SD\":SD51,\n\"S\":S49,\n\"VS\":VS52},\n\"defined-values\":{\"default-multi-bar-chart-series\":default$multi$bar$chart$series5301,\n\"default-pie-chart-window-object\":default$pie$chart$window$object5961,\n\"bar-chart-series\":bar$chart$series3915.$var,\n\"histogram-series\":histogram$series3974.$var,\n\"intervals-method\":intervals$method3292,\n\"pie-chart-window\":pie$chart$window4321.$var,\n\"line-width-method\":line$width$method4033,\n\"from-list\":from$list6832,\n\"check-num\":check$num588.$var,\n\"stacking-type-method\":stacking$type$method4144,\n\"default-chart-window-object\":default$chart$window$object3728,\n\"legend-method\":legend$method4031,\n\"prep-axis\":prep$axis1595.$var,\n\"in-bound-x\":in$bound$x6138.$var,\n\"box-plot-series\":box$plot$series3954.$var,\n\"exploding-pie-chart-from-list\":exploding$pie$chart$from$list4830.$var,\n\"default-interval-chart-series\":default$interval$chart$series5524,\n\"is-exponential\":is$exponential512.$var,\n\"piehole-method\":piehole$method4100,\n\"is-percent\":is$percent451.$var,\n\"in-bound-y\":in$bound$y6157.$var,\n\"get-bound-result\":get$bound$result6606.$var,\n\"is-bar-chart-series\":is$bar$chart$series4206.$var,\n\"freq-bar-chart-from-list\":freq$bar$chart$from$list5748.$var,\n\"is-histogram-series\":is$histogram$series4219.$var,\n\"is-pie-chart-window\":is$pie$chart$window4477.$var,\n\"collapse-threshold-method\":collapse$threshold$method4102,\n\"dot-chart-window\":dot$chart$window4329.$var,\n\"get-box-data\":get$box$data1866.$var,\n\"background-border-method\":background$border$method4389,\n\"histogram-label-method\":histogram$label$method4167,\n\"trendline-width-method\":trendline$width$method4036,\n\"is-interval-chart-window\":is$interval$chart$window4490.$var,\n\"circle-shape\":circle$shape568.$var,\n\"check-chart-window\":check$chart$window4239.$var,\n\"scatter-plot-from-list\":scatter$plot$from$list4666.$var,\n\"single-error-bars-method\":single$error$bars$method4119,\n\"default-sort-method\":default$sort$method4096,\n\"labeled-interval-chart-from-list\":labeled$interval$chart$from$list5538.$var,\n\"scale-method\":scale$method4116,\n\"is-DataSeries\":is$DataSeries4181.$var,\n\"percent\":percent453.$var,\n\"exponential\":exponential513.$var,\n\"no-trendline\":no$trendline506.$var,\n\"single-intervals-method\":single$intervals$method4118,\n\"linear\":linear509.$var,\n\"line-plot-edge-cut\":line$plot$edge$cut6446.$var,\n\"image-histogram-from-list\":image$histogram$from$list5819.$var,\n\"image-bar-chart-from-list\":image$bar$chart$from$list4786.$var,\n\"bound-result-to-bounds\":bound$result$to$bounds6584.$var,\n\"is-dot-chart-window\":is$dot$chart$window4481.$var,\n\"default-categorical-dot-plot-series\":default$categorical$dot$plot$series5186,\n\"color-list-method\":color$list$method4095,\n\"dist\":dist6188.$var,\n\"is-box-plot-chart-window\":is$box$plot$chart$window4484.$var,\n\"show-grid-lines-method\":show$grid$lines$method4463,\n\"is-circle-shape\":is$circle$shape566.$var,\n\"num-dot-chart-from-list\":num$dot$chart$from$list5017.$var,\n\"check-render-y-axis\":check$render$y$axis5888.$var,\n\"interval-chart-window\":interval$chart$window4356.$var,\n\"render-chart\":render$chart3742.$var,\n\"fst\":fst3606,\n\"pie-chart-series\":pie$chart$series3906.$var,\n\"table2-to-list\":table2$to$list1450.$var,\n\"list-to-table2\":list$to$table21438.$var,\n\"trendline-color-method\":trendline$color$method4035,\n\"default-bar-chart-window-object\":default$bar$chart$window$object5977,\n\"is-plot-chart-window\":is$plot$chart$window4496.$var,\n\"is-linear\":is$linear507.$var,\n\"is-no-trendline\":is$no$trendline504.$var,\n\"threeD-method\":threeD$method4099,\n\"is-TrendlineType\":is$TrendlineType503.$var,\n\"histogram-chart-window\":histogram$chart$window4365.$var,\n\"default-scatter-plot-series\":default$scatter$plot$series4657,\n\"starting-angle-method\":starting$angle$method4101,\n\"check-render-x-axis\":check$render$x$axis5853.$var,\n\"error-bars-method\":error$bars$method4145,\n\"snd\":snd3607,\n\"box-plot-chart-window\":box$plot$chart$window4339.$var,\n\"grouped-bar-chart-from-list\":grouped$bar$chart$from$list5321.$var,\n\"is-pie-chart-series\":is$pie$chart$series4203.$var,\n\"line-plot-series\":line$plot$series3790.$var,\n\"interval-chart-from-list\":interval$chart$from$list5566.$var,\n\"background-color-method\":background$color$method4388,\n\"max-method\":max$method4422,\n\"function-plot-from-list\":function$plot$from$list4513.$var,\n\"table-sorter\":table$sorter1526.$var,\n\"horizontal-method\":horizontal$method4045,\n\"get-scatter-point\":get$scatter$point4522.$var,\n\"annotations-method\":annotations$method3178,\n\"widen-range\":widen$range6108.$var,\n\"is-ChartWindow\":is$ChartWindow4475.$var,\n\"plot-chart-window\":plot$chart$window4375.$var,\n\"color-method\":color$method4030,\n\"is-histogram-chart-window\":is$histogram$chart$window4493.$var,\n\"is-interval-chart-series\":is$interval$chart$series4209.$var,\n\"render-charts\":render$charts5900.$var,\n\"default-bar-chart-series\":default$bar$chart$series4768,\n\"default-histogram-series\":default$histogram$series5765,\n\"string-to-stacktype\":string$to$stacktype1576.$var,\n\"sprintf\":sprintf5582,\n\"border-color-method\":border$color$method4390,\n\"relative\":relative450.$var,\n\"unsafe-equal\":unsafe$equal6098,\n\"select-multiple-method\":select$multiple$method4465,\n\"check-positive-sides\":check$positive$sides532.$var,\n\"is-exact-bound\":is$exact$bound6472.$var,\n\"box-labels-method\":box$labels$method4155,\n\"is-line-plot-series\":is$line$plot$series4183.$var,\n\"labeled-num-dot-chart-from-list\":labeled$num$dot$chart$from$list5140.$var,\n\"default-plot-chart-window-object\":default$plot$chart$window$object6795,\n\"explode-method\":explode$method4094,\n\"multi-prep-axis\":multi$prep$axis1764.$var,\n\"is-AxisData\":is$AxisData416.$var,\n\"dot-chart-from-list\":dot$chart$from$list5195.$var,\n\"line-plot-from-list\":line$plot$from$list4551.$var,\n\"get-list-of-bounding-boxes\":get$list$of$bounding$boxes3677.$var,\n\"default-bounding-box\":default$bounding$box3582,\n\"function-plot-series\":function$plot$series3898.$var,\n\"interval-chart-series\":interval$chart$series3937.$var,\n\"format-axis-data-method\":format$axis$data$method4114,\n\"show-minor-grid-lines-method\":show$minor$grid$lines$method6835,\n\"is-relative\":is$relative448.$var,\n\"is-categorical-dot-plot-series\":is$categorical$dot$plot$series4192.$var,\n\"single-annotations-method\":single$annotations$method4117,\n\"labels-method\":labels$method4041,\n\"default-box-plot-chart-window-object\":default$box$plot$chart$window$object6007,\n\"thd\":thd6836,\n\"default-multi-sort-method\":default$multi$sort$method4141,\n\"exact-bound\":exact$bound6474.$var,\n\"y-min-method\":y$min$method4432,\n\"sort-method\":sort$method4097,\n\"labeled-box-plot-from-list\":labeled$box$plot$from$list5585.$var,\n\"x-min-method\":x$min$method4452,\n\"DEFAULT-RANGE\":DEFAULT$RANGE6837,\n\"default-interval-chart-window-object\":default$interval$chart$window$object6838,\n\"is-function-plot-series\":is$function$plot$series4197.$var,\n\"is-scatter-plot-series\":is$scatter$plot$series4186.$var,\n\"pie-chart-from-list\":pie$chart$from$list4869.$var,\n\"minor-gridlines-min-spacing-method\":minor$gridlines$min$spacing$method6839,\n\"stacked-bar-chart-from-list\":stacked$bar$chart$from$list5437.$var,\n\"categorical-dot-plot-series\":categorical$dot$plot$series3887.$var,\n\"is-axis-data\":is$axis$data418.$var,\n\"interval-color-method\":interval$color$method4120,\n\"default-dot-plot-series\":default$dot$plot$series5008,\n\"FUNCTION-POINT-SIZE\":FUNCTION$POINT$SIZE6080,\n\"default-pie-chart-series\":default$pie$chart$series4820,\n\"scatter-plot-series\":scatter$plot$series3822.$var,\n\"is-PointShape\":is$PointShape564.$var,\n\"num-to-scientific\":num$to$scientific1553.$var,\n\"inferred-bound\":inferred$bound6478.$var,\n\"multi-bar-chart-series\":multi$bar$chart$series3946.$var,\n\"polynomial\":polynomial517.$var,\n\"labeled-line-plot-from-list\":labeled$line$plot$from$list4578.$var,\n\"default-box-plot-series\":default$box$plot$series5681,\n\"image-num-dot-chart-from-list\":image$num$dot$chart$from$list5095.$var,\n\"get-dot-point\":get$dot$point4968.$var,\n\"check-image\":check$image619.$var,\n\"check-string\":check$string604.$var,\n\"to-table2\":to$table2768.$var,\n\"axis-data\":axis$data419.$var,\n\"default-line-plot-series\":default$line$plot$series4542,\n\"image-scatter-plot-from-list\":image$scatter$plot$from$list4733.$var,\n\"find-pt-on-edge\":find$pt$on$edge6338.$var,\n\"sci-notation\":sci$notation404.$var,\n\"SHOW-LENGTH\":SHOW$LENGTH6840,\n\"is-multi-bar-chart-series\":is$multi$bar$chart$series4213.$var,\n\"absolute\":absolute446.$var,\n\"minor-gridlines-color-method\":minor$gridlines$color$method6841,\n\"merge-bounding-box\":merge$bounding$box3708.$var,\n\"to-table3\":to$table3808.$var,\n\"to-table2-n\":to$table2$n794.$var,\n\"make-axis-data-method\":make$axis$data$method4115,\n\"label-sort-method\":label$sort$method4098,\n\"box-plot-from-list\":box$plot$from$list5592.$var,\n\"is-polynomial\":is$polynomial515.$var,\n\"is-inferred-bound\":is$inferred$bound6476.$var,\n\"in-bound-xy\":in$bound$xy6171.$var,\n\"to-table4\":to$table41424.$var,\n\"to-table3-n\":to$table3$n1389.$var,\n\"trendline-type-method\":trendline$type$method4034,\n\"x-axis-method\":x$axis$method4410,\n\"is-unknown-bound\":is$unknown$bound6480.$var,\n\"multi-scale-method\":multi$scale$method4143,\n\"is-BoundResult\":is$BoundResult6470.$var,\n\"default-histogram-chart-window-object\":default$histogram$chart$window$object6025,\n\"histogram-from-list\":histogram$from$list5772.$var,\n\"bar-chart-from-list\":bar$chart$from$list4953.$var,\n\"bar-chart-window\":bar$chart$window4348.$var,\n\"get-vs-from-img\":get$vs$from$img1466.$var,\n\"y-axis-method\":y$axis$method4411,\n\"map5\":map55457.$var,\n\"generate-xy\":generate$xy6087.$var,\n\"is-sci-notation\":is$sci$notation396.$var,\n\"ps-to-arr\":ps$to$arr6120.$var,\n\"get-bounding-box\":get$bounding$box3618.$var,\n\"is-regular-polygon-shape\":is$regular$polygon$shape570.$var,\n\"is-Pointer\":is$Pointer356.$var,\n\"posn\":posn6278,\n\"is-pointer\":is$pointer358.$var,\n\"gridlines-min-spacing-method\":gridlines$min$spacing$method6842,\n\"default-function-plot-series\":default$function$plot$series4505,\n\"dashed-line-style-method\":dashed$line$style$method4039,\n\"is-absolute\":is$absolute444.$var,\n\"pointer-color-method\":pointer$color$method4113,\n\"is-grouped\":is$grouped455.$var,\n\"unknown-bound\":unknown$bound6482.$var,\n\"check-positive-degree\":check$positive$degree478.$var,\n\"min-method\":min$method4421,\n\"multi-sort-method\":multi$sort$method4142,\n\"image-line-plot-from-list\":image$line$plot$from$list4608.$var,\n\"is-bar-chart-window\":is$bar$chart$window4487.$var,\n\"is-dot-plot-series\":is$dot$plot$series4189.$var,\n\"style-method\":style$method4129,\n\"regular-polygon-shape\":regular$polygon$shape572.$var,\n\"image-labels-method\":image$labels$method4042,\n\"default-dot-chart-window-object\":default$dot$chart$window$object5934,\n\"pointshape-method\":pointshape$method4040,\n\"axis-pointer-method\":axis$pointer$method4112,\n\"pointer\":pointer362.$var,\n\"check-valid-dent\":check$valid$dent545.$var,\n\"nearest\":nearest6231.$var,\n\"dashed-line-method\":dashed$line$method4038,\n\"super-default-multi-sort-method\":super$default$multi$sort$method4140,\n\"is-box-plot-series\":is$box$plot$series4216.$var,\n\"labeled-histogram-from-list\":labeled$histogram$from$list5793.$var,\n\"labeled-scatter-plot-from-list\":labeled$scatter$plot$from$list4696.$var,\n\"y-max-method\":y$max$method4433,\n\"grouped\":grouped457.$var,\n\"gridlines-color-method\":gridlines$color$method4464,\n\"is-StackType\":is$StackType443.$var,\n\"get-interval-point\":get$interval$point5487.$var,\n\"x-max-method\":x$max$method4453,\n\"dot-plot-series\":dot$plot$series3854.$var,\n\"trendline-opacity-method\":trendline$opacity$method4037,\n\"curve-method\":curve$method4032,\n\"is-SciNumber\":is$SciNumber394.$var,\n\"image-pie-chart-from-list\":image$pie$chart$from$list4908.$var},\n\"defined-types\":{\"TableIntern\":TableIntern764,\n\"CategoricalDotPlotSeries\":CategoricalDotPlotSeries4080,\n\"DotPlotSeries\":DotPlotSeries4071,\n\"PieChartWindowObject\":PieChartWindowObject4404,\n\"DataSeries\":DataSeries4507,\n\"SciNumber\":SciNumber6843,\n\"StackType\":StackType1564,\n\"BarChartSeries\":BarChartSeries4124,\n\"BoxChartWindowObject\":BoxChartWindowObject4426,\n\"DotChartWindowObject\":DotChartWindowObject4415,\n\"PlottableFunction\":PlottableFunction4509,\n\"BoundingBox\":BoundingBox3580,\n\"DotPoint\":DotPoint4964,\n\"CategoricalDotPoint\":CategoricalDotPoint6844,\n\"IntervalChartWindowObject\":IntervalChartWindowObject4446,\n\"HistogramChartWindowObject\":HistogramChartWindowObject4457,\n\"PieChartSeries\":PieChartSeries4107,\n\"BoxChartSeries\":BoxChartSeries4161,\n\"TrendlineType\":TrendlineType2226,\n\"AxisData\":AxisData6845,\n\"IntervalPoint\":IntervalPoint5483,\n\"LinePlotSeries\":LinePlotSeries4049,\n\"PlotChartWindowObject\":PlotChartWindowObject4470,\n\"ChartWindowObject\":ChartWindowObject4236,\n\"ChartWindow\":ChartWindow5898,\n\"FunctionPlotSeries\":FunctionPlotSeries4089,\n\"IntervalChartSeries\":IntervalChartSeries4135,\n\"PointShape\":PointShape2349,\n\"ScatterPoint\":ScatterPoint4623,\n\"BoxData\":BoxData1839,\n\"ScatterPlotSeries\":ScatterPlotSeries4060,\n\"Posn\":Posn6135,\n\"BarChartWindowObject\":BarChartWindowObject4437,\n\"HistogramSeries\":HistogramSeries4176,\n\"BoundResult\":BoundResult6511,\n\"MultiBarChartSeries\":MultiBarChartSeries4150,\n\"Pointer\":Pointer6846},\n\"provide-plus-types\":R.mO({\"values\":R.mO({\"render-chart\":render$chart3742.$var,\n\"render-charts\":render$charts5900.$var,\n\"from-list\":from$list6832,\n\"is-StackType\":is$StackType443.$var,\n\"absolute\":absolute446.$var,\n\"is-absolute\":is$absolute444.$var,\n\"relative\":relative450.$var,\n\"is-relative\":is$relative448.$var,\n\"percent\":percent453.$var,\n\"is-percent\":is$percent451.$var,\n\"grouped\":grouped457.$var,\n\"is-grouped\":is$grouped455.$var,\n\"is-TrendlineType\":is$TrendlineType503.$var,\n\"no-trendline\":no$trendline506.$var,\n\"is-no-trendline\":is$no$trendline504.$var,\n\"linear\":linear509.$var,\n\"is-linear\":is$linear507.$var,\n\"exponential\":exponential513.$var,\n\"is-exponential\":is$exponential512.$var,\n\"polynomial\":polynomial517.$var,\n\"is-polynomial\":is$polynomial515.$var,\n\"is-PointShape\":is$PointShape564.$var,\n\"circle-shape\":circle$shape568.$var,\n\"is-circle-shape\":is$circle$shape566.$var,\n\"regular-polygon-shape\":regular$polygon$shape572.$var,\n\"is-regular-polygon-shape\":is$regular$polygon$shape570.$var}),\n\"types\":{\"DataSeries\":DataSeries4507,\n\"ChartWindow\":ChartWindow5898,\n\"StackType\":StackType1564,\n\"TrendlineType\":TrendlineType2226,\n\"PointShape\":PointShape2349},\n\"modules\":{}}),\n\"checks\":checks6834});\nbreak;\ncase 16: ++R.GAS;\nreturn $ans330;\ndefault: R.ffi.throwSpinnakerError(L[2718],$step95);\n}\n}\nif($step95 !== 16) {\n$ans330.stack[R.EXN_STACKHEIGHT++] = R.mAR($al331,$toplevel96,$step95,[],[to$table3$n1389,default$bar$chart$window$object5977,multi$bar$chart$series3946,interval$chart$window4356,TableIntern764,default$plot$chart$window$object6795,style$method4129,DEFAULT$RANGE6837,pie$chart$window4321,percent453,line$plot$series3790,line$width$method4033,pie$chart$from$list4869,x$max$method4453,is$multi$bar$chart$series4213,ScatterPoint4623,default$pie$chart$window$object5961,PlotChartWindowObject4470,exploding$pie$chart$from$list4830,get$bounding$box3618,is$sci$notation396,gridlines$color$method4464,freq$bar$chart$from$list5748,dashed$line$style$method4039,sprintf5582,check$chart$window4239,collapse$threshold$method4102,labeled$line$plot$from$list4578,default$line$plot$series4542,num$to$scientific1553,line$plot$edge$cut6446,select$multiple$method4465,interval$chart$series3937,image$line$plot$from$list4608,render$chart3742,is$dot$chart$window4481,IntervalPoint5483,CategoricalDotPlotSeries4080,in$bound$xy6171,widen$range6108,IntervalChartSeries4135,trendline$opacity$method4037,explode$method4094,labeled$scatter$plot$from$list4696,labeled$num$dot$chart$from$list5140,box$labels$method4155,is$SciNumber394,y$max$method4433,default$bar$chart$series4768,LinePlotSeries4049,dot$chart$window4329,SHOW$LENGTH6840,FUNCTION$POINT$SIZE6080,PointShape2349,is$linear507,scatter$plot$series3822,get$list$of$bounding$boxes3677,dist6188,single$intervals$method4118,merge$bounding$box3708,default$function$plot$series4505,is$Pointer356,is$categorical$dot$plot$series4192,get$bound$result6606,is$grouped455,is$box$plot$chart$window4484,is$BoundResult6470,color$list$method4095,pointer$color$method4113,is$circle$shape566,get$box$data1866,is$pie$chart$series4203,exponential513,function$plot$series3898,show$minor$grid$lines$method6835,default$interval$chart$window$object6838,multi$scale$method4143,default$histogram$chart$window$object6025,make$axis$data$method4115,axis$pointer$method4112,color$method4030,check$image619,table2$to$list1450,pie$chart$series3906,default$scatter$plot$series4657,BoundingBox3580,labels$method4041,is$pointer358,is$function$plot$series4197,sort$method4097,ChartWindow5898,ChartWindowObject4236,is$relative448,is$AxisData416,ChartWindow341,is$PointShape564,unknown$bound6482,single$error$bars$method4119,is$line$plot$series4183,AxisData6845,check$num588,HistogramChartWindowObject4457,anf_obj3713,DotPlotSeries4071,is$percent451,is$dot$plot$series4189,relative450,default$sort$method4096,find$pt$on$edge6338,is$StackType443,labeled$histogram$from$list5793,error$bars$method4145,regular$polygon$shape572,is$histogram$series4219,thd6836,minor$gridlines$min$spacing$method6839,to$table41424,default$dot$chart$window$object5934,is$exact$bound6472,multi$prep$axis1764,PieChartSeries4107,string$to$stacktype1576,is$no$trendline504,default$box$plot$chart$window$object6007,stacking$type$method4144,is$box$plot$series4216,is$pie$chart$window4477,is$interval$chart$window4490,BoxData1839,DotPoint4964,line$plot$from$list4551,bar$chart$series3915,bar$chart$window4348,TrendlineType2226,BarChartSeries4124,background$border$method4389,interval$color$method4120,x$min$method4452,annotations$method3178,labeled$box$plot$from$list5585,is$plot$chart$window4496,IntervalChartWindowObject4446,bound$result$to$bounds6584,max$method4422,CategoricalDotPoint6844,image$scatter$plot$from$list4733,format$axis$data$method4114,check$positive$sides532,is$exponential512,get$interval$point5487,is$absolute444,is$DataSeries4181,check$valid$dent545,image$histogram$from$list5819,is$bar$chart$series4206,to$table2768,DotChartWindowObject4415,border$color$method4390,show$grid$lines$method4463,nearest6231,image$pie$chart$from$list4908,default$box$plot$series5681,horizontal$method4045,image$labels$method4042,gridlines$min$spacing$method6842,threeD$method4099,list$to$table21438,is$scatter$plot$series4186,MultiBarChartSeries4150,linear509,labeled$interval$chart$from$list5538,is$regular$polygon$shape570,is$polynomial515,y$min$method4432,intervals$method3292,BoxChartWindowObject4426,inferred$bound6478,is$bar$chart$window4487,circle$shape568,posn6278,PieChartWindowObject4404,sci$notation404,stacked$bar$chart$from$list5437,SciNumber6843,multi$sort$method4142,to$table2$n794,default$multi$bar$chart$series5301,unsafe$equal6098,dashed$line$method4038,axis$data419,minor$gridlines$color$method6841,Posn6135,default$chart$window$object3728,get$dot$point4968,piehole$method4100,answer6833,ScatterPlotSeries4060,ps$to$arr6120,StackType1564,HistogramSeries4176,default$multi$sort$method4141,curve$method4032,snd3607,render$charts5900,is$interval$chart$series4209,get$vs$from$img1466,check$string604,dot$chart$from$list5195,fst3606,bar$chart$from$list4953,check$render$x$axis5853,BoundResult342,exact$bound6474,function$plot$from$list4513,grouped$bar$chart$from$list5321,legend$method4031,pointer362,default$categorical$dot$plot$series5186,scatter$plot$from$list4666,scale$method4116,is$TrendlineType503,DataSeries4507,default$histogram$series5765,table$sorter1526,no$trendline506,box$plot$series3954,map55457,plot$chart$window4375,label$sort$method4098,BoundResult6511,histogram$chart$window4365,to$table3808,pointshape$method4040,check$render$y$axis5888,in$bound$y6157,get$scatter$point4522,dot$plot$series3854,trendline$type$method4034,trendline$color$method4035,box$plot$chart$window4339,PlottableFunction4509,histogram$from$list5772,BarChartWindowObject4437,is$inferred$bound6476,check$positive$degree478,is$ChartWindow4475,single$annotations$method4117,default$pie$chart$series4820,background$color$method4388,Pointer6846,x$axis$method4410,box$plot$from$list5592,absolute446,default$dot$plot$series5008,image$num$dot$chart$from$list5095,y$axis$method4411,starting$angle$method4101,min$method4421,histogram$series3974,is$axis$data418,num$dot$chart$from$list5017,is$unknown$bound6480,prep$axis1595,generate$xy6087,polynomial517,categorical$dot$plot$series3887,FunctionPlotSeries4089,interval$chart$from$list5566,super$default$multi$sort$method4140,default$interval$chart$series5524,from$list6832,image$bar$chart$from$list4786,histogram$label$method4167,in$bound$x6138,trendline$width$method4036,is$histogram$chart$window4493,DataSeries340,grouped457,default$bounding$box3582,BoxChartSeries4161],$elidedFrames333);\n}\nreturn $ans330;\n};\nreturn R.safeCall($toplevel96,function module_load(moduleVal) {\nR.modules[\"$builtin://charts53\"] = moduleVal;\nreturn moduleVal;\n},\"Evaluating $toplevel\");\n}",
"nativeRequires":[],
"provides":{"modules":{},
"values":{"is-StackType":{"bind":"let",
"origin":{"local-bind-site":["builtin://charts",
7,
7,
101,
7,
16,
110],
"definition-bind-site":["builtin://charts",
51,
0,
1279,
56,
3,
1348],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"typ":"tany"},
"grouped":{"bind":"let",
"origin":{"local-bind-site":["builtin://charts",
7,
7,
101,
7,
16,
110],
"definition-bind-site":["builtin://charts",
55,
2,
1335,
55,
11,
1344],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"typ":"tany"},
"regular-polygon-shape":{"bind":"fun",
"origin":{"local-bind-site":["builtin://charts",
9,
7,
141,
9,
17,
151],
"definition-bind-site":["builtin://charts",
88,
2,
1984,
88,
104,
2086],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"flatness":false,
"name":"regular-polygon-shape",
"typ":"tany"},
"is-grouped":{"bind":"fun",
"origin":{"local-bind-site":["builtin://charts",
7,
7,
101,
7,
16,
110],
"definition-bind-site":["builtin://charts",
55,
2,
1335,
55,
11,
1344],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"flatness":0,
"name":"is-grouped",
"typ":"tany"},
"is-absolute":{"bind":"fun",
"origin":{"local-bind-site":["builtin://charts",
7,
7,
101,
7,
16,
110],
"definition-bind-site":["builtin://charts",
52,
2,
1297,
52,
12,
1307],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"flatness":0,
"name":"is-absolute",
"typ":"tany"},
"is-regular-polygon-shape":{"bind":"fun",
"origin":{"local-bind-site":["builtin://charts",
9,
7,
141,
9,
17,
151],
"definition-bind-site":["builtin://charts",
88,
2,
1984,
88,
104,
2086],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"flatness":0,
"name":"is-regular-polygon-shape",
"typ":"tany"},
"is-polynomial":{"bind":"fun",
"origin":{"local-bind-site":["builtin://charts",
8,
7,
119,
8,
20,
132],
"definition-bind-site":["builtin://charts",
69,
2,
1556,
69,
60,
1614],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"flatness":0,
"name":"is-polynomial",
"typ":"tany"},
"absolute":{"bind":"let",
"origin":{"local-bind-site":["builtin://charts",
7,
7,
101,
7,
16,
110],
"definition-bind-site":["builtin://charts",
52,
2,
1297,
52,
12,
1307],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"typ":"tany"},
"polynomial":{"bind":"fun",
"origin":{"local-bind-site":["builtin://charts",
8,
7,
119,
8,
20,
132],
"definition-bind-site":["builtin://charts",
69,
2,
1556,
69,
60,
1614],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"flatness":false,
"name":"polynomial",
"typ":"tany"},
"is-PointShape":{"bind":"let",
"origin":{"local-bind-site":["builtin://charts",
9,
7,
141,
9,
17,
151],
"definition-bind-site":["builtin://charts",
86,
0,
1947,
89,
3,
2090],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"typ":"tany"},
"is-relative":{"bind":"fun",
"origin":{"local-bind-site":["builtin://charts",
7,
7,
101,
7,
16,
110],
"definition-bind-site":["builtin://charts",
53,
2,
1310,
53,
12,
1320],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"flatness":0,
"name":"is-relative",
"typ":"tany"},
"relative":{"bind":"let",
"origin":{"local-bind-site":["builtin://charts",
7,
7,
101,
7,
16,
110],
"definition-bind-site":["builtin://charts",
53,
2,
1310,
53,
12,
1320],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"typ":"tany"},
"render-charts":{"bind":"fun",
"origin":{"local-bind-site":["builtin://charts",
3,
2,
27,
3,
15,
40],
"definition-bind-site":["builtin://charts",
2740,
0,
87516,
2863,
3,
92326],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"flatness":false,
"name":"render-charts",
"typ":"tany"},
"is-TrendlineType":{"bind":"let",
"origin":{"local-bind-site":["builtin://charts",
8,
7,
119,
8,
20,
132],
"definition-bind-site":["builtin://charts",
65,
0,
1490,
70,
3,
1618],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"typ":"tany"},
"is-no-trendline":{"bind":"fun",
"origin":{"local-bind-site":["builtin://charts",
8,
7,
119,
8,
20,
132],
"definition-bind-site":["builtin://charts",
66,
2,
1512,
66,
16,
1526],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"flatness":0,
"name":"is-no-trendline",
"typ":"tany"},
"is-linear":{"bind":"fun",
"origin":{"local-bind-site":["builtin://charts",
8,
7,
119,
8,
20,
132],
"definition-bind-site":["builtin://charts",
67,
2,
1529,
67,
10,
1537],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"flatness":0,
"name":"is-linear",
"typ":"tany"},
"render-chart":{"bind":"fun",
"origin":{"local-bind-site":["builtin://charts",
2,
2,
11,
2,
14,
23],
"definition-bind-site":["builtin://charts",
2425,
0,
77016,
2534,
3,
81279],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"flatness":false,
"name":"render-chart",
"typ":"tany"},
"is-circle-shape":{"bind":"fun",
"origin":{"local-bind-site":["builtin://charts",
9,
7,
141,
9,
17,
151],
"definition-bind-site":["builtin://charts",
87,
2,
1967,
87,
16,
1981],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"flatness":0,
"name":"is-circle-shape",
"typ":"tany"},
"linear":{"bind":"let",
"origin":{"local-bind-site":["builtin://charts",
8,
7,
119,
8,
20,
132],
"definition-bind-site":["builtin://charts",
67,
2,
1529,
67,
10,
1537],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"typ":"tany"},
"no-trendline":{"bind":"let",
"origin":{"local-bind-site":["builtin://charts",
8,
7,
119,
8,
20,
132],
"definition-bind-site":["builtin://charts",
66,
2,
1512,
66,
16,
1526],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"typ":"tany"},
"exponential":{"bind":"let",
"origin":{"local-bind-site":["builtin://charts",
8,
7,
119,
8,
20,
132],
"definition-bind-site":["builtin://charts",
68,
2,
1540,
68,
15,
1553],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"typ":"tany"},
"percent":{"bind":"let",
"origin":{"local-bind-site":["builtin://charts",
7,
7,
101,
7,
16,
110],
"definition-bind-site":["builtin://charts",
54,
2,
1323,
54,
11,
1332],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"typ":"tany"},
"circle-shape":{"bind":"let",
"origin":{"local-bind-site":["builtin://charts",
9,
7,
141,
9,
17,
151],
"definition-bind-site":["builtin://charts",
87,
2,
1967,
87,
16,
1981],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"typ":"tany"},
"is-percent":{"bind":"fun",
"origin":{"local-bind-site":["builtin://charts",
7,
7,
101,
7,
16,
110],
"definition-bind-site":["builtin://charts",
54,
2,
1323,
54,
11,
1332],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"flatness":0,
"name":"is-percent",
"typ":"tany"},
"is-exponential":{"bind":"fun",
"origin":{"local-bind-site":["builtin://charts",
8,
7,
119,
8,
20,
132],
"definition-bind-site":["builtin://charts",
68,
2,
1540,
68,
15,
1553],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"flatness":0,
"name":"is-exponential",
"typ":"tany"},
"from-list":{"bind":"let",
"origin":{"local-bind-site":["builtin://charts",
4,
2,
44,
4,
11,
53],
"definition-bind-site":["builtin://charts",
2865,
0,
92328,
2892,
1,
93523],
"new-definition":true,
"uri-of-definition":"builtin://charts"},
"typ":"tany"}},
"datatypes":{"Pointer":["data",{"local-bind-site":["builtin://charts",
42,
0,
1020,
44,
3,
1084],
"definition-bind-site":["builtin://charts",
42,
0,
1020,
44,
3,
1084],
"new-definition":true,
"uri-of-definition":"builtin://charts"},"Pointer",[],[["pointer",
[["label",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"String"}],["value",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}]],
{}]],{}],
"BoundResult":["data",{"local-bind-site":["builtin://charts",
2699,
0,
86254,
2703,
3,
86354],
"definition-bind-site":["builtin://charts",
2699,
0,
86254,
2703,
3,
86354],
"new-definition":true,
"uri-of-definition":"builtin://charts"},"BoundResult",[],[["exact-bound",
[["n",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}]],
{}],["inferred-bound",
[["n",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}]],
{}],["unknown-bound",
{}]],{}],
"PointShape":["data",{"local-bind-site":["builtin://charts",
86,
0,
1947,
89,
3,
2090],
"definition-bind-site":["builtin://charts",
86,
0,
1947,
89,
3,
2090],
"new-definition":true,
"uri-of-definition":"builtin://charts"},"PointShape",[],[["circle-shape",
{}],["regular-polygon-shape",
[["sides",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"NumInteger"}],["dent",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}]],
{}]],{}],
"ChartWindow":["data",{"local-bind-site":["builtin://charts",
1719,
0,
53946,
1796,
3,
56692],
"definition-bind-site":["builtin://charts",
1719,
0,
53946,
1796,
3,
56692],
"new-definition":true,
"uri-of-definition":"builtin://charts"},"ChartWindow",[],[["pie-chart-window",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"PieChartWindowObject"}]],
{"constr":"tany"}],["dot-chart-window",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"DotChartWindowObject"}]],
{"y-axis":"tany",
"x-axis":"tany",
"constr":"tany"}],["box-plot-chart-window",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"BoxChartWindowObject"}]],
{"max":"tany",
"min":"tany",
"y-axis":"tany",
"x-axis":"tany",
"constr":"tany"}],["bar-chart-window",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"BarChartWindowObject"}]],
{"y-max":"tany",
"y-min":"tany",
"y-axis":"tany",
"x-axis":"tany",
"constr":"tany"}],["interval-chart-window",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"IntervalChartWindowObject"}]],
{"y-max":"tany",
"y-min":"tany",
"y-axis":"tany",
"x-axis":"tany",
"constr":"tany"}],["histogram-chart-window",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"HistogramChartWindowObject"}]],
{"y-max":"tany",
"x-max":"tany",
"x-min":"tany",
"y-axis":"tany",
"x-axis":"tany",
"constr":"tany"}],["plot-chart-window",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"PlotChartWindowObject"}]],
{"y-min":"tany",
"x-min":"tany",
"x-axis":"tany",
"y-axis":"tany",
"y-max":"tany",
"x-max":"tany",
"constr":"tany",
"gridlines-color":"tany",
"show-gridlines":"tany",
"num-samples":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],
"tany"],
"select-multiple":"tany"}]],{"title":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"String"}],
"tany"],
"constr":"tany",
"height":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],
"tany"],
"width":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],
"tany"],
"background-color":"tany",
"get-image":["arrow",
["tany"],
"tany"],
"border-color":"tany",
"border-size":"tany",
"display":["arrow",
["tany"],
"tany"],
"_output":["arrow",
["tany"],
"tany"]}],
"AxisData":["data",{"local-bind-site":["builtin://charts",
48,
0,
1176,
50,
3,
1278],
"definition-bind-site":["builtin://charts",
48,
0,
1176,
50,
3,
1278],
"new-definition":true,
"uri-of-definition":"builtin://charts"},"AxisData",[],[["axis-data",
[["axisTop",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["axisBottom",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["ticks",
["tyapp",{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"RawArray"},[{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"Pointer"}]]]],
{}]],{}],
"TrendlineType":["data",{"local-bind-site":["builtin://charts",
65,
0,
1490,
70,
3,
1618],
"definition-bind-site":["builtin://charts",
65,
0,
1490,
70,
3,
1618],
"new-definition":true,
"uri-of-definition":"builtin://charts"},"TrendlineType",[],[["no-trendline",
{}],["linear",
{}],["exponential",
{}],["polynomial",
[["degree",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"NumInteger"}]],
{}]],{}],
"StackType":["data",{"local-bind-site":["builtin://charts",
51,
0,
1279,
56,
3,
1348],
"definition-bind-site":["builtin://charts",
51,
0,
1279,
56,
3,
1348],
"new-definition":true,
"uri-of-definition":"builtin://charts"},"StackType",[],[["absolute",
{}],["relative",
{}],["percent",
{}],["grouped",
{}]],{}],
"SciNumber":["data",{"local-bind-site":["builtin://charts",
45,
0,
1085,
47,
3,
1175],
"definition-bind-site":["builtin://charts",
45,
0,
1085,
47,
3,
1175],
"new-definition":true,
"uri-of-definition":"builtin://charts"},"SciNumber",[],[["sci-notation",
[["coeff",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["exponent",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["base",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}]],
{}]],{}],
"DataSeries":["data",{"local-bind-site":["builtin://charts",
1519,
0,
46727,
1709,
3,
53759],
"definition-bind-site":["builtin://charts",
1519,
0,
46727,
1709,
3,
53759],
"new-definition":true,
"uri-of-definition":"builtin://charts"},"DataSeries",[],[["line-plot-series",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"LinePlotSeries"}]],
{"labels":"tany",
"point-size":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],
"tany"],
"use-image-sizes":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}],
"tany"],
"trendline-type":"tany",
"curved":"tany",
"linewidth":"tany",
"image-labels":"tany",
"dashed-line":"tany",
"constr":"tany",
"trendline-opacity":"tany",
"legend":"tany",
"is-single":"tany",
"dashline-style":"tany",
"trendline-width":"tany",
"trendline-color":"tany",
"point-shape":"tany",
"horizontal":"tany",
"color":"tany"}],["scatter-plot-series",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"ScatterPlotSeries"}]],
{"labels":"tany",
"point-size":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],
"tany"],
"use-image-sizes":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}],
"tany"],
"trendline-type":"tany",
"image-labels":"tany",
"constr":"tany",
"trendline-opacity":"tany",
"legend":"tany",
"is-single":"tany",
"trendline-width":"tany",
"trendline-color":"tany",
"point-shape":"tany",
"horizontal":"tany",
"color":"tany"}],["dot-plot-series",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"DotPlotSeries"}]],
{"use-image-sizes":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}],
"tany"],
"point-size":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],
"tany"],
"labels":"tany",
"image-labels":"tany",
"legend":"tany",
"color":"tany",
"constr":"tany",
"is-single":"tany"}],["categorical-dot-plot-series",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"CategoricalDotPlotSeries"}]],
{"legend":"tany",
"color":"tany",
"constr":"tany",
"is-single":"tany"}],["function-plot-series",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"FunctionPlotSeries"}]],
{"horizontal":"tany",
"legend":"tany",
"color":"tany",
"constr":"tany",
"is-single":"tany"}],["pie-chart-series",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"PieChartSeries"}]],
{"sort":"tany",
"rotate":"tany",
"colors":"tany",
"constr":"tany",
"sort-by-label":"tany",
"piehole":"tany",
"collapse-threshold":"tany",
"is-single":"tany",
"sort-by":"tany",
"threeD":"tany",
"explode":"tany"}],["bar-chart-series",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"BarChartSeries"}]],
{"sort":"tany",
"interval-color":"tany",
"format-axis":"tany",
"pointer-color":"tany",
"colors":"tany",
"constr":"tany",
"intervals":"tany",
"sort-by-label":"tany",
"is-single":"tany",
"scale":"tany",
"sort-by":"tany",
"error-bars":"tany",
"annotations":"tany",
"horizontal":"tany",
"color":"tany",
"add-pointers":"tany",
"make-axis":"tany"}],["interval-chart-series",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"IntervalChartSeries"}]],
{"point-size":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],
"tany"],
"sort":"tany",
"interval-color":"tany",
"format-axis":"tany",
"trendline-type":"tany",
"pointer-color":"tany",
"lineWidth":"tany",
"style":"tany",
"colors":"tany",
"constr":"tany",
"intervals":"tany",
"sort-by-label":"tany",
"legend":"tany",
"is-single":"tany",
"scale":"tany",
"sort-by":"tany",
"error-bars":"tany",
"annotations":"tany",
"horizontal":"tany",
"color":"tany",
"add-pointers":"tany",
"make-axis":"tany"}],["multi-bar-chart-series",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"MultiBarChartSeries"}]],
{"sort":"tany",
"interval-color":"tany",
"format-axis":"tany",
"pointer-color":"tany",
"sort-by-data":"tany",
"colors":"tany",
"constr":"tany",
"intervals":"tany",
"sort-by-label":"tany",
"stacking-type":"tany",
"is-single":"tany",
"scale":"tany",
"sort-by":"tany",
"error-bars":"tany",
"annotations":"tany",
"horizontal":"tany",
"add-pointers":"tany",
"make-axis":"tany"}],["box-plot-series",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"BoxChartSeries"}]],
{"show-outliers":["arrow",
["tany",
"tany"],
"tany"],
"horizontal":"tany",
"constr":"tany",
"is-single":"tany",
"color":"tany",
"labels":"tany"}],["histogram-series",
[["obj",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://charts"},
"name":"HistogramSeries"}]],
{"num-bins":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],
"tany"],
"min-num-bins":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],
"tany"],
"max-num-bins":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],
"tany"],
"bin-width":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],
"tany"],
"constr":"tany",
"is-single":"tany",
"color":"tany",
"labels":"tany"}]],{"labels":"tany",
"point-size":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],
"tany"],
"use-image-sizes":["arrow",
["tany",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}],
"tany"],
"trendline-type":"tany",
"curved":"tany",
"linewidth":"tany",
"image-labels":"tany",
"dashed-line":"tany",
"constr":"tany",
"trendline-opacity":"tany",
"legend":"tany",
"is-single":"tany",
"dashline-style":"tany",
"trendline-width":"tany",
"trendline-color":"tany",
"point-shape":"tany",
"horizontal":"tany",
"color":"tany",
"_output":["arrow",
["tany"],
"tany"]}]},
"aliases":{"PointShape":"tany",
"TrendlineType":"tany",
"StackType":"tany",
"ChartWindow":"tany",
"DataSeries":"tany"}},
"requires":[{"import-type":"builtin",
"name":"base"},
{"import-type":"builtin",
"name":"charts-lib"},
{"import-type":"builtin",
"name":"color"},
{"import-type":"builtin",
"name":"either"},
{"import-type":"builtin",
"name":"global"},
{"import-type":"builtin",
"name":"image-structs"},
{"import-type":"builtin",
"name":"internal-image-untyped"},
{"import-type":"builtin",
"name":"lists"},
{"import-type":"builtin",
"name":"option"},
{"import-type":"builtin",
"name":"render-error-display"},
{"import-type":"builtin",
"name":"sets"},
{"import-type":"builtin",
"name":"statistics"},
{"import-type":"builtin",
"name":"string-dict"},
{"import-type":"builtin",
"name":"valueskeleton"}]})