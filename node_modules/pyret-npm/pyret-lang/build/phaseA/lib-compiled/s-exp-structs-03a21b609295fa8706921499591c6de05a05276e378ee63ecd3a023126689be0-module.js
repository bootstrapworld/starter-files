({"theMap":"{\"version\":3,\"sources\":[\"builtin://s-exp-structs\"],\"names\":[\"builtin://s-exp-structs\",\",9,0,74,14,3,190\",\",10,2,88,10,31,117\",\",11,2,120,11,22,140\",\",12,2,143,12,22,163\",\",13,2,166,13,22,186\"],\"mappingsoBAQDC,6BARCD;AAAAA;AAAAA;AAAAA;AAAAA,oBASCE,iCATDF;AAAAA;AAAAA;AAAAA;AAAAA,oBASCE,8BATDF;AAAAA;AAAAA;AAAAA;AAAAA,oBAUCG,gCAVDH;AAAAA;AAAAA;AAAAA;AAAAA,oBAUCG,6BAVDH;AAAAA;AAAAA;AAAAA;AAAAA,oBAWCI,gCAXDJ;AAAAA;AAAAA;AAAAA;AAAAA,oBAWCI,6BAXDJ;AAAAA;AAAAA;AAAAA;AAAAA,oBAYCK,gCAZDL;AAAAA;AAAAA;AAAAA;AAAAA,oBAYCK,6BAZDL;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAQDC,oCARCD;AAAAA;AAQDC,wBARCD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,SAQDC,oDARCD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA\",\"file\":\"builtin://s-exp-structs\"}",
"theModule":"function _03a21b609295fa8706921499591c6de05a05276e378ee63ecd3a023126689be0__10(R,NAMESPACE,M,$$underscore_import3,$$included$131) {\nvar G = R.getFieldLoc;\nvar U = function throw_error(loc,name) {\nR.ffi.throwUninitializedIdMkLoc(loc,name);\n};\nvar M = \"builtin://s-exp-structs\";\nvar D = R.undefined;\nvar L = [[\"builtin://s-exp-structs\",10,2,88,10,31,117],\n[\"builtin://s-exp-structs\",10,19,105,10,30,116],\n[\"builtin://s-exp-structs\",11,2,120,11,22,140],\n[\"builtin://s-exp-structs\",11,15,133,11,21,139],\n[\"builtin://s-exp-structs\",12,2,143,12,22,163],\n[\"builtin://s-exp-structs\",12,15,156,12,21,162],\n[\"builtin://s-exp-structs\",13,2,166,13,22,186],\n[\"builtin://s-exp-structs\",13,15,179,13,21,185],\n[\"builtin://s-exp-structs\",9,0,74,14,3,190],\n[\"dummy location\"],\n[\"builtin://s-exp-structs\",3,0,13,14,3,190]];\nvar $type$Number3 = R.getModuleField(\"builtin://global\",\"types\",\"Number\");\nvar $type$String8 = R.getModuleField(\"builtin://global\",\"types\",\"String\");\nvar $underscore_import1 = $$underscore_import3;\nvar $included$126 = $$included$131;\nvar List1 = R.getModuleField(\"builtin://lists\",\"types\",\"List\");\nvar $toplevel22 = function _03a21b609295fa8706921499591c6de05a05276e378ee63ecd3a023126689be0__10($$resumer11) {\nvar $step21 = 0;\nvar $elidedFrames97 = 0;\nvar $ans94 = D;\nvar $al95 = L[10];\nif(R.isAR($$resumer11)) {\n$step21 = $$resumer11.step;\n$al95 = $$resumer11.from;\n$ans94 = $$resumer11.ans;\n$elidedFrames97 = $$resumer11.elidedFrames;\n$resumer11 = $$resumer11.args[0];\nis$s$list162 = $$resumer11.vars[0];\nis$s$str178 = $$resumer11.vars[1];\nis$S$Exp160 = $$resumer11.vars[2];\ns$list164 = $$resumer11.vars[3];\ns$sym184 = $$resumer11.vars[4];\ns$num168 = $$resumer11.vars[5];\ns$str180 = $$resumer11.vars[6];\nis$s$sym182 = $$resumer11.vars[7];\nanswer191 = $$resumer11.vars[8];\nis$s$num166 = $$resumer11.vars[9];\nS$Exp190 = $$resumer11.vars[10];\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans94 = R.mC();\n}\nwhile(!R.isContinuation($ans94)) {\nswitch($step21) {\ncase 0: var S$Exp98 = R.nB(\"S-Exp\",L[8]);\nvar S$Exp190 = R.mBA(S$Exp98,\"S-Exp\");\nvar S$Exp128 = {\"$var\":D};\nvar is$S$Exp160 = {\"$var\":D};\nvar is$s$list162 = {\"$var\":D};\nvar s$list164 = {\"$var\":D};\nvar is$s$num166 = {\"$var\":D};\nvar s$num168 = {\"$var\":D};\nvar is$s$str178 = {\"$var\":D};\nvar s$str180 = {\"$var\":D};\nvar is$s$sym182 = {\"$var\":D};\nvar s$sym184 = {\"$var\":D};\nvar $s$list_getfields103 = function singleton_variant(f) {\nreturn f(this.dict[\"exps\"]);\n};\nvar $s$list_mutablemask102 = [false];\nvar $s$list$base99 = {\"$fieldNames\":[\"exps\"],\n\"_match\":R.mM(\"s-list\",1)};\nvar $s$list$brander100 = R.nB(\"s-list\",L[0]);\nvar $s$list$brands101 = {};\n$s$list$brands101[S$Exp98._brand] = true;\n$s$list$brands101[$s$list$brander100._brand] = true;\nvar s$list104 = R.mVC(L[0],function $synthesizedConstructor_$s$list$base() {\nreturn [List1];\n},[\"exps105\"],[L[1]],[false],[\"exps105\"],$s$list_mutablemask102,$s$list$base99,$s$list$brands101,\"s-list\",$s$list_getfields103,$s$list$base99);\nvar $s$num_getfields110 = function singleton_variant(f) {\nreturn f(this.dict[\"n\"]);\n};\nvar $s$num_mutablemask109 = [false];\nvar $s$num$base106 = {\"$fieldNames\":[\"n\"],\n\"_match\":R.mM(\"s-num\",1)};\nvar $s$num$brander107 = R.nB(\"s-num\",L[2]);\nvar $s$num$brands108 = {};\n$s$num$brands108[S$Exp98._brand] = true;\n$s$num$brands108[$s$num$brander107._brand] = true;\nvar s$num111 = R.mVC(L[2],function $synthesizedConstructor_$s$num$base() {\nreturn [$type$Number3];\n},[\"n89\"],[L[3]],[false],[\"n89\"],$s$num_mutablemask109,$s$num$base106,$s$num$brands108,\"s-num\",$s$num_getfields110,$s$num$base106);\nvar $s$str_getfields116 = function singleton_variant(f) {\nreturn f(this.dict[\"s\"]);\n};\nvar $s$str_mutablemask115 = [false];\nvar $s$str$base112 = {\"$fieldNames\":[\"s\"],\n\"_match\":R.mM(\"s-str\",1)};\nvar $s$str$brander113 = R.nB(\"s-str\",L[4]);\nvar $s$str$brands114 = {};\n$s$str$brands114[S$Exp98._brand] = true;\n$s$str$brands114[$s$str$brander113._brand] = true;\nvar s$str117 = R.mVC(L[4],function $synthesizedConstructor_$s$str$base() {\nreturn [$type$String8];\n},[\"s890\"],[L[5]],[false],[\"s890\"],$s$str_mutablemask115,$s$str$base112,$s$str$brands114,\"s-str\",$s$str_getfields116,$s$str$base112);\nvar $s$sym_getfields122 = function singleton_variant(f) {\nreturn f(this.dict[\"s\"]);\n};\nvar $s$sym_mutablemask121 = [false];\nvar $s$sym$base118 = {\"$fieldNames\":[\"s\"],\n\"_match\":R.mM(\"s-sym\",1)};\nvar $s$sym$brander119 = R.nB(\"s-sym\",L[6]);\nvar $s$sym$brands120 = {};\n$s$sym$brands120[S$Exp98._brand] = true;\n$s$sym$brands120[$s$sym$brander119._brand] = true;\nvar s$sym123 = R.mVC(L[6],function $synthesizedConstructor_$s$sym$base() {\nreturn [$type$String8];\n},[\"s124\"],[L[7]],[false],[\"s124\"],$s$sym_mutablemask121,$s$sym$base118,$s$sym$brands120,\"s-sym\",$s$sym_getfields122,$s$sym$base118);\nvar anf_assign127 = R.mO({\"S-Exp\":G(S$Exp98,\"test\",L[8]),\n\"is-s-list\":G($s$list$brander100,\"test\",L[0]),\n\"s-list\":s$list104,\n\"is-s-num\":G($s$num$brander107,\"test\",L[2]),\n\"s-num\":s$num111,\n\"is-s-str\":G($s$str$brander113,\"test\",L[4]),\n\"s-str\":s$str117,\n\"is-s-sym\":G($s$sym$brander119,\"test\",L[6]),\n\"s-sym\":s$sym123});\nS$Exp128.$var = anf_assign127;\nR.nothing;\n$al95 = L[8];\nvar anf_assign159 = G(S$Exp128.$var,\"S-Exp\",L[8]);\nis$S$Exp160.$var = anf_assign159;\nR.nothing;\n$al95 = L[0];\nvar anf_assign161 = G(S$Exp128.$var,\"is-s-list\",L[0]);\nis$s$list162.$var = anf_assign161;\nR.nothing;\n$al95 = L[0];\nvar anf_assign163 = G(S$Exp128.$var,\"s-list\",L[0]);\ns$list164.$var = anf_assign163;\nR.nothing;\n$al95 = L[2];\nvar anf_assign165 = G(S$Exp128.$var,\"is-s-num\",L[2]);\nis$s$num166.$var = anf_assign165;\nR.nothing;\n$al95 = L[2];\nvar anf_assign167 = G(S$Exp128.$var,\"s-num\",L[2]);\ns$num168.$var = anf_assign167;\nR.nothing;\n$al95 = L[4];\nvar anf_assign177 = G(S$Exp128.$var,\"is-s-str\",L[4]);\nis$s$str178.$var = anf_assign177;\nR.nothing;\n$al95 = L[4];\nvar anf_assign179 = G(S$Exp128.$var,\"s-str\",L[4]);\ns$str180.$var = anf_assign179;\nR.nothing;\n$al95 = L[6];\nvar anf_assign181 = G(S$Exp128.$var,\"is-s-sym\",L[6]);\nis$s$sym182.$var = anf_assign181;\nR.nothing;\n$al95 = L[6];\nvar anf_assign183 = G(S$Exp128.$var,\"s-sym\",L[6]);\ns$sym184.$var = anf_assign183;\nR.nothing;\n$step21 = 1;\n$al95 = L[9];\nvar $obj185 = R.builtins;\nvar $field186 = R.gCFL($obj185,\"trace-value\",L[9]);\nif(R.isM($field186)) {\n$ans94 = $field186.full_meth($obj185,L[9],R.nothing);\n} else {\nif(typeof($field186.app) !== \"function\") {\nR.ffi.throwNonFunApp(L[9],$field186);\n}\n$ans94 = $field186.app(L[9],R.nothing);\n}\nbreak;\ncase 1: var answer191 = $ans94;\n$step21 = 2;\n$al95 = L[8];\nvar $obj187 = R.builtins;\nvar $field188 = R.gCFL($obj187,\"current-checker\",L[8]);\nif(R.isM($field188)) {\n$ans94 = $field188.full_meth($obj187);\n} else {\nif(typeof($field188.app) !== \"function\") {\nR.ffi.throwNonFunApp(L[8],$field188);\n}\n$ans94 = $field188.app();\n}\nbreak;\ncase 2: var anf_method_obj189 = $ans94;\n$step21 = 3;\n$ans94 = R.maybeMethodCall0(anf_method_obj189,\"results\",L[8]);\nbreak;\ncase 3: var checks192 = $ans94;\n$step21 = 4;\n$ans94 = R.mO({\"answer\":answer191,\n\"namespace\":NAMESPACE,\n\"locations\":L,\n\"defined-modules\":{},\n\"defined-values\":{\"is-S-Exp\":is$S$Exp160.$var,\n\"is-s-num\":is$s$num166.$var,\n\"is-s-sym\":is$s$sym182.$var,\n\"s-num\":s$num168.$var,\n\"s-sym\":s$sym184.$var,\n\"is-s-str\":is$s$str178.$var,\n\"s-str\":s$str180.$var,\n\"s-list\":s$list164.$var,\n\"is-s-list\":is$s$list162.$var},\n\"defined-types\":{\"S-Exp\":S$Exp190},\n\"provide-plus-types\":R.mO({\"values\":R.mO({\"is-S-Exp\":is$S$Exp160.$var,\n\"is-s-num\":is$s$num166.$var,\n\"is-s-sym\":is$s$sym182.$var,\n\"s-num\":s$num168.$var,\n\"s-sym\":s$sym184.$var,\n\"is-s-str\":is$s$str178.$var,\n\"s-str\":s$str180.$var,\n\"s-list\":s$list164.$var,\n\"is-s-list\":is$s$list162.$var}),\n\"types\":{\"S-Exp\":S$Exp190},\n\"modules\":{}}),\n\"checks\":checks192});\nbreak;\ncase 4: ++R.GAS;\nreturn $ans94;\ndefault: R.ffi.throwSpinnakerError(L[10],$step21);\n}\n}\nif($step21 !== 4) {\n$ans94.stack[R.EXN_STACKHEIGHT++] = R.mAR($al95,$toplevel22,$step21,[],[is$s$list162,is$s$str178,is$S$Exp160,s$list164,s$sym184,s$num168,s$str180,is$s$sym182,answer191,is$s$num166,S$Exp190],$elidedFrames97);\n}\nreturn $ans94;\n};\nreturn R.safeCall($toplevel22,function module_load(moduleVal) {\nR.modules[\"$builtin://s$exp$structs2\"] = moduleVal;\nreturn moduleVal;\n},\"Evaluating $toplevel\");\n}",
"nativeRequires":[],
"provides":{"modules":{},
"values":{"is-s-list":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
10,
2,
88,
10,
31,
117],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"is-s-list",
"typ":"tany"},
"s-list":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
10,
2,
88,
10,
31,
117],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"s-list",
"typ":"tany"},
"s-str":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
12,
2,
143,
12,
22,
163],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"s-str",
"typ":"tany"},
"is-s-str":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
12,
2,
143,
12,
22,
163],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"is-s-str",
"typ":"tany"},
"s-sym":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
13,
2,
166,
13,
22,
186],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"s-sym",
"typ":"tany"},
"s-num":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
11,
2,
120,
11,
22,
140],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"s-num",
"typ":"tany"},
"is-s-sym":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
13,
2,
166,
13,
22,
186],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"is-s-sym",
"typ":"tany"},
"is-s-num":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
11,
2,
120,
11,
22,
140],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"is-s-num",
"typ":"tany"},
"is-S-Exp":{"bind":"let",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
9,
0,
74,
14,
3,
190],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"typ":"tany"}},
"datatypes":{"S-Exp":["data",{"local-bind-site":["builtin://s-exp-structs",
9,
0,
74,
14,
3,
190],
"definition-bind-site":["builtin://s-exp-structs",
9,
0,
74,
14,
3,
190],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},"S-Exp",[],[["s-list",
[["exps",
["tyapp",{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://s-exp-structs"},
"name":"List"},[{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://s-exp-structs"},
"name":"S-Exp"}]]]],
{}],["s-num",
[["n",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}]],
{}],["s-str",
[["s",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"String"}]],
{}],["s-sym",
[["s",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"String"}]],
{}]],{}]},
"aliases":{"S-Exp":"tany"}},
"requires":[{"import-type":"builtin",
"name":"global"},
{"import-type":"builtin",
"name":"lists"}]})