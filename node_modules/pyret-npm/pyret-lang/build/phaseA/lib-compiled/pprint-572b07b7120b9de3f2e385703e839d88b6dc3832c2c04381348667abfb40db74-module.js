({"theMap":"{\"version\":3,\"sources\":[\"builtin://pprint\"],\"names\":[\"builtin://pprint\",\",67,7,1787,67,22,1802\",\",68,12,1822,68,28,1838\",\",70,9,1864,70,26,1881\",\",70,30,1885,70,48,1903\",\",70,50,1905,70,78,1933\",\",71,32,1966,71,47,1981\",\",71,50,1984,71,66,2000\",\",71,32,1966,71,66,2000\",\",71,12,1946,71,74,2008\",\",77,24,2109,77,45,2130\",\",78,49,2180,78,63,2194\",\",78,44,2175,78,71,2202\",\",78,24,2155,78,72,2203\",\",79,26,2230,79,43,2247\",\",80,53,2301,80,67,2315\",\",80,48,2296,80,75,2323\",\",80,26,2274,80,76,2324\",\",81,62,2387,81,78,2403\",\",81,85,2410,81,101,2426\",\",81,80,2405,81,109,2434\",\",81,57,2382,81,110,2435\",\",81,34,2359,81,111,2436\",\",82,59,2496,82,78,2515\",\",82,85,2522,82,99,2536\",\",82,80,2517,82,107,2544\",\",82,54,2491,82,108,2545\",\",82,33,2470,82,109,2546\",\",83,65,2612,83,82,2629\",\",83,89,2636,83,106,2653\",\",83,84,2631,83,114,2661\",\",83,60,2607,83,115,2662\",\",83,37,2584,83,116,2663\",\",84,53,2717,84,67,2731\",\",84,48,2712,84,75,2739\",\",84,26,2690,84,76,2740\",\",85,53,2794,85,67,2808\",\",85,48,2789,85,75,2816\",\",85,26,2767,85,76,2817\",\",86,66,2884,86,80,2898\",\",86,61,2879,86,88,2906\",\",86,33,2851,86,89,2907\",\",76,4,2062,87,7,2915\",\",90,4,2957,90,23,2976\",\",54,0,966,92,3,2986\",\",55,2,984,55,57,1039\",\",56,2,1042,56,67,1107\",\",57,2,1110,57,59,1167\",\",58,2,1170,58,69,1237\",\",59,2,1240,59,93,1331\",\",60,2,1334,60,89,1421\",\",61,2,1424,61,96,1518\",\",62,2,1521,62,72,1591\",\",63,2,1594,63,76,1668\",\",64,2,1671,64,72,1741\",\",93,0,2987,95,3,3064\",\",94,2,3000,94,62,3060\",\",128,5,4378,128,18,4391\",\",129,26,4419,129,32,4425\",\",129,56,4449,129,62,4455\",\",129,34,4427,129,69,4462\",\",131,9,4481,131,23,4495\",\",131,4,4476,131,30,4502\",\",138,16,4636,138,33,4653\",\",141,14,4696,141,35,4717\",\",141,4,4686,141,36,4718\",\",144,14,4768,144,36,4790\",\",145,21,4812,145,42,4833\",\",145,16,4807,145,50,4841\",\",148,14,4888,148,36,4910\",\",151,8,5019,151,19,5030\",\",150,10,4971,152,9,5040\",\",153,6,5047,153,20,5061\",\",149,4,4915,154,7,5069\",\",157,7,5148,157,22,5163\",\",159,14,5197,159,25,5208\",\",160,10,5219,160,22,5231\",\",161,10,5242,161,23,5255\",\",162,23,5279,162,30,5286\",\",163,42,5336,163,52,5346\",\",164,74,5422,164,81,5429\",\",164,83,5431,164,93,5441\",\",164,52,5400,164,94,5442\",\",166,10,5489,166,22,5501\",\",167,18,5520,167,37,5539\",\",167,39,5541,167,49,5551\",\",169,10,5591,169,24,5605\",\",170,18,5624,170,28,5634\",\",170,30,5636,170,40,5646\",\",171,49,5697,171,67,5715\",\",171,69,5717,171,79,5727\",\",171,44,5692,171,80,5728\",\",172,56,5786,172,61,5791\",\",172,51,5781,172,68,5798\",\",172,70,5800,172,80,5810\",\",172,46,5776,172,81,5811\",\",175,12,5875,175,55,5918\",\",177,12,5947,177,27,5962\",\",178,23,5986,178,33,5996\",\",181,31,6082,181,68,6119\",\",181,70,6121,181,80,6131\",\",181,26,6077,181,81,6132\",\",184,28,6219,184,38,6229\",\",186,12,6259,186,26,6273\",\",187,20,6294,187,30,6304\",\",187,32,6306,187,42,6316\",\",190,37,6417,190,53,6433\",\",190,55,6435,190,65,6445\",\",190,32,6412,190,66,6446\",\",190,16,6396,190,67,6447\",\",191,53,6501,191,70,6518\",\",191,72,6520,191,82,6530\",\",191,48,6496,191,83,6531\",\",191,32,6480,191,84,6532\",\",192,19,6552,192,33,6566\",\",192,18,6551,192,48,6581\",\",196,33,6861,196,49,6877\",\",196,51,6879,196,61,6889\",\",196,28,6856,196,62,6890\",\",196,12,6840,196,63,6891\",\",198,33,6941,198,50,6958\",\",198,52,6960,198,62,6970\",\",198,28,6936,198,63,6971\",\",198,12,6920,198,64,6972\",\",162,6,5262,200,9,6996\",\",203,14,7025,203,18,7029\",\",203,46,7057,203,60,7071\",\",203,62,7073,203,78,7089\",\",203,35,7046,203,79,7090\",\",203,20,7031,203,80,7091\",\",203,2,7013,203,82,7093\",\",204,2,7096,204,14,7108\",\",207,16,7130,207,32,7146\",\",208,18,7165,208,35,7182\",\",209,32,7215,209,44,7227\",\",209,46,7229,209,60,7243\",\",209,23,7206,209,61,7244\",\",210,32,7281,210,44,7293\",\",210,46,7295,210,60,7309\",\",210,23,7272,210,61,7310\",\",211,54,7369,211,69,7384\",\",211,71,7386,211,88,7403\",\",211,34,7349,211,89,7404\",\",212,36,7445,212,48,7457\",\",212,50,7459,212,64,7473\",\",212,25,7434,212,65,7474\",\",213,31,7510,213,40,7519\",\",214,23,7547,214,41,7565\",\",215,28,7598,215,44,7614\",\",215,21,7591,215,52,7622\",\",217,29,7657,217,40,7668\",\",217,25,7653,217,41,7669\",\",218,9,7683,218,17,7691\",\",219,9,7701,219,17,7709\",\",220,9,7719,220,17,7727\",\",221,9,7737,221,17,7745\",\",222,9,7755,222,17,7763\",\",223,9,7773,223,17,7781\",\",224,9,7791,224,17,7799\",\",225,9,7809,225,17,7817\",\",226,8,7826,226,16,7834\",\",227,7,7842,227,15,7850\",\",229,23,7875,229,31,7883\",\",229,15,7867,229,42,7894\",\",230,21,7920,230,30,7929\",\",230,13,7912,230,30,7929\",\",231,19,7949,231,28,7958\",\",231,12,7942,231,28,7958\",\",235,7,8049,235,21,8063\",\",235,23,8065,235,30,8072\",\",236,28,8101,236,35,8108\",\",236,22,8095,236,35,8108\",\",236,16,8089,236,36,8109\",\",236,10,8083,236,36,8109\",\",234,2,7991,238,5,8123\",\",240,26,8154,240,35,8163\",\",240,17,8145,240,58,8186\",\",241,17,8208,241,57,8248\",\",242,21,8274,242,31,8284\",\",242,21,8274,242,40,8293\",\",242,15,8268,242,41,8294\",\",243,21,8320,243,31,8330\",\",243,21,8320,243,40,8339\",\",243,15,8314,243,41,8340\",\",244,23,8368,244,33,8378\",\",244,23,8368,244,42,8387\",\",244,17,8362,244,43,8388\",\",245,13,8406,245,21,8414\",\",246,13,8428,246,21,8436\",\",247,21,8458,247,35,8472\",\",247,21,8458,247,48,8485\",\",247,15,8452,247,49,8486\",\",248,21,8512,248,35,8526\",\",248,21,8512,248,48,8539\",\",248,15,8506,248,49,8540\",\",250,22,8568,250,32,8578\",\",250,16,8562,250,33,8579\",\",251,42,8626,251,51,8635\",\",251,42,8626,251,55,8639\",\",251,34,8618,251,56,8640\",\",251,30,8614,251,56,8640\",\",251,24,8608,251,57,8641\",\",253,20,8752,253,28,8760\",\",253,16,8748,253,28,8760\",\",253,16,8748,253,33,8765\",\",253,2,8734,253,38,8770\",\",256,24,8891,256,32,8899\",\",256,19,8886,256,32,8899\",\",256,19,8886,256,36,8903\",\",256,2,8869,256,38,8905\",\",259,5,9017,259,21,9033\",\",259,44,9056,259,53,9065\",\",259,44,9056,259,64,9076\",\",259,36,9048,259,65,9077\",\",259,29,9041,259,65,9077\",\",259,23,9035,259,66,9078\",\",260,29,9108,260,38,9117\",\",260,29,9108,260,49,9128\",\",260,21,9100,260,50,9129\",\",260,14,9093,260,50,9129\",\",260,53,9132,260,62,9141\",\",260,14,9093,260,62,9141\",\",260,14,9093,260,70,9149\",\",260,8,9087,260,71,9150\",\",264,5,9273,264,21,9289\",\",264,50,9318,264,59,9327\",\",264,50,9318,264,70,9338\",\",264,44,9312,264,71,9339\",\",264,36,9304,264,72,9340\",\",264,29,9297,264,72,9340\",\",264,23,9291,264,73,9341\",\",265,35,9377,265,44,9386\",\",265,35,9377,265,55,9397\",\",265,29,9371,265,56,9398\",\",265,21,9363,265,57,9399\",\",265,14,9356,265,57,9399\",\",265,66,9408,265,75,9417\",\",265,66,9408,265,83,9425\",\",265,60,9402,265,84,9426\",\",265,14,9356,265,84,9426\",\",265,8,9350,265,85,9427\",\",271,7,9534,271,19,9546\",\",272,12,9564,272,26,9578\",\",273,10,9592,273,19,9601\",\",273,10,9592,273,23,9605\",\",270,2,9487,275,5,9619\",\",278,5,9768,278,19,9782\",\",279,29,9818,279,48,9837\",\",279,8,9797,279,56,9845\",\",284,35,9953,284,58,9976\",\",284,29,9947,284,59,9977\",\",284,22,9940,284,59,9977\",\",284,68,9986,284,77,9995\",\",284,68,9986,284,85,10003\",\",284,62,9980,284,86,10004\",\",284,22,9940,284,86,10004\",\",284,16,9934,284,87,10005\",\",284,8,9926,284,87,10005\",\",284,2,9920,284,88,10006\"],\"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\":\"builtin://pprint\"}",
"theModule":"function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__283(R,NAMESPACE,M,$$underscore_import3,$$underscore_import3,$$included$131,$VS8) {\nvar G = R.getFieldLoc;\nvar U = function throw_error(loc,name) {\nR.ffi.throwUninitializedIdMkLoc(loc,name);\n};\nvar M = \"builtin://pprint\";\nvar D = R.undefined;\nvar L = [[\"builtin://pprint\",66,2,1753,74,5,2032],\n[\"builtin://pprint\",67,7,1787,67,16,1796],\n[\"builtin://pprint\",68,12,1822,68,21,1831],\n[\"builtin://pprint\",70,9,1864,70,26,1881],\n[\"builtin://pprint\",70,50,1905,70,56,1911],\n[\"builtin://pprint\",70,50,1905,70,78,1933],\n[\"builtin://pprint\",71,12,1946,71,18,1952],\n[\"builtin://pprint\",71,32,1966,71,47,1981],\n[\"builtin://pprint\",71,50,1984,71,66,2000],\n[\"builtin://pprint\",71,12,1946,71,74,2008],\n[\"builtin://pprint\",71,32,1966,71,66,2000],\n[\"builtin://pprint\",70,30,1885,70,48,1903],\n[\"builtin://pprint\",68,12,1822,68,28,1838],\n[\"builtin://pprint\",67,7,1787,67,22,1802],\n[\"builtin://pprint\",75,2,2036,88,5,2921],\n[\"builtin://pprint\",77,24,2109,77,45,2130],\n[\"builtin://pprint\",77,6,2091,77,45,2130],\n[\"builtin://pprint\",76,4,2062,87,7,2915],\n[\"builtin://pprint\",78,24,2155,78,72,2203],\n[\"builtin://pprint\",78,49,2180,78,63,2194],\n[\"builtin://pprint\",78,6,2137,78,72,2203],\n[\"builtin://pprint\",79,26,2230,79,43,2247],\n[\"builtin://pprint\",79,6,2210,79,43,2247],\n[\"builtin://pprint\",80,26,2274,80,76,2324],\n[\"builtin://pprint\",80,53,2301,80,67,2315],\n[\"builtin://pprint\",80,6,2254,80,76,2324],\n[\"builtin://pprint\",81,34,2359,81,111,2436],\n[\"builtin://pprint\",81,85,2410,81,101,2426],\n[\"builtin://pprint\",81,62,2387,81,78,2403],\n[\"builtin://pprint\",81,6,2331,81,111,2436],\n[\"builtin://pprint\",82,33,2470,82,109,2546],\n[\"builtin://pprint\",82,85,2522,82,99,2536],\n[\"builtin://pprint\",82,59,2496,82,78,2515],\n[\"builtin://pprint\",82,6,2443,82,109,2546],\n[\"builtin://pprint\",83,37,2584,83,116,2663],\n[\"builtin://pprint\",83,89,2636,83,106,2653],\n[\"builtin://pprint\",83,65,2612,83,82,2629],\n[\"builtin://pprint\",83,6,2553,83,116,2663],\n[\"builtin://pprint\",84,26,2690,84,76,2740],\n[\"builtin://pprint\",84,53,2717,84,67,2731],\n[\"builtin://pprint\",84,6,2670,84,76,2740],\n[\"builtin://pprint\",85,26,2767,85,76,2817],\n[\"builtin://pprint\",85,53,2794,85,67,2808],\n[\"builtin://pprint\",85,6,2747,85,76,2817],\n[\"builtin://pprint\",86,33,2851,86,89,2907],\n[\"builtin://pprint\",86,66,2884,86,80,2898],\n[\"builtin://pprint\",86,6,2824,86,89,2907],\n[\"builtin://pprint\",76,10,2068,76,19,2077],\n[\"builtin://pprint\",89,2,2925,91,5,2982],\n[\"builtin://pprint\",90,4,2957,90,10,2963],\n[\"builtin://pprint\",90,4,2957,90,23,2976],\n[\"builtin://pprint\",55,2,984,55,57,1039],\n[\"builtin://pprint\",55,25,1007,55,31,1013],\n[\"builtin://pprint\",55,49,1031,55,56,1038],\n[\"builtin://pprint\",56,2,1042,56,67,1107],\n[\"builtin://pprint\",56,13,1053,56,19,1059],\n[\"builtin://pprint\",56,35,1075,56,41,1081],\n[\"builtin://pprint\",56,59,1099,56,66,1106],\n[\"builtin://pprint\",57,2,1110,57,59,1167],\n[\"builtin://pprint\",57,27,1135,57,33,1141],\n[\"builtin://pprint\",57,51,1159,57,58,1166],\n[\"builtin://pprint\",58,2,1170,58,69,1237],\n[\"builtin://pprint\",58,15,1183,58,21,1189],\n[\"builtin://pprint\",58,37,1205,58,43,1211],\n[\"builtin://pprint\",58,61,1229,58,68,1236],\n[\"builtin://pprint\",59,2,1240,59,93,1331],\n[\"builtin://pprint\",59,18,1256,59,27,1265],\n[\"builtin://pprint\",59,36,1274,59,45,1283],\n[\"builtin://pprint\",59,61,1299,59,67,1305],\n[\"builtin://pprint\",59,85,1323,59,92,1330],\n[\"builtin://pprint\",60,2,1334,60,89,1421],\n[\"builtin://pprint\",60,19,1351,60,25,1357],\n[\"builtin://pprint\",60,32,1364,60,41,1373],\n[\"builtin://pprint\",60,57,1389,60,63,1395],\n[\"builtin://pprint\",60,81,1413,60,88,1420],\n[\"builtin://pprint\",61,2,1424,61,96,1518],\n[\"builtin://pprint\",61,20,1442,61,29,1451],\n[\"builtin://pprint\",61,39,1461,61,48,1470],\n[\"builtin://pprint\",61,64,1486,61,70,1492],\n[\"builtin://pprint\",61,88,1510,61,95,1517],\n[\"builtin://pprint\",62,2,1521,62,72,1591],\n[\"builtin://pprint\",62,15,1534,62,24,1543],\n[\"builtin://pprint\",62,40,1559,62,46,1565],\n[\"builtin://pprint\",62,64,1583,62,71,1590],\n[\"builtin://pprint\",63,2,1594,63,76,1668],\n[\"builtin://pprint\",63,22,1614,63,28,1620],\n[\"builtin://pprint\",63,44,1636,63,50,1642],\n[\"builtin://pprint\",63,68,1660,63,75,1667],\n[\"builtin://pprint\",64,2,1671,64,72,1741],\n[\"builtin://pprint\",64,15,1684,64,24,1693],\n[\"builtin://pprint\",64,40,1709,64,46,1715],\n[\"builtin://pprint\",64,64,1733,64,71,1740],\n[\"builtin://pprint\",54,0,966,92,3,2986],\n[\"builtin://pprint\",94,2,3000,94,62,3060],\n[\"builtin://pprint\",94,19,3017,94,25,3023],\n[\"builtin://pprint\",94,38,3036,94,45,3043],\n[\"builtin://pprint\",94,52,3050,94,61,3059],\n[\"builtin://pprint\",93,0,2987,95,3,3064],\n[\"builtin://pprint\",127,0,4336,133,3,4512],\n[\"builtin://pprint\",129,26,4419,129,32,4425],\n[\"builtin://pprint\",129,56,4449,129,62,4455],\n[\"builtin://pprint\",129,34,4427,129,69,4462],\n[\"builtin://pprint\",134,0,4513,205,3,7112],\n[\"builtin://pprint\",137,2,4602,139,5,4659],\n[\"builtin://pprint\",140,2,4662,142,5,4724],\n[\"builtin://pprint\",143,2,4727,146,5,4847],\n[\"builtin://pprint\",147,2,4850,155,5,5075],\n[\"builtin://pprint\",149,4,4915,154,7,5069],\n[\"builtin://pprint\",150,10,4971,152,9,5040],\n[\"builtin://pprint\",151,8,5019,151,19,5030],\n[\"builtin://pprint\",156,2,5078,202,5,7010],\n[\"builtin://pprint\",156,56,5132,156,63,5139],\n[\"builtin://pprint\",159,14,5197,159,25,5208],\n[\"builtin://pprint\",160,10,5219,160,22,5231],\n[\"builtin://pprint\",161,10,5242,161,23,5255],\n[\"builtin://pprint\",162,23,5279,162,30,5286],\n[\"builtin://pprint\",163,42,5336,163,52,5346],\n[\"builtin://pprint\",163,8,5302,163,53,5347],\n[\"builtin://pprint\",162,6,5262,200,9,6996],\n[\"builtin://pprint\",164,74,5422,164,81,5429],\n[\"builtin://pprint\",164,83,5431,164,93,5441],\n[\"builtin://pprint\",164,52,5400,164,94,5442],\n[\"builtin://pprint\",164,8,5356,164,95,5443],\n[\"builtin://pprint\",167,39,5541,167,49,5551],\n[\"builtin://pprint\",167,18,5520,167,37,5539],\n[\"builtin://pprint\",165,8,5452,167,50,5552],\n[\"builtin://pprint\",170,30,5636,170,40,5646],\n[\"builtin://pprint\",170,18,5624,170,28,5634],\n[\"builtin://pprint\",168,8,5561,170,41,5647],\n[\"builtin://pprint\",171,69,5717,171,79,5727],\n[\"builtin://pprint\",171,8,5656,171,81,5729],\n[\"builtin://pprint\",172,70,5800,172,80,5810],\n[\"builtin://pprint\",172,56,5786,172,61,5791],\n[\"builtin://pprint\",172,8,5738,172,82,5812],\n[\"builtin://pprint\",175,12,5875,175,55,5918],\n[\"builtin://pprint\",178,23,5986,178,33,5996],\n[\"builtin://pprint\",173,8,5821,179,13,6011],\n[\"builtin://pprint\",181,70,6121,181,80,6131],\n[\"builtin://pprint\",180,8,6020,181,82,6133],\n[\"builtin://pprint\",184,28,6219,184,38,6229],\n[\"builtin://pprint\",187,32,6306,187,42,6316],\n[\"builtin://pprint\",187,20,6294,187,30,6304],\n[\"builtin://pprint\",182,8,6142,188,13,6331],\n[\"builtin://pprint\",190,55,6435,190,65,6445],\n[\"builtin://pprint\",191,72,6520,191,82,6530],\n[\"builtin://pprint\",196,51,6879,196,61,6889],\n[\"builtin://pprint\",198,52,6960,198,62,6970],\n[\"builtin://pprint\",192,18,6551,192,48,6581],\n[\"builtin://pprint\",192,19,6552,192,33,6566],\n[\"builtin://pprint\",190,16,6396,190,67,6447],\n[\"builtin://pprint\",191,32,6480,191,84,6532],\n[\"builtin://pprint\",196,12,6840,196,63,6891],\n[\"builtin://pprint\",198,12,6920,198,64,6972],\n[\"builtin://pprint\",190,10,6390,199,13,6986],\n[\"builtin://pprint\",189,8,6340,199,13,6986],\n[\"builtin://pprint\",162,12,5268,162,21,5277],\n[\"builtin://pprint\",156,24,5100,156,30,5106],\n[\"builtin://pprint\",156,41,5117,156,51,5127],\n[\"builtin://pprint\",203,13,7024,203,81,7092],\n[\"builtin://pprint\",203,14,7025,203,18,7029],\n[\"builtin://pprint\",203,46,7057,203,60,7071],\n[\"builtin://pprint\",203,62,7073,203,78,7089],\n[\"builtin://pprint\",204,2,7096,204,14,7108],\n[\"builtin://pprint\",203,2,7013,203,82,7093],\n[\"builtin://pprint\",134,25,4538,134,34,4547],\n[\"builtin://pprint\",209,15,7198,209,65,7248],\n[\"builtin://pprint\",209,32,7215,209,44,7227],\n[\"builtin://pprint\",209,46,7229,209,60,7243],\n[\"builtin://pprint\",210,15,7264,210,65,7314],\n[\"builtin://pprint\",210,32,7281,210,44,7293],\n[\"builtin://pprint\",210,46,7295,210,60,7309],\n[\"builtin://pprint\",211,17,7332,211,93,7408],\n[\"builtin://pprint\",211,54,7369,211,69,7384],\n[\"builtin://pprint\",211,71,7386,211,88,7403],\n[\"builtin://pprint\",212,14,7423,212,69,7478],\n[\"builtin://pprint\",212,36,7445,212,48,7457],\n[\"builtin://pprint\",212,50,7459,212,64,7473],\n[\"builtin://pprint\",213,16,7495,213,44,7523],\n[\"builtin://pprint\",213,31,7510,213,40,7519],\n[\"builtin://pprint\",214,15,7539,214,45,7569],\n[\"builtin://pprint\",215,13,7583,215,56,7626],\n[\"builtin://pprint\",217,0,7628,217,45,7673],\n[\"builtin://pprint\",217,29,7657,217,40,7668],\n[\"builtin://pprint\",217,16,7644,217,22,7650],\n[\"builtin://pprint\",229,0,7852,229,46,7898],\n[\"builtin://pprint\",233,0,7960,239,3,8127],\n[\"builtin://pprint\",234,2,7991,238,5,8123],\n[\"builtin://pprint\",235,23,8065,235,30,8072],\n[\"builtin://pprint\",236,10,8083,236,36,8109],\n[\"builtin://pprint\",236,22,8095,236,35,8108],\n[\"builtin://pprint\",236,28,8101,236,35,8108],\n[\"builtin://pprint\",240,0,8128,240,62,8190],\n[\"builtin://pprint\",240,37,8165,240,50,8178],\n[\"builtin://pprint\",240,17,8145,240,58,8186],\n[\"builtin://pprint\",241,0,8191,241,61,8252],\n[\"builtin://pprint\",241,36,8227,241,49,8240],\n[\"builtin://pprint\",241,17,8208,241,57,8248],\n[\"builtin://pprint\",242,0,8253,242,45,8298],\n[\"builtin://pprint\",242,21,8274,242,40,8293],\n[\"builtin://pprint\",242,21,8274,242,31,8284],\n[\"builtin://pprint\",243,0,8299,243,45,8344],\n[\"builtin://pprint\",243,21,8320,243,40,8339],\n[\"builtin://pprint\",243,21,8320,243,31,8330],\n[\"builtin://pprint\",244,0,8345,244,47,8392],\n[\"builtin://pprint\",244,23,8368,244,42,8387],\n[\"builtin://pprint\",244,23,8368,244,33,8378],\n[\"builtin://pprint\",247,0,8437,247,53,8490],\n[\"builtin://pprint\",247,21,8458,247,48,8485],\n[\"builtin://pprint\",247,21,8458,247,35,8472],\n[\"builtin://pprint\",248,0,8491,248,53,8544],\n[\"builtin://pprint\",248,21,8512,248,48,8539],\n[\"builtin://pprint\",248,21,8512,248,35,8526],\n[\"builtin://pprint\",250,0,8546,250,37,8583],\n[\"builtin://pprint\",251,0,8584,251,61,8645],\n[\"builtin://pprint\",251,30,8614,251,56,8640],\n[\"builtin://pprint\",251,42,8626,251,55,8639],\n[\"builtin://pprint\",252,0,8646,254,3,8774],\n[\"builtin://pprint\",253,2,8734,253,38,8770],\n[\"builtin://pprint\",253,16,8748,253,33,8765],\n[\"builtin://pprint\",253,16,8748,253,28,8760],\n[\"builtin://pprint\",252,15,8661,252,21,8667],\n[\"builtin://pprint\",252,28,8674,252,34,8680],\n[\"builtin://pprint\",252,42,8688,252,51,8697],\n[\"builtin://pprint\",252,58,8704,252,67,8713],\n[\"builtin://pprint\",252,74,8720,252,83,8729],\n[\"builtin://pprint\",255,0,8775,257,3,8909],\n[\"builtin://pprint\",256,2,8869,256,38,8905],\n[\"builtin://pprint\",256,19,8886,256,36,8903],\n[\"builtin://pprint\",256,19,8886,256,32,8899],\n[\"builtin://pprint\",255,21,8796,255,27,8802],\n[\"builtin://pprint\",255,34,8809,255,40,8815],\n[\"builtin://pprint\",255,48,8823,255,57,8832],\n[\"builtin://pprint\",255,64,8839,255,73,8848],\n[\"builtin://pprint\",255,80,8855,255,89,8864],\n[\"builtin://pprint\",258,0,8910,262,3,9160],\n[\"builtin://pprint\",259,29,9041,259,65,9077],\n[\"builtin://pprint\",259,44,9056,259,64,9076],\n[\"builtin://pprint\",260,14,9093,260,70,9149],\n[\"builtin://pprint\",260,14,9093,260,62,9141],\n[\"builtin://pprint\",260,14,9093,260,50,9129],\n[\"builtin://pprint\",260,29,9108,260,49,9128],\n[\"builtin://pprint\",258,18,8928,258,24,8934],\n[\"builtin://pprint\",258,31,8941,258,37,8947],\n[\"builtin://pprint\",258,47,8957,258,56,8966],\n[\"builtin://pprint\",258,70,8980,258,79,8989],\n[\"builtin://pprint\",258,90,9000,258,99,9009],\n[\"builtin://pprint\",263,0,9161,267,3,9437],\n[\"builtin://pprint\",264,29,9297,264,72,9340],\n[\"builtin://pprint\",264,50,9318,264,70,9338],\n[\"builtin://pprint\",265,14,9356,265,84,9426],\n[\"builtin://pprint\",265,66,9408,265,83,9425],\n[\"builtin://pprint\",265,14,9356,265,57,9399],\n[\"builtin://pprint\",265,35,9377,265,55,9397],\n[\"builtin://pprint\",263,23,9184,263,29,9190],\n[\"builtin://pprint\",263,36,9197,263,42,9203],\n[\"builtin://pprint\",263,52,9213,263,61,9222],\n[\"builtin://pprint\",263,75,9236,263,84,9245],\n[\"builtin://pprint\",263,95,9256,263,104,9265],\n[\"builtin://pprint\",269,0,9439,276,3,9623],\n[\"builtin://pprint\",270,2,9487,275,5,9619],\n[\"builtin://pprint\",273,10,9592,273,23,9605],\n[\"builtin://pprint\",273,10,9592,273,19,9601],\n[\"builtin://pprint\",269,20,9459,269,29,9468],\n[\"builtin://pprint\",269,39,9478,269,43,9482],\n[\"builtin://pprint\",277,0,9624,281,3,9855],\n[\"builtin://pprint\",279,8,9797,279,56,9845],\n[\"builtin://pprint\",279,29,9818,279,48,9837],\n[\"builtin://pprint\",277,27,9651,277,33,9657],\n[\"builtin://pprint\",277,40,9664,277,46,9670],\n[\"builtin://pprint\",277,56,9680,277,65,9689],\n[\"builtin://pprint\",277,75,9699,277,84,9708],\n[\"builtin://pprint\",277,93,9717,277,102,9726],\n[\"builtin://pprint\",277,113,9737,277,122,9746],\n[\"builtin://pprint\",277,132,9756,277,136,9760],\n[\"builtin://pprint\",283,0,9857,285,3,10010],\n[\"builtin://pprint\",284,8,9926,284,87,10005],\n[\"builtin://pprint\",284,22,9940,284,86,10004],\n[\"builtin://pprint\",284,68,9986,284,85,10003],\n[\"builtin://pprint\",284,22,9940,284,59,9977],\n[\"builtin://pprint\",284,35,9953,284,58,9976],\n[\"dummy location\"],\n[\"builtin://pprint\",231,12,7942,231,28,7958],\n[\"builtin://pprint\",230,13,7912,230,30,7929],\n[\"builtin://pprint\",3,0,13,342,3,11598]];\nvar $type$Nothing1 = R.getModuleField(\"builtin://global\",\"types\",\"Nothing\");\nvar string$length1 = R.getModuleField(\"builtin://global\",\"values\",\"string-length\");\nvar raise1 = R.getModuleField(\"builtin://global\",\"values\",\"raise\");\nvar tostring1 = R.getModuleField(\"builtin://global\",\"values\",\"tostring\");\nvar nothing5 = R.getModuleField(\"builtin://global\",\"values\",\"nothing\");\nvar _minus12 = R.getModuleField(\"builtin://global\",\"values\",\"_minus\");\nvar $type$Number3 = R.getModuleField(\"builtin://global\",\"types\",\"Number\");\nvar string$repeat1 = R.getModuleField(\"builtin://global\",\"values\",\"string-repeat\");\nvar _greaterequal2 = R.getModuleField(\"builtin://global\",\"values\",\"_greaterequal\");\nvar _plus5 = R.getModuleField(\"builtin://global\",\"values\",\"_plus\");\nvar $type$Boolean6 = R.getModuleField(\"builtin://global\",\"types\",\"Boolean\");\nvar $type$String8 = R.getModuleField(\"builtin://global\",\"types\",\"String\");\nvar $underscore_import12 = $$underscore_import3;\nvar $underscore_import11 = $$underscore_import3;\nvar $included$114 = $$included$131;\nvar VS15 = $VS8;\nvar $cases_dispatch1202 = {\"mt-doc\":6,\n\"concat\":7,\n\"str\":9,\n\"blank\":11,\n\"align\":13,\n\"nest\":14,\n\"hardline\":16,\n\"if-flat\":19,\n\"align-spaces\":23,\n\"group\":27};\nvar $cases_dispatch240 = {\"mt-doc\":2,\n\"str\":3,\n\"hardline\":5,\n\"blank\":6,\n\"concat\":8,\n\"nest\":11,\n\"if-flat\":14,\n\"group\":17,\n\"align\":19,\n\"align-spaces\":21};\nvar empty2 = R.getModuleField(\"builtin://lists\",\"values\",\"empty\");\nvar is$empty4 = R.getModuleField(\"builtin://lists\",\"values\",\"is-empty\");\nvar list5 = R.getModuleField(\"builtin://lists\",\"values\",\"list\");\nvar List9 = R.getModuleField(\"builtin://lists\",\"types\",\"List\");\nvar fold10 = R.getModuleField(\"builtin://lists\",\"values\",\"fold\");\nvar link11 = R.getModuleField(\"builtin://lists\",\"values\",\"link\");\nvar $toplevel46 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__283($$resumer11) {\nvar $step45 = 0;\nvar $elidedFrames136 = 0;\nvar $ans133 = D;\nvar $al134 = L[283];\nif(R.isAR($$resumer11)) {\n$step45 = $$resumer11.step;\n$al134 = $$resumer11.from;\n$ans133 = $$resumer11.ans;\n$elidedFrames136 = $$resumer11.elidedFrames;\n$resumer11 = $$resumer11.args[0];\ncomma1365 = $$resumer11.vars[0];\ncollect$concats421 = $$resumer11.vars[1];\nis$PPrintDoc355 = $$resumer11.vars[2];\nnest1605 = $$resumer11.vars[3];\nis$if$flat372 = $$resumer11.vars[4];\nrparen1518 = $$resumer11.vars[5];\nItem1832 = $$resumer11.vars[6];\nis$group385 = $$resumer11.vars[7];\nprefix1622 = $$resumer11.vars[8];\nconcat1833 = $$resumer11.vars[9];\nsoft$surround1768 = $$resumer11.vars[10];\nsbreak1364 = $$resumer11.vars[11];\nsemi1366 = $$resumer11.vars[12];\nflow1488 = $$resumer11.vars[13];\nstr1322 = $$resumer11.vars[14];\nblank1359 = $$resumer11.vars[15];\nnumber1352 = $$resumer11.vars[16];\nlbrack1544 = $$resumer11.vars[17];\nflow$map1394 = $$resumer11.vars[18];\nalign$spaces383 = $$resumer11.vars[19];\nsquote1596 = $$resumer11.vars[20];\nis$concat364 = $$resumer11.vars[21];\nlbrace1530 = $$resumer11.vars[22];\ninfix$break1662 = $$resumer11.vars[23];\nparens1521 = $$resumer11.vars[24];\nseparate1791 = $$resumer11.vars[25];\nstr$dquote1557 = $$resumer11.vars[26];\nis$Item401 = $$resumer11.vars[27];\nvert1509 = $$resumer11.vars[28];\nis$align377 = $$resumer11.vars[29];\nhang1609 = $$resumer11.vars[30];\nbrackets1548 = $$resumer11.vars[31];\ninfix1637 = $$resumer11.vars[32];\nlabel$align$surround1826 = $$resumer11.vars[33];\nrbrack1545 = $$resumer11.vars[34];\nis$item403 = $$resumer11.vars[35];\nsemibreak1837 = $$resumer11.vars[36];\nhardline1361 = $$resumer11.vars[37];\nmt$doc1391 = $$resumer11.vars[38];\nis$hardline360 = $$resumer11.vars[39];\ncommabreak1836 = $$resumer11.vars[40];\nif$flat1360 = $$resumer11.vars[41];\nrbrace1531 = $$resumer11.vars[42];\nlangle1834 = $$resumer11.vars[43];\nis$nest368 = $$resumer11.vars[44];\nstr$squote1593 = $$resumer11.vars[45];\nis$mt$doc146 = $$resumer11.vars[46];\nPPrintDoc241 = $$resumer11.vars[47];\nbraces1535 = $$resumer11.vars[48];\ngroup1387 = $$resumer11.vars[49];\nis$blank362 = $$resumer11.vars[50];\nformat255 = $$resumer11.vars[51];\nrangle1835 = $$resumer11.vars[52];\ndquote1585 = $$resumer11.vars[53];\nsurround1734 = $$resumer11.vars[54];\nalign1606 = $$resumer11.vars[55];\nsurround$separate1808 = $$resumer11.vars[56];\nitem405 = $$resumer11.vars[57];\nis$str358 = $$resumer11.vars[58];\nlparen1517 = $$resumer11.vars[59];\nis$align$spaces381 = $$resumer11.vars[60];\nanswer1838 = $$resumer11.vars[61];\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans133 = R.mC();\n}\nwhile(!R.isContinuation($ans133)) {\nswitch($step45) {\ncase 0: var PPrintDoc137 = R.nB(\"PPrintDoc\",L[92]);\nvar PPrintDoc241 = R.mBA(PPrintDoc137,\"PPrintDoc\");\nvar Item138 = R.nB(\"Item\",L[97]);\nvar Item1832 = R.mBA(Item138,\"Item\");\nvar PPrintDoc353 = {\"$var\":D};\nvar is$PPrintDoc355 = {\"$var\":D};\nvar is$mt$doc146 = {\"$var\":D};\nvar mt$doc357 = {\"$var\":D};\nvar is$str358 = {\"$var\":D};\nvar str359 = {\"$var\":D};\nvar is$hardline360 = {\"$var\":D};\nvar hardline361 = {\"$var\":D};\nvar is$blank362 = {\"$var\":D};\nvar blank363 = {\"$var\":D};\nvar is$concat364 = {\"$var\":D};\nvar concat149 = {\"$var\":D};\nvar is$nest368 = {\"$var\":D};\nvar nest370 = {\"$var\":D};\nvar is$if$flat372 = {\"$var\":D};\nvar if$flat374 = {\"$var\":D};\nvar is$align377 = {\"$var\":D};\nvar align379 = {\"$var\":D};\nvar is$align$spaces381 = {\"$var\":D};\nvar align$spaces383 = {\"$var\":D};\nvar is$group385 = {\"$var\":D};\nvar group387 = {\"$var\":D};\nvar Item398 = {\"$var\":D};\nvar is$Item401 = {\"$var\":D};\nvar is$item403 = {\"$var\":D};\nvar item405 = {\"$var\":D};\nvar collect$concats421 = {\"$var\":D};\nvar format255 = {\"$var\":D};\nvar $temp_full140 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__0($self196,$other141) {\nvar $step139 = 0;\nvar $elidedFrames145 = 0;\nvar $ans142 = D;\nvar $al143 = L[0];\nif(R.isAR($self196)) {\n$step139 = $self196.step;\n$al143 = $self196.from;\n$ans142 = $self196.ans;\n$elidedFrames145 = $self196.elidedFrames;\nself196 = $self196.args[0];\nother141 = $self196.args[1];\nanf_fun150 = $self196.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[0],2,$t,true);\n}\nvar self196 = $self196;\nvar other141 = $other141;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans142 = R.mC();\n}\nwhile(!R.isContinuation($ans142)) {\nswitch($step139) {\ncase 0: var anf_fun147 = is$mt$doc146.$var === D?U(L[1],\"is-mt-doc\"):is$mt$doc146.$var;\n$step139 = 1;\n$al143 = L[13];\nif(typeof(anf_fun147.app) !== \"function\") {\nR.ffi.throwNonFunApp($al143,anf_fun147);\n}\n$ans142 = anf_fun147.app(self196);\nbreak;\ncase 1: var anf_if154 = $ans142;\n$step139 = R.checkPyretTrue(anf_if154)?2:3;\nbreak;\ncase 2: $step139 = 13;\n$ans142 = other141;\nbreak;\ncase 3: var anf_fun148 = is$mt$doc146.$var === D?U(L[2],\"is-mt-doc\"):is$mt$doc146.$var;\n$step139 = 4;\n$al143 = L[12];\nif(typeof(anf_fun148.app) !== \"function\") {\nR.ffi.throwNonFunApp($al143,anf_fun148);\n}\n$ans142 = anf_fun148.app(other141);\nbreak;\ncase 4: var anf_if153 = $ans142;\n$step139 = R.checkPyretTrue(anf_if153)?5:6;\nbreak;\ncase 5: $step139 = 13;\n$ans142 = self196;\nbreak;\ncase 6: $al143 = L[3];\nvar anf_if152 = G(self196,\"has-hardline\",L[3]);\n$step139 = R.checkPyretTrue(anf_if152)?7:8;\nbreak;\ncase 7: $step139 = 9;\n$ans142 = (true);\nbreak;\ncase 8: $al143 = L[11];\nvar anf_arg654 = G(other141,\"has-hardline\",L[11]);\n$ans142 = R.checkWrapBoolean(anf_arg654);\n$step139 = 9;\nbreak;\ncase 9: var anf_if151 = $ans142;\n$step139 = R.checkPyretTrue(anf_if151)?10:11;\nbreak;\ncase 10: var anf_fun663 = concat149.$var === D?U(L[4],\"concat\"):concat149.$var;\n$step139 = 13;\n$al143 = L[5];\nif(typeof(anf_fun663.app) !== \"function\") {\nR.ffi.throwNonFunApp($al143,anf_fun663);\n}\n$ans142 = anf_fun663.app(self196,other141,(0),(true));\nbreak;\ncase 11: var anf_fun150 = concat149.$var === D?U(L[6],\"concat\"):concat149.$var;\n$al143 = L[7];\nvar anf_arg665 = G(self196,\"flat-width\",L[7]);\n$al143 = L[8];\nvar anf_arg169 = G(other141,\"flat-width\",L[8]);\n$step139 = 12;\n$al143 = L[10];\n// omitting isFunction check;\n$ans142 = _plus5.app(anf_arg665,anf_arg169);\nbreak;\ncase 12: var anf_arg170 = $ans142;\n$step139 = 13;\n$al143 = L[9];\nif(typeof(anf_fun150.app) !== \"function\") {\nR.ffi.throwNonFunApp($al143,anf_fun150);\n}\n$ans142 = anf_fun150.app(self196,other141,anf_arg170,(false));\nbreak;\ncase 13: ++R.GAS;\nreturn $ans142;\ndefault: R.ffi.throwSpinnakerError(L[0],$step139);\n}\n}\nif($step139 !== 13) {\n$ans142.stack[R.EXN_STACKHEIGHT++] = R.mAR($al143,$temp_full140,$step139,[self196,other141],[anf_fun150],$elidedFrames145);\n}\nreturn $ans142;\n};\nvar anf_shared258 = R.makeMethod1($temp_full140,\"_plus\");\nvar $temp_full157 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__14($self585) {\nvar $step156 = 0;\nvar $elidedFrames161 = 0;\nvar $ans158 = D;\nvar $al159 = L[14];\nif(R.isAR($self585)) {\n$step156 = $self585.step;\n$al159 = $self585.from;\n$ans158 = $self585.ans;\n$elidedFrames161 = $self585.elidedFrames;\nself585 = $self585.args[0];\nd199 = $self585.vars[0];\nsnd184 = $self585.vars[1];\nanf_arg690 = $self585.vars[2];\nanf_arg704 = $self585.vars[3];\nvert205 = $self585.vars[4];\nanf_arg719 = $self585.vars[5];\ncases162 = $self585.vars[6];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[14],1,$t,true);\n}\nvar self585 = $self585;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans158 = R.mC();\n}\nwhile(!R.isContinuation($ans158)) {\nswitch($step156) {\ncase 0: var cases162 = self585;\n$step156 = 1;\n$al159 = L[47];\nvar $ann$check242 = R._cA(L[47],PPrintDoc241,cases162);\nif(R.isContinuation($ann$check242)) {\n$ans158 = $ann$check242;\n}\nbreak;\ncase 1: $al159 = L[17];\n$step156 = $cases_dispatch240[cases162.$name] || 23;\nbreak;\ncase 2: if(cases162.$arity !== 2) {\nif(cases162.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[16],2,cases162.$arity,L[17],cases162.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[16],true,L[17],cases162.$loc);\n}\n}\nvar $fn164 = cases162.$constructor.$fieldNames;\nR.dF(cases162.dict[$fn164[0]],cases162.$mut_fields_mask[0],false);\nR.dF(cases162.dict[$fn164[1]],cases162.$mut_fields_mask[1],false);\n$step156 = 24;\n$al159 = L[15];\nif(typeof(VS15.dict.values.dict[\"vs-str\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-str\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-str\"].app((\"EmptyDoc\"));\nbreak;\ncase 3: if(cases162.$arity !== 3) {\nif(cases162.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[20],3,cases162.$arity,L[17],cases162.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[20],true,L[17],cases162.$loc);\n}\n}\nvar $fn169 = cases162.$constructor.$fieldNames;\nvar s167 = R.dF(cases162.dict[$fn169[0]],cases162.$mut_fields_mask[0],false);\nR.dF(cases162.dict[$fn169[1]],cases162.$mut_fields_mask[1],false);\nR.dF(cases162.dict[$fn169[2]],cases162.$mut_fields_mask[2],false);\n$step156 = 4;\n$al159 = L[19];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-value\"].app(s167);\nbreak;\ncase 4: var anf_arg677 = $ans158;\n// caller optimization;\n$ans158 = link11.app(anf_arg677,empty2);\nvar anf_arg171 = $ans158;\n$step156 = 24;\n$al159 = L[18];\nif(typeof(VS15.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-constr\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-constr\"].app((\"Str\"),anf_arg171);\nbreak;\ncase 5: if(cases162.$arity !== 2) {\nif(cases162.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[22],2,cases162.$arity,L[17],cases162.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[22],true,L[17],cases162.$loc);\n}\n}\nvar $fn174 = cases162.$constructor.$fieldNames;\nR.dF(cases162.dict[$fn174[0]],cases162.$mut_fields_mask[0],false);\nR.dF(cases162.dict[$fn174[1]],cases162.$mut_fields_mask[1],false);\n$step156 = 24;\n$al159 = L[21];\nif(typeof(VS15.dict.values.dict[\"vs-str\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-str\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-str\"].app((\"CRLF\"));\nbreak;\ncase 6: if(cases162.$arity !== 3) {\nif(cases162.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[25],3,cases162.$arity,L[17],cases162.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[25],true,L[17],cases162.$loc);\n}\n}\nvar $fn180 = cases162.$constructor.$fieldNames;\nvar n177 = R.dF(cases162.dict[$fn180[0]],cases162.$mut_fields_mask[0],false);\nR.dF(cases162.dict[$fn180[1]],cases162.$mut_fields_mask[1],false);\nR.dF(cases162.dict[$fn180[2]],cases162.$mut_fields_mask[2],false);\n$step156 = 7;\n$al159 = L[24];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-value\"].app(n177);\nbreak;\ncase 7: var anf_arg172 = $ans158;\n// caller optimization;\n$ans158 = link11.app(anf_arg172,empty2);\nvar anf_arg689 = $ans158;\n$step156 = 24;\n$al159 = L[23];\nif(typeof(VS15.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-constr\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-constr\"].app((\"Blank\"),anf_arg689);\nbreak;\ncase 8: if(cases162.$arity !== 4) {\nif(cases162.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[29],4,cases162.$arity,L[17],cases162.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[29],true,L[17],cases162.$loc);\n}\n}\nvar $fn195 = cases162.$constructor.$fieldNames;\nvar fst183 = R.dF(cases162.dict[$fn195[0]],cases162.$mut_fields_mask[0],false);\nvar snd184 = R.dF(cases162.dict[$fn195[1]],cases162.$mut_fields_mask[1],false);\nR.dF(cases162.dict[$fn195[2]],cases162.$mut_fields_mask[2],false);\nR.dF(cases162.dict[$fn195[3]],cases162.$mut_fields_mask[3],false);\n$step156 = 9;\n$al159 = L[28];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-value\"].app(fst183);\nbreak;\ncase 9: var anf_arg690 = $ans158;\n$step156 = 10;\n$al159 = L[27];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-value\"].app(snd184);\nbreak;\ncase 10: var anf_arg175 = $ans158;\n// caller optimization;\n$ans158 = link11.app(anf_arg175,empty2);\nvar anf_arg193 = $ans158;\n// caller optimization;\n$ans158 = link11.app(anf_arg690,anf_arg193);\nvar anf_arg703 = $ans158;\n$step156 = 24;\n$al159 = L[26];\nif(typeof(VS15.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-constr\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-constr\"].app((\"Concat\"),anf_arg703);\nbreak;\ncase 11: if(cases162.$arity !== 4) {\nif(cases162.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[33],4,cases162.$arity,L[17],cases162.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[33],true,L[17],cases162.$loc);\n}\n}\nvar $fn201 = cases162.$constructor.$fieldNames;\nvar indent198 = R.dF(cases162.dict[$fn201[0]],cases162.$mut_fields_mask[0],false);\nvar d199 = R.dF(cases162.dict[$fn201[1]],cases162.$mut_fields_mask[1],false);\nR.dF(cases162.dict[$fn201[2]],cases162.$mut_fields_mask[2],false);\nR.dF(cases162.dict[$fn201[3]],cases162.$mut_fields_mask[3],false);\n$step156 = 12;\n$al159 = L[32];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-value\"].app(indent198);\nbreak;\ncase 12: var anf_arg704 = $ans158;\n$step156 = 13;\n$al159 = L[31];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-value\"].app(d199);\nbreak;\ncase 13: var anf_arg190 = $ans158;\n// caller optimization;\n$ans158 = link11.app(anf_arg190,empty2);\nvar anf_arg191 = $ans158;\n// caller optimization;\n$ans158 = link11.app(anf_arg704,anf_arg191);\nvar anf_arg718 = $ans158;\n$step156 = 24;\n$al159 = L[30];\nif(typeof(VS15.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-constr\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-constr\"].app((\"Nest\"),anf_arg718);\nbreak;\ncase 14: if(cases162.$arity !== 4) {\nif(cases162.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[37],4,cases162.$arity,L[17],cases162.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[37],true,L[17],cases162.$loc);\n}\n}\nvar $fn209 = cases162.$constructor.$fieldNames;\nvar flat204 = R.dF(cases162.dict[$fn209[0]],cases162.$mut_fields_mask[0],false);\nvar vert205 = R.dF(cases162.dict[$fn209[1]],cases162.$mut_fields_mask[1],false);\nR.dF(cases162.dict[$fn209[2]],cases162.$mut_fields_mask[2],false);\nR.dF(cases162.dict[$fn209[3]],cases162.$mut_fields_mask[3],false);\n$step156 = 15;\n$al159 = L[36];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-value\"].app(flat204);\nbreak;\ncase 15: var anf_arg719 = $ans158;\n$step156 = 16;\n$al159 = L[35];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-value\"].app(vert205);\nbreak;\ncase 16: var anf_arg207 = $ans158;\n// caller optimization;\n$ans158 = link11.app(anf_arg207,empty2);\nvar anf_arg735 = $ans158;\n// caller optimization;\n$ans158 = link11.app(anf_arg719,anf_arg735);\nvar anf_arg736 = $ans158;\n$step156 = 24;\n$al159 = L[34];\nif(typeof(VS15.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-constr\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-constr\"].app((\"IfFlat\"),anf_arg736);\nbreak;\ncase 17: if(cases162.$arity !== 3) {\nif(cases162.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[40],3,cases162.$arity,L[17],cases162.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[40],true,L[17],cases162.$loc);\n}\n}\nvar $fn221 = cases162.$constructor.$fieldNames;\nvar d212 = R.dF(cases162.dict[$fn221[0]],cases162.$mut_fields_mask[0],false);\nR.dF(cases162.dict[$fn221[1]],cases162.$mut_fields_mask[1],false);\nR.dF(cases162.dict[$fn221[2]],cases162.$mut_fields_mask[2],false);\n$step156 = 18;\n$al159 = L[39];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-value\"].app(d212);\nbreak;\ncase 18: var anf_arg218 = $ans158;\n// caller optimization;\n$ans158 = link11.app(anf_arg218,empty2);\nvar anf_arg219 = $ans158;\n$step156 = 24;\n$al159 = L[38];\nif(typeof(VS15.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-constr\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-constr\"].app((\"Group\"),anf_arg219);\nbreak;\ncase 19: if(cases162.$arity !== 3) {\nif(cases162.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[43],3,cases162.$arity,L[17],cases162.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[43],true,L[17],cases162.$loc);\n}\n}\nvar $fn229 = cases162.$constructor.$fieldNames;\nvar d223 = R.dF(cases162.dict[$fn229[0]],cases162.$mut_fields_mask[0],false);\nR.dF(cases162.dict[$fn229[1]],cases162.$mut_fields_mask[1],false);\nR.dF(cases162.dict[$fn229[2]],cases162.$mut_fields_mask[2],false);\n$step156 = 20;\n$al159 = L[42];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-value\"].app(d223);\nbreak;\ncase 20: var anf_arg745 = $ans158;\n// caller optimization;\n$ans158 = link11.app(anf_arg745,empty2);\nvar anf_arg746 = $ans158;\n$step156 = 24;\n$al159 = L[41];\nif(typeof(VS15.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-constr\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-constr\"].app((\"Align\"),anf_arg746);\nbreak;\ncase 21: if(cases162.$arity !== 3) {\nif(cases162.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[46],3,cases162.$arity,L[17],cases162.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[46],true,L[17],cases162.$loc);\n}\n}\nvar $fn238 = cases162.$constructor.$fieldNames;\nvar n232 = R.dF(cases162.dict[$fn238[0]],cases162.$mut_fields_mask[0],false);\nR.dF(cases162.dict[$fn238[1]],cases162.$mut_fields_mask[1],false);\nR.dF(cases162.dict[$fn238[2]],cases162.$mut_fields_mask[2],false);\n$step156 = 22;\n$al159 = L[45];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-value\"].app(n232);\nbreak;\ncase 22: var anf_arg747 = $ans158;\n// caller optimization;\n$ans158 = link11.app(anf_arg747,empty2);\nvar anf_arg206 = $ans158;\n$step156 = 24;\n$al159 = L[44];\nif(typeof(VS15.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al159,VS15.dict.values.dict[\"vs-constr\"]);\n}\n$ans158 = VS15.dict.values.dict[\"vs-constr\"].app((\"AlignSpaces\"),anf_arg206);\nbreak;\ncase 23: $ans158 = R.throwNoCasesMatched(L[17],cases162);\n$step156 = 24;\nbreak;\ncase 24: ++R.GAS;\nreturn $ans158;\ndefault: R.ffi.throwSpinnakerError(L[14],$step156);\n}\n}\nif($step156 !== 24) {\n$ans158.stack[R.EXN_STACKHEIGHT++] = R.mAR($al159,$temp_full157,$step156,[self585],[d199,snd184,anf_arg690,anf_arg704,vert205,anf_arg719,cases162],$elidedFrames161);\n}\nreturn $ans158;\n};\nvar anf_shared259 = R.makeMethod0($temp_full157,\"_output\");\nvar $temp_full249 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__48($self148,$width250) {\nvar $step248 = 0;\nvar $elidedFrames254 = 0;\nvar $ans251 = D;\nvar $al252 = L[48];\nif(R.isAR($self148)) {\n$step248 = $self148.step;\n$al252 = $self148.from;\n$ans251 = $self148.ans;\n$elidedFrames254 = $self148.elidedFrames;\nself148 = $self148.args[0];\nwidth250 = $self148.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[48],2,$t,true);\n}\nvar self148 = $self148;\nvar width250 = $width250;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans251 = R.mC();\n}\nwhile(!R.isContinuation($ans251)) {\nswitch($step248) {\ncase 0: var anf_fun256 = format255.$var === D?U(L[49],\"format\"):format255.$var;\n$step248 = 1;\n$al252 = L[50];\nif(typeof(anf_fun256.app) !== \"function\") {\nR.ffi.throwNonFunApp($al252,anf_fun256);\n}\n$ans251 = anf_fun256.app(width250,self148);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans251;\ndefault: R.ffi.throwSpinnakerError(L[48],$step248);\n}\n}\nif($step248 !== 1) {\n$ans251.stack[R.EXN_STACKHEIGHT++] = R.mAR($al252,$temp_full249,$step248,[self148,width250],[],$elidedFrames254);\n}\nreturn $ans251;\n};\nvar anf_shared260 = R.makeMethod1($temp_full249,\"pretty\");\nvar $mt$doc_getfields265 = function singleton_variant(f) {\nreturn f(this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $mt$doc_mutablemask264 = [false,false];\nvar $mt$doc$base261 = {\"$fieldNames\":[\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared258,\n\"_output\":anf_shared259,\n\"pretty\":anf_shared260,\n\"_match\":R.mM(\"mt-doc\",2)};\nvar $mt$doc$brander262 = R.nB(\"mt-doc\",L[51]);\nvar $mt$doc$brands263 = {};\n$mt$doc$brands263[PPrintDoc137._brand] = true;\n$mt$doc$brands263[$mt$doc$brander262._brand] = true;\nvar mt$doc266 = R.mVC(L[51],function $synthesizedConstructor_$mt$doc$base() {\nreturn [$type$Number3,$type$Boolean6];\n},[\"flat$width267\",\"has$hardline268\"],[L[52],L[53]],[false,false],[\"flat$width267\",\"has$hardline268\"],$mt$doc_mutablemask264,$mt$doc$base261,$mt$doc$brands263,\"mt-doc\",$mt$doc_getfields265,$mt$doc$base261);\nvar $str_getfields273 = function singleton_variant(f) {\nreturn f(this.dict[\"s\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $str_mutablemask272 = [false,false,false];\nvar $str$base269 = {\"$fieldNames\":[\"s\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared258,\n\"_output\":anf_shared259,\n\"pretty\":anf_shared260,\n\"_match\":R.mM(\"str\",3)};\nvar $str$brander270 = R.nB(\"str\",L[54]);\nvar $str$brands271 = {};\n$str$brands271[PPrintDoc137._brand] = true;\n$str$brands271[$str$brander270._brand] = true;\nvar str274 = R.mVC(L[54],function $synthesizedConstructor_$str$base() {\nreturn [$type$String8,$type$Number3,$type$Boolean6];\n},[\"s275\",\"flat$width276\",\"has$hardline277\"],[L[55],L[56],L[57]],[false,false,false],[\"s275\",\"flat$width276\",\"has$hardline277\"],$str_mutablemask272,$str$base269,$str$brands271,\"str\",$str_getfields273,$str$base269);\nvar $hardline_getfields282 = function singleton_variant(f) {\nreturn f(this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $hardline_mutablemask281 = [false,false];\nvar $hardline$base278 = {\"$fieldNames\":[\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared258,\n\"_output\":anf_shared259,\n\"pretty\":anf_shared260,\n\"_match\":R.mM(\"hardline\",2)};\nvar $hardline$brander279 = R.nB(\"hardline\",L[58]);\nvar $hardline$brands280 = {};\n$hardline$brands280[PPrintDoc137._brand] = true;\n$hardline$brands280[$hardline$brander279._brand] = true;\nvar hardline283 = R.mVC(L[58],function $synthesizedConstructor_$hardline$base() {\nreturn [$type$Number3,$type$Boolean6];\n},[\"flat$width284\",\"has$hardline285\"],[L[59],L[60]],[false,false],[\"flat$width284\",\"has$hardline285\"],$hardline_mutablemask281,$hardline$base278,$hardline$brands280,\"hardline\",$hardline_getfields282,$hardline$base278);\nvar $blank_getfields290 = function singleton_variant(f) {\nreturn f(this.dict[\"n\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $blank_mutablemask289 = [false,false,false];\nvar $blank$base286 = {\"$fieldNames\":[\"n\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared258,\n\"_output\":anf_shared259,\n\"pretty\":anf_shared260,\n\"_match\":R.mM(\"blank\",3)};\nvar $blank$brander287 = R.nB(\"blank\",L[61]);\nvar $blank$brands288 = {};\n$blank$brands288[PPrintDoc137._brand] = true;\n$blank$brands288[$blank$brander287._brand] = true;\nvar blank291 = R.mVC(L[61],function $synthesizedConstructor_$blank$base() {\nreturn [$type$Number3,$type$Number3,$type$Boolean6];\n},[\"n292\",\"flat$width293\",\"has$hardline294\"],[L[62],L[63],L[64]],[false,false,false],[\"n292\",\"flat$width293\",\"has$hardline294\"],$blank_mutablemask289,$blank$base286,$blank$brands288,\"blank\",$blank_getfields290,$blank$base286);\nvar $concat_getfields299 = function singleton_variant(f) {\nreturn f(this.dict[\"fst\"],this.dict[\"snd\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $concat_mutablemask298 = [false,false,false,false];\nvar $concat$base295 = {\"$fieldNames\":[\"fst\",\"snd\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared258,\n\"_output\":anf_shared259,\n\"pretty\":anf_shared260,\n\"_match\":R.mM(\"concat\",4)};\nvar $concat$brander296 = R.nB(\"concat\",L[65]);\nvar $concat$brands297 = {};\n$concat$brands297[PPrintDoc137._brand] = true;\n$concat$brands297[$concat$brander296._brand] = true;\nvar concat300 = R.mVC(L[65],function $synthesizedConstructor_$concat$base() {\nreturn [PPrintDoc241,PPrintDoc241,$type$Number3,$type$Boolean6];\n},[\"fst301\",\"snd302\",\"flat$width303\",\"has$hardline304\"],[L[66],L[67],L[68],L[69]],[false,false,false,false],[\"fst301\",\"snd302\",\"flat$width303\",\"has$hardline304\"],$concat_mutablemask298,$concat$base295,$concat$brands297,\"concat\",$concat_getfields299,$concat$base295);\nvar $nest_getfields309 = function singleton_variant(f) {\nreturn f(this.dict[\"indent\"],this.dict[\"d\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $nest_mutablemask308 = [false,false,false,false];\nvar $nest$base305 = {\"$fieldNames\":[\"indent\",\"d\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared258,\n\"_output\":anf_shared259,\n\"pretty\":anf_shared260,\n\"_match\":R.mM(\"nest\",4)};\nvar $nest$brander306 = R.nB(\"nest\",L[70]);\nvar $nest$brands307 = {};\n$nest$brands307[PPrintDoc137._brand] = true;\n$nest$brands307[$nest$brander306._brand] = true;\nvar nest310 = R.mVC(L[70],function $synthesizedConstructor_$nest$base() {\nreturn [$type$Number3,PPrintDoc241,$type$Number3,$type$Boolean6];\n},[\"indent311\",\"d312\",\"flat$width313\",\"has$hardline314\"],[L[71],L[72],L[73],L[74]],[false,false,false,false],[\"indent311\",\"d312\",\"flat$width313\",\"has$hardline314\"],$nest_mutablemask308,$nest$base305,$nest$brands307,\"nest\",$nest_getfields309,$nest$base305);\nvar $if$flat_getfields319 = function singleton_variant(f) {\nreturn f(this.dict[\"flat\"],this.dict[\"vert\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $if$flat_mutablemask318 = [false,false,false,false];\nvar $if$flat$base315 = {\"$fieldNames\":[\"flat\",\"vert\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared258,\n\"_output\":anf_shared259,\n\"pretty\":anf_shared260,\n\"_match\":R.mM(\"if-flat\",4)};\nvar $if$flat$brander316 = R.nB(\"if-flat\",L[75]);\nvar $if$flat$brands317 = {};\n$if$flat$brands317[PPrintDoc137._brand] = true;\n$if$flat$brands317[$if$flat$brander316._brand] = true;\nvar if$flat320 = R.mVC(L[75],function $synthesizedConstructor_$if$flat$base() {\nreturn [PPrintDoc241,PPrintDoc241,$type$Number3,$type$Boolean6];\n},[\"flat321\",\"vert322\",\"flat$width323\",\"has$hardline324\"],[L[76],L[77],L[78],L[79]],[false,false,false,false],[\"flat321\",\"vert322\",\"flat$width323\",\"has$hardline324\"],$if$flat_mutablemask318,$if$flat$base315,$if$flat$brands317,\"if-flat\",$if$flat_getfields319,$if$flat$base315);\nvar $align_getfields329 = function singleton_variant(f) {\nreturn f(this.dict[\"d\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $align_mutablemask328 = [false,false,false];\nvar $align$base325 = {\"$fieldNames\":[\"d\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared258,\n\"_output\":anf_shared259,\n\"pretty\":anf_shared260,\n\"_match\":R.mM(\"align\",3)};\nvar $align$brander326 = R.nB(\"align\",L[80]);\nvar $align$brands327 = {};\n$align$brands327[PPrintDoc137._brand] = true;\n$align$brands327[$align$brander326._brand] = true;\nvar align330 = R.mVC(L[80],function $synthesizedConstructor_$align$base() {\nreturn [PPrintDoc241,$type$Number3,$type$Boolean6];\n},[\"d331\",\"flat$width332\",\"has$hardline333\"],[L[81],L[82],L[83]],[false,false,false],[\"d331\",\"flat$width332\",\"has$hardline333\"],$align_mutablemask328,$align$base325,$align$brands327,\"align\",$align_getfields329,$align$base325);\nvar $align$spaces_getfields338 = function singleton_variant(f) {\nreturn f(this.dict[\"n\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $align$spaces_mutablemask337 = [false,false,false];\nvar $align$spaces$base334 = {\"$fieldNames\":[\"n\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared258,\n\"_output\":anf_shared259,\n\"pretty\":anf_shared260,\n\"_match\":R.mM(\"align-spaces\",3)};\nvar $align$spaces$brander335 = R.nB(\"align-spaces\",L[84]);\nvar $align$spaces$brands336 = {};\n$align$spaces$brands336[PPrintDoc137._brand] = true;\n$align$spaces$brands336[$align$spaces$brander335._brand] = true;\nvar align$spaces339 = R.mVC(L[84],function $synthesizedConstructor_$align$spaces$base() {\nreturn [$type$Number3,$type$Number3,$type$Boolean6];\n},[\"n340\",\"flat$width341\",\"has$hardline342\"],[L[85],L[86],L[87]],[false,false,false],[\"n340\",\"flat$width341\",\"has$hardline342\"],$align$spaces_mutablemask337,$align$spaces$base334,$align$spaces$brands336,\"align-spaces\",$align$spaces_getfields338,$align$spaces$base334);\nvar $group_getfields347 = function singleton_variant(f) {\nreturn f(this.dict[\"d\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $group_mutablemask346 = [false,false,false];\nvar $group$base343 = {\"$fieldNames\":[\"d\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared258,\n\"_output\":anf_shared259,\n\"pretty\":anf_shared260,\n\"_match\":R.mM(\"group\",3)};\nvar $group$brander344 = R.nB(\"group\",L[88]);\nvar $group$brands345 = {};\n$group$brands345[PPrintDoc137._brand] = true;\n$group$brands345[$group$brander344._brand] = true;\nvar group348 = R.mVC(L[88],function $synthesizedConstructor_$group$base() {\nreturn [PPrintDoc241,$type$Number3,$type$Boolean6];\n},[\"d349\",\"flat$width350\",\"has$hardline351\"],[L[89],L[90],L[91]],[false,false,false],[\"d349\",\"flat$width350\",\"has$hardline351\"],$group_mutablemask346,$group$base343,$group$brands345,\"group\",$group_getfields347,$group$base343);\nvar anf_assign352 = R.mO({\"PPrintDoc\":G(PPrintDoc137,\"test\",L[92]),\n\"is-mt-doc\":G($mt$doc$brander262,\"test\",L[51]),\n\"mt-doc\":mt$doc266,\n\"is-str\":G($str$brander270,\"test\",L[54]),\n\"str\":str274,\n\"is-hardline\":G($hardline$brander279,\"test\",L[58]),\n\"hardline\":hardline283,\n\"is-blank\":G($blank$brander287,\"test\",L[61]),\n\"blank\":blank291,\n\"is-concat\":G($concat$brander296,\"test\",L[65]),\n\"concat\":concat300,\n\"is-nest\":G($nest$brander306,\"test\",L[70]),\n\"nest\":nest310,\n\"is-if-flat\":G($if$flat$brander316,\"test\",L[75]),\n\"if-flat\":if$flat320,\n\"is-align\":G($align$brander326,\"test\",L[80]),\n\"align\":align330,\n\"is-align-spaces\":G($align$spaces$brander335,\"test\",L[84]),\n\"align-spaces\":align$spaces339,\n\"is-group\":G($group$brander344,\"test\",L[88]),\n\"group\":group348});\nPPrintDoc353.$var = anf_assign352;\nR.nothing;\n$al134 = L[92];\nvar anf_assign354 = G(PPrintDoc353.$var,\"PPrintDoc\",L[92]);\nis$PPrintDoc355.$var = anf_assign354;\nR.nothing;\n$al134 = L[51];\nvar anf_assign356 = G(PPrintDoc353.$var,\"is-mt-doc\",L[51]);\nis$mt$doc146.$var = anf_assign356;\nR.nothing;\n$al134 = L[51];\nvar anf_assign241 = G(PPrintDoc353.$var,\"mt-doc\",L[51]);\nmt$doc357.$var = anf_assign241;\nR.nothing;\n$al134 = L[54];\nvar anf_assign243 = G(PPrintDoc353.$var,\"is-str\",L[54]);\nis$str358.$var = anf_assign243;\nR.nothing;\n$al134 = L[54];\nvar anf_assign245 = G(PPrintDoc353.$var,\"str\",L[54]);\nstr359.$var = anf_assign245;\nR.nothing;\n$al134 = L[58];\nvar anf_assign247 = G(PPrintDoc353.$var,\"is-hardline\",L[58]);\nis$hardline360.$var = anf_assign247;\nR.nothing;\n$al134 = L[58];\nvar anf_assign249 = G(PPrintDoc353.$var,\"hardline\",L[58]);\nhardline361.$var = anf_assign249;\nR.nothing;\n$al134 = L[61];\nvar anf_assign251 = G(PPrintDoc353.$var,\"is-blank\",L[61]);\nis$blank362.$var = anf_assign251;\nR.nothing;\n$al134 = L[61];\nvar anf_assign253 = G(PPrintDoc353.$var,\"blank\",L[61]);\nblank363.$var = anf_assign253;\nR.nothing;\n$al134 = L[65];\nvar anf_assign255 = G(PPrintDoc353.$var,\"is-concat\",L[65]);\nis$concat364.$var = anf_assign255;\nR.nothing;\n$al134 = L[65];\nvar anf_assign365 = G(PPrintDoc353.$var,\"concat\",L[65]);\nconcat149.$var = anf_assign365;\nR.nothing;\n$al134 = L[70];\nvar anf_assign367 = G(PPrintDoc353.$var,\"is-nest\",L[70]);\nis$nest368.$var = anf_assign367;\nR.nothing;\n$al134 = L[70];\nvar anf_assign369 = G(PPrintDoc353.$var,\"nest\",L[70]);\nnest370.$var = anf_assign369;\nR.nothing;\n$al134 = L[75];\nvar anf_assign371 = G(PPrintDoc353.$var,\"is-if-flat\",L[75]);\nis$if$flat372.$var = anf_assign371;\nR.nothing;\n$al134 = L[75];\nvar anf_assign373 = G(PPrintDoc353.$var,\"if-flat\",L[75]);\nif$flat374.$var = anf_assign373;\nR.nothing;\n$al134 = L[80];\nvar anf_assign376 = G(PPrintDoc353.$var,\"is-align\",L[80]);\nis$align377.$var = anf_assign376;\nR.nothing;\n$al134 = L[80];\nvar anf_assign378 = G(PPrintDoc353.$var,\"align\",L[80]);\nalign379.$var = anf_assign378;\nR.nothing;\n$al134 = L[84];\nvar anf_assign380 = G(PPrintDoc353.$var,\"is-align-spaces\",L[84]);\nis$align$spaces381.$var = anf_assign380;\nR.nothing;\n$al134 = L[84];\nvar anf_assign382 = G(PPrintDoc353.$var,\"align-spaces\",L[84]);\nalign$spaces383.$var = anf_assign382;\nR.nothing;\n$al134 = L[88];\nvar anf_assign384 = G(PPrintDoc353.$var,\"is-group\",L[88]);\nis$group385.$var = anf_assign384;\nR.nothing;\n$al134 = L[88];\nvar anf_assign386 = G(PPrintDoc353.$var,\"group\",L[88]);\ngroup387.$var = anf_assign386;\nR.nothing;\nvar $item_getfields392 = function singleton_variant(f) {\nreturn f(this.dict[\"indent\"],this.dict[\"is-flat\"],this.dict[\"d\"]);\n};\nvar $item_mutablemask391 = [false,false,false];\nvar $item$base388 = {\"$fieldNames\":[\"indent\",\"is-flat\",\"d\"],\n\"_match\":R.mM(\"item\",3)};\nvar $item$brander389 = R.nB(\"item\",L[93]);\nvar $item$brands390 = {};\n$item$brands390[Item138._brand] = true;\n$item$brands390[$item$brander389._brand] = true;\nvar item393 = R.mVC(L[93],function $synthesizedConstructor_$item$base() {\nreturn [$type$Number3,$type$Boolean6,PPrintDoc241];\n},[\"indent394\",\"is$flat395\",\"d396\"],[L[94],L[95],L[96]],[false,false,false],[\"indent394\",\"is$flat395\",\"d396\"],$item_mutablemask391,$item$base388,$item$brands390,\"item\",$item_getfields392,$item$base388);\nvar anf_assign397 = R.mO({\"Item\":G(Item138,\"test\",L[97]),\n\"is-item\":G($item$brander389,\"test\",L[93]),\n\"item\":item393});\nItem398.$var = anf_assign397;\nR.nothing;\n$al134 = L[97];\nvar anf_assign400 = G(Item398.$var,\"Item\",L[97]);\nis$Item401.$var = anf_assign400;\nR.nothing;\n$al134 = L[93];\nvar anf_assign402 = G(Item398.$var,\"is-item\",L[93]);\nis$item403.$var = anf_assign402;\nR.nothing;\n$al134 = L[93];\nvar anf_assign404 = G(Item398.$var,\"item\",L[93]);\nitem405.$var = anf_assign404;\nR.nothing;\nvar $temp_lam407 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__98($i408,$m409,$it410,$rest411) {\nvar $step406 = 0;\nvar $elidedFrames420 = 0;\nvar $ans417 = D;\nvar $al418 = L[98];\nif(R.isAR($i408)) {\n$step406 = $i408.step;\n$al418 = $i408.from;\n$ans417 = $i408.ans;\n$elidedFrames420 = $i408.elidedFrames;\ni408 = $i408.args[0];\nm409 = $i408.args[1];\nit410 = $i408.args[2];\nrest411 = $i408.args[3];\nanf_arg301 = $i408.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[98],4,$t,false);\n}\nvar i408 = $i408;\nvar m409 = $m409;\nvar it410 = $it410;\nvar rest411 = $rest411;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans417 = R.mC();\n}\nwhile(!R.isContinuation($ans417)) {\nswitch($step406) {\ncase 0: // caller optimization;\n$ans417 = is$concat364.$var.app(it410);\nvar anf_if423 = $ans417;\n$step406 = R.checkPyretTrue(anf_if423)?1:3;\nbreak;\ncase 1: $al418 = L[99];\nvar anf_arg301 = G(it410,\"fst\",L[99]);\n$al418 = L[100];\nvar anf_arg422 = G(it410,\"snd\",L[100]);\n$step406 = 2;\n$al418 = L[101];\n// omitting isFunction check;\n$ans417 = collect$concats421.$var.app(i408,m409,anf_arg422,rest411);\nbreak;\ncase 2: var anf_arg850 = $ans417;\n$step406 = 0;\n++$elidedFrames420;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans417 = R.mC();\n}\ni408 = i408;\nm409 = m409;\nit410 = anf_arg301;\nrest411 = anf_arg850;\ncontinue;\ncase 3: // caller optimization;\n$ans417 = item405.$var.app(i408,m409,it410);\nvar anf_arg283 = $ans417;\n// caller optimization;\n$ans417 = link11.app(anf_arg283,rest411);\n$step406 = 4;\nbreak;\ncase 4: ++R.GAS;\nreturn $ans417;\ndefault: R.ffi.throwSpinnakerError(L[98],$step406);\n}\n}\nif($step406 !== 4) {\n$ans417.stack[R.EXN_STACKHEIGHT++] = R.mAR($al418,$temp_lam407,$step406,[i408,m409,it410,rest411],[anf_arg301],$elidedFrames420);\n}\nreturn $ans417;\n};\nvar anf_assign427 = R.mF($temp_lam407,\"collect-concats\");\ncollect$concats421.$var = anf_assign427;\nR.nothing;\nvar $temp_lam430 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__102($width431,$doc432) {\nvar $step429 = 0;\nvar $elidedFrames437 = 0;\nvar $ans434 = D;\nvar $al435 = L[102];\nif(R.isAR($width431)) {\n$step429 = $width431.step;\n$al435 = $width431.from;\n$ans434 = $width431.ans;\n$elidedFrames437 = $width431.elidedFrames;\nwidth431 = $width431.args[0];\ndoc432 = $width431.args[1];\nprocess636 = $width431.vars[0];\ngen$output623 = $width431.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[102],2,$t,false);\n}\nvar width431 = $width431;\nvar doc432 = $doc432;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans434 = R.mC();\n}\nwhile(!R.isContinuation($ans434)) {\nswitch($step429) {\ncase 0: $step429 = 1;\n$al435 = L[164];\nR._cA(L[164],PPrintDoc241,doc432);\nbreak;\ncase 1: var cur$line446 = {\"$var\":empty2};\nvar output470 = {\"$var\":empty2};\nvar emit$text451 = {\"$var\":D};\nvar emit$spaces461 = {\"$var\":D};\nvar emit$newline587 = {\"$var\":D};\nvar gen$output623 = {\"$var\":D};\nvar process636 = {\"$var\":D};\nvar $temp_lam439 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__103($s440) {\nvar $step438 = 0;\nvar $elidedFrames445 = 0;\nvar $ans442 = D;\nvar $al443 = L[103];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[103],1,$t,false);\n}\nvar s440 = $s440;\n// callee optimization;\nwhile(!R.isContinuation($ans442)) {\nswitch($step438) {\ncase 0: var anf_arg851 = cur$line446.$var;\n// caller optimization;\n$ans442 = link11.app(s440,anf_arg851);\nvar anf_assign854 = $ans442;\n$step438 = 1;\ncur$line446.$var = anf_assign854;\n$ans442 = R.nothing;\nbreak;\ncase 1: return $ans442;\ndefault: R.ffi.throwSpinnakerError(L[103],$step438);\n}\n}\nreturn $ans442;\n};\nvar anf_assign450 = R.mF($temp_lam439,\"emit-text\");\nemit$text451.$var = anf_assign450;\nR.nothing;\nvar $temp_lam454 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__104($n948) {\nvar $step453 = 0;\nvar $elidedFrames458 = 0;\nvar $ans455 = D;\nvar $al456 = L[104];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[104],1,$t,false);\n}\nvar n948 = $n948;\n// callee optimization;\nwhile(!R.isContinuation($ans455)) {\nswitch($step453) {\ncase 0: // caller optimization;\n$ans455 = string$repeat1.app((\" \"),n948);\nvar anf_arg865 = $ans455;\n// caller optimization;\n$ans455 = emit$text451.$var.app(anf_arg865);\n$step453 = 1;\nbreak;\ncase 1: return $ans455;\ndefault: R.ffi.throwSpinnakerError(L[104],$step453);\n}\n}\nreturn $ans455;\n};\nvar anf_assign460 = R.mF($temp_lam454,\"emit-spaces\");\nemit$spaces461.$var = anf_assign460;\nR.nothing;\nvar $temp_lam463 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__105($i464) {\nvar $step462 = 0;\nvar $elidedFrames469 = 0;\nvar $ans466 = D;\nvar $al467 = L[105];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[105],1,$t,false);\n}\nvar i464 = $i464;\n// callee optimization;\nwhile(!R.isContinuation($ans466)) {\nswitch($step462) {\ncase 0: var anf_arg863 = cur$line446.$var;\nvar anf_arg866 = output470.$var;\n// caller optimization;\n$ans466 = link11.app(anf_arg863,anf_arg866);\nvar anf_assign869 = $ans466;\noutput470.$var = anf_assign869;\nR.nothing;\n// caller optimization;\n$ans466 = string$repeat1.app((\" \"),i464);\nvar anf_arg583 = $ans466;\n// caller optimization;\n$ans466 = link11.app(anf_arg583,empty2);\nvar anf_assign584 = $ans466;\n$step462 = 1;\ncur$line446.$var = anf_assign584;\n$ans466 = R.nothing;\nbreak;\ncase 1: return $ans466;\ndefault: R.ffi.throwSpinnakerError(L[105],$step462);\n}\n}\nreturn $ans466;\n};\nvar anf_assign586 = R.mF($temp_lam463,\"emit-newline\");\nemit$newline587.$var = anf_assign586;\nR.nothing;\nvar $temp_lam590 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__106($$resumer11) {\nvar $step589 = 0;\nvar $elidedFrames594 = 0;\nvar $ans591 = D;\nvar $al592 = L[106];\nif(R.isAR($$resumer11)) {\n$step589 = $$resumer11.step;\n$al592 = $$resumer11.from;\n$ans591 = $$resumer11.ans;\n$elidedFrames594 = $$resumer11.elidedFrames;\n$resumer11 = $$resumer11.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[106],0,$t,false);\n}\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans591 = R.mC();\n}\nwhile(!R.isContinuation($ans591)) {\nswitch($step589) {\ncase 0: var anf_arg878 = cur$line446.$var;\nvar anf_arg881 = output470.$var;\n// caller optimization;\n$ans591 = link11.app(anf_arg878,anf_arg881);\nvar anf_assign884 = $ans591;\noutput470.$var = anf_assign884;\nR.nothing;\nvar $temp_lam597 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__107($lines598,$line599) {\nvar $step596 = 0;\nvar $elidedFrames607 = 0;\nvar $ans604 = D;\nvar $al605 = L[107];\nif(R.isAR($lines598)) {\n$step596 = $lines598.step;\n$al605 = $lines598.from;\n$ans604 = $lines598.ans;\n$elidedFrames607 = $lines598.elidedFrames;\nlines598 = $lines598.args[0];\nline599 = $lines598.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[107],2,$t,false);\n}\nvar lines598 = $lines598;\nvar line599 = $line599;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans604 = R.mC();\n}\nwhile(!R.isContinuation($ans604)) {\nswitch($step596) {\ncase 0: var $temp_lam610 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__108($acc611,$piece612) {\nvar $step609 = 0;\nvar $elidedFrames617 = 0;\nvar $ans614 = D;\nvar $al615 = L[108];\nif(R.isAR($acc611)) {\n$step609 = $acc611.step;\n$al615 = $acc611.from;\n$ans614 = $acc611.ans;\n$elidedFrames617 = $acc611.elidedFrames;\nacc611 = $acc611.args[0];\npiece612 = $acc611.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[108],2,$t,false);\n}\nvar acc611 = $acc611;\nvar piece612 = $piece612;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans614 = R.mC();\n}\nwhile(!R.isContinuation($ans614)) {\nswitch($step609) {\ncase 0: $step609 = 1;\n$al615 = L[109];\n// omitting isFunction check;\n$ans614 = _plus5.app(piece612,acc611);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans614;\ndefault: R.ffi.throwSpinnakerError(L[108],$step609);\n}\n}\nif($step609 !== 1) {\n$ans614.stack[R.EXN_STACKHEIGHT++] = R.mAR($al615,$temp_lam610,$step609,[acc611,piece612],[],$elidedFrames617);\n}\nreturn $ans614;\n};\nvar anf_arg343 = R.mF($temp_lam610,\"for-body<line 150, column 10>\");\n$step596 = 1;\n$al605 = L[108];\n// omitting isFunction check;\n$ans604 = fold10.app(anf_arg343,(\"\"),line599);\nbreak;\ncase 1: var l619 = $ans604;\n// caller optimization;\n$ans604 = link11.app(l619,lines598);\n$step596 = 2;\nbreak;\ncase 2: ++R.GAS;\nreturn $ans604;\ndefault: R.ffi.throwSpinnakerError(L[107],$step596);\n}\n}\nif($step596 !== 2) {\n$ans604.stack[R.EXN_STACKHEIGHT++] = R.mAR($al605,$temp_lam597,$step596,[lines598,line599],[],$elidedFrames607);\n}\nreturn $ans604;\n};\nvar anf_arg895 = R.mF($temp_lam597,\"for-body<line 149, column 4>\");\nvar anf_arg350 = output470.$var;\n$step589 = 1;\n$al592 = L[107];\n// omitting isFunction check;\n$ans591 = fold10.app(anf_arg895,empty2,anf_arg350);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans591;\ndefault: R.ffi.throwSpinnakerError(L[106],$step589);\n}\n}\nif($step589 !== 1) {\n$ans591.stack[R.EXN_STACKHEIGHT++] = R.mAR($al592,$temp_lam590,$step589,[],[],$elidedFrames594);\n}\nreturn $ans591;\n};\nvar anf_assign622 = R.mF($temp_lam590,\"gen-output\");\ngen$output623.$var = anf_assign622;\nR.nothing;\nvar $temp_lam625 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__110($column626,$items627) {\nvar $step624 = 0;\nvar $elidedFrames631 = 0;\nvar $ans628 = D;\nvar $al629 = L[110];\nif(R.isAR($column626)) {\n$step624 = $column626.step;\n$al629 = $column626.from;\n$ans628 = $column626.ans;\n$elidedFrames631 = $column626.elidedFrames;\ncolumn626 = $column626.args[0];\nitems627 = $column626.args[1];\nd892 = $column626.vars[0];\nn1000 = $column626.vars[1];\ncases635 = $column626.vars[2];\nm640 = $column626.vars[3];\nann_check_temp632 = $column626.vars[4];\ni639 = $column626.vars[5];\nfirst634 = $column626.vars[6];\nvert995 = $column626.vars[7];\nflat994 = $column626.vars[8];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[110],2,$t,false);\n}\nvar column626 = $column626;\nvar items627 = $items627;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans628 = R.mC();\n}\nwhile(!R.isContinuation($ans628)) {\nswitch($step624) {\ncase 0: $step624 = 1;\n$al629 = L[156];\nR._cA(L[156],$type$Number3,column626);\nbreak;\ncase 1: $step624 = 2;\n$al629 = L[157];\nR._cA(L[157],List9,items627);\nbreak;\ncase 2: // caller optimization;\n$ans628 = is$empty4.app(items627);\nvar anf_if1204 = $ans628;\n$step624 = R.checkPyretTrue(anf_if1204)?3:4;\nbreak;\ncase 3: $step624 = 29;\n$ans628 = nothing5;\nbreak;\ncase 4: $al629 = L[112];\nvar first634 = G(items627,\"first\",L[112]);\n$al629 = L[113];\nvar i639 = G(first634,\"indent\",L[113]);\n$al629 = L[114];\nvar m640 = G(first634,\"is-flat\",L[114]);\n$al629 = L[115];\nvar cases635 = G(first634,\"d\",L[115]);\n$step624 = 5;\n$al629 = L[155];\nvar $ann$check1203 = R._cA(L[155],PPrintDoc241,cases635);\nif(R.isContinuation($ann$check1203)) {\n$ans628 = $ann$check1203;\n}\nbreak;\ncase 5: $al629 = L[118];\n$step624 = $cases_dispatch1202[cases635.$name] || 28;\nbreak;\ncase 6: if(cases635.$arity !== 2) {\nif(cases635.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[117],2,cases635.$arity,L[118],cases635.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[117],true,L[118],cases635.$loc);\n}\n}\nvar $fn638 = cases635.$constructor.$fieldNames;\nR.dF(cases635.dict[$fn638[0]],cases635.$mut_fields_mask[0],false);\nR.dF(cases635.dict[$fn638[1]],cases635.$mut_fields_mask[1],false);\n$al629 = L[116];\nvar anf_arg351 = G(items627,\"rest\",L[116]);\n$step624 = 0;\n++$elidedFrames631;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans628 = R.mC();\n}\ncolumn626 = column626;\nitems627 = anf_arg351;\ncontinue;\ncase 7: if(cases635.$arity !== 4) {\nif(cases635.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[122],4,cases635.$arity,L[118],cases635.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[122],true,L[118],cases635.$loc);\n}\n}\nvar $fn677 = cases635.$constructor.$fieldNames;\nR.dF(cases635.dict[$fn677[0]],cases635.$mut_fields_mask[0],false);\nR.dF(cases635.dict[$fn677[1]],cases635.$mut_fields_mask[1],false);\nR.dF(cases635.dict[$fn677[2]],cases635.$mut_fields_mask[2],false);\nR.dF(cases635.dict[$fn677[3]],cases635.$mut_fields_mask[3],false);\n$al629 = L[119];\nvar anf_arg910 = G(first634,\"d\",L[119]);\n$al629 = L[120];\nvar anf_arg675 = G(items627,\"rest\",L[120]);\n$step624 = 8;\n$al629 = L[121];\n// omitting isFunction check;\n$ans628 = collect$concats421.$var.app(i639,m640,anf_arg910,anf_arg675);\nbreak;\ncase 8: var anf_arg908 = $ans628;\n$step624 = 0;\n++$elidedFrames631;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans628 = R.mC();\n}\ncolumn626 = column626;\nitems627 = anf_arg908;\ncontinue;\ncase 9: if(cases635.$arity !== 3) {\nif(cases635.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[125],3,cases635.$arity,L[118],cases635.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[125],true,L[118],cases635.$loc);\n}\n}\nvar $fn703 = cases635.$constructor.$fieldNames;\nvar s681 = R.dF(cases635.dict[$fn703[0]],cases635.$mut_fields_mask[0],false);\nvar flat$width682 = R.dF(cases635.dict[$fn703[1]],cases635.$mut_fields_mask[1],false);\nR.dF(cases635.dict[$fn703[2]],cases635.$mut_fields_mask[2],false);\n// caller optimization;\n$ans628 = emit$text451.$var.app(s681);\n$step624 = 10;\n$al629 = L[124];\n// omitting isFunction check;\n$ans628 = _plus5.app(column626,flat$width682);\nbreak;\ncase 10: var anf_arg911 = $ans628;\n$al629 = L[123];\nvar anf_arg699 = G(items627,\"rest\",L[123]);\n$step624 = 0;\n++$elidedFrames631;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans628 = R.mC();\n}\ncolumn626 = anf_arg911;\nitems627 = anf_arg699;\ncontinue;\ncase 11: if(cases635.$arity !== 3) {\nif(cases635.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[128],3,cases635.$arity,L[118],cases635.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[128],true,L[118],cases635.$loc);\n}\n}\nvar $fn796 = cases635.$constructor.$fieldNames;\nvar n704 = R.dF(cases635.dict[$fn796[0]],cases635.$mut_fields_mask[0],false);\nR.dF(cases635.dict[$fn796[1]],cases635.$mut_fields_mask[1],false);\nR.dF(cases635.dict[$fn796[2]],cases635.$mut_fields_mask[2],false);\n// caller optimization;\n$ans628 = emit$spaces461.$var.app(n704);\n$step624 = 12;\n$al629 = L[127];\n// omitting isFunction check;\n$ans628 = _plus5.app(column626,n704);\nbreak;\ncase 12: var anf_arg794 = $ans628;\n$al629 = L[126];\nvar anf_arg925 = G(items627,\"rest\",L[126]);\n$step624 = 0;\n++$elidedFrames631;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans628 = R.mC();\n}\ncolumn626 = anf_arg794;\nitems627 = anf_arg925;\ncontinue;\ncase 13: if(cases635.$arity !== 3) {\nif(cases635.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[130],3,cases635.$arity,L[118],cases635.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[130],true,L[118],cases635.$loc);\n}\n}\nvar $fn801 = cases635.$constructor.$fieldNames;\nvar d799 = R.dF(cases635.dict[$fn801[0]],cases635.$mut_fields_mask[0],false);\nR.dF(cases635.dict[$fn801[1]],cases635.$mut_fields_mask[1],false);\nR.dF(cases635.dict[$fn801[2]],cases635.$mut_fields_mask[2],false);\n// caller optimization;\n$ans628 = item405.$var.app(column626,m640,d799);\nvar anf_arg405 = $ans628;\n$al629 = L[129];\nvar anf_arg923 = G(items627,\"rest\",L[129]);\n// caller optimization;\n$ans628 = link11.app(anf_arg405,anf_arg923);\nvar anf_arg926 = $ans628;\n$step624 = 0;\n++$elidedFrames631;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans628 = R.mC();\n}\ncolumn626 = column626;\nitems627 = anf_arg926;\ncontinue;\ncase 14: if(cases635.$arity !== 4) {\nif(cases635.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[133],4,cases635.$arity,L[118],cases635.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[133],true,L[118],cases635.$loc);\n}\n}\nvar $fn983 = cases635.$constructor.$fieldNames;\nvar n804 = R.dF(cases635.dict[$fn983[0]],cases635.$mut_fields_mask[0],false);\nvar d892 = R.dF(cases635.dict[$fn983[1]],cases635.$mut_fields_mask[1],false);\nR.dF(cases635.dict[$fn983[2]],cases635.$mut_fields_mask[2],false);\nR.dF(cases635.dict[$fn983[3]],cases635.$mut_fields_mask[3],false);\n$step624 = 15;\n$al629 = L[132];\n// omitting isFunction check;\n$ans628 = _plus5.app(i639,n804);\nbreak;\ncase 15: var anf_arg891 = $ans628;\n// caller optimization;\n$ans628 = item405.$var.app(anf_arg891,m640,d892);\nvar anf_arg372 = $ans628;\n$al629 = L[131];\nvar anf_arg940 = G(items627,\"rest\",L[131]);\n// caller optimization;\n$ans628 = link11.app(anf_arg372,anf_arg940);\nvar anf_arg976 = $ans628;\n$step624 = 0;\n++$elidedFrames631;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans628 = R.mC();\n}\ncolumn626 = column626;\nitems627 = anf_arg976;\ncontinue;\ncase 16: if(cases635.$arity !== 2) {\nif(cases635.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[136],2,cases635.$arity,L[118],cases635.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[136],true,L[118],cases635.$loc);\n}\n}\nvar $fn991 = cases635.$constructor.$fieldNames;\nR.dF(cases635.dict[$fn991[0]],cases635.$mut_fields_mask[0],false);\nR.dF(cases635.dict[$fn991[1]],cases635.$mut_fields_mask[1],false);\n$step624 = R.checkPyretTrue(m640)?17:18;\nbreak;\ncase 17: $step624 = 29;\n$al629 = L[134];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al629,raise1);\n}\n$ans628 = raise1.app((\"Impossible for HardLine to be flat\"));\nbreak;\ncase 18: // caller optimization;\n$ans628 = emit$newline587.$var.app(i639);\n$al629 = L[135];\nvar anf_arg938 = G(items627,\"rest\",L[135]);\n$step624 = 0;\n++$elidedFrames631;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans628 = R.mC();\n}\ncolumn626 = i639;\nitems627 = anf_arg938;\ncontinue;\ncase 19: if(cases635.$arity !== 4) {\nif(cases635.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[138],4,cases635.$arity,L[118],cases635.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[138],true,L[118],cases635.$loc);\n}\n}\nvar $fn997 = cases635.$constructor.$fieldNames;\nvar flat994 = R.dF(cases635.dict[$fn997[0]],cases635.$mut_fields_mask[0],false);\nvar vert995 = R.dF(cases635.dict[$fn997[1]],cases635.$mut_fields_mask[1],false);\nR.dF(cases635.dict[$fn997[2]],cases635.$mut_fields_mask[2],false);\nR.dF(cases635.dict[$fn997[3]],cases635.$mut_fields_mask[3],false);\n$step624 = R.checkPyretTrue(m640)?20:21;\nbreak;\ncase 20: $step624 = 22;\n$ans628 = flat994;\nbreak;\ncase 21: $step624 = 22;\n$ans628 = vert995;\nbreak;\ncase 22: var anf_arg941 = $ans628;\n// caller optimization;\n$ans628 = item405.$var.app(i639,m640,anf_arg941);\nvar anf_arg398 = $ans628;\n$al629 = L[137];\nvar anf_arg399 = G(items627,\"rest\",L[137]);\n// caller optimization;\n$ans628 = link11.app(anf_arg398,anf_arg399);\nvar anf_arg955 = $ans628;\n$step624 = 0;\n++$elidedFrames631;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans628 = R.mC();\n}\ncolumn626 = column626;\nitems627 = anf_arg955;\ncontinue;\ncase 23: if(cases635.$arity !== 3) {\nif(cases635.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[142],3,cases635.$arity,L[118],cases635.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[142],true,L[118],cases635.$loc);\n}\n}\nvar $fn1002 = cases635.$constructor.$fieldNames;\nvar n1000 = R.dF(cases635.dict[$fn1002[0]],cases635.$mut_fields_mask[0],false);\nR.dF(cases635.dict[$fn1002[1]],cases635.$mut_fields_mask[1],false);\nR.dF(cases635.dict[$fn1002[2]],cases635.$mut_fields_mask[2],false);\n$step624 = R.checkPyretTrue(m640)?24:25;\nbreak;\ncase 24: $al629 = L[139];\nvar anf_arg387 = G(items627,\"rest\",L[139]);\n$step624 = 0;\n++$elidedFrames631;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans628 = R.mC();\n}\ncolumn626 = column626;\nitems627 = anf_arg387;\ncontinue;\ncase 25: // caller optimization;\n$ans628 = emit$spaces461.$var.app(n1000);\n$step624 = 26;\n$al629 = L[141];\n// omitting isFunction check;\n$ans628 = _plus5.app(column626,n1000);\nbreak;\ncase 26: var anf_arg953 = $ans628;\n$al629 = L[140];\nvar anf_arg956 = G(items627,\"rest\",L[140]);\n$step624 = 0;\n++$elidedFrames631;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans628 = R.mC();\n}\ncolumn626 = anf_arg953;\nitems627 = anf_arg956;\ncontinue;\ncase 27: if(cases635.$arity !== 3) {\nif(cases635.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[154],3,cases635.$arity,L[118],cases635.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[154],true,L[118],cases635.$loc);\n}\n}\n$step624 = 29;\n$al629 = L[154];\nvar $temp_branch1195 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__118($d1004,$flat$width1005,$has$hardline1194) {\nvar $step1196 = 0;\nvar $elidedFrames1200 = 0;\nvar $ans1197 = D;\nvar $al1198 = L[153];\nif(R.isAR($d1004)) {\n$step1196 = $d1004.step;\n$al1198 = $d1004.from;\n$ans1197 = $d1004.ans;\n$elidedFrames1200 = $d1004.elidedFrames;\nd1004 = $d1004.args[0];\nflat$width1005 = $d1004.args[1];\nhas$hardline1194 = $d1004.args[2];\n} else {\nvar d1004 = $d1004;\nvar flat$width1005 = $flat$width1005;\nvar has$hardline1194 = $has$hardline1194;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1197 = R.mC();\n}\nwhile(!R.isContinuation($ans1197)) {\nswitch($step1196) {\ncase 0: $step1196 = R.checkPyretTrue(m640)?1:2;\nbreak;\ncase 1: // caller optimization;\n$ans1197 = item405.$var.app(i639,(true),d1004);\nvar anf_arg374 = $ans1197;\n$al1198 = L[143];\nvar anf_arg969 = G(items627,\"rest\",L[143]);\n// caller optimization;\n$ans1197 = link11.app(anf_arg374,anf_arg969);\nvar anf_arg53 = $ans1197;\n$step1196 = 9;\n$al1198 = L[149];\n// omitting isFunction check;\n$ans1197 = process636.$var.app(column626,anf_arg53);\nbreak;\ncase 2: $step1196 = R.checkPyretTrue(has$hardline1194)?3:4;\nbreak;\ncase 3: // caller optimization;\n$ans1197 = item405.$var.app(i639,(false),d1004);\nvar anf_arg385 = $ans1197;\n$al1198 = L[144];\nvar anf_arg54 = G(items627,\"rest\",L[144]);\n// caller optimization;\n$ans1197 = link11.app(anf_arg385,anf_arg54);\nvar anf_arg970 = $ans1197;\n$step1196 = 9;\n$al1198 = L[150];\n// omitting isFunction check;\n$ans1197 = process636.$var.app(column626,anf_arg970);\nbreak;\ncase 4: $step1196 = 5;\n$al1198 = L[148];\n// omitting isFunction check;\n$ans1197 = _minus12.app(width431,column626);\nbreak;\ncase 5: var anf_arg971 = $ans1197;\n$step1196 = 6;\n$al1198 = L[147];\n// omitting isFunction check;\n$ans1197 = _greaterequal2.app(anf_arg971,flat$width1005);\nbreak;\ncase 6: var anf_if1193 = $ans1197;\n$step1196 = R.checkPyretTrue(anf_if1193)?7:8;\nbreak;\ncase 7: // caller optimization;\n$ans1197 = item405.$var.app(i639,(true),d1004);\nvar anf_arg394 = $ans1197;\n$al1198 = L[145];\nvar anf_arg400 = G(items627,\"rest\",L[145]);\n// caller optimization;\n$ans1197 = link11.app(anf_arg394,anf_arg400);\nvar anf_arg1007 = $ans1197;\n$step1196 = 9;\n$al1198 = L[151];\n// omitting isFunction check;\n$ans1197 = process636.$var.app(column626,anf_arg1007);\nbreak;\ncase 8: // caller optimization;\n$ans1197 = item405.$var.app(i639,(false),d1004);\nvar anf_arg401 = $ans1197;\n$al1198 = L[146];\nvar anf_arg1192 = G(items627,\"rest\",L[146]);\n// caller optimization;\n$ans1197 = link11.app(anf_arg401,anf_arg1192);\nvar anf_arg93 = $ans1197;\n$step1196 = 9;\n$al1198 = L[152];\n// omitting isFunction check;\n$ans1197 = process636.$var.app(column626,anf_arg93);\nbreak;\ncase 9: ++R.GAS;\nreturn $ans1197;\ndefault: R.ffi.throwSpinnakerError(L[153],$step1196);\n}\n}\nif($step1196 !== 9) {\n$ans1197.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1198,$temp_branch1195,$step1196,[d1004,flat$width1005,has$hardline1194],[],$elidedFrames1200);\n}\nreturn $ans1197;\n};\n$ans628 = cases635.$app_fields($temp_branch1195,[false,false,false]);\nbreak;\ncase 28: $ans628 = R.throwNoCasesMatched(L[118],cases635);\n$step624 = 29;\nbreak;\ncase 29: var ann_check_temp632 = $ans628;\n$step624 = 30;\n$al629 = L[111];\nvar $ann$check633 = R._cA(L[111],$type$Nothing1,ann_check_temp632);\nif(R.isContinuation($ann$check633)) {\n$ans628 = $ann$check633;\n}\nbreak;\ncase 30: $step624 = 31;\n$ans628 = ann_check_temp632;\nbreak;\ncase 31: ++R.GAS;\nreturn $ans628;\ndefault: R.ffi.throwSpinnakerError(L[110],$step624);\n}\n}\nif($step624 !== 31) {\n$ans628.stack[R.EXN_STACKHEIGHT++] = R.mAR($al629,$temp_lam625,$step624,[column626,items627],[d892,n1000,cases635,m640,ann_check_temp632,i639,first634,vert995,flat994],$elidedFrames631);\n}\nreturn $ans628;\n};\nvar anf_assign1206 = R.mF($temp_lam625,\"process\");\nprocess636.$var = anf_assign1206;\nR.nothing;\n$ans434 = R.getMaker1(list5,(\"make1\"),L[158],L[159]);\nvar anf_fun1216 = $ans434;\n$al435 = L[160];\nvar anf_arg1213 = G(doc432,\"flat-width\",L[160]);\n$al435 = L[161];\nvar anf_arg424 = G(doc432,\"has-hardline\",L[161]);\n// caller optimization;\n$ans434 = group387.$var.app(doc432,anf_arg1213,anf_arg424);\nvar anf_arg426 = $ans434;\n// caller optimization;\n$ans434 = item405.$var.app((0),(false),anf_arg426);\nvar anf_arg435 = $ans434;\n$step429 = 2;\n$al435 = L[159];\nif(typeof(anf_fun1216.app) !== \"function\") {\nR.ffi.throwNonFunApp($al435,anf_fun1216);\n}\n$ans434 = anf_fun1216.app(anf_arg435);\nbreak;\ncase 2: var anf_arg436 = $ans434;\n$step429 = 3;\n$al435 = L[163];\n// omitting isFunction check;\n$ans434 = process636.$var.app((0),anf_arg436);\nbreak;\ncase 3: $step429 = 4;\n$al435 = L[162];\n// omitting isFunction check;\n$ans434 = gen$output623.$var.app();\nbreak;\ncase 4: ++R.GAS;\nreturn $ans434;\ndefault: R.ffi.throwSpinnakerError(L[102],$step429);\n}\n}\nif($step429 !== 4) {\n$ans434.stack[R.EXN_STACKHEIGHT++] = R.mAR($al435,$temp_lam430,$step429,[width431,doc432],[process636,gen$output623],$elidedFrames437);\n}\nreturn $ans434;\n};\nvar anf_assign1218 = R.mF($temp_lam430,\"format\");\nformat255.$var = anf_assign1218;\nR.nothing;\n// caller optimization;\n$ans133 = mt$doc357.$var.app((0),(false));\nvar mt$doc1391 = $ans133;\n// caller optimization;\n$ans133 = hardline361.$var.app((0),(true));\nvar hardline1361 = $ans133;\nvar $temp_lam1220 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__165($d1221) {\nvar $step1219 = 0;\nvar $elidedFrames1225 = 0;\nvar $ans1222 = D;\nvar $al1223 = L[165];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[165],1,$t,false);\n}\nvar d1221 = $d1221;\n// callee optimization;\nwhile(!R.isContinuation($ans1222)) {\nswitch($step1219) {\ncase 0: $al1223 = L[166];\nvar anf_arg431 = G(d1221,\"flat-width\",L[166]);\n$al1223 = L[167];\nvar anf_arg427 = G(d1221,\"has-hardline\",L[167]);\n// caller optimization;\n$ans1222 = align379.$var.app(d1221,anf_arg431,anf_arg427);\n$step1219 = 1;\nbreak;\ncase 1: return $ans1222;\ndefault: R.ffi.throwSpinnakerError(L[165],$step1219);\n}\n}\nreturn $ans1222;\n};\nvar align1606 = R.mF($temp_lam1220,\"\");\nvar $temp_lam1228 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__168($d1229) {\nvar $step1227 = 0;\nvar $elidedFrames1234 = 0;\nvar $ans1231 = D;\nvar $al1232 = L[168];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[168],1,$t,false);\n}\nvar d1229 = $d1229;\n// callee optimization;\nwhile(!R.isContinuation($ans1231)) {\nswitch($step1227) {\ncase 0: $al1232 = L[169];\nvar anf_arg428 = G(d1229,\"flat-width\",L[169]);\n$al1232 = L[170];\nvar anf_arg432 = G(d1229,\"has-hardline\",L[170]);\n// caller optimization;\n$ans1231 = group387.$var.app(d1229,anf_arg428,anf_arg432);\n$step1227 = 1;\nbreak;\ncase 1: return $ans1231;\ndefault: R.ffi.throwSpinnakerError(L[168],$step1227);\n}\n}\nreturn $ans1231;\n};\nvar group1387 = R.mF($temp_lam1228,\"\");\nvar $temp_lam1237 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__171($flat1238,$vert1239) {\nvar $step1236 = 0;\nvar $elidedFrames1243 = 0;\nvar $ans1240 = D;\nvar $al1241 = L[171];\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[171],2,$t,false);\n}\nvar flat1238 = $flat1238;\nvar vert1239 = $vert1239;\n// callee optimization;\nwhile(!R.isContinuation($ans1240)) {\nswitch($step1236) {\ncase 0: $al1241 = L[172];\nvar anf_arg433 = G(flat1238,\"flat-width\",L[172]);\n$al1241 = L[173];\nvar anf_arg438 = G(flat1238,\"has-hardline\",L[173]);\n// caller optimization;\n$ans1240 = if$flat374.$var.app(flat1238,vert1239,anf_arg433,anf_arg438);\n$step1236 = 1;\nbreak;\ncase 1: return $ans1240;\ndefault: R.ffi.throwSpinnakerError(L[171],$step1236);\n}\n}\nreturn $ans1240;\n};\nvar if$flat1360 = R.mF($temp_lam1237,\"\");\nvar $temp_lam1247 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__174($n1248,$d1249) {\nvar $step1246 = 0;\nvar $elidedFrames1253 = 0;\nvar $ans1250 = D;\nvar $al1251 = L[174];\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[174],2,$t,false);\n}\nvar n1248 = $n1248;\nvar d1249 = $d1249;\n// callee optimization;\nwhile(!R.isContinuation($ans1250)) {\nswitch($step1246) {\ncase 0: $al1251 = L[175];\nvar anf_arg1256 = G(d1249,\"flat-width\",L[175]);\n$al1251 = L[176];\nvar anf_arg440 = G(d1249,\"has-hardline\",L[176]);\n// caller optimization;\n$ans1250 = nest370.$var.app(n1248,d1249,anf_arg1256,anf_arg440);\n$step1246 = 1;\nbreak;\ncase 1: return $ans1250;\ndefault: R.ffi.throwSpinnakerError(L[174],$step1246);\n}\n}\nreturn $ans1250;\n};\nvar nest1605 = R.mF($temp_lam1247,\"\");\nvar $temp_lam1260 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__177($fst1261,$snd1262) {\nvar $step1259 = 0;\nvar $elidedFrames1267 = 0;\nvar $ans1264 = D;\nvar $al1265 = L[177];\nif(R.isAR($fst1261)) {\n$step1259 = $fst1261.step;\n$al1265 = $fst1261.from;\n$ans1264 = $fst1261.ans;\n$elidedFrames1267 = $fst1261.elidedFrames;\nfst1261 = $fst1261.args[0];\nsnd1262 = $fst1261.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[177],2,$t,false);\n}\nvar fst1261 = $fst1261;\nvar snd1262 = $snd1262;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1264 = R.mC();\n}\nwhile(!R.isContinuation($ans1264)) {\nswitch($step1259) {\ncase 0: $step1259 = 1;\n$al1265 = L[178];\n// omitting isFunction check;\n$ans1264 = _plus5.app(fst1261,snd1262);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1264;\ndefault: R.ffi.throwSpinnakerError(L[177],$step1259);\n}\n}\nif($step1259 !== 1) {\n$ans1264.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1265,$temp_lam1260,$step1259,[fst1261,snd1262],[],$elidedFrames1267);\n}\nreturn $ans1264;\n};\nvar concat1833 = R.mF($temp_lam1260,\"\");\nvar $temp_lam1270 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__179($n1271) {\nvar $step1269 = 0;\nvar $elidedFrames1275 = 0;\nvar $ans1272 = D;\nvar $al1273 = L[179];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[179],1,$t,false);\n}\nvar n1271 = $n1271;\n// callee optimization;\nwhile(!R.isContinuation($ans1272)) {\nswitch($step1269) {\ncase 0: // caller optimization;\n$ans1272 = blank363.$var.app(n1271,n1271,(false));\n$step1269 = 1;\nbreak;\ncase 1: return $ans1272;\ndefault: R.ffi.throwSpinnakerError(L[179],$step1269);\n}\n}\nreturn $ans1272;\n};\nvar blank1359 = R.mF($temp_lam1270,\"\");\nvar $temp_lam1278 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__180($s1279) {\nvar $step1277 = 0;\nvar $elidedFrames1283 = 0;\nvar $ans1280 = D;\nvar $al1281 = L[180];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[180],1,$t,false);\n}\nvar s1279 = $s1279;\n// callee optimization;\nwhile(!R.isContinuation($ans1280)) {\nswitch($step1277) {\ncase 0: // caller optimization;\n$ans1280 = string$length1.app(s1279);\nvar anf_arg1312 = $ans1280;\n// caller optimization;\n$ans1280 = str359.$var.app(s1279,anf_arg1312,(false));\n$step1277 = 1;\nbreak;\ncase 1: return $ans1280;\ndefault: R.ffi.throwSpinnakerError(L[180],$step1277);\n}\n}\nreturn $ans1280;\n};\nvar str1322 = R.mF($temp_lam1278,\"\");\nvar number1352 = {\"$var\":D};\nvar $temp_lam1316 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__181($n1317) {\nvar $step1315 = 0;\nvar $elidedFrames1321 = 0;\nvar $ans1318 = D;\nvar $al1319 = L[181];\nif(R.isAR($n1317)) {\n$step1315 = $n1317.step;\n$al1319 = $n1317.from;\n$ans1318 = $n1317.ans;\n$elidedFrames1321 = $n1317.elidedFrames;\nn1317 = $n1317.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[181],1,$t,false);\n}\nvar n1317 = $n1317;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1318 = R.mC();\n}\nwhile(!R.isContinuation($ans1318)) {\nswitch($step1315) {\ncase 0: $step1315 = 1;\n$al1319 = L[183];\nR._cA(L[183],$type$Number3,n1317);\nbreak;\ncase 1: $step1315 = 2;\n$al1319 = L[182];\nif(typeof(tostring1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1319,tostring1);\n}\n$ans1318 = tostring1.app(n1317);\nbreak;\ncase 2: var anf_arg1349 = $ans1318;\n// caller optimization;\n$ans1318 = str1322.app(anf_arg1349);\n$step1315 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1318;\ndefault: R.ffi.throwSpinnakerError(L[181],$step1315);\n}\n}\nif($step1315 !== 3) {\n$ans1318.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1319,$temp_lam1316,$step1315,[n1317],[],$elidedFrames1321);\n}\nreturn $ans1318;\n};\nvar anf_assign1351 = R.mF($temp_lam1316,\"number\");\nnumber1352.$var = anf_assign1351;\nR.nothing;\n// caller optimization;\n$ans133 = str1322.app((\"(\"));\nvar lparen1517 = $ans133;\n// caller optimization;\n$ans133 = str1322.app((\")\"));\nvar rparen1518 = $ans133;\n// caller optimization;\n$ans133 = str1322.app((\"{\"));\nvar lbrace1530 = $ans133;\n// caller optimization;\n$ans133 = str1322.app((\"}\"));\nvar rbrace1531 = $ans133;\n// caller optimization;\n$ans133 = str1322.app((\"[\"));\nvar lbrack1544 = $ans133;\n// caller optimization;\n$ans133 = str1322.app((\"]\"));\nvar rbrack1545 = $ans133;\n// caller optimization;\n$ans133 = str1322.app((\"<\"));\nvar langle1834 = $ans133;\n// caller optimization;\n$ans133 = str1322.app((\">\"));\nvar rangle1835 = $ans133;\n// caller optimization;\n$ans133 = str1322.app((\",\"));\nvar comma1365 = $ans133;\n// caller optimization;\n$ans133 = str1322.app((\";\"));\nvar semi1366 = $ans133;\nvar sbreak1364 = {\"$var\":D};\nvar $temp_lam1354 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__184($n1393) {\nvar $step1353 = 0;\nvar $elidedFrames1358 = 0;\nvar $ans1355 = D;\nvar $al1356 = L[184];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[184],1,$t,false);\n}\nvar n1393 = $n1393;\n// callee optimization;\nwhile(!R.isContinuation($ans1355)) {\nswitch($step1353) {\ncase 0: // caller optimization;\n$ans1355 = blank1359.app(n1393);\nvar anf_arg457 = $ans1355;\n// caller optimization;\n$ans1355 = if$flat1360.app(anf_arg457,hardline1361);\n$step1353 = 1;\nbreak;\ncase 1: return $ans1355;\ndefault: R.ffi.throwSpinnakerError(L[184],$step1353);\n}\n}\nreturn $ans1355;\n};\nvar anf_assign1363 = R.mF($temp_lam1354,\"sbreak\");\nsbreak1364.$var = anf_assign1363;\nR.nothing;\n// caller optimization;\n$ans133 = sbreak1364.$var.app((1));\nvar anf_arg452 = $ans133;\n$step45 = 1;\n$al134 = L[282];\n// omitting isFunction check;\n$ans133 = _plus5.app(comma1365,anf_arg452);\nbreak;\ncase 1: var commabreak1836 = $ans133;\n// caller optimization;\n$ans133 = sbreak1364.$var.app((1));\nvar anf_arg454 = $ans133;\n$step45 = 2;\n$al134 = L[281];\n// omitting isFunction check;\n$ans133 = _plus5.app(semi1366,anf_arg454);\nbreak;\ncase 2: var semibreak1837 = $ans133;\nvar flow$map1394 = {\"$var\":D};\nvar flow1488 = {\"$var\":D};\nvar vert1509 = {\"$var\":D};\nvar parens1521 = {\"$var\":D};\nvar braces1535 = {\"$var\":D};\nvar brackets1548 = {\"$var\":D};\nvar $temp_lam1368 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__185($sep1369,$f1370,$items1371) {\nvar $step1367 = 0;\nvar $elidedFrames1375 = 0;\nvar $ans1372 = D;\nvar $al1373 = L[185];\nif(R.isAR($sep1369)) {\n$step1367 = $sep1369.step;\n$al1373 = $sep1369.from;\n$ans1372 = $sep1369.ans;\n$elidedFrames1375 = $sep1369.elidedFrames;\nsep1369 = $sep1369.args[0];\nf1370 = $sep1369.args[1];\nitems1371 = $sep1369.args[2];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[185],3,$t,false);\n}\nvar sep1369 = $sep1369;\nvar f1370 = $f1370;\nvar items1371 = $items1371;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1372 = R.mC();\n}\nwhile(!R.isContinuation($ans1372)) {\nswitch($step1367) {\ncase 0: var $temp_lam1380 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__186($acc1381,$item1382) {\nvar $step1379 = 0;\nvar $elidedFrames1386 = 0;\nvar $ans1383 = D;\nvar $al1384 = L[186];\nif(R.isAR($acc1381)) {\n$step1379 = $acc1381.step;\n$al1384 = $acc1381.from;\n$ans1383 = $acc1381.ans;\n$elidedFrames1386 = $acc1381.elidedFrames;\nacc1381 = $acc1381.args[0];\nitem1382 = $acc1381.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[186],2,$t,false);\n}\nvar acc1381 = $acc1381;\nvar item1382 = $item1382;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1383 = R.mC();\n}\nwhile(!R.isContinuation($ans1383)) {\nswitch($step1379) {\ncase 0: // caller optimization;\n$ans1383 = is$mt$doc146.$var.app(acc1381);\nvar anf_if1389 = $ans1383;\n$step1379 = R.checkPyretTrue(anf_if1389)?1:2;\nbreak;\ncase 1: $step1379 = 5;\n$al1384 = L[187];\nif(typeof(f1370.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1384,f1370);\n}\n$ans1383 = f1370.app(item1382);\nbreak;\ncase 2: $step1379 = 3;\n$al1384 = L[190];\nif(typeof(f1370.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1384,f1370);\n}\n$ans1383 = f1370.app(item1382);\nbreak;\ncase 3: var anf_arg460 = $ans1383;\n$step1379 = 4;\n$al1384 = L[189];\n// omitting isFunction check;\n$ans1383 = _plus5.app(sep1369,anf_arg460);\nbreak;\ncase 4: var anf_arg464 = $ans1383;\n// caller optimization;\n$ans1383 = group1387.app(anf_arg464);\nvar anf_arg1388 = $ans1383;\n$step1379 = 5;\n$al1384 = L[188];\n// omitting isFunction check;\n$ans1383 = _plus5.app(acc1381,anf_arg1388);\nbreak;\ncase 5: ++R.GAS;\nreturn $ans1383;\ndefault: R.ffi.throwSpinnakerError(L[186],$step1379);\n}\n}\nif($step1379 !== 5) {\n$ans1383.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1384,$temp_lam1380,$step1379,[acc1381,item1382],[],$elidedFrames1386);\n}\nreturn $ans1383;\n};\nvar anf_arg486 = R.mF($temp_lam1380,\"for-body<line 234, column 2>\");\n$step1367 = 1;\n$al1373 = L[186];\n// omitting isFunction check;\n$ans1372 = fold10.app(anf_arg486,mt$doc1391,items1371);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1372;\ndefault: R.ffi.throwSpinnakerError(L[185],$step1367);\n}\n}\nif($step1367 !== 1) {\n$ans1372.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1373,$temp_lam1368,$step1367,[sep1369,f1370,items1371],[],$elidedFrames1375);\n}\nreturn $ans1372;\n};\nvar anf_assign1393 = R.mF($temp_lam1368,\"flow-map\");\nflow$map1394.$var = anf_assign1393;\nR.nothing;\nvar $temp_lam1396 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__191($items1397) {\nvar $step1395 = 0;\nvar $elidedFrames1401 = 0;\nvar $ans1398 = D;\nvar $al1399 = L[191];\nif(R.isAR($items1397)) {\n$step1395 = $items1397.step;\n$al1399 = $items1397.from;\n$ans1398 = $items1397.ans;\n$elidedFrames1401 = $items1397.elidedFrames;\nitems1397 = $items1397.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[191],1,$t,false);\n}\nvar items1397 = $items1397;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1398 = R.mC();\n}\nwhile(!R.isContinuation($ans1398)) {\nswitch($step1395) {\ncase 0: // caller optimization;\n$ans1398 = sbreak1364.$var.app((1));\nvar anf_arg1483 = $ans1398;\nvar $temp_lam1404 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__192($x1405) {\nvar $step1403 = 0;\nvar $elidedFrames1410 = 0;\nvar $ans1407 = D;\nvar $al1408 = L[192];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[192],1,$t,false);\n}\nvar x1405 = $x1405;\n// callee optimization;\nwhile(!R.isContinuation($ans1407)) {\nswitch($step1403) {\ncase 0: $step1403 = 1;\n$ans1407 = x1405;\nbreak;\ncase 1: return $ans1407;\ndefault: R.ffi.throwSpinnakerError(L[192],$step1403);\n}\n}\nreturn $ans1407;\n};\nvar anf_arg319 = R.mF($temp_lam1404,\"\");\n$step1395 = 1;\n$al1399 = L[193];\n// omitting isFunction check;\n$ans1398 = flow$map1394.$var.app(anf_arg1483,anf_arg319,items1397);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1398;\ndefault: R.ffi.throwSpinnakerError(L[191],$step1395);\n}\n}\nif($step1395 !== 1) {\n$ans1398.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1399,$temp_lam1396,$step1395,[items1397],[],$elidedFrames1401);\n}\nreturn $ans1398;\n};\nvar anf_assign1487 = R.mF($temp_lam1396,\"flow\");\nflow1488.$var = anf_assign1487;\nR.nothing;\nvar $temp_lam1491 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__194($items1492) {\nvar $step1490 = 0;\nvar $elidedFrames1496 = 0;\nvar $ans1493 = D;\nvar $al1494 = L[194];\nif(R.isAR($items1492)) {\n$step1490 = $items1492.step;\n$al1494 = $items1492.from;\n$ans1493 = $items1492.ans;\n$elidedFrames1496 = $items1492.elidedFrames;\nitems1492 = $items1492.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[194],1,$t,false);\n}\nvar items1492 = $items1492;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1493 = R.mC();\n}\nwhile(!R.isContinuation($ans1493)) {\nswitch($step1490) {\ncase 0: var $temp_lam1498 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__195($x1499) {\nvar $step1497 = 0;\nvar $elidedFrames1504 = 0;\nvar $ans1501 = D;\nvar $al1502 = L[195];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[195],1,$t,false);\n}\nvar x1499 = $x1499;\n// callee optimization;\nwhile(!R.isContinuation($ans1501)) {\nswitch($step1497) {\ncase 0: $step1497 = 1;\n$ans1501 = x1499;\nbreak;\ncase 1: return $ans1501;\ndefault: R.ffi.throwSpinnakerError(L[195],$step1497);\n}\n}\nreturn $ans1501;\n};\nvar anf_arg517 = R.mF($temp_lam1498,\"\");\n$step1490 = 1;\n$al1494 = L[196];\n// omitting isFunction check;\n$ans1493 = flow$map1394.$var.app(hardline1361,anf_arg517,items1492);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1493;\ndefault: R.ffi.throwSpinnakerError(L[194],$step1490);\n}\n}\nif($step1490 !== 1) {\n$ans1493.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1494,$temp_lam1491,$step1490,[items1492],[],$elidedFrames1496);\n}\nreturn $ans1493;\n};\nvar anf_assign1508 = R.mF($temp_lam1491,\"vert\");\nvert1509.$var = anf_assign1508;\nR.nothing;\nvar $temp_lam1511 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__197($d1512) {\nvar $step1510 = 0;\nvar $elidedFrames1516 = 0;\nvar $ans1513 = D;\nvar $al1514 = L[197];\nif(R.isAR($d1512)) {\n$step1510 = $d1512.step;\n$al1514 = $d1512.from;\n$ans1513 = $d1512.ans;\n$elidedFrames1516 = $d1512.elidedFrames;\nd1512 = $d1512.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[197],1,$t,false);\n}\nvar d1512 = $d1512;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1513 = R.mC();\n}\nwhile(!R.isContinuation($ans1513)) {\nswitch($step1510) {\ncase 0: $step1510 = 1;\n$al1514 = L[199];\n// omitting isFunction check;\n$ans1513 = _plus5.app(lparen1517,d1512);\nbreak;\ncase 1: var anf_arg543 = $ans1513;\n$step1510 = 2;\n$al1514 = L[198];\n// omitting isFunction check;\n$ans1513 = _plus5.app(anf_arg543,rparen1518);\nbreak;\ncase 2: var anf_arg518 = $ans1513;\n// caller optimization;\n$ans1513 = group1387.app(anf_arg518);\n$step1510 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1513;\ndefault: R.ffi.throwSpinnakerError(L[197],$step1510);\n}\n}\nif($step1510 !== 3) {\n$ans1513.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1514,$temp_lam1511,$step1510,[d1512],[],$elidedFrames1516);\n}\nreturn $ans1513;\n};\nvar anf_assign1520 = R.mF($temp_lam1511,\"parens\");\nparens1521.$var = anf_assign1520;\nR.nothing;\nvar $temp_lam1523 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__200($d1524) {\nvar $step1522 = 0;\nvar $elidedFrames1529 = 0;\nvar $ans1526 = D;\nvar $al1527 = L[200];\nif(R.isAR($d1524)) {\n$step1522 = $d1524.step;\n$al1527 = $d1524.from;\n$ans1526 = $d1524.ans;\n$elidedFrames1529 = $d1524.elidedFrames;\nd1524 = $d1524.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[200],1,$t,false);\n}\nvar d1524 = $d1524;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1526 = R.mC();\n}\nwhile(!R.isContinuation($ans1526)) {\nswitch($step1522) {\ncase 0: $step1522 = 1;\n$al1527 = L[202];\n// omitting isFunction check;\n$ans1526 = _plus5.app(lbrace1530,d1524);\nbreak;\ncase 1: var anf_arg578 = $ans1526;\n$step1522 = 2;\n$al1527 = L[201];\n// omitting isFunction check;\n$ans1526 = _plus5.app(anf_arg578,rbrace1531);\nbreak;\ncase 2: var anf_arg579 = $ans1526;\n// caller optimization;\n$ans1526 = group1387.app(anf_arg579);\n$step1522 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1526;\ndefault: R.ffi.throwSpinnakerError(L[200],$step1522);\n}\n}\nif($step1522 !== 3) {\n$ans1526.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1527,$temp_lam1523,$step1522,[d1524],[],$elidedFrames1529);\n}\nreturn $ans1526;\n};\nvar anf_assign1534 = R.mF($temp_lam1523,\"braces\");\nbraces1535.$var = anf_assign1534;\nR.nothing;\nvar $temp_lam1537 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__203($d1538) {\nvar $step1536 = 0;\nvar $elidedFrames1543 = 0;\nvar $ans1540 = D;\nvar $al1541 = L[203];\nif(R.isAR($d1538)) {\n$step1536 = $d1538.step;\n$al1541 = $d1538.from;\n$ans1540 = $d1538.ans;\n$elidedFrames1543 = $d1538.elidedFrames;\nd1538 = $d1538.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[203],1,$t,false);\n}\nvar d1538 = $d1538;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1540 = R.mC();\n}\nwhile(!R.isContinuation($ans1540)) {\nswitch($step1536) {\ncase 0: $step1536 = 1;\n$al1541 = L[205];\n// omitting isFunction check;\n$ans1540 = _plus5.app(lbrack1544,d1538);\nbreak;\ncase 1: var anf_arg340 = $ans1540;\n$step1536 = 2;\n$al1541 = L[204];\n// omitting isFunction check;\n$ans1540 = _plus5.app(anf_arg340,rbrack1545);\nbreak;\ncase 2: var anf_arg341 = $ans1540;\n// caller optimization;\n$ans1540 = group1387.app(anf_arg341);\n$step1536 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1540;\ndefault: R.ffi.throwSpinnakerError(L[203],$step1536);\n}\n}\nif($step1536 !== 3) {\n$ans1540.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1541,$temp_lam1537,$step1536,[d1538],[],$elidedFrames1543);\n}\nreturn $ans1540;\n};\nvar anf_assign1547 = R.mF($temp_lam1537,\"brackets\");\nbrackets1548.$var = anf_assign1547;\nR.nothing;\n// caller optimization;\n$ans133 = str1322.app((\"'\"));\nvar str$squote1593 = $ans133;\n// caller optimization;\n$ans133 = str1322.app((\"\\\"\"));\nvar str$dquote1557 = $ans133;\nvar dquote1585 = {\"$var\":D};\nvar squote1596 = {\"$var\":D};\nvar hang1609 = {\"$var\":D};\nvar prefix1622 = {\"$var\":D};\nvar infix1637 = {\"$var\":D};\nvar infix$break1662 = {\"$var\":D};\nvar surround1734 = {\"$var\":D};\nvar soft$surround1768 = {\"$var\":D};\nvar separate1791 = {\"$var\":D};\nvar surround$separate1808 = {\"$var\":D};\nvar label$align$surround1826 = {\"$var\":D};\nvar $temp_lam1551 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__206($s1552) {\nvar $step1550 = 0;\nvar $elidedFrames1556 = 0;\nvar $ans1553 = D;\nvar $al1554 = L[206];\nif(R.isAR($s1552)) {\n$step1550 = $s1552.step;\n$al1554 = $s1552.from;\n$ans1553 = $s1552.ans;\n$elidedFrames1556 = $s1552.elidedFrames;\ns1552 = $s1552.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[206],1,$t,false);\n}\nvar s1552 = $s1552;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1553 = R.mC();\n}\nwhile(!R.isContinuation($ans1553)) {\nswitch($step1550) {\ncase 0: $step1550 = 1;\n$al1554 = L[208];\n// omitting isFunction check;\n$ans1553 = _plus5.app(str$dquote1557,s1552);\nbreak;\ncase 1: var anf_arg1580 = $ans1553;\n$step1550 = 2;\n$al1554 = L[207];\n// omitting isFunction check;\n$ans1553 = _plus5.app(anf_arg1580,str$dquote1557);\nbreak;\ncase 2: var anf_arg1582 = $ans1553;\n// caller optimization;\n$ans1553 = group1387.app(anf_arg1582);\n$step1550 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1553;\ndefault: R.ffi.throwSpinnakerError(L[206],$step1550);\n}\n}\nif($step1550 !== 3) {\n$ans1553.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1554,$temp_lam1551,$step1550,[s1552],[],$elidedFrames1556);\n}\nreturn $ans1553;\n};\nvar anf_assign1584 = R.mF($temp_lam1551,\"dquote\");\ndquote1585.$var = anf_assign1584;\nR.nothing;\nvar $temp_lam1587 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__209($s1588) {\nvar $step1586 = 0;\nvar $elidedFrames1592 = 0;\nvar $ans1589 = D;\nvar $al1590 = L[209];\nif(R.isAR($s1588)) {\n$step1586 = $s1588.step;\n$al1590 = $s1588.from;\n$ans1589 = $s1588.ans;\n$elidedFrames1592 = $s1588.elidedFrames;\ns1588 = $s1588.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[209],1,$t,false);\n}\nvar s1588 = $s1588;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1589 = R.mC();\n}\nwhile(!R.isContinuation($ans1589)) {\nswitch($step1586) {\ncase 0: $step1586 = 1;\n$al1590 = L[211];\n// omitting isFunction check;\n$ans1589 = _plus5.app(str$squote1593,s1588);\nbreak;\ncase 1: var anf_arg602 = $ans1589;\n$step1586 = 2;\n$al1590 = L[210];\n// omitting isFunction check;\n$ans1589 = _plus5.app(anf_arg602,str$squote1593);\nbreak;\ncase 2: var anf_arg346 = $ans1589;\n// caller optimization;\n$ans1589 = group1387.app(anf_arg346);\n$step1586 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1589;\ndefault: R.ffi.throwSpinnakerError(L[209],$step1586);\n}\n}\nif($step1586 !== 3) {\n$ans1589.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1590,$temp_lam1587,$step1586,[s1588],[],$elidedFrames1592);\n}\nreturn $ans1589;\n};\nvar anf_assign1595 = R.mF($temp_lam1587,\"squote\");\nsquote1596.$var = anf_assign1595;\nR.nothing;\nvar $temp_lam1598 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__212($i1599,$d1600) {\nvar $step1597 = 0;\nvar $elidedFrames1604 = 0;\nvar $ans1601 = D;\nvar $al1602 = L[212];\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[212],2,$t,false);\n}\nvar i1599 = $i1599;\nvar d1600 = $d1600;\n// callee optimization;\nwhile(!R.isContinuation($ans1601)) {\nswitch($step1597) {\ncase 0: // caller optimization;\n$ans1601 = nest1605.app(i1599,d1600);\nvar anf_arg349 = $ans1601;\n// caller optimization;\n$ans1601 = align1606.app(anf_arg349);\n$step1597 = 1;\nbreak;\ncase 1: return $ans1601;\ndefault: R.ffi.throwSpinnakerError(L[212],$step1597);\n}\n}\nreturn $ans1601;\n};\nvar anf_assign1608 = R.mF($temp_lam1598,\"hang\");\nhang1609.$var = anf_assign1608;\nR.nothing;\nvar $temp_lam1611 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__213($n1612,$b1613,$x1614,$y1615) {\nvar $step1610 = 0;\nvar $elidedFrames1619 = 0;\nvar $ans1616 = D;\nvar $al1617 = L[213];\nif(R.isAR($n1612)) {\n$step1610 = $n1612.step;\n$al1617 = $n1612.from;\n$ans1616 = $n1612.ans;\n$elidedFrames1619 = $n1612.elidedFrames;\nn1612 = $n1612.args[0];\nb1613 = $n1612.args[1];\nx1614 = $n1612.args[2];\ny1615 = $n1612.args[3];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[213],4,$t,false);\n}\nvar n1612 = $n1612;\nvar b1613 = $b1613;\nvar x1614 = $x1614;\nvar y1615 = $y1615;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1616 = R.mC();\n}\nwhile(!R.isContinuation($ans1616)) {\nswitch($step1610) {\ncase 0: // caller optimization;\n$ans1616 = sbreak1364.$var.app(b1613);\nvar anf_arg604 = $ans1616;\n$step1610 = 1;\n$al1617 = L[215];\n// omitting isFunction check;\n$ans1616 = _plus5.app(anf_arg604,y1615);\nbreak;\ncase 1: var anf_arg352 = $ans1616;\n// caller optimization;\n$ans1616 = nest1605.app(n1612,anf_arg352);\nvar anf_arg355 = $ans1616;\n$step1610 = 2;\n$al1617 = L[214];\n// omitting isFunction check;\n$ans1616 = _plus5.app(x1614,anf_arg355);\nbreak;\ncase 2: var anf_arg670 = $ans1616;\n// caller optimization;\n$ans1616 = group1387.app(anf_arg670);\n$step1610 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1616;\ndefault: R.ffi.throwSpinnakerError(L[213],$step1610);\n}\n}\nif($step1610 !== 3) {\n$ans1616.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1617,$temp_lam1611,$step1610,[n1612,b1613,x1614,y1615],[],$elidedFrames1619);\n}\nreturn $ans1616;\n};\nvar anf_assign1621 = R.mF($temp_lam1611,\"prefix\");\nprefix1622.$var = anf_assign1621;\nR.nothing;\nvar $temp_lam1624 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__216($n1625,$b1626,$op1627,$x1628,$y1629) {\nvar $step1623 = 0;\nvar $elidedFrames1633 = 0;\nvar $ans1630 = D;\nvar $al1631 = L[216];\nif(R.isAR($n1625)) {\n$step1623 = $n1625.step;\n$al1631 = $n1625.from;\n$ans1630 = $n1625.ans;\n$elidedFrames1633 = $n1625.elidedFrames;\nn1625 = $n1625.args[0];\nb1626 = $n1625.args[1];\nop1627 = $n1625.args[2];\nx1628 = $n1625.args[3];\ny1629 = $n1625.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[216],5,$t,false);\n}\nvar n1625 = $n1625;\nvar b1626 = $b1626;\nvar op1627 = $op1627;\nvar x1628 = $x1628;\nvar y1629 = $y1629;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1630 = R.mC();\n}\nwhile(!R.isContinuation($ans1630)) {\nswitch($step1623) {\ncase 0: $step1623 = 1;\n$al1631 = L[220];\nR._cA(L[220],$type$Number3,n1625);\nbreak;\ncase 1: $step1623 = 2;\n$al1631 = L[221];\nR._cA(L[221],$type$Number3,b1626);\nbreak;\ncase 2: $step1623 = 3;\n$al1631 = L[222];\nR._cA(L[222],PPrintDoc241,op1627);\nbreak;\ncase 3: $step1623 = 4;\n$al1631 = L[223];\nR._cA(L[223],PPrintDoc241,x1628);\nbreak;\ncase 4: $step1623 = 5;\n$al1631 = L[224];\nR._cA(L[224],PPrintDoc241,y1629);\nbreak;\ncase 5: // caller optimization;\n$ans1630 = blank1359.app(b1626);\nvar anf_arg358 = $ans1630;\n$step1623 = 6;\n$al1631 = L[219];\n// omitting isFunction check;\n$ans1630 = _plus5.app(x1628,anf_arg358);\nbreak;\ncase 6: var anf_arg1634 = $ans1630;\n$step1623 = 7;\n$al1631 = L[218];\n// omitting isFunction check;\n$ans1630 = _plus5.app(anf_arg1634,op1627);\nbreak;\ncase 7: var anf_arg607 = $ans1630;\n$step1623 = 8;\n$al1631 = L[217];\n// omitting isFunction check;\n$ans1630 = prefix1622.$var.app(n1625,b1626,anf_arg607,y1629);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans1630;\ndefault: R.ffi.throwSpinnakerError(L[216],$step1623);\n}\n}\nif($step1623 !== 8) {\n$ans1630.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1631,$temp_lam1624,$step1623,[n1625,b1626,op1627,x1628,y1629],[],$elidedFrames1633);\n}\nreturn $ans1630;\n};\nvar anf_assign1636 = R.mF($temp_lam1624,\"infix\");\ninfix1637.$var = anf_assign1636;\nR.nothing;\nvar $temp_lam1640 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__225($n1642,$b1643,$op1644,$x1645,$y1646) {\nvar $step1639 = 0;\nvar $elidedFrames1650 = 0;\nvar $ans1647 = D;\nvar $al1648 = L[225];\nif(R.isAR($n1642)) {\n$step1639 = $n1642.step;\n$al1648 = $n1642.from;\n$ans1647 = $n1642.ans;\n$elidedFrames1650 = $n1642.elidedFrames;\nn1642 = $n1642.args[0];\nb1643 = $n1642.args[1];\nop1644 = $n1642.args[2];\nx1645 = $n1642.args[3];\ny1646 = $n1642.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[225],5,$t,false);\n}\nvar n1642 = $n1642;\nvar b1643 = $b1643;\nvar op1644 = $op1644;\nvar x1645 = $x1645;\nvar y1646 = $y1646;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1647 = R.mC();\n}\nwhile(!R.isContinuation($ans1647)) {\nswitch($step1639) {\ncase 0: $step1639 = 1;\n$al1648 = L[229];\nR._cA(L[229],$type$Number3,n1642);\nbreak;\ncase 1: $step1639 = 2;\n$al1648 = L[230];\nR._cA(L[230],$type$Number3,b1643);\nbreak;\ncase 2: $step1639 = 3;\n$al1648 = L[231];\nR._cA(L[231],PPrintDoc241,op1644);\nbreak;\ncase 3: $step1639 = 4;\n$al1648 = L[232];\nR._cA(L[232],PPrintDoc241,x1645);\nbreak;\ncase 4: $step1639 = 5;\n$al1648 = L[233];\nR._cA(L[233],PPrintDoc241,y1646);\nbreak;\ncase 5: // caller optimization;\n$ans1647 = blank1359.app(b1643);\nvar anf_arg1659 = $ans1647;\n$step1639 = 6;\n$al1648 = L[228];\n// omitting isFunction check;\n$ans1647 = _plus5.app(op1644,anf_arg1659);\nbreak;\ncase 6: var anf_arg608 = $ans1647;\n$step1639 = 7;\n$al1648 = L[227];\n// omitting isFunction check;\n$ans1647 = _plus5.app(anf_arg608,y1646);\nbreak;\ncase 7: var anf_arg378 = $ans1647;\n$step1639 = 8;\n$al1648 = L[226];\n// omitting isFunction check;\n$ans1647 = prefix1622.$var.app(n1642,b1643,x1645,anf_arg378);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans1647;\ndefault: R.ffi.throwSpinnakerError(L[225],$step1639);\n}\n}\nif($step1639 !== 8) {\n$ans1647.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1648,$temp_lam1640,$step1639,[n1642,b1643,op1644,x1645,y1646],[],$elidedFrames1650);\n}\nreturn $ans1647;\n};\nvar anf_assign1661 = R.mF($temp_lam1640,\"infix-break\");\ninfix$break1662.$var = anf_assign1661;\nR.nothing;\nvar $temp_lam1664 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__234($n1665,$b1666,$open1667,$contents1668,$close1669) {\nvar $step1663 = 0;\nvar $elidedFrames1674 = 0;\nvar $ans1671 = D;\nvar $al1672 = L[234];\nif(R.isAR($n1665)) {\n$step1663 = $n1665.step;\n$al1672 = $n1665.from;\n$ans1671 = $n1665.ans;\n$elidedFrames1674 = $n1665.elidedFrames;\nn1665 = $n1665.args[0];\nb1666 = $n1665.args[1];\nopen1667 = $n1665.args[2];\ncontents1668 = $n1665.args[3];\nclose1669 = $n1665.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[234],5,$t,false);\n}\nvar n1665 = $n1665;\nvar b1666 = $b1666;\nvar open1667 = $open1667;\nvar contents1668 = $contents1668;\nvar close1669 = $close1669;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1671 = R.mC();\n}\nwhile(!R.isContinuation($ans1671)) {\nswitch($step1663) {\ncase 0: $step1663 = 1;\n$al1672 = L[241];\nR._cA(L[241],$type$Number3,n1665);\nbreak;\ncase 1: $step1663 = 2;\n$al1672 = L[242];\nR._cA(L[242],$type$Number3,b1666);\nbreak;\ncase 2: $step1663 = 3;\n$al1672 = L[243];\nR._cA(L[243],PPrintDoc241,open1667);\nbreak;\ncase 3: $step1663 = 4;\n$al1672 = L[244];\nR._cA(L[244],PPrintDoc241,contents1668);\nbreak;\ncase 4: $step1663 = 5;\n$al1672 = L[245];\nR._cA(L[245],PPrintDoc241,close1669);\nbreak;\ncase 5: // caller optimization;\n$ans1671 = is$mt$doc146.$var.app(close1669);\nvar anf_if1731 = $ans1671;\n$step1663 = R.checkPyretTrue(anf_if1731)?6:9;\nbreak;\ncase 6: // caller optimization;\n$ans1671 = sbreak1364.$var.app(b1666);\nvar anf_arg1688 = $ans1671;\n$step1663 = 7;\n$al1672 = L[236];\n// omitting isFunction check;\n$ans1671 = _plus5.app(anf_arg1688,contents1668);\nbreak;\ncase 7: var anf_arg381 = $ans1671;\n// caller optimization;\n$ans1671 = nest1605.app(n1665,anf_arg381);\nvar anf_arg1691 = $ans1671;\n$step1663 = 8;\n$al1672 = L[235];\n// omitting isFunction check;\n$ans1671 = _plus5.app(open1667,anf_arg1691);\nbreak;\ncase 8: var anf_arg383 = $ans1671;\n// caller optimization;\n$ans1671 = group1387.app(anf_arg383);\n$step1663 = 14;\nbreak;\ncase 9: // caller optimization;\n$ans1671 = sbreak1364.$var.app(b1666);\nvar anf_arg384 = $ans1671;\n$step1663 = 10;\n$al1672 = L[240];\n// omitting isFunction check;\n$ans1671 = _plus5.app(anf_arg384,contents1668);\nbreak;\ncase 10: var anf_arg386 = $ans1671;\n// caller optimization;\n$ans1671 = nest1605.app(n1665,anf_arg386);\nvar anf_arg1729 = $ans1671;\n$step1663 = 11;\n$al1672 = L[239];\n// omitting isFunction check;\n$ans1671 = _plus5.app(open1667,anf_arg1729);\nbreak;\ncase 11: var anf_arg695 = $ans1671;\n// caller optimization;\n$ans1671 = sbreak1364.$var.app(b1666);\nvar anf_arg389 = $ans1671;\n$step1663 = 12;\n$al1672 = L[238];\n// omitting isFunction check;\n$ans1671 = _plus5.app(anf_arg695,anf_arg389);\nbreak;\ncase 12: var anf_arg392 = $ans1671;\n$step1663 = 13;\n$al1672 = L[237];\n// omitting isFunction check;\n$ans1671 = _plus5.app(anf_arg392,close1669);\nbreak;\ncase 13: var anf_arg1730 = $ans1671;\n// caller optimization;\n$ans1671 = group1387.app(anf_arg1730);\n$step1663 = 14;\nbreak;\ncase 14: ++R.GAS;\nreturn $ans1671;\ndefault: R.ffi.throwSpinnakerError(L[234],$step1663);\n}\n}\nif($step1663 !== 14) {\n$ans1671.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1672,$temp_lam1664,$step1663,[n1665,b1666,open1667,contents1668,close1669],[],$elidedFrames1674);\n}\nreturn $ans1671;\n};\nvar anf_assign1733 = R.mF($temp_lam1664,\"surround\");\nsurround1734.$var = anf_assign1733;\nR.nothing;\nvar $temp_lam1736 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__246($n1737,$b1738,$open1739,$contents1740,$close1741) {\nvar $step1735 = 0;\nvar $elidedFrames1745 = 0;\nvar $ans1742 = D;\nvar $al1743 = L[246];\nif(R.isAR($n1737)) {\n$step1735 = $n1737.step;\n$al1743 = $n1737.from;\n$ans1742 = $n1737.ans;\n$elidedFrames1745 = $n1737.elidedFrames;\nn1737 = $n1737.args[0];\nb1738 = $n1737.args[1];\nopen1739 = $n1737.args[2];\ncontents1740 = $n1737.args[3];\nclose1741 = $n1737.args[4];\nanf_arg769 = $n1737.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[246],5,$t,false);\n}\nvar n1737 = $n1737;\nvar b1738 = $b1738;\nvar open1739 = $open1739;\nvar contents1740 = $contents1740;\nvar close1741 = $close1741;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1742 = R.mC();\n}\nwhile(!R.isContinuation($ans1742)) {\nswitch($step1735) {\ncase 0: $step1735 = 1;\n$al1743 = L[253];\nR._cA(L[253],$type$Number3,n1737);\nbreak;\ncase 1: $step1735 = 2;\n$al1743 = L[254];\nR._cA(L[254],$type$Number3,b1738);\nbreak;\ncase 2: $step1735 = 3;\n$al1743 = L[255];\nR._cA(L[255],PPrintDoc241,open1739);\nbreak;\ncase 3: $step1735 = 4;\n$al1743 = L[256];\nR._cA(L[256],PPrintDoc241,contents1740);\nbreak;\ncase 4: $step1735 = 5;\n$al1743 = L[257];\nR._cA(L[257],PPrintDoc241,close1741);\nbreak;\ncase 5: // caller optimization;\n$ans1742 = is$mt$doc146.$var.app(close1741);\nvar anf_if1766 = $ans1742;\n$step1735 = R.checkPyretTrue(anf_if1766)?6:9;\nbreak;\ncase 6: // caller optimization;\n$ans1742 = sbreak1364.$var.app(b1738);\nvar anf_arg724 = $ans1742;\n$step1735 = 7;\n$al1743 = L[248];\n// omitting isFunction check;\n$ans1742 = _plus5.app(anf_arg724,contents1740);\nbreak;\ncase 7: var anf_arg752 = $ans1742;\n// caller optimization;\n$ans1742 = group1387.app(anf_arg752);\nvar anf_arg761 = $ans1742;\n// caller optimization;\n$ans1742 = nest1605.app(n1737,anf_arg761);\nvar anf_arg1759 = $ans1742;\n$step1735 = 8;\n$al1743 = L[247];\n// omitting isFunction check;\n$ans1742 = _plus5.app(open1739,anf_arg1759);\nbreak;\ncase 8: var anf_arg762 = $ans1742;\n// caller optimization;\n$ans1742 = group1387.app(anf_arg762);\n$step1735 = 14;\nbreak;\ncase 9: // caller optimization;\n$ans1742 = sbreak1364.$var.app(b1738);\nvar anf_arg783 = $ans1742;\n$step1735 = 10;\n$al1743 = L[252];\n// omitting isFunction check;\n$ans1742 = _plus5.app(anf_arg783,contents1740);\nbreak;\ncase 10: var anf_arg1760 = $ans1742;\n// caller optimization;\n$ans1742 = group1387.app(anf_arg1760);\nvar anf_arg1763 = $ans1742;\n// caller optimization;\n$ans1742 = nest1605.app(n1737,anf_arg1763);\nvar anf_arg765 = $ans1742;\n$step1735 = 11;\n$al1743 = L[251];\n// omitting isFunction check;\n$ans1742 = _plus5.app(open1739,anf_arg765);\nbreak;\ncase 11: var anf_arg769 = $ans1742;\n// caller optimization;\n$ans1742 = sbreak1364.$var.app(b1738);\nvar anf_arg1764 = $ans1742;\n$step1735 = 12;\n$al1743 = L[250];\n// omitting isFunction check;\n$ans1742 = _plus5.app(anf_arg1764,close1741);\nbreak;\ncase 12: var anf_arg782 = $ans1742;\n// caller optimization;\n$ans1742 = group1387.app(anf_arg782);\nvar anf_arg788 = $ans1742;\n$step1735 = 13;\n$al1743 = L[249];\n// omitting isFunction check;\n$ans1742 = _plus5.app(anf_arg769,anf_arg788);\nbreak;\ncase 13: var anf_arg1765 = $ans1742;\n// caller optimization;\n$ans1742 = group1387.app(anf_arg1765);\n$step1735 = 14;\nbreak;\ncase 14: ++R.GAS;\nreturn $ans1742;\ndefault: R.ffi.throwSpinnakerError(L[246],$step1735);\n}\n}\nif($step1735 !== 14) {\n$ans1742.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1743,$temp_lam1736,$step1735,[n1737,b1738,open1739,contents1740,close1741],[anf_arg769],$elidedFrames1745);\n}\nreturn $ans1742;\n};\nvar anf_assign510 = R.mF($temp_lam1736,\"soft-surround\");\nsoft$surround1768.$var = anf_assign510;\nR.nothing;\nvar $temp_lam1770 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__258($sep1771,$docs1772) {\nvar $step1769 = 0;\nvar $elidedFrames1776 = 0;\nvar $ans1773 = D;\nvar $al1774 = L[258];\nif(R.isAR($sep1771)) {\n$step1769 = $sep1771.step;\n$al1774 = $sep1771.from;\n$ans1773 = $sep1771.ans;\n$elidedFrames1776 = $sep1771.elidedFrames;\nsep1771 = $sep1771.args[0];\ndocs1772 = $sep1771.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[258],2,$t,false);\n}\nvar sep1771 = $sep1771;\nvar docs1772 = $docs1772;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1773 = R.mC();\n}\nwhile(!R.isContinuation($ans1773)) {\nswitch($step1769) {\ncase 0: $step1769 = 1;\n$al1774 = L[262];\nR._cA(L[262],PPrintDoc241,sep1771);\nbreak;\ncase 1: $step1769 = 2;\n$al1774 = L[263];\nR._cA(L[263],List9,docs1772);\nbreak;\ncase 2: var $temp_lam1778 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__259($acc1779,$d1780) {\nvar $step1777 = 0;\nvar $elidedFrames1784 = 0;\nvar $ans1781 = D;\nvar $al1782 = L[259];\nif(R.isAR($acc1779)) {\n$step1777 = $acc1779.step;\n$al1782 = $acc1779.from;\n$ans1781 = $acc1779.ans;\n$elidedFrames1784 = $acc1779.elidedFrames;\nacc1779 = $acc1779.args[0];\nd1780 = $acc1779.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[259],2,$t,false);\n}\nvar acc1779 = $acc1779;\nvar d1780 = $d1780;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1781 = R.mC();\n}\nwhile(!R.isContinuation($ans1781)) {\nswitch($step1777) {\ncase 0: // caller optimization;\n$ans1781 = is$mt$doc146.$var.app(d1780);\nvar anf_if863 = $ans1781;\n$step1777 = R.checkPyretTrue(anf_if863)?1:2;\nbreak;\ncase 1: $step1777 = 6;\n$ans1781 = acc1779;\nbreak;\ncase 2: // caller optimization;\n$ans1781 = is$mt$doc146.$var.app(acc1779);\nvar anf_if1786 = $ans1781;\n$step1777 = R.checkPyretTrue(anf_if1786)?3:4;\nbreak;\ncase 3: $step1777 = 6;\n$ans1781 = d1780;\nbreak;\ncase 4: $step1777 = 5;\n$al1782 = L[261];\n// omitting isFunction check;\n$ans1781 = _plus5.app(acc1779,sep1771);\nbreak;\ncase 5: var anf_arg846 = $ans1781;\n$step1777 = 6;\n$al1782 = L[260];\n// omitting isFunction check;\n$ans1781 = _plus5.app(anf_arg846,d1780);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1781;\ndefault: R.ffi.throwSpinnakerError(L[259],$step1777);\n}\n}\nif($step1777 !== 6) {\n$ans1781.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1782,$temp_lam1778,$step1777,[acc1779,d1780],[],$elidedFrames1784);\n}\nreturn $ans1781;\n};\nvar anf_arg843 = R.mF($temp_lam1778,\"for-body<line 270, column 2>\");\n$step1769 = 3;\n$al1774 = L[259];\n// omitting isFunction check;\n$ans1773 = fold10.app(anf_arg843,mt$doc1391,docs1772);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1773;\ndefault: R.ffi.throwSpinnakerError(L[258],$step1769);\n}\n}\nif($step1769 !== 3) {\n$ans1773.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1774,$temp_lam1770,$step1769,[sep1771,docs1772],[],$elidedFrames1776);\n}\nreturn $ans1773;\n};\nvar anf_assign1790 = R.mF($temp_lam1770,\"separate\");\nseparate1791.$var = anf_assign1790;\nR.nothing;\nvar $temp_lam1793 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__264($n1794,$b1795,$void1796,$open1797,$sep1798,$close1799,$docs1800) {\nvar $step1792 = 0;\nvar $elidedFrames1804 = 0;\nvar $ans1801 = D;\nvar $al1802 = L[264];\nif(R.isAR($n1794)) {\n$step1792 = $n1794.step;\n$al1802 = $n1794.from;\n$ans1801 = $n1794.ans;\n$elidedFrames1804 = $n1794.elidedFrames;\nn1794 = $n1794.args[0];\nb1795 = $n1794.args[1];\nvoid1796 = $n1794.args[2];\nopen1797 = $n1794.args[3];\nsep1798 = $n1794.args[4];\nclose1799 = $n1794.args[5];\ndocs1800 = $n1794.args[6];\n} else {\nvar $l = arguments.length;\nif($l !== 7) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[264],7,$t,false);\n}\nvar n1794 = $n1794;\nvar b1795 = $b1795;\nvar void1796 = $void1796;\nvar open1797 = $open1797;\nvar sep1798 = $sep1798;\nvar close1799 = $close1799;\nvar docs1800 = $docs1800;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1801 = R.mC();\n}\nwhile(!R.isContinuation($ans1801)) {\nswitch($step1792) {\ncase 0: $step1792 = 1;\n$al1802 = L[267];\nR._cA(L[267],$type$Number3,n1794);\nbreak;\ncase 1: $step1792 = 2;\n$al1802 = L[268];\nR._cA(L[268],$type$Number3,b1795);\nbreak;\ncase 2: $step1792 = 3;\n$al1802 = L[269];\nR._cA(L[269],PPrintDoc241,void1796);\nbreak;\ncase 3: $step1792 = 4;\n$al1802 = L[270];\nR._cA(L[270],PPrintDoc241,open1797);\nbreak;\ncase 4: $step1792 = 5;\n$al1802 = L[271];\nR._cA(L[271],PPrintDoc241,sep1798);\nbreak;\ncase 5: $step1792 = 6;\n$al1802 = L[272];\nR._cA(L[272],PPrintDoc241,close1799);\nbreak;\ncase 6: $step1792 = 7;\n$al1802 = L[273];\nR._cA(L[273],List9,docs1800);\nbreak;\ncase 7: // caller optimization;\n$ans1801 = is$empty4.app(docs1800);\nvar anf_if1805 = $ans1801;\n$step1792 = R.checkPyretTrue(anf_if1805)?8:9;\nbreak;\ncase 8: $step1792 = 11;\n$ans1801 = void1796;\nbreak;\ncase 9: $step1792 = 10;\n$al1802 = L[266];\n// omitting isFunction check;\n$ans1801 = separate1791.$var.app(sep1798,docs1800);\nbreak;\ncase 10: var anf_arg547 = $ans1801;\n$step1792 = 11;\n$al1802 = L[265];\n// omitting isFunction check;\n$ans1801 = surround1734.$var.app(n1794,b1795,open1797,anf_arg547,close1799);\nbreak;\ncase 11: ++R.GAS;\nreturn $ans1801;\ndefault: R.ffi.throwSpinnakerError(L[264],$step1792);\n}\n}\nif($step1792 !== 11) {\n$ans1801.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1802,$temp_lam1793,$step1792,[n1794,b1795,void1796,open1797,sep1798,close1799,docs1800],[],$elidedFrames1804);\n}\nreturn $ans1801;\n};\nvar anf_assign1807 = R.mF($temp_lam1793,\"surround-separate\");\nsurround$separate1808.$var = anf_assign1807;\nR.nothing;\nvar $temp_lam1810 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__274($label1811,$open1812,$sep1813,$contents1814,$close1815) {\nvar $step1809 = 0;\nvar $elidedFrames1819 = 0;\nvar $ans1816 = D;\nvar $al1817 = L[274];\nif(R.isAR($label1811)) {\n$step1809 = $label1811.step;\n$al1817 = $label1811.from;\n$ans1816 = $label1811.ans;\n$elidedFrames1819 = $label1811.elidedFrames;\nlabel1811 = $label1811.args[0];\nopen1812 = $label1811.args[1];\nsep1813 = $label1811.args[2];\ncontents1814 = $label1811.args[3];\nclose1815 = $label1811.args[4];\nanf_arg1821 = $label1811.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[274],5,$t,false);\n}\nvar label1811 = $label1811;\nvar open1812 = $open1812;\nvar sep1813 = $sep1813;\nvar contents1814 = $contents1814;\nvar close1815 = $close1815;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1816 = R.mC();\n}\nwhile(!R.isContinuation($ans1816)) {\nswitch($step1809) {\ncase 0: $step1809 = 1;\n$al1817 = L[279];\n// omitting isFunction check;\n$ans1816 = separate1791.$var.app(sep1813,contents1814);\nbreak;\ncase 1: var anf_arg572 = $ans1816;\n// caller optimization;\n$ans1816 = align1606.app(anf_arg572);\nvar anf_arg1820 = $ans1816;\n$step1809 = 2;\n$al1817 = L[278];\n// omitting isFunction check;\n$ans1816 = _plus5.app(open1812,anf_arg1820);\nbreak;\ncase 2: var anf_arg1821 = $ans1816;\n// caller optimization;\n$ans1816 = sbreak1364.$var.app((0));\nvar anf_arg852 = $ans1816;\n$step1809 = 3;\n$al1817 = L[277];\n// omitting isFunction check;\n$ans1816 = _plus5.app(anf_arg852,close1815);\nbreak;\ncase 3: var anf_arg584 = $ans1816;\n// caller optimization;\n$ans1816 = group1387.app(anf_arg584);\nvar anf_arg590 = $ans1816;\n$step1809 = 4;\n$al1817 = L[276];\n// omitting isFunction check;\n$ans1816 = _plus5.app(anf_arg1821,anf_arg590);\nbreak;\ncase 4: var anf_arg595 = $ans1816;\n// caller optimization;\n$ans1816 = align1606.app(anf_arg595);\nvar anf_arg1822 = $ans1816;\n$step1809 = 5;\n$al1817 = L[275];\n// omitting isFunction check;\n$ans1816 = _plus5.app(label1811,anf_arg1822);\nbreak;\ncase 5: var anf_arg849 = $ans1816;\n// caller optimization;\n$ans1816 = group1387.app(anf_arg849);\n$step1809 = 6;\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1816;\ndefault: R.ffi.throwSpinnakerError(L[274],$step1809);\n}\n}\nif($step1809 !== 6) {\n$ans1816.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1817,$temp_lam1810,$step1809,[label1811,open1812,sep1813,contents1814,close1815],[anf_arg1821],$elidedFrames1819);\n}\nreturn $ans1816;\n};\nvar anf_assign1825 = R.mF($temp_lam1810,\"label-align-surround\");\nlabel$align$surround1826.$var = anf_assign1825;\nR.nothing;\n$step45 = 3;\n$al134 = L[280];\nvar $obj1827 = R.builtins;\nvar $field1828 = R.gCFL($obj1827,\"trace-value\",L[280]);\nif(R.isM($field1828)) {\n$ans133 = $field1828.full_meth($obj1827,L[280],R.nothing);\n} else {\nif(typeof($field1828.app) !== \"function\") {\nR.ffi.throwNonFunApp(L[280],$field1828);\n}\n$ans133 = $field1828.app(L[280],R.nothing);\n}\nbreak;\ncase 3: var answer1838 = $ans133;\n$step45 = 4;\n$al134 = L[92];\nvar $obj1829 = R.builtins;\nvar $field1830 = R.gCFL($obj1829,\"current-checker\",L[92]);\nif(R.isM($field1830)) {\n$ans133 = $field1830.full_meth($obj1829);\n} else {\nif(typeof($field1830.app) !== \"function\") {\nR.ffi.throwNonFunApp(L[92],$field1830);\n}\n$ans133 = $field1830.app();\n}\nbreak;\ncase 4: var anf_method_obj1831 = $ans133;\n$step45 = 5;\n$ans133 = R.maybeMethodCall0(anf_method_obj1831,\"results\",L[92]);\nbreak;\ncase 5: var checks1839 = $ans133;\n$step45 = 6;\n$ans133 = R.mO({\"answer\":answer1838,\n\"namespace\":NAMESPACE,\n\"locations\":L,\n\"defined-modules\":{\"VS\":VS15},\n\"defined-values\":{\"braces\":braces1535.$var,\n\"rbrace\":rbrace1531,\n\"soft-surround\":soft$surround1768.$var,\n\"rangle\":rangle1835,\n\"is-hardline\":is$hardline360.$var,\n\"is-align\":is$align377.$var,\n\"infix-break\":infix$break1662.$var,\n\"separate\":separate1791.$var,\n\"str-squote\":str$squote1593,\n\"align\":align1606,\n\"is-if-flat\":is$if$flat372.$var,\n\"rbrack\":rbrack1545,\n\"lbrace\":lbrace1530,\n\"langle\":langle1834,\n\"parens\":parens1521.$var,\n\"squote\":squote1596.$var,\n\"if-flat\":if$flat1360,\n\"number\":number1352.$var,\n\"commabreak\":commabreak1836,\n\"brackets\":brackets1548.$var,\n\"sbreak\":sbreak1364.$var,\n\"lbrack\":lbrack1544,\n\"flow\":flow1488.$var,\n\"is-str\":is$str358.$var,\n\"semi\":semi1366,\n\"infix\":infix1637.$var,\n\"vert\":vert1509.$var,\n\"str\":str1322,\n\"semibreak\":semibreak1837,\n\"is-blank\":is$blank362.$var,\n\"mt-doc\":mt$doc1391,\n\"hang\":hang1609.$var,\n\"prefix\":prefix1622.$var,\n\"surround-separate\":surround$separate1808.$var,\n\"item\":item405.$var,\n\"blank\":blank1359,\n\"concat\":concat1833,\n\"str-dquote\":str$dquote1557,\n\"is-mt-doc\":is$mt$doc146.$var,\n\"comma\":comma1365,\n\"align-spaces\":align$spaces383.$var,\n\"is-item\":is$item403.$var,\n\"is-Item\":is$Item401.$var,\n\"is-concat\":is$concat364.$var,\n\"format\":format255.$var,\n\"dquote\":dquote1585.$var,\n\"nest\":nest1605,\n\"is-PPrintDoc\":is$PPrintDoc355.$var,\n\"is-align-spaces\":is$align$spaces381.$var,\n\"rparen\":rparen1518,\n\"is-nest\":is$nest368.$var,\n\"is-group\":is$group385.$var,\n\"collect-concats\":collect$concats421.$var,\n\"flow-map\":flow$map1394.$var,\n\"lparen\":lparen1517,\n\"surround\":surround1734.$var,\n\"group\":group1387,\n\"label-align-surround\":label$align$surround1826.$var,\n\"hardline\":hardline1361},\n\"defined-types\":{\"Item\":Item1832,\n\"PPrintDoc\":PPrintDoc241},\n\"provide-plus-types\":R.mO({\"values\":R.mO({\"mt-doc\":mt$doc1391,\n\"is-mt-doc\":is$mt$doc146.$var,\n\"str\":str1322,\n\"number\":number1352.$var,\n\"hardline\":hardline1361,\n\"blank\":blank1359,\n\"sbreak\":sbreak1364.$var,\n\"concat\":concat1833,\n\"nest\":nest1605,\n\"if-flat\":if$flat1360,\n\"group\":group1387,\n\"flow\":flow1488.$var,\n\"flow-map\":flow$map1394.$var,\n\"vert\":vert1509.$var,\n\"parens\":parens1521.$var,\n\"braces\":braces1535.$var,\n\"brackets\":brackets1548.$var,\n\"dquote\":dquote1585.$var,\n\"squote\":squote1596.$var,\n\"align\":align1606,\n\"hang\":hang1609.$var,\n\"prefix\":prefix1622.$var,\n\"infix\":infix1637.$var,\n\"infix-break\":infix$break1662.$var,\n\"separate\":separate1791.$var,\n\"surround\":surround1734.$var,\n\"soft-surround\":soft$surround1768.$var,\n\"surround-separate\":surround$separate1808.$var,\n\"label-align-surround\":label$align$surround1826.$var,\n\"lparen\":lparen1517,\n\"rparen\":rparen1518,\n\"lbrace\":lbrace1530,\n\"rbrace\":rbrace1531,\n\"lbrack\":lbrack1544,\n\"rbrack\":rbrack1545,\n\"langle\":langle1834,\n\"rangle\":rangle1835,\n\"comma\":comma1365,\n\"commabreak\":commabreak1836,\n\"semi\":semi1366,\n\"semibreak\":semibreak1837,\n\"is-PPrintDoc\":is$PPrintDoc355.$var,\n\"is-str\":is$str358.$var,\n\"is-hardline\":is$hardline360.$var,\n\"is-blank\":is$blank362.$var,\n\"is-concat\":is$concat364.$var,\n\"is-nest\":is$nest368.$var,\n\"is-if-flat\":is$if$flat372.$var,\n\"is-align\":is$align377.$var,\n\"align-spaces\":align$spaces383.$var,\n\"is-align-spaces\":is$align$spaces381.$var,\n\"is-group\":is$group385.$var,\n\"is-Item\":is$Item401.$var,\n\"item\":item405.$var,\n\"is-item\":is$item403.$var}),\n\"types\":{\"PPrintDoc\":PPrintDoc241,\n\"Item\":Item1832},\n\"modules\":{}}),\n\"checks\":checks1839});\nbreak;\ncase 6: ++R.GAS;\nreturn $ans133;\ndefault: R.ffi.throwSpinnakerError(L[283],$step45);\n}\n}\nif($step45 !== 6) {\n$ans133.stack[R.EXN_STACKHEIGHT++] = R.mAR($al134,$toplevel46,$step45,[],[comma1365,collect$concats421,is$PPrintDoc355,nest1605,is$if$flat372,rparen1518,Item1832,is$group385,prefix1622,concat1833,soft$surround1768,sbreak1364,semi1366,flow1488,str1322,blank1359,number1352,lbrack1544,flow$map1394,align$spaces383,squote1596,is$concat364,lbrace1530,infix$break1662,parens1521,separate1791,str$dquote1557,is$Item401,vert1509,is$align377,hang1609,brackets1548,infix1637,label$align$surround1826,rbrack1545,is$item403,semibreak1837,hardline1361,mt$doc1391,is$hardline360,commabreak1836,if$flat1360,rbrace1531,langle1834,is$nest368,str$squote1593,is$mt$doc146,PPrintDoc241,braces1535,group1387,is$blank362,format255,rangle1835,dquote1585,surround1734,align1606,surround$separate1808,item405,is$str358,lparen1517,is$align$spaces381,answer1838],$elidedFrames136);\n}\nreturn $ans133;\n};\nreturn R.safeCall($toplevel46,function module_load(moduleVal) {\nR.modules[\"$builtin://pprint16\"] = moduleVal;\nreturn moduleVal;\n},\"Evaluating $toplevel\");\n}",
"nativeRequires":[],
"provides":{"modules":{},
"values":{"hardline":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
208,
0,
7147,
208,
35,
7182],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"label-align-surround":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
33,
2,
598,
33,
44,
640],
"definition-bind-site":["builtin://pprint",
283,
0,
9857,
285,
3,
10010],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"label-align-surround",
"typ":"tany"},
"group":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
210,
0,
7249,
210,
65,
7314],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"group",
"typ":"tany"},
"surround":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
30,
2,
504,
30,
20,
522],
"definition-bind-site":["builtin://pprint",
258,
0,
8910,
262,
3,
9160],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"surround",
"typ":"tany"},
"lparen":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
34,
2,
644,
34,
16,
658],
"definition-bind-site":["builtin://pprint",
218,
0,
7674,
218,
17,
7691],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"flow-map":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
17,
2,
260,
17,
20,
278],
"definition-bind-site":["builtin://pprint",
233,
0,
7960,
239,
3,
8127],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"flow-map",
"typ":"tany"},
"is-group":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
64,
2,
1671,
64,
72,
1741],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-group",
"typ":"tany"},
"is-nest":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
60,
2,
1334,
60,
89,
1421],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-nest",
"typ":"tany"},
"rparen":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
35,
2,
662,
35,
16,
676],
"definition-bind-site":["builtin://pprint",
219,
0,
7692,
219,
17,
7709],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-align-spaces":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
63,
2,
1594,
63,
76,
1668],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-align-spaces",
"typ":"tany"},
"is-PPrintDoc":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
54,
0,
966,
92,
3,
2986],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"nest":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
212,
0,
7409,
212,
69,
7478],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"nest",
"typ":"tany"},
"dquote":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
22,
2,
354,
22,
16,
368],
"definition-bind-site":["builtin://pprint",
247,
0,
8437,
247,
53,
8490],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"dquote",
"typ":"tany"},
"is-concat":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
59,
2,
1240,
59,
93,
1331],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-concat",
"typ":"tany"},
"is-Item":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
93,
0,
2987,
95,
3,
3064],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-item":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
94,
2,
3000,
94,
62,
3060],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-item",
"typ":"tany"},
"align-spaces":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
63,
2,
1594,
63,
76,
1668],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"align-spaces",
"typ":"tany"},
"comma":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
42,
2,
788,
42,
14,
800],
"definition-bind-site":["builtin://pprint",
226,
0,
7818,
226,
16,
7834],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-mt-doc":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
55,
2,
984,
55,
57,
1039],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-mt-doc",
"typ":"tany"},
"concat":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
213,
0,
7479,
213,
44,
7523],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"concat",
"typ":"tany"},
"blank":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
214,
0,
7524,
214,
45,
7569],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"blank",
"typ":"tany"},
"item":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
94,
2,
3000,
94,
62,
3060],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"item",
"typ":"tany"},
"surround-separate":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
32,
2,
558,
32,
38,
594],
"definition-bind-site":["builtin://pprint",
277,
0,
9624,
281,
3,
9855],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"surround-separate",
"typ":"tany"},
"prefix":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
26,
2,
420,
26,
16,
434],
"definition-bind-site":["builtin://pprint",
251,
0,
8584,
251,
61,
8645],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"prefix",
"typ":"tany"},
"hang":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
25,
2,
406,
25,
12,
416],
"definition-bind-site":["builtin://pprint",
250,
0,
8546,
250,
37,
8583],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":2,
"name":"hang",
"typ":"tany"},
"mt-doc":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
207,
0,
7114,
207,
32,
7146],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-blank":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
58,
2,
1170,
58,
69,
1237],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-blank",
"typ":"tany"},
"semibreak":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
45,
2,
844,
45,
22,
864],
"definition-bind-site":["builtin://pprint",
231,
0,
7930,
231,
28,
7958],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"str":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
215,
0,
7570,
215,
56,
7626],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"str",
"typ":"tany"},
"vert":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
18,
2,
282,
18,
12,
292],
"definition-bind-site":["builtin://pprint",
241,
0,
8191,
241,
61,
8252],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"vert",
"typ":"tany"},
"infix":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
27,
2,
438,
27,
14,
450],
"definition-bind-site":["builtin://pprint",
252,
0,
8646,
254,
3,
8774],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"infix",
"typ":"tany"},
"semi":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
44,
2,
830,
44,
12,
840],
"definition-bind-site":["builtin://pprint",
227,
0,
7835,
227,
15,
7850],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-str":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
56,
2,
1042,
56,
67,
1107],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-str",
"typ":"tany"},
"flow":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
16,
2,
246,
16,
12,
256],
"definition-bind-site":["builtin://pprint",
240,
0,
8128,
240,
62,
8190],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"flow",
"typ":"tany"},
"lbrack":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
38,
2,
716,
38,
16,
730],
"definition-bind-site":["builtin://pprint",
222,
0,
7746,
222,
17,
7763],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"sbreak":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
11,
2,
160,
11,
16,
174],
"definition-bind-site":["builtin://pprint",
229,
0,
7852,
229,
46,
7898],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":2,
"name":"sbreak",
"typ":"tany"},
"brackets":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
21,
2,
332,
21,
20,
350],
"definition-bind-site":["builtin://pprint",
244,
0,
8345,
244,
47,
8392],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"brackets",
"typ":"tany"},
"commabreak":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
43,
2,
804,
43,
24,
826],
"definition-bind-site":["builtin://pprint",
230,
0,
7899,
230,
30,
7929],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"number":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
8,
2,
104,
8,
16,
118],
"definition-bind-site":["builtin://pprint",
217,
0,
7628,
217,
45,
7673],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"number",
"typ":"tany"},
"if-flat":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
211,
0,
7315,
211,
93,
7408],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"if-flat",
"typ":"tany"},
"squote":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
23,
2,
372,
23,
16,
386],
"definition-bind-site":["builtin://pprint",
248,
0,
8491,
248,
53,
8544],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"squote",
"typ":"tany"},
"parens":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
19,
2,
296,
19,
16,
310],
"definition-bind-site":["builtin://pprint",
242,
0,
8253,
242,
45,
8298],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"parens",
"typ":"tany"},
"langle":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
40,
2,
752,
40,
16,
766],
"definition-bind-site":["builtin://pprint",
224,
0,
7782,
224,
17,
7799],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"lbrace":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
36,
2,
680,
36,
16,
694],
"definition-bind-site":["builtin://pprint",
220,
0,
7710,
220,
17,
7727],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"rbrack":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
39,
2,
734,
39,
16,
748],
"definition-bind-site":["builtin://pprint",
223,
0,
7764,
223,
17,
7781],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-if-flat":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
61,
2,
1424,
61,
96,
1518],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-if-flat",
"typ":"tany"},
"align":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
209,
0,
7183,
209,
65,
7248],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"align",
"typ":"tany"},
"separate":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
29,
2,
482,
29,
20,
500],
"definition-bind-site":["builtin://pprint",
269,
0,
9439,
276,
3,
9623],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"separate",
"typ":"tany"},
"infix-break":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
28,
2,
454,
28,
26,
478],
"definition-bind-site":["builtin://pprint",
255,
0,
8775,
257,
3,
8909],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"infix-break",
"typ":"tany"},
"is-align":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
62,
2,
1521,
62,
72,
1591],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-align",
"typ":"tany"},
"is-hardline":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
57,
2,
1110,
57,
59,
1167],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-hardline",
"typ":"tany"},
"rangle":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
41,
2,
770,
41,
16,
784],
"definition-bind-site":["builtin://pprint",
225,
0,
7800,
225,
17,
7817],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"soft-surround":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
31,
2,
526,
31,
30,
554],
"definition-bind-site":["builtin://pprint",
263,
0,
9161,
267,
3,
9437],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"soft-surround",
"typ":"tany"},
"rbrace":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
37,
2,
698,
37,
16,
712],
"definition-bind-site":["builtin://pprint",
221,
0,
7728,
221,
17,
7745],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"braces":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
20,
2,
314,
20,
16,
328],
"definition-bind-site":["builtin://pprint",
243,
0,
8299,
243,
45,
8344],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"braces",
"typ":"tany"}},
"datatypes":{"Item":["data",{"local-bind-site":["builtin://pprint",
93,
0,
2987,
95,
3,
3064],
"definition-bind-site":["builtin://pprint",
93,
0,
2987,
95,
3,
3064],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},"Item",[],[["item",
[["indent",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["is-flat",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}],["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}]],
{}]],{}],
"PPrintDoc":["data",{"local-bind-site":["builtin://pprint",
54,
0,
966,
92,
3,
2986],
"definition-bind-site":["builtin://pprint",
54,
0,
966,
92,
3,
2986],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},"PPrintDoc",[],[["mt-doc",
[["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["str",
[["s",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"String"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["hardline",
[["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["blank",
[["n",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["concat",
[["fst",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["snd",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["nest",
[["indent",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["if-flat",
[["flat",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["vert",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["align",
[["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["align-spaces",
[["n",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["group",
[["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}]],{"pretty":["arrow",
["tany",
"tany"],
"tany"],
"_output":["arrow",
["tany"],
"tany"],
"_plus":["arrow",
["tany",
"tany"],
"tany"]}]},
"aliases":{"Item":"tany",
"PPrintDoc":"tany"}},
"requires":[{"import-type":"builtin",
"name":"base"},
{"import-type":"builtin",
"name":"global"},
{"import-type":"builtin",
"name":"lists"},
{"import-type":"builtin",
"name":"valueskeleton"}]})