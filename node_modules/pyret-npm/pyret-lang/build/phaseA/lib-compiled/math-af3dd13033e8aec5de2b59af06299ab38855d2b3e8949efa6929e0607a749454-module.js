({"theMap":"{\"version\":3,\"sources\":[\"builtin://math\"],\"names\":[\"builtin://math\",\",13,16,228,13,21,233\",\",13,1,213,13,32,244\",\",19,14,393,19,40,419\",\",20,26,446,20,49,469\",\",18,2,363,21,5,475\",\",28,9,594,28,25,610\",\",25,2,520,33,5,706\",\",39,14,855,39,40,881\",\",40,26,908,40,49,931\",\",38,2,825,41,5,937\",\",48,9,1056,48,25,1072\",\",49,8,1082,49,31,1105\",\",50,14,1120,50,31,1137\",\",51,8,1147,51,34,1173\",\",48,6,1053,52,9,1183\",\",45,2,982,53,5,1189\",\",60,15,1436,60,41,1462\",\",61,27,1490,61,60,1523\",\",59,2,1405,62,5,1529\",\",69,7,1686,69,23,1702\",\",70,38,1742,70,50,1754\",\",70,6,1710,70,57,1761\",\",72,40,1812,72,52,1824\",\",72,6,1778,72,59,1831\",\",66,2,1617,74,4,1844\",\",80,15,2001,80,41,2027\",\",81,27,2055,81,60,2088\",\",79,2,1970,82,5,2094\",\",89,7,2251,89,23,2267\",\",90,38,2307,90,50,2319\",\",90,6,2275,90,57,2326\",\",92,40,2377,92,52,2389\",\",92,6,2343,92,59,2396\",\",86,2,2182,94,4,2409\",\",12,0,174,95,3,2413\"],\"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\",\"file\":\"builtin://math\"}",
"theModule":"function _af3dd13033e8aec5de2b59af06299ab38855d2b3e8949efa6929e0607a749454__88(R,NAMESPACE,M,$E8,$equality30,$$underscore_import3,$$included$131,$O15,$VS8) {\nvar G = R.getFieldLoc;\nvar U = function throw_error(loc,name) {\nR.ffi.throwUninitializedIdMkLoc(loc,name);\n};\nvar M = \"builtin://math\";\nvar D = R.undefined;\nvar L = [[\"builtin://math\",12,0,174,14,3,248],\n[\"builtin://math\",13,6,218,13,25,237],\n[\"builtin://math\",13,16,228,13,21,233],\n[\"builtin://math\",12,30,204,12,36,210],\n[\"builtin://math\",13,1,213,13,32,244],\n[\"builtin://math\",12,13,187,12,25,199],\n[\"builtin://math\",16,0,250,22,3,479],\n[\"builtin://math\",19,14,393,19,40,419],\n[\"builtin://math\",19,4,383,19,40,419],\n[\"builtin://math\",18,2,363,21,5,475],\n[\"builtin://math\",20,26,446,20,36,456],\n[\"builtin://math\",20,26,446,20,49,469],\n[\"builtin://math\",20,4,424,20,49,469],\n[\"builtin://math\",18,9,370,18,13,374],\n[\"builtin://math\",16,13,263,16,17,267],\n[\"builtin://math\",24,0,481,34,3,710],\n[\"builtin://math\",26,4,540,26,22,558],\n[\"builtin://math\",25,2,520,33,5,706],\n[\"builtin://math\",28,9,594,28,25,610],\n[\"builtin://math\",27,4,563,32,9,700],\n[\"builtin://math\",25,9,527,25,13,531],\n[\"builtin://math\",24,30,511,24,34,515],\n[\"builtin://math\",36,0,712,42,3,941],\n[\"builtin://math\",39,14,855,39,40,881],\n[\"builtin://math\",39,4,845,39,40,881],\n[\"builtin://math\",38,2,825,41,5,937],\n[\"builtin://math\",40,26,908,40,36,918],\n[\"builtin://math\",40,26,908,40,49,931],\n[\"builtin://math\",40,4,886,40,49,931],\n[\"builtin://math\",38,9,832,38,13,836],\n[\"builtin://math\",36,13,725,36,17,729],\n[\"builtin://math\",44,0,943,54,3,1193],\n[\"builtin://math\",46,4,1002,46,22,1020],\n[\"builtin://math\",45,2,982,53,5,1189],\n[\"builtin://math\",48,6,1053,52,9,1183],\n[\"builtin://math\",50,14,1120,50,31,1137],\n[\"builtin://math\",48,9,1056,48,25,1072],\n[\"builtin://math\",49,8,1082,49,31,1105],\n[\"builtin://math\",51,8,1147,51,34,1173],\n[\"builtin://math\",47,4,1025,52,9,1183],\n[\"builtin://math\",45,9,989,45,13,993],\n[\"builtin://math\",44,30,973,44,34,977],\n[\"builtin://math\",57,0,1285,63,3,1533],\n[\"builtin://math\",60,15,1436,60,41,1462],\n[\"builtin://math\",60,4,1425,60,41,1462],\n[\"builtin://math\",59,2,1405,62,5,1529],\n[\"builtin://math\",61,27,1490,61,41,1504],\n[\"builtin://math\",61,27,1490,61,60,1523],\n[\"builtin://math\",61,4,1467,61,60,1523],\n[\"builtin://math\",59,9,1412,59,13,1416],\n[\"builtin://math\",57,17,1302,57,21,1306],\n[\"builtin://math\",65,0,1535,75,3,1848],\n[\"builtin://math\",67,2,1635,67,20,1653],\n[\"builtin://math\",66,2,1617,74,4,1844],\n[\"builtin://math\",70,38,1742,70,50,1754],\n[\"builtin://math\",72,40,1812,72,52,1824],\n[\"builtin://math\",69,7,1686,69,23,1702],\n[\"builtin://math\",70,6,1710,70,57,1761],\n[\"builtin://math\",72,6,1778,72,59,1831],\n[\"builtin://math\",68,2,1656,73,7,1839],\n[\"builtin://math\",66,9,1624,66,13,1628],\n[\"builtin://math\",65,40,1575,65,46,1581],\n[\"builtin://math\",65,60,1595,65,66,1601],\n[\"builtin://math\",65,73,1608,65,77,1612],\n[\"builtin://math\",77,0,1850,83,3,2098],\n[\"builtin://math\",80,15,2001,80,41,2027],\n[\"builtin://math\",80,4,1990,80,41,2027],\n[\"builtin://math\",79,2,1970,82,5,2094],\n[\"builtin://math\",81,27,2055,81,41,2069],\n[\"builtin://math\",81,27,2055,81,60,2088],\n[\"builtin://math\",81,4,2032,81,60,2088],\n[\"builtin://math\",79,9,1977,79,13,1981],\n[\"builtin://math\",77,17,1867,77,21,1871],\n[\"builtin://math\",85,0,2100,95,3,2413],\n[\"builtin://math\",87,2,2200,87,20,2218],\n[\"builtin://math\",86,2,2182,94,4,2409],\n[\"builtin://math\",90,38,2307,90,50,2319],\n[\"builtin://math\",92,40,2377,92,52,2389],\n[\"builtin://math\",89,7,2251,89,23,2267],\n[\"builtin://math\",90,6,2275,90,57,2326],\n[\"builtin://math\",92,6,2343,92,59,2396],\n[\"builtin://math\",88,2,2221,93,7,2404],\n[\"builtin://math\",86,9,2189,86,13,2193],\n[\"builtin://math\",85,40,2140,85,46,2146],\n[\"builtin://math\",85,60,2160,85,66,2166],\n[\"builtin://math\",85,73,2173,85,77,2177],\n[\"dummy location\"],\n[\"builtin://math\",12,0,174,95,3,2413],\n[\"builtin://math\",3,0,21,95,3,2413]];\nvar _plus5 = R.getModuleField(\"builtin://global\",\"values\",\"_plus\");\nvar _greaterthan5 = R.getModuleField(\"builtin://global\",\"values\",\"_greaterthan\");\nvar $type$Number3 = R.getModuleField(\"builtin://global\",\"types\",\"Number\");\nvar raise1 = R.getModuleField(\"builtin://global\",\"values\",\"raise\");\nvar _lessthan3 = R.getModuleField(\"builtin://global\",\"values\",\"_lessthan\");\nvar _lessequal4 = R.getModuleField(\"builtin://global\",\"values\",\"_lessequal\");\nvar E1 = $E8;\nvar equality2 = $equality30;\nvar $underscore_import5 = $$underscore_import3;\nvar $included$113 = $$included$131;\nvar O3 = $O15;\nvar VS4 = $VS8;\nvar $cases_dispatch497 = {\"empty\":5,\n\"link\":6};\nvar $cases_dispatch473 = {\"empty\":3,\n\"link\":4};\nvar $cases_dispatch456 = {\"empty\":5,\n\"link\":6};\nvar $cases_dispatch407 = {\"empty\":3,\n\"link\":4};\nvar $cases_dispatch383 = {\"empty\":3,\n\"link\":4};\nvar $cases_dispatch345 = {\"empty\":3,\n\"link\":4};\nvar $cases_dispatch319 = {\"empty\":3,\n\"link\":4};\nvar $cases_dispatch295 = {\"empty\":3,\n\"link\":4};\nvar List8 = R.getModuleField(\"builtin://lists\",\"types\",\"List\");\nvar fold5 = R.getModuleField(\"builtin://lists\",\"values\",\"fold\");\nvar $toplevel61 = function _af3dd13033e8aec5de2b59af06299ab38855d2b3e8949efa6929e0607a749454__88($$resumer11) {\nvar $step60 = 0;\nvar $elidedFrames174 = 0;\nvar $ans171 = D;\nvar $al172 = L[88];\nif(R.isAR($$resumer11)) {\n$step60 = $$resumer11.step;\n$al172 = $$resumer11.from;\n$ans171 = $$resumer11.ans;\n$elidedFrames174 = $$resumer11.elidedFrames;\n$resumer11 = $$resumer11.args[0];\narg$max$helper468 = $$resumer11.vars[0];\narg$min410 = $$resumer11.vars[1];\nsum250 = $$resumer11.vars[2];\nmax348 = $$resumer11.vars[3];\nanswer505 = $$resumer11.vars[4];\nmax$helper340 = $$resumer11.vars[5];\nmin300 = $$resumer11.vars[6];\narg$min$helper400 = $$resumer11.vars[7];\narg$max476 = $$resumer11.vars[8];\nmin$helper283 = $$resumer11.vars[9];\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans171 = R.mC();\n}\nwhile(!R.isContinuation($ans171)) {\nswitch($step60) {\ncase 0: var sum250 = {\"$var\":D};\nvar min300 = {\"$var\":D};\nvar min$helper283 = {\"$var\":D};\nvar max348 = {\"$var\":D};\nvar max$helper340 = {\"$var\":D};\nvar arg$min410 = {\"$var\":D};\nvar arg$min$helper400 = {\"$var\":D};\nvar arg$max476 = {\"$var\":D};\nvar arg$max$helper468 = {\"$var\":D};\nvar $temp_lam204 = function _af3dd13033e8aec5de2b59af06299ab38855d2b3e8949efa6929e0607a749454__0($l205) {\nvar $step203 = 0;\nvar $elidedFrames221 = 0;\nvar $ans218 = D;\nvar $al219 = L[0];\nif(R.isAR($l205)) {\n$step203 = $l205.step;\n$al219 = $l205.from;\n$ans218 = $l205.ans;\n$elidedFrames221 = $l205.elidedFrames;\nl205 = $l205.args[0];\nann_check_temp236 = $l205.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[0],1,$t,false);\n}\nvar l205 = $l205;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans218 = R.mC();\n}\nwhile(!R.isContinuation($ans218)) {\nswitch($step203) {\ncase 0: $step203 = 1;\n$al219 = L[5];\nR._cA(L[5],List8,l205);\nbreak;\ncase 1: var $temp_lam223 = function _af3dd13033e8aec5de2b59af06299ab38855d2b3e8949efa6929e0607a749454__1($a224,$b225) {\nvar $step222 = 0;\nvar $elidedFrames230 = 0;\nvar $ans227 = D;\nvar $al228 = L[1];\nif(R.isAR($a224)) {\n$step222 = $a224.step;\n$al228 = $a224.from;\n$ans227 = $a224.ans;\n$elidedFrames230 = $a224.elidedFrames;\na224 = $a224.args[0];\nb225 = $a224.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[1],2,$t,false);\n}\nvar a224 = $a224;\nvar b225 = $b225;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans227 = R.mC();\n}\nwhile(!R.isContinuation($ans227)) {\nswitch($step222) {\ncase 0: $step222 = 1;\n$al228 = L[2];\n// omitting isFunction check;\n$ans227 = _plus5.app(a224,b225);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans227;\ndefault: R.ffi.throwSpinnakerError(L[1],$step222);\n}\n}\nif($step222 !== 1) {\n$ans227.stack[R.EXN_STACKHEIGHT++] = R.mAR($al228,$temp_lam223,$step222,[a224,b225],[],$elidedFrames230);\n}\nreturn $ans227;\n};\nvar anf_arg227 = R.mF($temp_lam223,\"\");\n$step203 = 2;\n$al219 = L[4];\n// omitting isFunction check;\n$ans218 = fold5.app(anf_arg227,(0),l205);\nbreak;\ncase 2: var ann_check_temp236 = $ans218;\n$step203 = 3;\n$al219 = L[3];\nvar $ann$check238 = R._cA(L[3],$type$Number3,ann_check_temp236);\nif(R.isContinuation($ann$check238)) {\n$ans218 = $ann$check238;\n}\nbreak;\ncase 3: $step203 = 4;\n$ans218 = ann_check_temp236;\nbreak;\ncase 4: ++R.GAS;\nreturn $ans218;\ndefault: R.ffi.throwSpinnakerError(L[0],$step203);\n}\n}\nif($step203 !== 4) {\n$ans218.stack[R.EXN_STACKHEIGHT++] = R.mAR($al219,$temp_lam204,$step203,[l205],[ann_check_temp236],$elidedFrames221);\n}\nreturn $ans218;\n};\nvar anf_assign317 = R.mF($temp_lam204,\"sum\");\nsum250.$var = anf_assign317;\nR.nothing;\nvar $temp_lam270 = function _af3dd13033e8aec5de2b59af06299ab38855d2b3e8949efa6929e0607a749454__6($l271) {\nvar $step269 = 0;\nvar $elidedFrames281 = 0;\nvar $ans278 = D;\nvar $al279 = L[6];\nif(R.isAR($l271)) {\n$step269 = $l271.step;\n$al279 = $l271.from;\n$ans278 = $l271.ans;\n$elidedFrames281 = $l271.elidedFrames;\nl271 = $l271.args[0];\ncases282 = $l271.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[6],1,$t,false);\n}\nvar l271 = $l271;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans278 = R.mC();\n}\nwhile(!R.isContinuation($ans278)) {\nswitch($step269) {\ncase 0: $step269 = 1;\n$al279 = L[14];\nR._cA(L[14],List8,l271);\nbreak;\ncase 1: var cases282 = l271;\n$step269 = 2;\n$al279 = L[13];\nvar $ann$check296 = R._cA(L[13],List8,cases282);\nif(R.isContinuation($ann$check296)) {\n$ans278 = $ann$check296;\n}\nbreak;\ncase 2: $al279 = L[9];\n$step269 = $cases_dispatch295[cases282.$name] || 5;\nbreak;\ncase 3: if(cases282.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[8],false,L[9],cases282.$loc);\n}\n$step269 = 6;\n$al279 = L[7];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al279,raise1);\n}\n$ans278 = raise1.app((\"The list is empty\"));\nbreak;\ncase 4: if(cases282.$arity !== 2) {\nif(cases282.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[12],2,cases282.$arity,L[9],cases282.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[12],true,L[9],cases282.$loc);\n}\n}\nvar $fn294 = cases282.$constructor.$fieldNames;\nvar first285 = R.dF(cases282.dict[$fn294[0]],cases282.$mut_fields_mask[0],false);\nvar rest286 = R.dF(cases282.dict[$fn294[1]],cases282.$mut_fields_mask[1],false);\nvar anf_fun284 = min$helper283.$var === D?U(L[10],\"min-helper\"):min$helper283.$var;\n$step269 = 6;\n$al279 = L[11];\nif(typeof(anf_fun284.app) !== \"function\") {\nR.ffi.throwNonFunApp($al279,anf_fun284);\n}\n$ans278 = anf_fun284.app(first285,rest286);\nbreak;\ncase 5: $ans278 = R.throwNoCasesMatched(L[9],cases282);\n$step269 = 6;\nbreak;\ncase 6: ++R.GAS;\nreturn $ans278;\ndefault: R.ffi.throwSpinnakerError(L[6],$step269);\n}\n}\nif($step269 !== 6) {\n$ans278.stack[R.EXN_STACKHEIGHT++] = R.mAR($al279,$temp_lam270,$step269,[l271],[cases282],$elidedFrames281);\n}\nreturn $ans278;\n};\nvar anf_assign362 = R.mF($temp_lam270,\"min\");\nmin300.$var = anf_assign362;\nR.nothing;\nvar $temp_lam305 = function _af3dd13033e8aec5de2b59af06299ab38855d2b3e8949efa6929e0607a749454__15($curr$min306,$l307) {\nvar $step304 = 0;\nvar $elidedFrames312 = 0;\nvar $ans309 = D;\nvar $al310 = L[15];\nif(R.isAR($curr$min306)) {\n$step304 = $curr$min306.step;\n$al310 = $curr$min306.from;\n$ans309 = $curr$min306.ans;\n$elidedFrames312 = $curr$min306.elidedFrames;\ncurr$min306 = $curr$min306.args[0];\nl307 = $curr$min306.args[1];\ncases313 = $curr$min306.vars[0];\nfirst314 = $curr$min306.vars[1];\nrest315 = $curr$min306.vars[2];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[15],2,$t,false);\n}\nvar curr$min306 = $curr$min306;\nvar l307 = $l307;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans309 = R.mC();\n}\nwhile(!R.isContinuation($ans309)) {\nswitch($step304) {\ncase 0: $step304 = 1;\n$al310 = L[21];\nR._cA(L[21],List8,l307);\nbreak;\ncase 1: var cases313 = l307;\n$step304 = 2;\n$al310 = L[20];\nvar $ann$check321 = R._cA(L[20],List8,cases313);\nif(R.isContinuation($ann$check321)) {\n$ans309 = $ann$check321;\n}\nbreak;\ncase 2: $al310 = L[17];\n$step304 = $cases_dispatch319[cases313.$name] || 8;\nbreak;\ncase 3: if(cases313.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[16],false,L[17],cases313.$loc);\n}\n$step304 = 9;\n$ans309 = curr$min306;\nbreak;\ncase 4: if(cases313.$arity !== 2) {\nif(cases313.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[19],2,cases313.$arity,L[17],cases313.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[19],true,L[17],cases313.$loc);\n}\n}\nvar $fn318 = cases313.$constructor.$fieldNames;\nvar first314 = R.dF(cases313.dict[$fn318[0]],cases313.$mut_fields_mask[0],false);\nvar rest315 = R.dF(cases313.dict[$fn318[1]],cases313.$mut_fields_mask[1],false);\n$step304 = 5;\n$al310 = L[18];\n// omitting isFunction check;\n$ans309 = _lessthan3.app(first314,curr$min306);\nbreak;\ncase 5: var anf_if316 = $ans309;\n$step304 = R.checkPyretTrue(anf_if316)?6:7;\nbreak;\ncase 6: $step304 = 0;\n++$elidedFrames312;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans309 = R.mC();\n}\ncurr$min306 = first314;\nl307 = rest315;\ncontinue;\ncase 7: $step304 = 0;\n++$elidedFrames312;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans309 = R.mC();\n}\ncurr$min306 = curr$min306;\nl307 = rest315;\ncontinue;\ncase 8: $ans309 = R.throwNoCasesMatched(L[17],cases313);\n$step304 = 9;\nbreak;\ncase 9: ++R.GAS;\nreturn $ans309;\ndefault: R.ffi.throwSpinnakerError(L[15],$step304);\n}\n}\nif($step304 !== 9) {\n$ans309.stack[R.EXN_STACKHEIGHT++] = R.mAR($al310,$temp_lam305,$step304,[curr$min306,l307],[cases313,first314,rest315],$elidedFrames312);\n}\nreturn $ans309;\n};\nvar anf_assign366 = R.mF($temp_lam305,\"min-helper\");\nmin$helper283.$var = anf_assign366;\nR.nothing;\nvar $temp_lam331 = function _af3dd13033e8aec5de2b59af06299ab38855d2b3e8949efa6929e0607a749454__22($l332) {\nvar $step330 = 0;\nvar $elidedFrames338 = 0;\nvar $ans335 = D;\nvar $al336 = L[22];\nif(R.isAR($l332)) {\n$step330 = $l332.step;\n$al336 = $l332.from;\n$ans335 = $l332.ans;\n$elidedFrames338 = $l332.elidedFrames;\nl332 = $l332.args[0];\ncases339 = $l332.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[22],1,$t,false);\n}\nvar l332 = $l332;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans335 = R.mC();\n}\nwhile(!R.isContinuation($ans335)) {\nswitch($step330) {\ncase 0: $step330 = 1;\n$al336 = L[30];\nR._cA(L[30],List8,l332);\nbreak;\ncase 1: var cases339 = l332;\n$step330 = 2;\n$al336 = L[29];\nvar $ann$check346 = R._cA(L[29],List8,cases339);\nif(R.isContinuation($ann$check346)) {\n$ans335 = $ann$check346;\n}\nbreak;\ncase 2: $al336 = L[25];\n$step330 = $cases_dispatch345[cases339.$name] || 5;\nbreak;\ncase 3: if(cases339.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[24],false,L[25],cases339.$loc);\n}\n$step330 = 6;\n$al336 = L[23];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al336,raise1);\n}\n$ans335 = raise1.app((\"The list is empty\"));\nbreak;\ncase 4: if(cases339.$arity !== 2) {\nif(cases339.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[28],2,cases339.$arity,L[25],cases339.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[28],true,L[25],cases339.$loc);\n}\n}\nvar $fn344 = cases339.$constructor.$fieldNames;\nvar first341 = R.dF(cases339.dict[$fn344[0]],cases339.$mut_fields_mask[0],false);\nvar rest342 = R.dF(cases339.dict[$fn344[1]],cases339.$mut_fields_mask[1],false);\nvar anf_fun231 = max$helper340.$var === D?U(L[26],\"max-helper\"):max$helper340.$var;\n$step330 = 6;\n$al336 = L[27];\nif(typeof(anf_fun231.app) !== \"function\") {\nR.ffi.throwNonFunApp($al336,anf_fun231);\n}\n$ans335 = anf_fun231.app(first341,rest342);\nbreak;\ncase 5: $ans335 = R.throwNoCasesMatched(L[25],cases339);\n$step330 = 6;\nbreak;\ncase 6: ++R.GAS;\nreturn $ans335;\ndefault: R.ffi.throwSpinnakerError(L[22],$step330);\n}\n}\nif($step330 !== 6) {\n$ans335.stack[R.EXN_STACKHEIGHT++] = R.mAR($al336,$temp_lam331,$step330,[l332],[cases339],$elidedFrames338);\n}\nreturn $ans335;\n};\nvar anf_assign370 = R.mF($temp_lam331,\"max\");\nmax348.$var = anf_assign370;\nR.nothing;\nvar $temp_lam352 = function _af3dd13033e8aec5de2b59af06299ab38855d2b3e8949efa6929e0607a749454__31($curr$max353,$l354) {\nvar $step351 = 0;\nvar $elidedFrames358 = 0;\nvar $ans355 = D;\nvar $al356 = L[31];\nif(R.isAR($curr$max353)) {\n$step351 = $curr$max353.step;\n$al356 = $curr$max353.from;\n$ans355 = $curr$max353.ans;\n$elidedFrames358 = $curr$max353.elidedFrames;\ncurr$max353 = $curr$max353.args[0];\nl354 = $curr$max353.args[1];\ncases359 = $curr$max353.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[31],2,$t,false);\n}\nvar curr$max353 = $curr$max353;\nvar l354 = $l354;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans355 = R.mC();\n}\nwhile(!R.isContinuation($ans355)) {\nswitch($step351) {\ncase 0: $step351 = 1;\n$al356 = L[41];\nR._cA(L[41],List8,l354);\nbreak;\ncase 1: var cases359 = l354;\n$step351 = 2;\n$al356 = L[40];\nvar $ann$check386 = R._cA(L[40],List8,cases359);\nif(R.isContinuation($ann$check386)) {\n$ans355 = $ann$check386;\n}\nbreak;\ncase 2: $al356 = L[33];\n$step351 = $cases_dispatch383[cases359.$name] || 5;\nbreak;\ncase 3: if(cases359.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[32],false,L[33],cases359.$loc);\n}\n$step351 = 6;\n$ans355 = curr$max353;\nbreak;\ncase 4: if(cases359.$arity !== 2) {\nif(cases359.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[39],2,cases359.$arity,L[33],cases359.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[39],true,L[33],cases359.$loc);\n}\n}\n$step351 = 6;\n$al356 = L[39];\nvar $temp_branch365 = function _af3dd13033e8aec5de2b59af06299ab38855d2b3e8949efa6929e0607a749454__33($first360,$rest361) {\nvar $step370 = 0;\nvar $elidedFrames380 = 0;\nvar $ans377 = D;\nvar $al378 = L[36];\nif(R.isAR($first360)) {\n$step370 = $first360.step;\n$al378 = $first360.from;\n$ans377 = $first360.ans;\n$elidedFrames380 = $first360.elidedFrames;\nfirst360 = $first360.args[0];\nrest361 = $first360.args[1];\n} else {\nvar first360 = $first360;\nvar rest361 = $rest361;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans377 = R.mC();\n}\nwhile(!R.isContinuation($ans377)) {\nswitch($step370) {\ncase 0: $step370 = 1;\n$al378 = L[36];\n// omitting isFunction check;\n$ans377 = _greaterthan5.app(first360,curr$max353);\nbreak;\ncase 1: var anf_if364 = $ans377;\n$step370 = R.checkPyretTrue(anf_if364)?2:3;\nbreak;\ncase 2: $step370 = 7;\n$al378 = L[37];\n// omitting isFunction check;\n$ans377 = max$helper340.$var.app(first360,rest361);\nbreak;\ncase 3: $step370 = 4;\n$al378 = L[35];\n// omitting isFunction check;\n$ans377 = _lessequal4.app(first360,curr$max353);\nbreak;\ncase 4: var anf_if363 = $ans377;\n$step370 = R.checkPyretTrue(anf_if363)?5:6;\nbreak;\ncase 5: $step370 = 7;\n$al378 = L[38];\n// omitting isFunction check;\n$ans377 = max$helper340.$var.app(curr$max353,rest361);\nbreak;\ncase 6: $ans377 = R.throwNoBranchesMatched(L[34],(\"if\"));\n$step370 = 7;\nbreak;\ncase 7: ++R.GAS;\nreturn $ans377;\ndefault: R.ffi.throwSpinnakerError(L[36],$step370);\n}\n}\nif($step370 !== 7) {\n$ans377.stack[R.EXN_STACKHEIGHT++] = R.mAR($al378,$temp_branch365,$step370,[first360,rest361],[],$elidedFrames380);\n}\nreturn $ans377;\n};\n$ans355 = cases359.$app_fields($temp_branch365,[false,false]);\nbreak;\ncase 5: $ans355 = R.throwNoCasesMatched(L[33],cases359);\n$step351 = 6;\nbreak;\ncase 6: ++R.GAS;\nreturn $ans355;\ndefault: R.ffi.throwSpinnakerError(L[31],$step351);\n}\n}\nif($step351 !== 6) {\n$ans355.stack[R.EXN_STACKHEIGHT++] = R.mAR($al356,$temp_lam352,$step351,[curr$max353,l354],[cases359],$elidedFrames358);\n}\nreturn $ans355;\n};\nvar anf_assign377 = R.mF($temp_lam352,\"max-helper\");\nmax$helper340.$var = anf_assign377;\nR.nothing;\nvar $temp_lam391 = function _af3dd13033e8aec5de2b59af06299ab38855d2b3e8949efa6929e0607a749454__42($l392) {\nvar $step390 = 0;\nvar $elidedFrames397 = 0;\nvar $ans394 = D;\nvar $al395 = L[42];\nif(R.isAR($l392)) {\n$step390 = $l392.step;\n$al395 = $l392.from;\n$ans394 = $l392.ans;\n$elidedFrames397 = $l392.elidedFrames;\nl392 = $l392.args[0];\ncases399 = $l392.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[42],1,$t,false);\n}\nvar l392 = $l392;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans394 = R.mC();\n}\nwhile(!R.isContinuation($ans394)) {\nswitch($step390) {\ncase 0: $step390 = 1;\n$al395 = L[50];\nR._cA(L[50],List8,l392);\nbreak;\ncase 1: var cases399 = l392;\n$step390 = 2;\n$al395 = L[49];\nvar $ann$check408 = R._cA(L[49],List8,cases399);\nif(R.isContinuation($ann$check408)) {\n$ans394 = $ann$check408;\n}\nbreak;\ncase 2: $al395 = L[45];\n$step390 = $cases_dispatch407[cases399.$name] || 5;\nbreak;\ncase 3: if(cases399.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[44],false,L[45],cases399.$loc);\n}\n$step390 = 6;\n$al395 = L[43];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al395,raise1);\n}\n$ans394 = raise1.app((\"The list is empty\"));\nbreak;\ncase 4: if(cases399.$arity !== 2) {\nif(cases399.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[48],2,cases399.$arity,L[45],cases399.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[48],true,L[45],cases399.$loc);\n}\n}\nvar $fn406 = cases399.$constructor.$fieldNames;\nvar first403 = R.dF(cases399.dict[$fn406[0]],cases399.$mut_fields_mask[0],false);\nvar rest404 = R.dF(cases399.dict[$fn406[1]],cases399.$mut_fields_mask[1],false);\nvar anf_fun402 = arg$min$helper400.$var === D?U(L[46],\"arg-min-helper\"):arg$min$helper400.$var;\n$step390 = 6;\n$al395 = L[47];\nif(typeof(anf_fun402.app) !== \"function\") {\nR.ffi.throwNonFunApp($al395,anf_fun402);\n}\n$ans394 = anf_fun402.app(first403,(0),(1),rest404);\nbreak;\ncase 5: $ans394 = R.throwNoCasesMatched(L[45],cases399);\n$step390 = 6;\nbreak;\ncase 6: ++R.GAS;\nreturn $ans394;\ndefault: R.ffi.throwSpinnakerError(L[42],$step390);\n}\n}\nif($step390 !== 6) {\n$ans394.stack[R.EXN_STACKHEIGHT++] = R.mAR($al395,$temp_lam391,$step390,[l392],[cases399],$elidedFrames397);\n}\nreturn $ans394;\n};\nvar anf_assign116 = R.mF($temp_lam391,\"arg-min\");\narg$min410.$var = anf_assign116;\nR.nothing;\nvar $temp_lam417 = function _af3dd13033e8aec5de2b59af06299ab38855d2b3e8949efa6929e0607a749454__51($curr$min418,$min$ind419,$curr$ind420,$l421) {\nvar $step416 = 0;\nvar $elidedFrames425 = 0;\nvar $ans422 = D;\nvar $al423 = L[51];\nif(R.isAR($curr$min418)) {\n$step416 = $curr$min418.step;\n$al423 = $curr$min418.from;\n$ans422 = $curr$min418.ans;\n$elidedFrames425 = $curr$min418.elidedFrames;\ncurr$min418 = $curr$min418.args[0];\nmin$ind419 = $curr$min418.args[1];\ncurr$ind420 = $curr$min418.args[2];\nl421 = $curr$min418.args[3];\ncases201 = $curr$min418.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[51],4,$t,false);\n}\nvar curr$min418 = $curr$min418;\nvar min$ind419 = $min$ind419;\nvar curr$ind420 = $curr$ind420;\nvar l421 = $l421;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans422 = R.mC();\n}\nwhile(!R.isContinuation($ans422)) {\nswitch($step416) {\ncase 0: $step416 = 1;\n$al423 = L[61];\nR._cA(L[61],$type$Number3,min$ind419);\nbreak;\ncase 1: $step416 = 2;\n$al423 = L[62];\nR._cA(L[62],$type$Number3,curr$ind420);\nbreak;\ncase 2: $step416 = 3;\n$al423 = L[63];\nR._cA(L[63],List8,l421);\nbreak;\ncase 3: var cases201 = l421;\n$step416 = 4;\n$al423 = L[60];\nvar $ann$check457 = R._cA(L[60],List8,cases201);\nif(R.isContinuation($ann$check457)) {\n$ans422 = $ann$check457;\n}\nbreak;\ncase 4: $al423 = L[53];\n$step416 = $cases_dispatch456[cases201.$name] || 7;\nbreak;\ncase 5: if(cases201.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[52],false,L[53],cases201.$loc);\n}\n$step416 = 8;\n$ans422 = min$ind419;\nbreak;\ncase 6: if(cases201.$arity !== 2) {\nif(cases201.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[59],2,cases201.$arity,L[53],cases201.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[59],true,L[53],cases201.$loc);\n}\n}\n$step416 = 8;\n$al423 = L[59];\nvar $temp_branch429 = function _af3dd13033e8aec5de2b59af06299ab38855d2b3e8949efa6929e0607a749454__53($first426,$rest427) {\nvar $step437 = 0;\nvar $elidedFrames448 = 0;\nvar $ans445 = D;\nvar $al446 = L[56];\nif(R.isAR($first426)) {\n$step437 = $first426.step;\n$al446 = $first426.from;\n$ans445 = $first426.ans;\n$elidedFrames448 = $first426.elidedFrames;\nfirst426 = $first426.args[0];\nrest427 = $first426.args[1];\n} else {\nvar first426 = $first426;\nvar rest427 = $rest427;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans445 = R.mC();\n}\nwhile(!R.isContinuation($ans445)) {\nswitch($step437) {\ncase 0: $step437 = 1;\n$al446 = L[56];\n// omitting isFunction check;\n$ans445 = _lessthan3.app(first426,curr$min418);\nbreak;\ncase 1: var anf_if428 = $ans445;\n$step437 = R.checkPyretTrue(anf_if428)?2:4;\nbreak;\ncase 2: $step437 = 3;\n$al446 = L[54];\n// omitting isFunction check;\n$ans445 = _plus5.app(curr$ind420,(1));\nbreak;\ncase 3: var anf_arg241 = $ans445;\n$step437 = 6;\n$al446 = L[57];\n// omitting isFunction check;\n$ans445 = arg$min$helper400.$var.app(first426,curr$ind420,anf_arg241,rest427);\nbreak;\ncase 4: $step437 = 5;\n$al446 = L[55];\n// omitting isFunction check;\n$ans445 = _plus5.app(curr$ind420,(1));\nbreak;\ncase 5: var anf_arg242 = $ans445;\n$step437 = 6;\n$al446 = L[58];\n// omitting isFunction check;\n$ans445 = arg$min$helper400.$var.app(curr$min418,min$ind419,anf_arg242,rest427);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans445;\ndefault: R.ffi.throwSpinnakerError(L[56],$step437);\n}\n}\nif($step437 !== 6) {\n$ans445.stack[R.EXN_STACKHEIGHT++] = R.mAR($al446,$temp_branch429,$step437,[first426,rest427],[],$elidedFrames448);\n}\nreturn $ans445;\n};\n$ans422 = cases201.$app_fields($temp_branch429,[false,false]);\nbreak;\ncase 7: $ans422 = R.throwNoCasesMatched(L[53],cases201);\n$step416 = 8;\nbreak;\ncase 8: ++R.GAS;\nreturn $ans422;\ndefault: R.ffi.throwSpinnakerError(L[51],$step416);\n}\n}\nif($step416 !== 8) {\n$ans422.stack[R.EXN_STACKHEIGHT++] = R.mAR($al423,$temp_lam417,$step416,[curr$min418,min$ind419,curr$ind420,l421],[cases201],$elidedFrames425);\n}\nreturn $ans422;\n};\nvar anf_assign124 = R.mF($temp_lam417,\"arg-min-helper\");\narg$min$helper400.$var = anf_assign124;\nR.nothing;\nvar $temp_lam460 = function _af3dd13033e8aec5de2b59af06299ab38855d2b3e8949efa6929e0607a749454__64($l461) {\nvar $step459 = 0;\nvar $elidedFrames467 = 0;\nvar $ans464 = D;\nvar $al465 = L[64];\nif(R.isAR($l461)) {\n$step459 = $l461.step;\n$al465 = $l461.from;\n$ans464 = $l461.ans;\n$elidedFrames467 = $l461.elidedFrames;\nl461 = $l461.args[0];\ncases220 = $l461.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[64],1,$t,false);\n}\nvar l461 = $l461;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans464 = R.mC();\n}\nwhile(!R.isContinuation($ans464)) {\nswitch($step459) {\ncase 0: $step459 = 1;\n$al465 = L[72];\nR._cA(L[72],List8,l461);\nbreak;\ncase 1: var cases220 = l461;\n$step459 = 2;\n$al465 = L[71];\nvar $ann$check474 = R._cA(L[71],List8,cases220);\nif(R.isContinuation($ann$check474)) {\n$ans464 = $ann$check474;\n}\nbreak;\ncase 2: $al465 = L[67];\n$step459 = $cases_dispatch473[cases220.$name] || 5;\nbreak;\ncase 3: if(cases220.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[66],false,L[67],cases220.$loc);\n}\n$step459 = 6;\n$al465 = L[65];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al465,raise1);\n}\n$ans464 = raise1.app((\"The list is empty\"));\nbreak;\ncase 4: if(cases220.$arity !== 2) {\nif(cases220.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[70],2,cases220.$arity,L[67],cases220.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[70],true,L[67],cases220.$loc);\n}\n}\nvar $fn472 = cases220.$constructor.$fieldNames;\nvar first469 = R.dF(cases220.dict[$fn472[0]],cases220.$mut_fields_mask[0],false);\nvar rest470 = R.dF(cases220.dict[$fn472[1]],cases220.$mut_fields_mask[1],false);\nvar anf_fun243 = arg$max$helper468.$var === D?U(L[68],\"arg-max-helper\"):arg$max$helper468.$var;\n$step459 = 6;\n$al465 = L[69];\nif(typeof(anf_fun243.app) !== \"function\") {\nR.ffi.throwNonFunApp($al465,anf_fun243);\n}\n$ans464 = anf_fun243.app(first469,(0),(1),rest470);\nbreak;\ncase 5: $ans464 = R.throwNoCasesMatched(L[67],cases220);\n$step459 = 6;\nbreak;\ncase 6: ++R.GAS;\nreturn $ans464;\ndefault: R.ffi.throwSpinnakerError(L[64],$step459);\n}\n}\nif($step459 !== 6) {\n$ans464.stack[R.EXN_STACKHEIGHT++] = R.mAR($al465,$temp_lam460,$step459,[l461],[cases220],$elidedFrames467);\n}\nreturn $ans464;\n};\nvar anf_assign129 = R.mF($temp_lam460,\"arg-max\");\narg$max476.$var = anf_assign129;\nR.nothing;\nvar $temp_lam478 = function _af3dd13033e8aec5de2b59af06299ab38855d2b3e8949efa6929e0607a749454__73($curr$max479,$max$ind480,$curr$ind481,$l253) {\nvar $step477 = 0;\nvar $elidedFrames486 = 0;\nvar $ans483 = D;\nvar $al484 = L[73];\nif(R.isAR($curr$max479)) {\n$step477 = $curr$max479.step;\n$al484 = $curr$max479.from;\n$ans483 = $curr$max479.ans;\n$elidedFrames486 = $curr$max479.elidedFrames;\ncurr$max479 = $curr$max479.args[0];\nmax$ind480 = $curr$max479.args[1];\ncurr$ind481 = $curr$max479.args[2];\nl253 = $curr$max479.args[3];\ncases260 = $curr$max479.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[73],4,$t,false);\n}\nvar curr$max479 = $curr$max479;\nvar max$ind480 = $max$ind480;\nvar curr$ind481 = $curr$ind481;\nvar l253 = $l253;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans483 = R.mC();\n}\nwhile(!R.isContinuation($ans483)) {\nswitch($step477) {\ncase 0: $step477 = 1;\n$al484 = L[83];\nR._cA(L[83],$type$Number3,max$ind480);\nbreak;\ncase 1: $step477 = 2;\n$al484 = L[84];\nR._cA(L[84],$type$Number3,curr$ind481);\nbreak;\ncase 2: $step477 = 3;\n$al484 = L[85];\nR._cA(L[85],List8,l253);\nbreak;\ncase 3: var cases260 = l253;\n$step477 = 4;\n$al484 = L[82];\nvar $ann$check498 = R._cA(L[82],List8,cases260);\nif(R.isContinuation($ann$check498)) {\n$ans483 = $ann$check498;\n}\nbreak;\ncase 4: $al484 = L[75];\n$step477 = $cases_dispatch497[cases260.$name] || 7;\nbreak;\ncase 5: if(cases260.$arity !== -1) {\nR.ffi.throwCasesSingletonErrorC(L[74],false,L[75],cases260.$loc);\n}\n$step477 = 8;\n$ans483 = max$ind480;\nbreak;\ncase 6: if(cases260.$arity !== 2) {\nif(cases260.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[81],2,cases260.$arity,L[75],cases260.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[81],true,L[75],cases260.$loc);\n}\n}\n$step477 = 8;\n$al484 = L[81];\nvar $temp_branch490 = function _af3dd13033e8aec5de2b59af06299ab38855d2b3e8949efa6929e0607a749454__75($first487,$rest488) {\nvar $step491 = 0;\nvar $elidedFrames495 = 0;\nvar $ans492 = D;\nvar $al493 = L[78];\nif(R.isAR($first487)) {\n$step491 = $first487.step;\n$al493 = $first487.from;\n$ans492 = $first487.ans;\n$elidedFrames495 = $first487.elidedFrames;\nfirst487 = $first487.args[0];\nrest488 = $first487.args[1];\n} else {\nvar first487 = $first487;\nvar rest488 = $rest488;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans492 = R.mC();\n}\nwhile(!R.isContinuation($ans492)) {\nswitch($step491) {\ncase 0: $step491 = 1;\n$al493 = L[78];\n// omitting isFunction check;\n$ans492 = _greaterthan5.app(first487,curr$max479);\nbreak;\ncase 1: var anf_if489 = $ans492;\n$step491 = R.checkPyretTrue(anf_if489)?2:4;\nbreak;\ncase 2: $step491 = 3;\n$al493 = L[76];\n// omitting isFunction check;\n$ans492 = _plus5.app(curr$ind481,(1));\nbreak;\ncase 3: var anf_arg246 = $ans492;\n$step491 = 6;\n$al493 = L[79];\n// omitting isFunction check;\n$ans492 = arg$max$helper468.$var.app(first487,curr$ind481,anf_arg246,rest488);\nbreak;\ncase 4: $step491 = 5;\n$al493 = L[77];\n// omitting isFunction check;\n$ans492 = _plus5.app(curr$ind481,(1));\nbreak;\ncase 5: var anf_arg247 = $ans492;\n$step491 = 6;\n$al493 = L[80];\n// omitting isFunction check;\n$ans492 = arg$max$helper468.$var.app(curr$max479,max$ind480,anf_arg247,rest488);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans492;\ndefault: R.ffi.throwSpinnakerError(L[78],$step491);\n}\n}\nif($step491 !== 6) {\n$ans492.stack[R.EXN_STACKHEIGHT++] = R.mAR($al493,$temp_branch490,$step491,[first487,rest488],[],$elidedFrames495);\n}\nreturn $ans492;\n};\n$ans483 = cases260.$app_fields($temp_branch490,[false,false]);\nbreak;\ncase 7: $ans483 = R.throwNoCasesMatched(L[75],cases260);\n$step477 = 8;\nbreak;\ncase 8: ++R.GAS;\nreturn $ans483;\ndefault: R.ffi.throwSpinnakerError(L[73],$step477);\n}\n}\nif($step477 !== 8) {\n$ans483.stack[R.EXN_STACKHEIGHT++] = R.mAR($al484,$temp_lam478,$step477,[curr$max479,max$ind480,curr$ind481,l253],[cases260],$elidedFrames486);\n}\nreturn $ans483;\n};\nvar anf_assign137 = R.mF($temp_lam478,\"arg-max-helper\");\narg$max$helper468.$var = anf_assign137;\nR.nothing;\n$step60 = 1;\n$al172 = L[86];\nvar $obj500 = R.builtins;\nvar $field501 = R.gCFL($obj500,\"trace-value\",L[86]);\nif(R.isM($field501)) {\n$ans171 = $field501.full_meth($obj500,L[86],R.nothing);\n} else {\nif(typeof($field501.app) !== \"function\") {\nR.ffi.throwNonFunApp(L[86],$field501);\n}\n$ans171 = $field501.app(L[86],R.nothing);\n}\nbreak;\ncase 1: var answer505 = $ans171;\n$step60 = 2;\n$al172 = L[87];\nvar $obj502 = R.builtins;\nvar $field503 = R.gCFL($obj502,\"current-checker\",L[87]);\nif(R.isM($field503)) {\n$ans171 = $field503.full_meth($obj502);\n} else {\nif(typeof($field503.app) !== \"function\") {\nR.ffi.throwNonFunApp(L[87],$field503);\n}\n$ans171 = $field503.app();\n}\nbreak;\ncase 2: var anf_method_obj504 = $ans171;\n$step60 = 3;\n$ans171 = R.maybeMethodCall0(anf_method_obj504,\"results\",L[87]);\nbreak;\ncase 3: var checks506 = $ans171;\n$step60 = 4;\n$ans171 = R.mO({\"answer\":answer505,\n\"namespace\":NAMESPACE,\n\"locations\":L,\n\"defined-modules\":{\"O\":O3,\n\"E\":E1,\n\"equality\":equality2,\n\"VS\":VS4},\n\"defined-values\":{\"arg-min-helper\":arg$min$helper400.$var,\n\"max\":max348.$var,\n\"min-helper\":min$helper283.$var,\n\"sum\":sum250.$var,\n\"arg-max\":arg$max476.$var,\n\"arg-max-helper\":arg$max$helper468.$var,\n\"min\":min300.$var,\n\"max-helper\":max$helper340.$var,\n\"arg-min\":arg$min410.$var},\n\"defined-types\":{},\n\"provide-plus-types\":R.mO({\"values\":R.mO({\"arg-min-helper\":arg$min$helper400.$var,\n\"max\":max348.$var,\n\"min-helper\":min$helper283.$var,\n\"sum\":sum250.$var,\n\"arg-max\":arg$max476.$var,\n\"arg-max-helper\":arg$max$helper468.$var,\n\"min\":min300.$var,\n\"max-helper\":max$helper340.$var,\n\"arg-min\":arg$min410.$var}),\n\"types\":{},\n\"modules\":{}}),\n\"checks\":checks506});\nbreak;\ncase 4: ++R.GAS;\nreturn $ans171;\ndefault: R.ffi.throwSpinnakerError(L[88],$step60);\n}\n}\nif($step60 !== 4) {\n$ans171.stack[R.EXN_STACKHEIGHT++] = R.mAR($al172,$toplevel61,$step60,[],[arg$max$helper468,arg$min410,sum250,max348,answer505,max$helper340,min300,arg$min$helper400,arg$max476,min$helper283],$elidedFrames174);\n}\nreturn $ans171;\n};\nreturn R.safeCall($toplevel61,function module_load(moduleVal) {\nR.modules[\"$builtin://math5\"] = moduleVal;\nreturn moduleVal;\n},\"Evaluating $toplevel\");\n}",
"nativeRequires":[],
"provides":{"modules":{},
"values":{"arg-min":{"bind":"fun",
"origin":{"local-bind-site":["builtin://math",
3,
0,
21,
3,
9,
30],
"definition-bind-site":["builtin://math",
57,
0,
1285,
63,
3,
1533],
"new-definition":true,
"uri-of-definition":"builtin://math"},
"flatness":false,
"name":"arg-min",
"typ":"tany"},
"max-helper":{"bind":"fun",
"origin":{"local-bind-site":["builtin://math",
3,
0,
21,
3,
9,
30],
"definition-bind-site":["builtin://math",
44,
0,
943,
54,
3,
1193],
"new-definition":true,
"uri-of-definition":"builtin://math"},
"flatness":false,
"name":"max-helper",
"typ":"tany"},
"min":{"bind":"fun",
"origin":{"local-bind-site":["builtin://math",
3,
0,
21,
3,
9,
30],
"definition-bind-site":["builtin://math",
16,
0,
250,
22,
3,
479],
"new-definition":true,
"uri-of-definition":"builtin://math"},
"flatness":false,
"name":"min",
"typ":"tany"},
"arg-max-helper":{"bind":"fun",
"origin":{"local-bind-site":["builtin://math",
3,
0,
21,
3,
9,
30],
"definition-bind-site":["builtin://math",
85,
0,
2100,
95,
3,
2413],
"new-definition":true,
"uri-of-definition":"builtin://math"},
"flatness":false,
"name":"arg-max-helper",
"typ":"tany"},
"arg-max":{"bind":"fun",
"origin":{"local-bind-site":["builtin://math",
3,
0,
21,
3,
9,
30],
"definition-bind-site":["builtin://math",
77,
0,
1850,
83,
3,
2098],
"new-definition":true,
"uri-of-definition":"builtin://math"},
"flatness":false,
"name":"arg-max",
"typ":"tany"},
"sum":{"bind":"fun",
"origin":{"local-bind-site":["builtin://math",
3,
0,
21,
3,
9,
30],
"definition-bind-site":["builtin://math",
12,
0,
174,
14,
3,
248],
"new-definition":true,
"uri-of-definition":"builtin://math"},
"flatness":false,
"name":"sum",
"typ":"tany"},
"min-helper":{"bind":"fun",
"origin":{"local-bind-site":["builtin://math",
3,
0,
21,
3,
9,
30],
"definition-bind-site":["builtin://math",
24,
0,
481,
34,
3,
710],
"new-definition":true,
"uri-of-definition":"builtin://math"},
"flatness":false,
"name":"min-helper",
"typ":"tany"},
"max":{"bind":"fun",
"origin":{"local-bind-site":["builtin://math",
3,
0,
21,
3,
9,
30],
"definition-bind-site":["builtin://math",
36,
0,
712,
42,
3,
941],
"new-definition":true,
"uri-of-definition":"builtin://math"},
"flatness":false,
"name":"max",
"typ":"tany"},
"arg-min-helper":{"bind":"fun",
"origin":{"local-bind-site":["builtin://math",
3,
0,
21,
3,
9,
30],
"definition-bind-site":["builtin://math",
65,
0,
1535,
75,
3,
1848],
"new-definition":true,
"uri-of-definition":"builtin://math"},
"flatness":false,
"name":"arg-min-helper",
"typ":"tany"}},
"datatypes":{},
"aliases":{}},
"requires":[{"import-type":"builtin",
"name":"either"},
{"import-type":"builtin",
"name":"equality"},
{"import-type":"builtin",
"name":"global"},
{"import-type":"builtin",
"name":"lists"},
{"import-type":"builtin",
"name":"option"},
{"import-type":"builtin",
"name":"valueskeleton"}]})