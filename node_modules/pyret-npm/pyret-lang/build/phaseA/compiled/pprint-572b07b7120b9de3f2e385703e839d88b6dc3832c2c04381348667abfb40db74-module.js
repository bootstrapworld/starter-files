({"theMap":"{\"version\":3,\"sources\":[\"builtin://pprint\"],\"names\":[\"builtin://pprint\",\",67,7,1787,67,22,1802\",\",68,12,1822,68,28,1838\",\",70,9,1864,70,26,1881\",\",70,30,1885,70,48,1903\",\",70,50,1905,70,78,1933\",\",71,32,1966,71,47,1981\",\",71,50,1984,71,66,2000\",\",71,32,1966,71,66,2000\",\",71,12,1946,71,74,2008\",\",77,24,2109,77,45,2130\",\",78,49,2180,78,63,2194\",\",78,44,2175,78,71,2202\",\",78,24,2155,78,72,2203\",\",79,26,2230,79,43,2247\",\",80,53,2301,80,67,2315\",\",80,48,2296,80,75,2323\",\",80,26,2274,80,76,2324\",\",81,62,2387,81,78,2403\",\",81,85,2410,81,101,2426\",\",81,80,2405,81,109,2434\",\",81,57,2382,81,110,2435\",\",81,34,2359,81,111,2436\",\",82,59,2496,82,78,2515\",\",82,85,2522,82,99,2536\",\",82,80,2517,82,107,2544\",\",82,54,2491,82,108,2545\",\",82,33,2470,82,109,2546\",\",83,65,2612,83,82,2629\",\",83,89,2636,83,106,2653\",\",83,84,2631,83,114,2661\",\",83,60,2607,83,115,2662\",\",83,37,2584,83,116,2663\",\",84,53,2717,84,67,2731\",\",84,48,2712,84,75,2739\",\",84,26,2690,84,76,2740\",\",85,53,2794,85,67,2808\",\",85,48,2789,85,75,2816\",\",85,26,2767,85,76,2817\",\",86,66,2884,86,80,2898\",\",86,61,2879,86,88,2906\",\",86,33,2851,86,89,2907\",\",76,4,2062,87,7,2915\",\",90,4,2957,90,23,2976\",\",54,0,966,92,3,2986\",\",55,2,984,55,57,1039\",\",56,2,1042,56,67,1107\",\",57,2,1110,57,59,1167\",\",58,2,1170,58,69,1237\",\",59,2,1240,59,93,1331\",\",60,2,1334,60,89,1421\",\",61,2,1424,61,96,1518\",\",62,2,1521,62,72,1591\",\",63,2,1594,63,76,1668\",\",64,2,1671,64,72,1741\",\",93,0,2987,95,3,3064\",\",94,2,3000,94,62,3060\",\",128,5,4378,128,18,4391\",\",129,26,4419,129,32,4425\",\",129,56,4449,129,62,4455\",\",129,34,4427,129,69,4462\",\",131,9,4481,131,23,4495\",\",131,4,4476,131,30,4502\",\",138,16,4636,138,33,4653\",\",141,14,4696,141,35,4717\",\",141,4,4686,141,36,4718\",\",144,14,4768,144,36,4790\",\",145,21,4812,145,42,4833\",\",145,16,4807,145,50,4841\",\",148,14,4888,148,36,4910\",\",151,8,5019,151,19,5030\",\",150,10,4971,152,9,5040\",\",153,6,5047,153,20,5061\",\",149,4,4915,154,7,5069\",\",157,7,5148,157,22,5163\",\",159,14,5197,159,25,5208\",\",160,10,5219,160,22,5231\",\",161,10,5242,161,23,5255\",\",162,23,5279,162,30,5286\",\",163,42,5336,163,52,5346\",\",164,74,5422,164,81,5429\",\",164,83,5431,164,93,5441\",\",164,52,5400,164,94,5442\",\",166,10,5489,166,22,5501\",\",167,18,5520,167,37,5539\",\",167,39,5541,167,49,5551\",\",169,10,5591,169,24,5605\",\",170,18,5624,170,28,5634\",\",170,30,5636,170,40,5646\",\",171,49,5697,171,67,5715\",\",171,69,5717,171,79,5727\",\",171,44,5692,171,80,5728\",\",172,56,5786,172,61,5791\",\",172,51,5781,172,68,5798\",\",172,70,5800,172,80,5810\",\",172,46,5776,172,81,5811\",\",175,12,5875,175,55,5918\",\",177,12,5947,177,27,5962\",\",178,23,5986,178,33,5996\",\",181,31,6082,181,68,6119\",\",181,70,6121,181,80,6131\",\",181,26,6077,181,81,6132\",\",184,28,6219,184,38,6229\",\",186,12,6259,186,26,6273\",\",187,20,6294,187,30,6304\",\",187,32,6306,187,42,6316\",\",190,37,6417,190,53,6433\",\",190,55,6435,190,65,6445\",\",190,32,6412,190,66,6446\",\",190,16,6396,190,67,6447\",\",191,53,6501,191,70,6518\",\",191,72,6520,191,82,6530\",\",191,48,6496,191,83,6531\",\",191,32,6480,191,84,6532\",\",192,19,6552,192,33,6566\",\",192,18,6551,192,48,6581\",\",196,33,6861,196,49,6877\",\",196,51,6879,196,61,6889\",\",196,28,6856,196,62,6890\",\",196,12,6840,196,63,6891\",\",198,33,6941,198,50,6958\",\",198,52,6960,198,62,6970\",\",198,28,6936,198,63,6971\",\",198,12,6920,198,64,6972\",\",162,6,5262,200,9,6996\",\",203,14,7025,203,18,7029\",\",203,46,7057,203,60,7071\",\",203,62,7073,203,78,7089\",\",203,35,7046,203,79,7090\",\",203,20,7031,203,80,7091\",\",203,2,7013,203,82,7093\",\",204,2,7096,204,14,7108\",\",207,16,7130,207,32,7146\",\",208,18,7165,208,35,7182\",\",209,32,7215,209,44,7227\",\",209,46,7229,209,60,7243\",\",209,23,7206,209,61,7244\",\",210,32,7281,210,44,7293\",\",210,46,7295,210,60,7309\",\",210,23,7272,210,61,7310\",\",211,54,7369,211,69,7384\",\",211,71,7386,211,88,7403\",\",211,34,7349,211,89,7404\",\",212,36,7445,212,48,7457\",\",212,50,7459,212,64,7473\",\",212,25,7434,212,65,7474\",\",213,31,7510,213,40,7519\",\",214,23,7547,214,41,7565\",\",215,28,7598,215,44,7614\",\",215,21,7591,215,52,7622\",\",217,29,7657,217,40,7668\",\",217,25,7653,217,41,7669\",\",218,9,7683,218,17,7691\",\",219,9,7701,219,17,7709\",\",220,9,7719,220,17,7727\",\",221,9,7737,221,17,7745\",\",222,9,7755,222,17,7763\",\",223,9,7773,223,17,7781\",\",224,9,7791,224,17,7799\",\",225,9,7809,225,17,7817\",\",226,8,7826,226,16,7834\",\",227,7,7842,227,15,7850\",\",229,23,7875,229,31,7883\",\",229,15,7867,229,42,7894\",\",230,21,7920,230,30,7929\",\",230,13,7912,230,30,7929\",\",231,19,7949,231,28,7958\",\",231,12,7942,231,28,7958\",\",235,7,8049,235,21,8063\",\",235,23,8065,235,30,8072\",\",236,28,8101,236,35,8108\",\",236,22,8095,236,35,8108\",\",236,16,8089,236,36,8109\",\",236,10,8083,236,36,8109\",\",234,2,7991,238,5,8123\",\",240,26,8154,240,35,8163\",\",240,17,8145,240,58,8186\",\",241,17,8208,241,57,8248\",\",242,21,8274,242,31,8284\",\",242,21,8274,242,40,8293\",\",242,15,8268,242,41,8294\",\",243,21,8320,243,31,8330\",\",243,21,8320,243,40,8339\",\",243,15,8314,243,41,8340\",\",244,23,8368,244,33,8378\",\",244,23,8368,244,42,8387\",\",244,17,8362,244,43,8388\",\",245,13,8406,245,21,8414\",\",246,13,8428,246,21,8436\",\",247,21,8458,247,35,8472\",\",247,21,8458,247,48,8485\",\",247,15,8452,247,49,8486\",\",248,21,8512,248,35,8526\",\",248,21,8512,248,48,8539\",\",248,15,8506,248,49,8540\",\",250,22,8568,250,32,8578\",\",250,16,8562,250,33,8579\",\",251,42,8626,251,51,8635\",\",251,42,8626,251,55,8639\",\",251,34,8618,251,56,8640\",\",251,30,8614,251,56,8640\",\",251,24,8608,251,57,8641\",\",253,20,8752,253,28,8760\",\",253,16,8748,253,28,8760\",\",253,16,8748,253,33,8765\",\",253,2,8734,253,38,8770\",\",256,24,8891,256,32,8899\",\",256,19,8886,256,32,8899\",\",256,19,8886,256,36,8903\",\",256,2,8869,256,38,8905\",\",259,5,9017,259,21,9033\",\",259,44,9056,259,53,9065\",\",259,44,9056,259,64,9076\",\",259,36,9048,259,65,9077\",\",259,29,9041,259,65,9077\",\",259,23,9035,259,66,9078\",\",260,29,9108,260,38,9117\",\",260,29,9108,260,49,9128\",\",260,21,9100,260,50,9129\",\",260,14,9093,260,50,9129\",\",260,53,9132,260,62,9141\",\",260,14,9093,260,62,9141\",\",260,14,9093,260,70,9149\",\",260,8,9087,260,71,9150\",\",264,5,9273,264,21,9289\",\",264,50,9318,264,59,9327\",\",264,50,9318,264,70,9338\",\",264,44,9312,264,71,9339\",\",264,36,9304,264,72,9340\",\",264,29,9297,264,72,9340\",\",264,23,9291,264,73,9341\",\",265,35,9377,265,44,9386\",\",265,35,9377,265,55,9397\",\",265,29,9371,265,56,9398\",\",265,21,9363,265,57,9399\",\",265,14,9356,265,57,9399\",\",265,66,9408,265,75,9417\",\",265,66,9408,265,83,9425\",\",265,60,9402,265,84,9426\",\",265,14,9356,265,84,9426\",\",265,8,9350,265,85,9427\",\",271,7,9534,271,19,9546\",\",272,12,9564,272,26,9578\",\",273,10,9592,273,19,9601\",\",273,10,9592,273,23,9605\",\",270,2,9487,275,5,9619\",\",278,5,9768,278,19,9782\",\",279,29,9818,279,48,9837\",\",279,8,9797,279,56,9845\",\",284,35,9953,284,58,9976\",\",284,29,9947,284,59,9977\",\",284,22,9940,284,59,9977\",\",284,68,9986,284,77,9995\",\",284,68,9986,284,85,10003\",\",284,62,9980,284,86,10004\",\",284,22,9940,284,86,10004\",\",284,16,9934,284,87,10005\",\",284,8,9926,284,87,10005\",\",284,2,9920,284,88,10006\"],\"mappingskEMC,uCAlEND;AAAAA;AAkEMC,iCAlEND;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAmEWE,uCAnEXF;AAAAA;AAmEWE,kCAnEXF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,gBAqEQG,8BArERH;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iBAqE6BI,gCArE7BJ;AAqE6BI,wCArE7BJ;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAqEiDK,uCArEjDL;AAAAA;AAqEiDK,qDArEjDL;AAAAA;AAAAA;AAAAA;AAAAA,iBAsE+BM,4BAtE/BN;AAAAA;AAAAA,iBAsEiDO,6BAtEjDP;AAAAA;AAAAA;AAAAA;AAsE+BQ,2CAtE/BR;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAsEWS,uCAtEXT;AAAAA;AAsEWS,6DAtEXT;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA4EuBU,4DA5EvBV;AAAAA;AA4EuBU,2DA5EvBV;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA6EgDW,8DA7EhDX;AAAAA;AA6EgDW,qDA7EhDX;AAAAA;AAAAA;AAAAA;AA6E2CY,uCA7E3CZ;AAAAA;AAAAA;AAAAA;AAAAA;AA6EuBa,+DA7EvBb;AAAAA;AA6EuBa,oEA7EvBb;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA8EyBc,4DA9EzBd;AAAAA;AA8EyBc,uDA9EzBd;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA+EoDe,8DA/EpDf;AAAAA;AA+EoDe,qDA/EpDf;AAAAA;AAAAA;AAAAA;AA+E+CgB,uCA/E/ChB;AAAAA;AAAAA;AAAAA;AAAAA;AA+EyBiB,+DA/EzBjB;AAAAA;AA+EyBiB,sEA/EzBjB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAgF6DkB,8DAhF7DlB;AAAAA;AAgF6DkB,uDAhF7DlB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAgFoFmB,8DAhFpFnB;AAAAA;AAgFoFmB,uDAhFpFnB;AAAAA;AAAAA;AAAAA;AAgF+EoB,uCAhF/EpB;AAAAA;AAAAA;AAgFwDqB,2CAhFxDrB;AAAAA;AAAAA;AAAAA;AAAAA;AAgFiCsB,+DAhFjCtB;AAAAA;AAgFiCsB,uEAhFjCtB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAiF0DuB,8DAjF1DvB;AAAAA;AAiF0DuB,0DAjF1DvB;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAiFoFwB,8DAjFpFxB;AAAAA;AAiFoFwB,qDAjFpFxB;AAAAA;AAAAA;AAAAA;AAiF+EyB,uCAjF/EzB;AAAAA;AAAAA;AAiFqD0B,2CAjFrD1B;AAAAA;AAAAA;AAAAA;AAAAA;AAiFgC2B,+DAjFhC3B;AAAAA;AAiFgC2B,qEAjFhC3B;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAkFgE4B,8DAlFhE5B;AAAAA;AAkFgE4B,wDAlFhE5B;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAkFwF6B,8DAlFxF7B;AAAAA;AAkFwF6B,wDAlFxF7B;AAAAA;AAAAA;AAAAA;AAkFmF8B,uCAlFnF9B;AAAAA;AAAAA;AAkF2D+B,2CAlF3D/B;AAAAA;AAAAA;AAAAA;AAAAA;AAkFoCgC,+DAlFpChC;AAAAA;AAkFoCgC,uEAlFpChC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAmFoDiC,8DAnFpDjC;AAAAA;AAmFoDiC,qDAnFpDjC;AAAAA;AAAAA;AAAAA;AAmF+CkC,uCAnF/ClC;AAAAA;AAAAA;AAAAA;AAAAA;AAmFyBmC,+DAnFzBnC;AAAAA;AAmFyBmC,sEAnFzBnC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAoFoDoC,8DApFpDpC;AAAAA;AAoFoDoC,qDApFpDpC;AAAAA;AAAAA;AAAAA;AAoF+CqC,uCApF/CrC;AAAAA;AAAAA;AAAAA;AAAAA;AAoFyBsC,+DApFzBtC;AAAAA;AAoFyBsC,sEApFzBtC;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAqFiEuC,8DArFjEvC;AAAAA;AAqFiEuC,qDArFjEvC;AAAAA;AAAAA;AAAAA;AAqF4DwC,uCArF5DxC;AAAAA;AAAAA;AAAAA;AAAAA;AAqFgCyC,+DArFhCzC;AAAAA;AAqFgCyC,4EArFhCzC;AAAAA;AAAAA,SA2EG0C,+CA3EH1C;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAyFG2C,uCAzFH3C;AAAAA;AAyFG2C,0CAzoBAqDD4C,sCArDC5C;AAAAA;AAAAA;AAAAA;AAAAA,oBAsDC6C,sCAtDD7C;AAAAA;AAAAA;AAAAA;AAAAA,oBAsDC6C,mCAtDD7C;AAAAA;AAAAA;AAAAA;AAAAA,oBAuDC8C,mCAvDD9C;AAAAA;AAAAA;AAAAA;AAAAA,oBAuDC8C,gCAvDD9C;AAAAA;AAAAA;AAAAA;AAAAA,oBAwDC+C,wCAxDD/C;AAAAA;AAAAA;AAAAA;AAAAA,oBAwDC+C,qCAxDD/C;AAAAA;AAAAA;AAAAA;AAAAA,oBAyDCgD,qCAzDDhD;AAAAA;AAAAA;AAAAA;AAAAA,oBAyDCgD,kCAzDDhD;AAAAA;AAAAA;AAAAA;AAAAA,oBA0DCiD,sCA1DDjD;AAAAA;AAAAA;AAAAA;AAAAA,oBA0DCiD,mCA1DDjD;AAAAA;AAAAA;AAAAA;AAAAA,oBA2DCkD,oCA3DDlD;AAAAA;AAAAA;AAAAA;AAAAA,oBA2DCkD,iCA3DDlD;AAAAA;AAAAA;AAAAA;AAAAA,oBA4DCmD,uCA5DDnD;AAAAA;AAAAA;AAAAA;AAAAA,oBA4DCmD,oCA5DDnD;AAAAA;AAAAA;AAAAA;AAAAA,oBA6DCoD,qCA7DDpD;AAAAA;AAAAA;AAAAA;AAAAA,oBA6DCoD,kCA7DDpD;AAAAA;AAAAA;AAAAA;AAAAA,oBA8DCqD,4CA9DDrD;AAAAA;AAAAA;AAAAA;AAAAA,oBA8DCqD,yCA9DDrD;AAAAA;AAAAA;AAAAA;AAAAA,oBA+DCsD,qCA/DDtD;AAAAA;AAAAA;AAAAA;AAAAA,oBA+DCsD,kCA/DDtD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,oBA4FDuD,4BA5FCvD;AAAAA;AAAAA;AAAAA;AAAAA,oBA6FCwD,+BA7FDxD;AAAAA;AAAAA;AAAAA;AAAAA,oBA6FCwD,4BA7FDxD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA+HIyD,sCA/HJzD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iBAgIyB0D,oBAhIzB1D;AAAAA;AAAAA,iBAgIuD2D,qBAhIvD3D;AAAAA;AAAAA;AAAAA;AAgIiC4D,mEAhIjC5D;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAkIQ6D,2CAlIR7D;AAAAA;AAAAA;AAkIG8D,wCAlIH9D;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAyIe+D,qCAzIf/D;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA4IagE,wCA5IbhE;AAAAA;AAAAA;AA4IGiE,2CA5IHjE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA+IakE,2CA/IblE;AAAAA;AAAAA;AAAAA;AAAAA;AAgJoBmE,wCAhJpBnE;AAAAA;AAAAA;AAgJeoE,uCAhJfpE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAmJaqE,2CAnJbrE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAsJOsE,qCAtJPtE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAqJSuE,4CArJTvE;AAAAA;AAAAA;AAAAA;AAwJKwE,mCAxJLxE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAoJGyE,kDApJHzE;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA4JM0E,mCA5JN1E;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,gBA8Ja2E,2BA9Jb3E;AAAAA;AAAAA,YA+JS4E,4BA/JT5E;AAAAA;AAAAA,YAgKS6E,6BAhKT7E;AAAAA;AAAAA,gBAiKsB8E,uBAjKtB9E;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iBAkKyC+E,0BAlKzC/E;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iBAmKyEgF,uBAnKzEhF;AAAAA;AAAAA,iBAmKkFiF,0BAnKlFjF;AAAAA;AAAAA;AAAAA;AAmKmDkF,yEAnKnDlF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAqKSmF,uCArKTnF;AAAAA;AAAAA;AAAAA;AAsKiBoF,gDAtKjBpF;AAAAA;AAAAA;AAAAA;AAAAA,iBAsKsCqF,0BAtKtCrF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAwKSsF,yCAxKTtF;AAAAA;AAAAA;AAAAA;AAyKiBuF,uCAzKjBvF;AAAAA;AAAAA;AAAAA;AAAAA,kBAyK6BwF,0BAzK7BxF;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA0KgDyF,mDA1KhDzF;AAAAA;AAAAA;AAAAA,iBA0KoE0F,0BA1KpE1F;AAAAA;AA0K2C2F,4CA1K3C3F;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA2KuD4F,kCA3KvD5F;AAAAA;AAAAA;AAAAA;AA2KkD6F,mDA3KlD7F;AAAAA;AAAAA;AAAAA,iBA2KqE8F,0BA3KrE9F;AAAAA;AA2K6C+F,6CA3K7C/F;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA8KWgG,oCA9KXhG;AAAAA;AA8KWgG,6DA9KXhG;AAAAA;AAAAA;AAgLWiG,0CAhLXjG;AAAAA;AAAAA,kBAiLsBkG,0BAjLtBlG;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAoL8BmG,mDApL9BnG;AAAAA;AAAAA;AAAAA,iBAoLqEoG,0BApLrEpG;AAAAA;AAoLyBqG,4CApLzBrG;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iBAuL2BsG,0BAvL3BtG;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAyLWuG,yCAzLXvG;AAAAA;AAAAA;AAAAA;AA0LmBwG,uCA1LnBxG;AAAAA;AAAAA;AAAAA;AAAAA,iBA0L+ByG,0BA1L/BzG;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA6LoC0G,+CA7LpC1G;AAAAA;AAAAA;AAAAA,iBA6LsD2G,0BA7LtD3G;AAAAA;AA6L+B4G,4CA7L/B5G;AAAAA;AAAAA;AAAAA;AAAAA;AA6Le6G,sDA7Lf7G;AAAAA;AAAAA;AAAAA;AAAAA;AA8LoD8G,gDA9LpD9G;AAAAA;AAAAA;AAAAA,iBA8LuE+G,0BA9LvE/G;AAAAA;AA8L+CgH,6CA9L/ChH;AAAAA;AAAAA;AAAAA;AAAAA;AA8L+BiH,sDA9L/BjH;AAAAA;AAAAA;AAAAA;AAAAA;AA+LkBkH,4CA/LlBlH;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA+LiBmH,wDA/LjBnH;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAmMgCoH,+CAnMhCpH;AAAAA;AAAAA;AAAAA,gBAmMkDqH,0BAnMlDrH;AAAAA;AAmM2BsH,2CAnM3BtH;AAAAA;AAAAA;AAAAA;AAAAA;AAmMWuH,qDAnMXvH;AAAAA;AAAAA;AAqMgCwH,gDArMhCxH;AAAAA;AAAAA;AAAAA,iBAqMmDyH,0BArMnDzH;AAAAA;AAqM2B0H,4CArM3B1H;AAAAA;AAAAA;AAAAA;AAAAA;AAqMW2H,sDArMX3H;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,SAiKK4H,kDAjKL5H;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA0Ma6H,oDA1Mb7H;AAAAA;AAAAA;AAAAA,iBA0M6C8H,6BA1M7C9H;AAAAA;AAAAA,iBA0M6D+H,+BA1M7D/H;AAAAA;AA0MkCgI,yDA1MlChI;AAAAA;AAAAA;AA0MmBiI,kDA1MnBjI;AAAAA;AAAAA;AAAAA;AAAAA;AA0Ma6H,uCA1Mb7H;AAAAA;AA0Ma6H,oCA1Mb7H;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA0MCkI,8CA1MDlI;AAAAA;AAAAA;AAAAA;AAAAA;AA2MCmI,mCA3MDnI;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA8MeoI,yCA9MfpI;AAAAA;AAAAA;AA+MiBqI,0CA/MjBrI;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iBAgN+BsI,4BAhN/BtI;AAAAA;AAAAA,iBAgN6CuI,8BAhN7CvI;AAAAA;AAgNsBwI,yDAhNtBxI;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iBAiN+ByI,4BAjN/BzI;AAAAA;AAAAA,iBAiN6C0I,8BAjN7C1I;AAAAA;AAiNsB2I,yDAjNtB3I;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iBAkNqD4I,+BAlNrD5I;AAAAA;AAAAA,iBAkNsE6I,iCAlNtE7I;AAAAA;AAkNiC8I,uEAlNjC9I;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,iBAmNmC+I,4BAnNnC/I;AAAAA;AAAAA,iBAmNiDgJ,8BAnNjDhJ;AAAAA;AAmNwBiJ,8DAnNxBjJ;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAoN8BkJ,sCApN9BlJ;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAqNsBmJ,iDArNtBnJ;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAsN2BoJ,oCAtN3BpJ;AAAAA;AAAAA;AAsNoBqJ,oDAtNpBrJ;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAwN4BsJ,uCAxN5BtJ;AAAAA;AAwN4BsJ,+BAxN5BtJ;AAAAA;AAAAA;AAAAA;AAwNwBuJ,kCAxNxBvJ;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAyNQwJ,4BAzNRxJ;AAAAA;AAAAA;AA0NQyJ,4BA1NRzJ;AAAAA;AAAAA;AA2NQ0J,4BA3NR1J;AAAAA;AAAAA;AA4NQ2J,4BA5NR3J;AAAAA;AAAAA;AA6NQ4J,4BA7NR5J;AAAAA;AAAAA;AA8NQ6J,4BA9NR7J;AAAAA;AAAAA;AA+NQ8J,4BA/NR9J;AAAAA;AAAAA;AAgOQ+J,4BAhOR/J;AAAAA;AAAAA;AAiOOgK,4BAjOPhK;AAAAA;AAAAA;AAkOMiK,4BAlONjK;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAoOsBkK,+BApOtBlK;AAAAA;AAAAA;AAoOcmK,mDApOdnK;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAqOoBoK,kCArOpBpK;AAAAA;AAAAA;AAAAA;AAAAA;AAqOYqK,2CArOZrK;AAAAA;AAAAA;AAAAA;AAsOkBsK,kCAtOlBtK;AAAAA;AAAAA;AAAAA;AAAAA;AAsOWuK,0CAtOXvK;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA0OMwK,yCA1ONxK;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA0OsByK,mCA1OtBzK;AAAAA;AA0OsByK,8BA1OtBzK;AAAAA;AAAAA;AAAAA;AAAAA;AA2O2B0K,mCA3O3B1K;AAAAA;AA2O2B0K,8BA3O3B1K;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA2OqB2K,yCA3OrB3K;AAAAA;AAAAA;AAAAA;AA2Oe4K,oCA3Of5K;AAAAA;AAAAA;AAAAA;AAAAA;AA2OS6K,yCA3OT7K;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAyOC8K,qDAzOD9K;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA+OyB+K,mCA/OzB/K;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA+OgBgL,iEA/OhBhL;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAgPgBiL,mEAhPhBjL;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAiPoBkL,uCAjPpBlL;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAiPoBmL,6CAjPpBnL;AAAAA;AAAAA;AAAAA;AAiPcoL,oCAjPdpL;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAkPoBqL,uCAlPpBrL;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAkPoBsL,4CAlPpBtL;AAAAA;AAAAA;AAAAA;AAkPcuL,oCAlPdvL;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAmPsBwL,uCAnPtBxL;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAmPsByL,4CAnPtBzL;AAAAA;AAAAA;AAAAA;AAmPgB0L,oCAnPhB1L;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAoPY2L,4BApPZ3L;AAAAA;AAAAA;AAqPY4L,6BArPZ5L;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAsPoB6L,2CAtPpB7L;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAsPoB8L,gDAtPpB9L;AAAAA;AAAAA;AAAAA;AAsPc+L,oCAtPd/L;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAuPoBgM,2CAvPpBhM;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAuPoBiM,gDAvPpBjM;AAAAA;AAAAA;AAAAA;AAuPckM,qCAvPdlM;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAyPqBmM,oCAzPrBnM;AAAAA;AAAAA;AAyPeoM,qCAzPfpM;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA0PyCqM,qCA1PzCrM;AAAAA;AAAAA;AAAAA;AAAAA;AA0PyCsM,uCA1PzCtM;AAAAA;AAAAA;AAAAA;AA0PiCuM,yCA1PjCvM;AAAAA;AAAAA;AAAAA;AAAAA;AA0P6BwM,uCA1P7BxM;AAAAA;AAAAA;AAAAA;AA0PuByM,oCA1PvBzM;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA4PmB0M,+BA5PnB1M;AAAAA;AAAAA;AAAAA;AAAAA;AA4Pe2M,uCA5Pf3M;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA4Pe4M,wCA5Pf5M;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA4PC6M,4DA5PD7M;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA+PuB8M,+BA/PvB9M;AAAAA;AAAAA;AAAAA;AAAAA;AA+PkB+M,wCA/PlB/M;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA+PkBgN,uCA/PlBhN;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA+PCiN,6DA/PDjN;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAkQIkN,2CAlQJlN;AAAAA;AAAAA;AAAAA;AAAAA;AAkQ2CmN,qCAlQ3CnN;AAAAA;AAAAA;AAAAA;AAAAA;AAkQ2CoN,+CAlQ3CpN;AAAAA;AAAAA;AAAAA;AAkQmCqN,yCAlQnCrN;AAAAA;AAAAA;AAAAA;AAAAA;AAkQ4BsN,0CAlQ5BtN;AAAAA;AAAAA;AAAAA;AAkQsBuN,oCAlQtBvN;AAAAA;AAAAA;AAAAA;AAmQ4BwN,qCAnQ5BxN;AAAAA;AAAAA;AAAAA;AAAAA;AAmQ4ByN,8CAnQ5BzN;AAAAA;AAAAA;AAAAA;AAmQoB0N,0CAnQpB1N;AAAAA;AAAAA;AAAAA;AAAAA;AAmQa2N,0CAnQb3N;AAAAA;AAAAA;AAAAA;AAmQoD4N,qCAnQpD5N;AAAAA;AAAAA;AAAAA;AAAAA;AAmQa6N,6CAnQb7N;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAmQa8N,2CAnQb9N;AAAAA;AAAAA;AAAAA;AAmQO+N,oCAnQP/N;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAuQIgO,2CAvQJhO;AAAAA;AAAAA;AAAAA;AAAAA;AAuQiDiO,qCAvQjDjO;AAAAA;AAAAA;AAAAA;AAAAA;AAuQiDkO,8CAvQjDlO;AAAAA;AAAAA;AAAAA;AAuQ2CmO,oCAvQ3CnO;AAAAA;AAAAA;AAuQmCoO,0CAvQnCpO;AAAAA;AAAAA;AAAAA;AAAAA;AAuQ4BqO,0CAvQ5BrO;AAAAA;AAAAA;AAAAA;AAuQsBsO,oCAvQtBtO;AAAAA;AAAAA;AAAAA;AAwQkCuO,qCAxQlCvO;AAAAA;AAAAA;AAAAA;AAAAA;AAwQkCwO,8CAxQlCxO;AAAAA;AAAAA;AAAAA;AAwQ4ByO,oCAxQ5BzO;AAAAA;AAAAA;AAwQoB0O,yCAxQpB1O;AAAAA;AAAAA;AAAAA;AAAAA;AAwQa2O,2CAxQb3O;AAAAA;AAAAA;AAAAA;AAwQiE4O,qCAxQjE5O;AAAAA;AAAAA;AAAAA;AAAAA;AAwQiE6O,2CAxQjE7O;AAAAA;AAAAA;AAAAA;AAwQ2D8O,qCAxQ3D9O;AAAAA;AAAAA;AAAAA;AAAAA;AAwQa+O,6CAxQb/O;AAAAA;AAAAA;AAAAA;AAwQOgP,oCAxQPhiP,uCA9QNjP;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA+QWkP,yCA/QXlP;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAgRSmP,sCAhRTnP;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAgRSoP,uCAhRTpP;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA6QCqP,qDA7QDrqRIsP,kCArRJtP;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAsR4BuP,kDAtR5BvP;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAsROwP,4EAtRPxP;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AA2RkCyP,sDA3RlCzP;AAAAA;AAAAA;AAAAA;AA2R4B0P,oCA3R5B1P;AAAAA;AAAAA;AAAAA;AAAAA;AA2RqB2P,0CA3RrB3P;AAAAA;AAAAA;AAAAA;AA2RmE4P,mCA3RnE5P;AAAAA;AAAAA;AAAAA;AAAAA;AA2RmE6P,2CA3RnE7P;AAAAA;AAAAA;AAAAA;AA2R6D8P,oCA3R7D9P;AAAAA;AAAAA;AAAAA;AAAAA;AA2RqB+P,4CA3RrB/P;AAAAA;AAAAA;AAAAA;AA2RegQ,qCA3RfhQ;AAAAA;AAAAA;AAAAA;AAAAA;AA2ROiQ,4CA3RPjQ;AAAAA;AAAAA;AAAAA;AA2RCkQ,oCA3RDlQ;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,UAqDD4C,qDArDC5C;AAAAA;AAAAA;AAAAA;AAAAA,UAqDD4C,sDArfile\":\"builtin://pprint\"}",
"theModule":"function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__283(R,NAMESPACE,M,$$underscore_import5,$$underscore_import5,$$included$129,$VS8) {\nvar G = R.getFieldLoc;\nvar U = function throw_error(loc,name) {\nR.ffi.throwUninitializedIdMkLoc(loc,name);\n};\nvar M = \"builtin://pprint\";\nvar D = R.undefined;\nvar L = [[M,66,2,1753,74,5,2032],\n[M,67,7,1787,67,16,1796],\n[M,68,12,1822,68,21,1831],\n[M,70,9,1864,70,26,1881],\n[M,70,50,1905,70,56,1911],\n[M,70,50,1905,70,78,1933],\n[M,71,12,1946,71,18,1952],\n[M,71,32,1966,71,47,1981],\n[M,71,50,1984,71,66,2000],\n[M,71,12,1946,71,74,2008],\n[M,71,32,1966,71,66,2000],\n[M,70,30,1885,70,48,1903],\n[M,68,12,1822,68,28,1838],\n[M,67,7,1787,67,22,1802],\n[M,75,2,2036,88,5,2921],\n[M,77,24,2109,77,45,2130],\n[M,77,6,2091,77,45,2130],\n[M,76,4,2062,87,7,2915],\n[M,78,24,2155,78,72,2203],\n[M,78,49,2180,78,63,2194],\n[M,78,6,2137,78,72,2203],\n[M,79,26,2230,79,43,2247],\n[M,79,6,2210,79,43,2247],\n[M,80,26,2274,80,76,2324],\n[M,80,53,2301,80,67,2315],\n[M,80,6,2254,80,76,2324],\n[M,81,34,2359,81,111,2436],\n[M,81,85,2410,81,101,2426],\n[M,81,62,2387,81,78,2403],\n[M,81,6,2331,81,111,2436],\n[M,82,33,2470,82,109,2546],\n[M,82,85,2522,82,99,2536],\n[M,82,59,2496,82,78,2515],\n[M,82,6,2443,82,109,2546],\n[M,83,37,2584,83,116,2663],\n[M,83,89,2636,83,106,2653],\n[M,83,65,2612,83,82,2629],\n[M,83,6,2553,83,116,2663],\n[M,84,26,2690,84,76,2740],\n[M,84,53,2717,84,67,2731],\n[M,84,6,2670,84,76,2740],\n[M,85,26,2767,85,76,2817],\n[M,85,53,2794,85,67,2808],\n[M,85,6,2747,85,76,2817],\n[M,86,33,2851,86,89,2907],\n[M,86,66,2884,86,80,2898],\n[M,86,6,2824,86,89,2907],\n[M,76,10,2068,76,19,2077],\n[M,89,2,2925,91,5,2982],\n[M,90,4,2957,90,10,2963],\n[M,90,4,2957,90,23,2976],\n[M,55,2,984,55,57,1039],\n[M,55,25,1007,55,31,1013],\n[M,55,49,1031,55,56,1038],\n[M,56,2,1042,56,67,1107],\n[M,56,13,1053,56,19,1059],\n[M,56,35,1075,56,41,1081],\n[M,56,59,1099,56,66,1106],\n[M,57,2,1110,57,59,1167],\n[M,57,27,1135,57,33,1141],\n[M,57,51,1159,57,58,1166],\n[M,58,2,1170,58,69,1237],\n[M,58,15,1183,58,21,1189],\n[M,58,37,1205,58,43,1211],\n[M,58,61,1229,58,68,1236],\n[M,59,2,1240,59,93,1331],\n[M,59,18,1256,59,27,1265],\n[M,59,36,1274,59,45,1283],\n[M,59,61,1299,59,67,1305],\n[M,59,85,1323,59,92,1330],\n[M,60,2,1334,60,89,1421],\n[M,60,19,1351,60,25,1357],\n[M,60,32,1364,60,41,1373],\n[M,60,57,1389,60,63,1395],\n[M,60,81,1413,60,88,1420],\n[M,61,2,1424,61,96,1518],\n[M,61,20,1442,61,29,1451],\n[M,61,39,1461,61,48,1470],\n[M,61,64,1486,61,70,1492],\n[M,61,88,1510,61,95,1517],\n[M,62,2,1521,62,72,1591],\n[M,62,15,1534,62,24,1543],\n[M,62,40,1559,62,46,1565],\n[M,62,64,1583,62,71,1590],\n[M,63,2,1594,63,76,1668],\n[M,63,22,1614,63,28,1620],\n[M,63,44,1636,63,50,1642],\n[M,63,68,1660,63,75,1667],\n[M,64,2,1671,64,72,1741],\n[M,64,15,1684,64,24,1693],\n[M,64,40,1709,64,46,1715],\n[M,64,64,1733,64,71,1740],\n[M,54,0,966,92,3,2986],\n[M,94,2,3000,94,62,3060],\n[M,94,19,3017,94,25,3023],\n[M,94,38,3036,94,45,3043],\n[M,94,52,3050,94,61,3059],\n[M,93,0,2987,95,3,3064],\n[M,127,0,4336,133,3,4512],\n[M,129,26,4419,129,32,4425],\n[M,129,56,4449,129,62,4455],\n[M,129,34,4427,129,69,4462],\n[M,134,0,4513,205,3,7112],\n[M,137,2,4602,139,5,4659],\n[M,140,2,4662,142,5,4724],\n[M,143,2,4727,146,5,4847],\n[M,147,2,4850,155,5,5075],\n[M,149,4,4915,154,7,5069],\n[M,150,10,4971,152,9,5040],\n[M,151,8,5019,151,19,5030],\n[M,156,2,5078,202,5,7010],\n[M,156,56,5132,156,63,5139],\n[M,159,14,5197,159,25,5208],\n[M,160,10,5219,160,22,5231],\n[M,161,10,5242,161,23,5255],\n[M,162,23,5279,162,30,5286],\n[M,163,42,5336,163,52,5346],\n[M,163,8,5302,163,53,5347],\n[M,162,6,5262,200,9,6996],\n[M,164,74,5422,164,81,5429],\n[M,164,83,5431,164,93,5441],\n[M,164,52,5400,164,94,5442],\n[M,164,8,5356,164,95,5443],\n[M,167,39,5541,167,49,5551],\n[M,167,18,5520,167,37,5539],\n[M,165,8,5452,167,50,5552],\n[M,170,30,5636,170,40,5646],\n[M,170,18,5624,170,28,5634],\n[M,168,8,5561,170,41,5647],\n[M,171,69,5717,171,79,5727],\n[M,171,8,5656,171,81,5729],\n[M,172,70,5800,172,80,5810],\n[M,172,56,5786,172,61,5791],\n[M,172,8,5738,172,82,5812],\n[M,175,12,5875,175,55,5918],\n[M,178,23,5986,178,33,5996],\n[M,173,8,5821,179,13,6011],\n[M,181,70,6121,181,80,6131],\n[M,180,8,6020,181,82,6133],\n[M,184,28,6219,184,38,6229],\n[M,187,32,6306,187,42,6316],\n[M,187,20,6294,187,30,6304],\n[M,182,8,6142,188,13,6331],\n[M,190,55,6435,190,65,6445],\n[M,191,72,6520,191,82,6530],\n[M,196,51,6879,196,61,6889],\n[M,198,52,6960,198,62,6970],\n[M,192,18,6551,192,48,6581],\n[M,192,19,6552,192,33,6566],\n[M,190,16,6396,190,67,6447],\n[M,191,32,6480,191,84,6532],\n[M,196,12,6840,196,63,6891],\n[M,198,12,6920,198,64,6972],\n[M,190,10,6390,199,13,6986],\n[M,189,8,6340,199,13,6986],\n[M,162,12,5268,162,21,5277],\n[M,156,24,5100,156,30,5106],\n[M,156,41,5117,156,51,5127],\n[M,203,13,7024,203,81,7092],\n[M,203,14,7025,203,18,7029],\n[M,203,46,7057,203,60,7071],\n[M,203,62,7073,203,78,7089],\n[M,204,2,7096,204,14,7108],\n[M,203,2,7013,203,82,7093],\n[M,134,25,4538,134,34,4547],\n[M,209,15,7198,209,65,7248],\n[M,209,32,7215,209,44,7227],\n[M,209,46,7229,209,60,7243],\n[M,210,15,7264,210,65,7314],\n[M,210,32,7281,210,44,7293],\n[M,210,46,7295,210,60,7309],\n[M,211,17,7332,211,93,7408],\n[M,211,54,7369,211,69,7384],\n[M,211,71,7386,211,88,7403],\n[M,212,14,7423,212,69,7478],\n[M,212,36,7445,212,48,7457],\n[M,212,50,7459,212,64,7473],\n[M,213,16,7495,213,44,7523],\n[M,213,31,7510,213,40,7519],\n[M,214,15,7539,214,45,7569],\n[M,215,13,7583,215,56,7626],\n[M,217,0,7628,217,45,7673],\n[M,217,29,7657,217,40,7668],\n[M,217,16,7644,217,22,7650],\n[M,229,0,7852,229,46,7898],\n[M,233,0,7960,239,3,8127],\n[M,234,2,7991,238,5,8123],\n[M,235,23,8065,235,30,8072],\n[M,236,10,8083,236,36,8109],\n[M,236,22,8095,236,35,8108],\n[M,236,28,8101,236,35,8108],\n[M,240,0,8128,240,62,8190],\n[M,240,37,8165,240,50,8178],\n[M,240,17,8145,240,58,8186],\n[M,241,0,8191,241,61,8252],\n[M,241,36,8227,241,49,8240],\n[M,241,17,8208,241,57,8248],\n[M,242,0,8253,242,45,8298],\n[M,242,21,8274,242,40,8293],\n[M,242,21,8274,242,31,8284],\n[M,243,0,8299,243,45,8344],\n[M,243,21,8320,243,40,8339],\n[M,243,21,8320,243,31,8330],\n[M,244,0,8345,244,47,8392],\n[M,244,23,8368,244,42,8387],\n[M,244,23,8368,244,33,8378],\n[M,247,0,8437,247,53,8490],\n[M,247,21,8458,247,48,8485],\n[M,247,21,8458,247,35,8472],\n[M,248,0,8491,248,53,8544],\n[M,248,21,8512,248,48,8539],\n[M,248,21,8512,248,35,8526],\n[M,250,0,8546,250,37,8583],\n[M,251,0,8584,251,61,8645],\n[M,251,30,8614,251,56,8640],\n[M,251,42,8626,251,55,8639],\n[M,252,0,8646,254,3,8774],\n[M,253,2,8734,253,38,8770],\n[M,253,16,8748,253,33,8765],\n[M,253,16,8748,253,28,8760],\n[M,252,15,8661,252,21,8667],\n[M,252,28,8674,252,34,8680],\n[M,252,42,8688,252,51,8697],\n[M,252,58,8704,252,67,8713],\n[M,252,74,8720,252,83,8729],\n[M,255,0,8775,257,3,8909],\n[M,256,2,8869,256,38,8905],\n[M,256,19,8886,256,36,8903],\n[M,256,19,8886,256,32,8899],\n[M,255,21,8796,255,27,8802],\n[M,255,34,8809,255,40,8815],\n[M,255,48,8823,255,57,8832],\n[M,255,64,8839,255,73,8848],\n[M,255,80,8855,255,89,8864],\n[M,258,0,8910,262,3,9160],\n[M,259,29,9041,259,65,9077],\n[M,259,44,9056,259,64,9076],\n[M,260,14,9093,260,70,9149],\n[M,260,14,9093,260,62,9141],\n[M,260,14,9093,260,50,9129],\n[M,260,29,9108,260,49,9128],\n[M,258,18,8928,258,24,8934],\n[M,258,31,8941,258,37,8947],\n[M,258,47,8957,258,56,8966],\n[M,258,70,8980,258,79,8989],\n[M,258,90,9000,258,99,9009],\n[M,263,0,9161,267,3,9437],\n[M,264,29,9297,264,72,9340],\n[M,264,50,9318,264,70,9338],\n[M,265,14,9356,265,84,9426],\n[M,265,66,9408,265,83,9425],\n[M,265,14,9356,265,57,9399],\n[M,265,35,9377,265,55,9397],\n[M,263,23,9184,263,29,9190],\n[M,263,36,9197,263,42,9203],\n[M,263,52,9213,263,61,9222],\n[M,263,75,9236,263,84,9245],\n[M,263,95,9256,263,104,9265],\n[M,269,0,9439,276,3,9623],\n[M,270,2,9487,275,5,9619],\n[M,273,10,9592,273,23,9605],\n[M,273,10,9592,273,19,9601],\n[M,269,20,9459,269,29,9468],\n[M,269,39,9478,269,43,9482],\n[M,277,0,9624,281,3,9855],\n[M,279,8,9797,279,56,9845],\n[M,279,29,9818,279,48,9837],\n[M,277,27,9651,277,33,9657],\n[M,277,40,9664,277,46,9670],\n[M,277,56,9680,277,65,9689],\n[M,277,75,9699,277,84,9708],\n[M,277,93,9717,277,102,9726],\n[M,277,113,9737,277,122,9746],\n[M,277,132,9756,277,136,9760],\n[M,283,0,9857,285,3,10010],\n[M,284,8,9926,284,87,10005],\n[M,284,22,9940,284,86,10004],\n[M,284,68,9986,284,85,10003],\n[M,284,22,9940,284,59,9977],\n[M,284,35,9953,284,58,9976],\n[\"dummy location\"],\n[M,231,12,7942,231,28,7958],\n[M,230,13,7912,230,30,7929],\n[M,3,0,13,342,3,11598]];\nvar $type$Nothing1 = R.getModuleField(\"builtin://global\",\"types\",\"Nothing\");\nvar string$length1 = R.getModuleField(\"builtin://global\",\"values\",\"string-length\");\nvar raise1 = R.getModuleField(\"builtin://global\",\"values\",\"raise\");\nvar tostring1 = R.getModuleField(\"builtin://global\",\"values\",\"tostring\");\nvar nothing2 = R.getModuleField(\"builtin://global\",\"values\",\"nothing\");\nvar builtins1 = R.getModuleField(\"builtin://global\",\"values\",\"builtins\");\nvar _minus11 = R.getModuleField(\"builtin://global\",\"values\",\"_minus\");\nvar $type$Number3 = R.getModuleField(\"builtin://global\",\"types\",\"Number\");\nvar string$repeat1 = R.getModuleField(\"builtin://global\",\"values\",\"string-repeat\");\nvar _greaterequal2 = R.getModuleField(\"builtin://global\",\"values\",\"_greaterequal\");\nvar _plus5 = R.getModuleField(\"builtin://global\",\"values\",\"_plus\");\nvar $type$Boolean6 = R.getModuleField(\"builtin://global\",\"types\",\"Boolean\");\nvar $type$String8 = R.getModuleField(\"builtin://global\",\"types\",\"String\");\nvar $underscore_import12 = $$underscore_import5;\nvar $underscore_import11 = $$underscore_import5;\nvar $included$114 = $$included$129;\nvar VS15 = $VS8;\nvar $cases_dispatch1273 = {\"mt-doc\":6,\n\"concat\":7,\n\"str\":9,\n\"blank\":11,\n\"align\":13,\n\"nest\":14,\n\"hardline\":16,\n\"if-flat\":19,\n\"align-spaces\":23,\n\"group\":27};\nvar $cases_dispatch520 = {\"mt-doc\":2,\n\"str\":3,\n\"hardline\":5,\n\"blank\":6,\n\"concat\":8,\n\"nest\":11,\n\"if-flat\":14,\n\"group\":17,\n\"align\":19,\n\"align-spaces\":21};\nvar empty3 = R.getModuleField(\"builtin://lists\",\"values\",\"empty\");\nvar is$empty5 = R.getModuleField(\"builtin://lists\",\"values\",\"is-empty\");\nvar list6 = R.getModuleField(\"builtin://lists\",\"values\",\"list\");\nvar fold7 = R.getModuleField(\"builtin://lists\",\"values\",\"fold\");\nvar List9 = R.getModuleField(\"builtin://lists\",\"types\",\"List\");\nvar link10 = R.getModuleField(\"builtin://lists\",\"values\",\"link\");\nvar $toplevel34 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__283($$resumer13) {\nvar $step33 = 0;\nvar $elidedFrames134 = 0;\nvar $ans131 = D;\nvar $al132 = L[283];\nif(R.isAR($$resumer13)) {\n$step33 = $$resumer13.step;\n$al132 = $$resumer13.from;\n$ans131 = $$resumer13.ans;\n$elidedFrames134 = $$resumer13.elidedFrames;\n$resumer13 = $$resumer13.args[0];\nis$blank645 = $$resumer13.vars[0];\nis$str637 = $$resumer13.vars[1];\ncomma1375 = $$resumer13.vars[2];\ndquote1504 = $$resumer13.vars[3];\nsoft$surround1665 = $$resumer13.vars[4];\nbrackets1491 = $$resumer13.vars[5];\nconcat1720 = $$resumer13.vars[6];\nsbreak1374 = $$resumer13.vars[7];\nvert1445 = $$resumer13.vars[8];\nsemi1376 = $$resumer13.vars[9];\nis$group661 = $$resumer13.vars[10];\nis$PPrintDoc632 = $$resumer13.vars[11];\nblank1369 = $$resumer13.vars[12];\nlbrack1487 = $$resumer13.vars[13];\nis$if$flat650 = $$resumer13.vars[14];\nstr1355 = $$resumer13.vars[15];\nflow1424 = $$resumer13.vars[16];\ninfix$break1593 = $$resumer13.vars[17];\nstr$dquote1499 = $$resumer13.vars[18];\nis$align$spaces657 = $$resumer13.vars[19];\nlbrace1473 = $$resumer13.vars[20];\nparens1464 = $$resumer13.vars[21];\ninfix1578 = $$resumer13.vars[22];\nItem1719 = $$resumer13.vars[23];\nis$Item675 = $$resumer13.vars[24];\nsemibreak1724 = $$resumer13.vars[25];\nrbrack1488 = $$resumer13.vars[26];\nnumber1359 = $$resumer13.vars[27];\ncommabreak1723 = $$resumer13.vars[28];\nis$align653 = $$resumer13.vars[29];\nis$item677 = $$resumer13.vars[30];\nis$mt$doc152 = $$resumer13.vars[31];\nhardline1371 = $$resumer13.vars[32];\nsquote1536 = $$resumer13.vars[33];\nlangle1721 = $$resumer13.vars[34];\nlabel$align$surround1717 = $$resumer13.vars[35];\nrbrace1474 = $$resumer13.vars[36];\nif$flat1370 = $$resumer13.vars[37];\nseparate1687 = $$resumer13.vars[38];\nis$concat647 = $$resumer13.vars[39];\nflow$map1405 = $$resumer13.vars[40];\nlparen1453 = $$resumer13.vars[41];\nbraces1477 = $$resumer13.vars[42];\nsurround$separate1702 = $$resumer13.vars[43];\nalign$spaces659 = $$resumer13.vars[44];\nrangle1722 = $$resumer13.vars[45];\ngroup1397 = $$resumer13.vars[46];\nalign1547 = $$resumer13.vars[47];\nrparen1461 = $$resumer13.vars[48];\nis$nest648 = $$resumer13.vars[49];\nsurround1632 = $$resumer13.vars[50];\nis$hardline642 = $$resumer13.vars[51];\nPPrintDoc521 = $$resumer13.vars[52];\nitem679 = $$resumer13.vars[53];\nstr$squote1513 = $$resumer13.vars[54];\nformat533 = $$resumer13.vars[55];\nmt$doc1402 = $$resumer13.vars[56];\nanswer1725 = $$resumer13.vars[57];\nhang1550 = $$resumer13.vars[58];\ncollect$concats691 = $$resumer13.vars[59];\nnest1546 = $$resumer13.vars[60];\nprefix1562 = $$resumer13.vars[61];\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans131 = R.mC();\n}\nwhile(!R.isContinuation($ans131)) {\nswitch($step33) {\ncase 0: var PPrintDoc135 = R.nB(\"PPrintDoc\",L[92]);\nvar PPrintDoc521 = R.mBA(PPrintDoc135,\"PPrintDoc\");\nvar Item136 = R.nB(\"Item\",L[97]);\nvar Item1719 = R.mBA(Item136,\"Item\");\nvar PPrintDoc630 = {\"$var\":D};\nvar is$PPrintDoc632 = {\"$var\":D};\nvar is$mt$doc152 = {\"$var\":D};\nvar mt$doc635 = {\"$var\":D};\nvar is$str637 = {\"$var\":D};\nvar str639 = {\"$var\":D};\nvar is$hardline642 = {\"$var\":D};\nvar hardline644 = {\"$var\":D};\nvar is$blank645 = {\"$var\":D};\nvar blank646 = {\"$var\":D};\nvar is$concat647 = {\"$var\":D};\nvar concat154 = {\"$var\":D};\nvar is$nest648 = {\"$var\":D};\nvar nest649 = {\"$var\":D};\nvar is$if$flat650 = {\"$var\":D};\nvar if$flat651 = {\"$var\":D};\nvar is$align653 = {\"$var\":D};\nvar align655 = {\"$var\":D};\nvar is$align$spaces657 = {\"$var\":D};\nvar align$spaces659 = {\"$var\":D};\nvar is$group661 = {\"$var\":D};\nvar group663 = {\"$var\":D};\nvar Item673 = {\"$var\":D};\nvar is$Item675 = {\"$var\":D};\nvar is$item677 = {\"$var\":D};\nvar item679 = {\"$var\":D};\nvar collect$concats691 = {\"$var\":D};\nvar format533 = {\"$var\":D};\nvar $temp_full142 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__0($self501,$other143) {\nvar $step141 = 0;\nvar $elidedFrames151 = 0;\nvar $ans148 = D;\nvar $al149 = L[0];\nif(R.isAR($self501)) {\n$step141 = $self501.step;\n$al149 = $self501.from;\n$ans148 = $self501.ans;\n$elidedFrames151 = $self501.elidedFrames;\nself501 = $self501.args[0];\nother143 = $self501.args[1];\nanf_fun203 = $self501.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[0],2,$t,true);\n}\nvar self501 = $self501;\nvar other143 = $other143;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans148 = R.mC();\n}\nwhile(!R.isContinuation($ans148)) {\nswitch($step141) {\ncase 0: var anf_fun153 = is$mt$doc152.$var === D?U(L[1],\"is-mt-doc\"):is$mt$doc152.$var;\n$step141 = 1;\n$al149 = L[13];\nif(typeof(anf_fun153.app) !== \"function\") {\nR.ffi.throwNonFunApp($al149,anf_fun153);\n}\n$ans148 = anf_fun153.app(self501);\nbreak;\ncase 1: var anf_if208 = $ans148;\n$step141 = R.checkPyretTrue(anf_if208)?2:3;\nbreak;\ncase 2: $step141 = 13;\n$ans148 = other143;\nbreak;\ncase 3: var anf_fun663 = is$mt$doc152.$var === D?U(L[2],\"is-mt-doc\"):is$mt$doc152.$var;\n$step141 = 4;\n$al149 = L[12];\nif(typeof(anf_fun663.app) !== \"function\") {\nR.ffi.throwNonFunApp($al149,anf_fun663);\n}\n$ans148 = anf_fun663.app(other143);\nbreak;\ncase 4: var anf_if207 = $ans148;\n$step141 = R.checkPyretTrue(anf_if207)?5:6;\nbreak;\ncase 5: $step141 = 13;\n$ans148 = self501;\nbreak;\ncase 6: $al149 = L[3];\nvar anf_if206 = G(self501,\"has-hardline\",L[3]);\n$step141 = R.checkPyretTrue(anf_if206)?7:8;\nbreak;\ncase 7: $step141 = 9;\n$ans148 = (true);\nbreak;\ncase 8: $al149 = L[11];\nvar anf_arg205 = G(other143,\"has-hardline\",L[11]);\n$ans148 = R.checkWrapBoolean(anf_arg205);\n$step141 = 9;\nbreak;\ncase 9: var anf_if204 = $ans148;\n$step141 = R.checkPyretTrue(anf_if204)?10:11;\nbreak;\ncase 10: var anf_fun155 = concat154.$var === D?U(L[4],\"concat\"):concat154.$var;\n$step141 = 13;\n$al149 = L[5];\nif(typeof(anf_fun155.app) !== \"function\") {\nR.ffi.throwNonFunApp($al149,anf_fun155);\n}\n$ans148 = anf_fun155.app(self501,other143,(0),(true));\nbreak;\ncase 11: var anf_fun203 = concat154.$var === D?U(L[6],\"concat\"):concat154.$var;\n$al149 = L[7];\nvar anf_arg192 = G(self501,\"flat-width\",L[7]);\n$al149 = L[8];\nvar anf_arg201 = G(other143,\"flat-width\",L[8]);\n$step141 = 12;\n$al149 = L[10];\n// omitting isFunction check;\n$ans148 = _plus5.app(anf_arg192,anf_arg201);\nbreak;\ncase 12: var anf_arg689 = $ans148;\n$step141 = 13;\n$al149 = L[9];\nif(typeof(anf_fun203.app) !== \"function\") {\nR.ffi.throwNonFunApp($al149,anf_fun203);\n}\n$ans148 = anf_fun203.app(self501,other143,anf_arg689,(false));\nbreak;\ncase 13: ++R.GAS;\nreturn $ans148;\ndefault: R.ffi.throwSpinnakerError(L[0],$step141);\n}\n}\nif($step141 !== 13) {\n$ans148.stack[R.EXN_STACKHEIGHT++] = R.mAR($al149,$temp_full142,$step141,[self501,other143],[anf_fun203],$elidedFrames151);\n}\nreturn $ans148;\n};\nvar anf_shared535 = R.makeMethod1($temp_full142,\"_plus\");\nvar $temp_full229 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__14($self519) {\nvar $step228 = 0;\nvar $elidedFrames236 = 0;\nvar $ans233 = D;\nvar $al234 = L[14];\nif(R.isAR($self519)) {\n$step228 = $self519.step;\n$al234 = $self519.from;\n$ans233 = $self519.ans;\n$elidedFrames236 = $self519.elidedFrames;\nself519 = $self519.args[0];\ncases237 = $self519.vars[0];\nsnd264 = $self519.vars[1];\nanf_arg174 = $self519.vars[2];\nanf_arg168 = $self519.vars[3];\nvert330 = $self519.vars[4];\nanf_arg457 = $self519.vars[5];\nd270 = $self519.vars[6];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[14],1,$t,true);\n}\nvar self519 = $self519;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans233 = R.mC();\n}\nwhile(!R.isContinuation($ans233)) {\nswitch($step228) {\ncase 0: var cases237 = self519;\n$step228 = 1;\n$al234 = L[47];\nvar $ann$check522 = R._cA(L[47],PPrintDoc521,cases237);\nif(R.isContinuation($ann$check522)) {\n$ans233 = $ann$check522;\n}\nbreak;\ncase 1: $al234 = L[17];\n$step228 = $cases_dispatch520[cases237.$name] || 23;\nbreak;\ncase 2: if(cases237.$arity !== 2) {\nif(cases237.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[16],2,cases237.$arity,L[17],cases237.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[16],true,L[17],cases237.$loc);\n}\n}\nvar $fn242 = cases237.$constructor.$fieldNames;\nR.dF(cases237.dict[$fn242[0]],cases237.$mut_fields_mask[0],false);\nR.dF(cases237.dict[$fn242[1]],cases237.$mut_fields_mask[1],false);\n$step228 = 24;\n$al234 = L[15];\nif(typeof(VS15.dict.values.dict[\"vs-str\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-str\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-str\"].app((\"EmptyDoc\"));\nbreak;\ncase 3: if(cases237.$arity !== 3) {\nif(cases237.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[20],3,cases237.$arity,L[17],cases237.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[20],true,L[17],cases237.$loc);\n}\n}\nvar $fn251 = cases237.$constructor.$fieldNames;\nvar s245 = R.dF(cases237.dict[$fn251[0]],cases237.$mut_fields_mask[0],false);\nR.dF(cases237.dict[$fn251[1]],cases237.$mut_fields_mask[1],false);\nR.dF(cases237.dict[$fn251[2]],cases237.$mut_fields_mask[2],false);\n$step228 = 4;\n$al234 = L[19];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-value\"].app(s245);\nbreak;\ncase 4: var anf_arg171 = $ans233;\n// caller optimization;\n$ans233 = link10.app(anf_arg171,empty3);\nvar anf_arg167 = $ans233;\n$step228 = 24;\n$al234 = L[18];\nif(typeof(VS15.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-constr\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-constr\"].app((\"Str\"),anf_arg167);\nbreak;\ncase 5: if(cases237.$arity !== 2) {\nif(cases237.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[22],2,cases237.$arity,L[17],cases237.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[22],true,L[17],cases237.$loc);\n}\n}\nvar $fn255 = cases237.$constructor.$fieldNames;\nR.dF(cases237.dict[$fn255[0]],cases237.$mut_fields_mask[0],false);\nR.dF(cases237.dict[$fn255[1]],cases237.$mut_fields_mask[1],false);\n$step228 = 24;\n$al234 = L[21];\nif(typeof(VS15.dict.values.dict[\"vs-str\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-str\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-str\"].app((\"CRLF\"));\nbreak;\ncase 6: if(cases237.$arity !== 3) {\nif(cases237.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[25],3,cases237.$arity,L[17],cases237.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[25],true,L[17],cases237.$loc);\n}\n}\nvar $fn260 = cases237.$constructor.$fieldNames;\nvar n258 = R.dF(cases237.dict[$fn260[0]],cases237.$mut_fields_mask[0],false);\nR.dF(cases237.dict[$fn260[1]],cases237.$mut_fields_mask[1],false);\nR.dF(cases237.dict[$fn260[2]],cases237.$mut_fields_mask[2],false);\n$step228 = 7;\n$al234 = L[24];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-value\"].app(n258);\nbreak;\ncase 7: var anf_arg703 = $ans233;\n// caller optimization;\n$ans233 = link10.app(anf_arg703,empty3);\nvar anf_arg704 = $ans233;\n$step228 = 24;\n$al234 = L[23];\nif(typeof(VS15.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-constr\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-constr\"].app((\"Blank\"),anf_arg704);\nbreak;\ncase 8: if(cases237.$arity !== 4) {\nif(cases237.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[29],4,cases237.$arity,L[17],cases237.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[29],true,L[17],cases237.$loc);\n}\n}\nvar $fn266 = cases237.$constructor.$fieldNames;\nvar fst263 = R.dF(cases237.dict[$fn266[0]],cases237.$mut_fields_mask[0],false);\nvar snd264 = R.dF(cases237.dict[$fn266[1]],cases237.$mut_fields_mask[1],false);\nR.dF(cases237.dict[$fn266[2]],cases237.$mut_fields_mask[2],false);\nR.dF(cases237.dict[$fn266[3]],cases237.$mut_fields_mask[3],false);\n$step228 = 9;\n$al234 = L[28];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-value\"].app(fst263);\nbreak;\ncase 9: var anf_arg168 = $ans233;\n$step228 = 10;\n$al234 = L[27];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-value\"].app(snd264);\nbreak;\ncase 10: var anf_arg169 = $ans233;\n// caller optimization;\n$ans233 = link10.app(anf_arg169,empty3);\nvar anf_arg718 = $ans233;\n// caller optimization;\n$ans233 = link10.app(anf_arg168,anf_arg718);\nvar anf_arg719 = $ans233;\n$step228 = 24;\n$al234 = L[26];\nif(typeof(VS15.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-constr\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-constr\"].app((\"Concat\"),anf_arg719);\nbreak;\ncase 11: if(cases237.$arity !== 4) {\nif(cases237.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[33],4,cases237.$arity,L[17],cases237.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[33],true,L[17],cases237.$loc);\n}\n}\nvar $fn326 = cases237.$constructor.$fieldNames;\nvar indent269 = R.dF(cases237.dict[$fn326[0]],cases237.$mut_fields_mask[0],false);\nvar d270 = R.dF(cases237.dict[$fn326[1]],cases237.$mut_fields_mask[1],false);\nR.dF(cases237.dict[$fn326[2]],cases237.$mut_fields_mask[2],false);\nR.dF(cases237.dict[$fn326[3]],cases237.$mut_fields_mask[3],false);\n$step228 = 12;\n$al234 = L[32];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-value\"].app(indent269);\nbreak;\ncase 12: var anf_arg174 = $ans233;\n$step228 = 13;\n$al234 = L[31];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-value\"].app(d270);\nbreak;\ncase 13: var anf_arg735 = $ans233;\n// caller optimization;\n$ans233 = link10.app(anf_arg735,empty3);\nvar anf_arg736 = $ans233;\n// caller optimization;\n$ans233 = link10.app(anf_arg174,anf_arg736);\nvar anf_arg322 = $ans233;\n$step228 = 24;\n$al234 = L[30];\nif(typeof(VS15.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-constr\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-constr\"].app((\"Nest\"),anf_arg322);\nbreak;\ncase 14: if(cases237.$arity !== 4) {\nif(cases237.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[37],4,cases237.$arity,L[17],cases237.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[37],true,L[17],cases237.$loc);\n}\n}\nvar $fn459 = cases237.$constructor.$fieldNames;\nvar flat329 = R.dF(cases237.dict[$fn459[0]],cases237.$mut_fields_mask[0],false);\nvar vert330 = R.dF(cases237.dict[$fn459[1]],cases237.$mut_fields_mask[1],false);\nR.dF(cases237.dict[$fn459[2]],cases237.$mut_fields_mask[2],false);\nR.dF(cases237.dict[$fn459[3]],cases237.$mut_fields_mask[3],false);\n$step228 = 15;\n$al234 = L[36];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-value\"].app(flat329);\nbreak;\ncase 15: var anf_arg457 = $ans233;\n$step228 = 16;\n$al234 = L[35];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-value\"].app(vert330);\nbreak;\ncase 16: var anf_arg745 = $ans233;\n// caller optimization;\n$ans233 = link10.app(anf_arg745,empty3);\nvar anf_arg746 = $ans233;\n// caller optimization;\n$ans233 = link10.app(anf_arg457,anf_arg746);\nvar anf_arg747 = $ans233;\n$step228 = 24;\n$al234 = L[34];\nif(typeof(VS15.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-constr\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-constr\"].app((\"IfFlat\"),anf_arg747);\nbreak;\ncase 17: if(cases237.$arity !== 3) {\nif(cases237.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[40],3,cases237.$arity,L[17],cases237.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[40],true,L[17],cases237.$loc);\n}\n}\nvar $fn465 = cases237.$constructor.$fieldNames;\nvar d463 = R.dF(cases237.dict[$fn465[0]],cases237.$mut_fields_mask[0],false);\nR.dF(cases237.dict[$fn465[1]],cases237.$mut_fields_mask[1],false);\nR.dF(cases237.dict[$fn465[2]],cases237.$mut_fields_mask[2],false);\n$step228 = 18;\n$al234 = L[39];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-value\"].app(d463);\nbreak;\ncase 18: var anf_arg188 = $ans233;\n// caller optimization;\n$ans233 = link10.app(anf_arg188,empty3);\nvar anf_arg190 = $ans233;\n$step228 = 24;\n$al234 = L[38];\nif(typeof(VS15.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-constr\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-constr\"].app((\"Group\"),anf_arg190);\nbreak;\ncase 19: if(cases237.$arity !== 3) {\nif(cases237.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[43],3,cases237.$arity,L[17],cases237.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[43],true,L[17],cases237.$loc);\n}\n}\nvar $fn468 = cases237.$constructor.$fieldNames;\nvar d808 = R.dF(cases237.dict[$fn468[0]],cases237.$mut_fields_mask[0],false);\nR.dF(cases237.dict[$fn468[1]],cases237.$mut_fields_mask[1],false);\nR.dF(cases237.dict[$fn468[2]],cases237.$mut_fields_mask[2],false);\n$step228 = 20;\n$al234 = L[42];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-value\"].app(d808);\nbreak;\ncase 20: var anf_arg757 = $ans233;\n// caller optimization;\n$ans233 = link10.app(anf_arg757,empty3);\nvar anf_arg758 = $ans233;\n$step228 = 24;\n$al234 = L[41];\nif(typeof(VS15.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-constr\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-constr\"].app((\"Align\"),anf_arg758);\nbreak;\ncase 21: if(cases237.$arity !== 3) {\nif(cases237.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[46],3,cases237.$arity,L[17],cases237.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[46],true,L[17],cases237.$loc);\n}\n}\nvar $fn518 = cases237.$constructor.$fieldNames;\nvar n470 = R.dF(cases237.dict[$fn518[0]],cases237.$mut_fields_mask[0],false);\nR.dF(cases237.dict[$fn518[1]],cases237.$mut_fields_mask[1],false);\nR.dF(cases237.dict[$fn518[2]],cases237.$mut_fields_mask[2],false);\n$step228 = 22;\n$al234 = L[45];\nif(typeof(VS15.dict.values.dict[\"vs-value\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-value\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-value\"].app(n470);\nbreak;\ncase 22: var anf_arg759 = $ans233;\n// caller optimization;\n$ans233 = link10.app(anf_arg759,empty3);\nvar anf_arg516 = $ans233;\n$step228 = 24;\n$al234 = L[44];\nif(typeof(VS15.dict.values.dict[\"vs-constr\"].app) !== \"function\") {\nR.ffi.throwNonFunApp($al234,VS15.dict.values.dict[\"vs-constr\"]);\n}\n$ans233 = VS15.dict.values.dict[\"vs-constr\"].app((\"AlignSpaces\"),anf_arg516);\nbreak;\ncase 23: $ans233 = R.throwNoCasesMatched(L[17],cases237);\n$step228 = 24;\nbreak;\ncase 24: ++R.GAS;\nreturn $ans233;\ndefault: R.ffi.throwSpinnakerError(L[14],$step228);\n}\n}\nif($step228 !== 24) {\n$ans233.stack[R.EXN_STACKHEIGHT++] = R.mAR($al234,$temp_full229,$step228,[self519],[cases237,snd264,anf_arg174,anf_arg168,vert330,anf_arg457,d270],$elidedFrames236);\n}\nreturn $ans233;\n};\nvar anf_shared536 = R.makeMethod0($temp_full229,\"_output\");\nvar $temp_full525 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__48($self109,$width526) {\nvar $step524 = 0;\nvar $elidedFrames532 = 0;\nvar $ans529 = D;\nvar $al530 = L[48];\nif(R.isAR($self109)) {\n$step524 = $self109.step;\n$al530 = $self109.from;\n$ans529 = $self109.ans;\n$elidedFrames532 = $self109.elidedFrames;\nself109 = $self109.args[0];\nwidth526 = $self109.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[48],2,$t,true);\n}\nvar self109 = $self109;\nvar width526 = $width526;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans529 = R.mC();\n}\nwhile(!R.isContinuation($ans529)) {\nswitch($step524) {\ncase 0: var anf_fun205 = format533.$var === D?U(L[49],\"format\"):format533.$var;\n$step524 = 1;\n$al530 = L[50];\nif(typeof(anf_fun205.app) !== \"function\") {\nR.ffi.throwNonFunApp($al530,anf_fun205);\n}\n$ans529 = anf_fun205.app(width526,self109);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans529;\ndefault: R.ffi.throwSpinnakerError(L[48],$step524);\n}\n}\nif($step524 !== 1) {\n$ans529.stack[R.EXN_STACKHEIGHT++] = R.mAR($al530,$temp_full525,$step524,[self109,width526],[],$elidedFrames532);\n}\nreturn $ans529;\n};\nvar anf_shared537 = R.makeMethod1($temp_full525,\"pretty\");\nvar $mt$doc_getfields542 = function singleton_variant(f) {\nreturn f(this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $mt$doc_mutablemask541 = [false,false];\nvar $mt$doc$base538 = {\"$fieldNames\":[\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared535,\n\"_output\":anf_shared536,\n\"pretty\":anf_shared537,\n\"_match\":R.mM(\"mt-doc\",2)};\nvar $mt$doc$brander539 = R.nB(\"mt-doc\",L[51]);\nvar $mt$doc$brands540 = {};\n$mt$doc$brands540[PPrintDoc135._brand] = true;\n$mt$doc$brands540[$mt$doc$brander539._brand] = true;\nvar mt$doc543 = R.mVC(L[51],function $synthesizedConstructor_$mt$doc$base() {\nreturn [$type$Number3,$type$Boolean6];\n},[\"flat$width544\",\"has$hardline545\"],[L[52],L[53]],[false,false],[\"flat$width544\",\"has$hardline545\"],$mt$doc_mutablemask541,$mt$doc$base538,$mt$doc$brands540,\"mt-doc\",$mt$doc_getfields542,$mt$doc$base538);\nvar $str_getfields550 = function singleton_variant(f) {\nreturn f(this.dict[\"s\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $str_mutablemask549 = [false,false,false];\nvar $str$base546 = {\"$fieldNames\":[\"s\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared535,\n\"_output\":anf_shared536,\n\"pretty\":anf_shared537,\n\"_match\":R.mM(\"str\",3)};\nvar $str$brander547 = R.nB(\"str\",L[54]);\nvar $str$brands548 = {};\n$str$brands548[PPrintDoc135._brand] = true;\n$str$brands548[$str$brander547._brand] = true;\nvar str551 = R.mVC(L[54],function $synthesizedConstructor_$str$base() {\nreturn [$type$String8,$type$Number3,$type$Boolean6];\n},[\"s552\",\"flat$width553\",\"has$hardline554\"],[L[55],L[56],L[57]],[false,false,false],[\"s552\",\"flat$width553\",\"has$hardline554\"],$str_mutablemask549,$str$base546,$str$brands548,\"str\",$str_getfields550,$str$base546);\nvar $hardline_getfields559 = function singleton_variant(f) {\nreturn f(this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $hardline_mutablemask558 = [false,false];\nvar $hardline$base555 = {\"$fieldNames\":[\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared535,\n\"_output\":anf_shared536,\n\"pretty\":anf_shared537,\n\"_match\":R.mM(\"hardline\",2)};\nvar $hardline$brander556 = R.nB(\"hardline\",L[58]);\nvar $hardline$brands557 = {};\n$hardline$brands557[PPrintDoc135._brand] = true;\n$hardline$brands557[$hardline$brander556._brand] = true;\nvar hardline560 = R.mVC(L[58],function $synthesizedConstructor_$hardline$base() {\nreturn [$type$Number3,$type$Boolean6];\n},[\"flat$width561\",\"has$hardline562\"],[L[59],L[60]],[false,false],[\"flat$width561\",\"has$hardline562\"],$hardline_mutablemask558,$hardline$base555,$hardline$brands557,\"hardline\",$hardline_getfields559,$hardline$base555);\nvar $blank_getfields567 = function singleton_variant(f) {\nreturn f(this.dict[\"n\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $blank_mutablemask566 = [false,false,false];\nvar $blank$base563 = {\"$fieldNames\":[\"n\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared535,\n\"_output\":anf_shared536,\n\"pretty\":anf_shared537,\n\"_match\":R.mM(\"blank\",3)};\nvar $blank$brander564 = R.nB(\"blank\",L[61]);\nvar $blank$brands565 = {};\n$blank$brands565[PPrintDoc135._brand] = true;\n$blank$brands565[$blank$brander564._brand] = true;\nvar blank568 = R.mVC(L[61],function $synthesizedConstructor_$blank$base() {\nreturn [$type$Number3,$type$Number3,$type$Boolean6];\n},[\"n569\",\"flat$width570\",\"has$hardline571\"],[L[62],L[63],L[64]],[false,false,false],[\"n569\",\"flat$width570\",\"has$hardline571\"],$blank_mutablemask566,$blank$base563,$blank$brands565,\"blank\",$blank_getfields567,$blank$base563);\nvar $concat_getfields576 = function singleton_variant(f) {\nreturn f(this.dict[\"fst\"],this.dict[\"snd\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $concat_mutablemask575 = [false,false,false,false];\nvar $concat$base572 = {\"$fieldNames\":[\"fst\",\"snd\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared535,\n\"_output\":anf_shared536,\n\"pretty\":anf_shared537,\n\"_match\":R.mM(\"concat\",4)};\nvar $concat$brander573 = R.nB(\"concat\",L[65]);\nvar $concat$brands574 = {};\n$concat$brands574[PPrintDoc135._brand] = true;\n$concat$brands574[$concat$brander573._brand] = true;\nvar concat577 = R.mVC(L[65],function $synthesizedConstructor_$concat$base() {\nreturn [PPrintDoc521,PPrintDoc521,$type$Number3,$type$Boolean6];\n},[\"fst578\",\"snd579\",\"flat$width580\",\"has$hardline581\"],[L[66],L[67],L[68],L[69]],[false,false,false,false],[\"fst578\",\"snd579\",\"flat$width580\",\"has$hardline581\"],$concat_mutablemask575,$concat$base572,$concat$brands574,\"concat\",$concat_getfields576,$concat$base572);\nvar $nest_getfields586 = function singleton_variant(f) {\nreturn f(this.dict[\"indent\"],this.dict[\"d\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $nest_mutablemask585 = [false,false,false,false];\nvar $nest$base582 = {\"$fieldNames\":[\"indent\",\"d\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared535,\n\"_output\":anf_shared536,\n\"pretty\":anf_shared537,\n\"_match\":R.mM(\"nest\",4)};\nvar $nest$brander583 = R.nB(\"nest\",L[70]);\nvar $nest$brands584 = {};\n$nest$brands584[PPrintDoc135._brand] = true;\n$nest$brands584[$nest$brander583._brand] = true;\nvar nest587 = R.mVC(L[70],function $synthesizedConstructor_$nest$base() {\nreturn [$type$Number3,PPrintDoc521,$type$Number3,$type$Boolean6];\n},[\"indent588\",\"d589\",\"flat$width590\",\"has$hardline591\"],[L[71],L[72],L[73],L[74]],[false,false,false,false],[\"indent588\",\"d589\",\"flat$width590\",\"has$hardline591\"],$nest_mutablemask585,$nest$base582,$nest$brands584,\"nest\",$nest_getfields586,$nest$base582);\nvar $if$flat_getfields596 = function singleton_variant(f) {\nreturn f(this.dict[\"flat\"],this.dict[\"vert\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $if$flat_mutablemask595 = [false,false,false,false];\nvar $if$flat$base592 = {\"$fieldNames\":[\"flat\",\"vert\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared535,\n\"_output\":anf_shared536,\n\"pretty\":anf_shared537,\n\"_match\":R.mM(\"if-flat\",4)};\nvar $if$flat$brander593 = R.nB(\"if-flat\",L[75]);\nvar $if$flat$brands594 = {};\n$if$flat$brands594[PPrintDoc135._brand] = true;\n$if$flat$brands594[$if$flat$brander593._brand] = true;\nvar if$flat597 = R.mVC(L[75],function $synthesizedConstructor_$if$flat$base() {\nreturn [PPrintDoc521,PPrintDoc521,$type$Number3,$type$Boolean6];\n},[\"flat598\",\"vert599\",\"flat$width600\",\"has$hardline601\"],[L[76],L[77],L[78],L[79]],[false,false,false,false],[\"flat598\",\"vert599\",\"flat$width600\",\"has$hardline601\"],$if$flat_mutablemask595,$if$flat$base592,$if$flat$brands594,\"if-flat\",$if$flat_getfields596,$if$flat$base592);\nvar $align_getfields606 = function singleton_variant(f) {\nreturn f(this.dict[\"d\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $align_mutablemask605 = [false,false,false];\nvar $align$base602 = {\"$fieldNames\":[\"d\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared535,\n\"_output\":anf_shared536,\n\"pretty\":anf_shared537,\n\"_match\":R.mM(\"align\",3)};\nvar $align$brander603 = R.nB(\"align\",L[80]);\nvar $align$brands604 = {};\n$align$brands604[PPrintDoc135._brand] = true;\n$align$brands604[$align$brander603._brand] = true;\nvar align607 = R.mVC(L[80],function $synthesizedConstructor_$align$base() {\nreturn [PPrintDoc521,$type$Number3,$type$Boolean6];\n},[\"d608\",\"flat$width609\",\"has$hardline610\"],[L[81],L[82],L[83]],[false,false,false],[\"d608\",\"flat$width609\",\"has$hardline610\"],$align_mutablemask605,$align$base602,$align$brands604,\"align\",$align_getfields606,$align$base602);\nvar $align$spaces_getfields615 = function singleton_variant(f) {\nreturn f(this.dict[\"n\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $align$spaces_mutablemask614 = [false,false,false];\nvar $align$spaces$base611 = {\"$fieldNames\":[\"n\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared535,\n\"_output\":anf_shared536,\n\"pretty\":anf_shared537,\n\"_match\":R.mM(\"align-spaces\",3)};\nvar $align$spaces$brander612 = R.nB(\"align-spaces\",L[84]);\nvar $align$spaces$brands613 = {};\n$align$spaces$brands613[PPrintDoc135._brand] = true;\n$align$spaces$brands613[$align$spaces$brander612._brand] = true;\nvar align$spaces616 = R.mVC(L[84],function $synthesizedConstructor_$align$spaces$base() {\nreturn [$type$Number3,$type$Number3,$type$Boolean6];\n},[\"n617\",\"flat$width618\",\"has$hardline619\"],[L[85],L[86],L[87]],[false,false,false],[\"n617\",\"flat$width618\",\"has$hardline619\"],$align$spaces_mutablemask614,$align$spaces$base611,$align$spaces$brands613,\"align-spaces\",$align$spaces_getfields615,$align$spaces$base611);\nvar $group_getfields624 = function singleton_variant(f) {\nreturn f(this.dict[\"d\"],this.dict[\"flat-width\"],this.dict[\"has-hardline\"]);\n};\nvar $group_mutablemask623 = [false,false,false];\nvar $group$base620 = {\"$fieldNames\":[\"d\",\"flat-width\",\"has-hardline\"],\n\"_plus\":anf_shared535,\n\"_output\":anf_shared536,\n\"pretty\":anf_shared537,\n\"_match\":R.mM(\"group\",3)};\nvar $group$brander621 = R.nB(\"group\",L[88]);\nvar $group$brands622 = {};\n$group$brands622[PPrintDoc135._brand] = true;\n$group$brands622[$group$brander621._brand] = true;\nvar group625 = R.mVC(L[88],function $synthesizedConstructor_$group$base() {\nreturn [PPrintDoc521,$type$Number3,$type$Boolean6];\n},[\"d626\",\"flat$width627\",\"has$hardline628\"],[L[89],L[90],L[91]],[false,false,false],[\"d626\",\"flat$width627\",\"has$hardline628\"],$group_mutablemask623,$group$base620,$group$brands622,\"group\",$group_getfields624,$group$base620);\nvar anf_assign629 = R.mO({\"PPrintDoc\":G(PPrintDoc135,\"test\",L[92]),\n\"is-mt-doc\":G($mt$doc$brander539,\"test\",L[51]),\n\"mt-doc\":mt$doc543,\n\"is-str\":G($str$brander547,\"test\",L[54]),\n\"str\":str551,\n\"is-hardline\":G($hardline$brander556,\"test\",L[58]),\n\"hardline\":hardline560,\n\"is-blank\":G($blank$brander564,\"test\",L[61]),\n\"blank\":blank568,\n\"is-concat\":G($concat$brander573,\"test\",L[65]),\n\"concat\":concat577,\n\"is-nest\":G($nest$brander583,\"test\",L[70]),\n\"nest\":nest587,\n\"is-if-flat\":G($if$flat$brander593,\"test\",L[75]),\n\"if-flat\":if$flat597,\n\"is-align\":G($align$brander603,\"test\",L[80]),\n\"align\":align607,\n\"is-align-spaces\":G($align$spaces$brander612,\"test\",L[84]),\n\"align-spaces\":align$spaces616,\n\"is-group\":G($group$brander621,\"test\",L[88]),\n\"group\":group625});\nPPrintDoc630.$var = anf_assign629;\nR.nothing;\n$al132 = L[92];\nvar anf_assign631 = G(PPrintDoc630.$var,\"PPrintDoc\",L[92]);\nis$PPrintDoc632.$var = anf_assign631;\nR.nothing;\n$al132 = L[51];\nvar anf_assign633 = G(PPrintDoc630.$var,\"is-mt-doc\",L[51]);\nis$mt$doc152.$var = anf_assign633;\nR.nothing;\n$al132 = L[51];\nvar anf_assign634 = G(PPrintDoc630.$var,\"mt-doc\",L[51]);\nmt$doc635.$var = anf_assign634;\nR.nothing;\n$al132 = L[54];\nvar anf_assign636 = G(PPrintDoc630.$var,\"is-str\",L[54]);\nis$str637.$var = anf_assign636;\nR.nothing;\n$al132 = L[54];\nvar anf_assign638 = G(PPrintDoc630.$var,\"str\",L[54]);\nstr639.$var = anf_assign638;\nR.nothing;\n$al132 = L[58];\nvar anf_assign641 = G(PPrintDoc630.$var,\"is-hardline\",L[58]);\nis$hardline642.$var = anf_assign641;\nR.nothing;\n$al132 = L[58];\nvar anf_assign643 = G(PPrintDoc630.$var,\"hardline\",L[58]);\nhardline644.$var = anf_assign643;\nR.nothing;\n$al132 = L[61];\nvar anf_assign238 = G(PPrintDoc630.$var,\"is-blank\",L[61]);\nis$blank645.$var = anf_assign238;\nR.nothing;\n$al132 = L[61];\nvar anf_assign240 = G(PPrintDoc630.$var,\"blank\",L[61]);\nblank646.$var = anf_assign240;\nR.nothing;\n$al132 = L[65];\nvar anf_assign242 = G(PPrintDoc630.$var,\"is-concat\",L[65]);\nis$concat647.$var = anf_assign242;\nR.nothing;\n$al132 = L[65];\nvar anf_assign244 = G(PPrintDoc630.$var,\"concat\",L[65]);\nconcat154.$var = anf_assign244;\nR.nothing;\n$al132 = L[70];\nvar anf_assign246 = G(PPrintDoc630.$var,\"is-nest\",L[70]);\nis$nest648.$var = anf_assign246;\nR.nothing;\n$al132 = L[70];\nvar anf_assign248 = G(PPrintDoc630.$var,\"nest\",L[70]);\nnest649.$var = anf_assign248;\nR.nothing;\n$al132 = L[75];\nvar anf_assign251 = G(PPrintDoc630.$var,\"is-if-flat\",L[75]);\nis$if$flat650.$var = anf_assign251;\nR.nothing;\n$al132 = L[75];\nvar anf_assign253 = G(PPrintDoc630.$var,\"if-flat\",L[75]);\nif$flat651.$var = anf_assign253;\nR.nothing;\n$al132 = L[80];\nvar anf_assign652 = G(PPrintDoc630.$var,\"is-align\",L[80]);\nis$align653.$var = anf_assign652;\nR.nothing;\n$al132 = L[80];\nvar anf_assign654 = G(PPrintDoc630.$var,\"align\",L[80]);\nalign655.$var = anf_assign654;\nR.nothing;\n$al132 = L[84];\nvar anf_assign656 = G(PPrintDoc630.$var,\"is-align-spaces\",L[84]);\nis$align$spaces657.$var = anf_assign656;\nR.nothing;\n$al132 = L[84];\nvar anf_assign658 = G(PPrintDoc630.$var,\"align-spaces\",L[84]);\nalign$spaces659.$var = anf_assign658;\nR.nothing;\n$al132 = L[88];\nvar anf_assign660 = G(PPrintDoc630.$var,\"is-group\",L[88]);\nis$group661.$var = anf_assign660;\nR.nothing;\n$al132 = L[88];\nvar anf_assign662 = G(PPrintDoc630.$var,\"group\",L[88]);\ngroup663.$var = anf_assign662;\nR.nothing;\nvar $item_getfields668 = function singleton_variant(f) {\nreturn f(this.dict[\"indent\"],this.dict[\"is-flat\"],this.dict[\"d\"]);\n};\nvar $item_mutablemask667 = [false,false,false];\nvar $item$base664 = {\"$fieldNames\":[\"indent\",\"is-flat\",\"d\"],\n\"_match\":R.mM(\"item\",3)};\nvar $item$brander665 = R.nB(\"item\",L[93]);\nvar $item$brands666 = {};\n$item$brands666[Item136._brand] = true;\n$item$brands666[$item$brander665._brand] = true;\nvar item669 = R.mVC(L[93],function $synthesizedConstructor_$item$base() {\nreturn [$type$Number3,$type$Boolean6,PPrintDoc521];\n},[\"indent670\",\"is$flat671\",\"d672\"],[L[94],L[95],L[96]],[false,false,false],[\"indent670\",\"is$flat671\",\"d672\"],$item_mutablemask667,$item$base664,$item$brands666,\"item\",$item_getfields668,$item$base664);\nvar anf_assign839 = R.mO({\"Item\":G(Item136,\"test\",L[97]),\n\"is-item\":G($item$brander665,\"test\",L[93]),\n\"item\":item669});\nItem673.$var = anf_assign839;\nR.nothing;\n$al132 = L[97];\nvar anf_assign674 = G(Item673.$var,\"Item\",L[97]);\nis$Item675.$var = anf_assign674;\nR.nothing;\n$al132 = L[93];\nvar anf_assign676 = G(Item673.$var,\"is-item\",L[93]);\nis$item677.$var = anf_assign676;\nR.nothing;\n$al132 = L[93];\nvar anf_assign678 = G(Item673.$var,\"item\",L[93]);\nitem679.$var = anf_assign678;\nR.nothing;\nvar $temp_lam681 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__98($i682,$m683,$it684,$rest685) {\nvar $step680 = 0;\nvar $elidedFrames690 = 0;\nvar $ans687 = D;\nvar $al688 = L[98];\nif(R.isAR($i682)) {\n$step680 = $i682.step;\n$al688 = $i682.from;\n$ans687 = $i682.ans;\n$elidedFrames690 = $i682.elidedFrames;\ni682 = $i682.args[0];\nm683 = $i682.args[1];\nit684 = $i682.args[2];\nrest685 = $i682.args[3];\nanf_arg851 = $i682.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[98],4,$t,false);\n}\nvar i682 = $i682;\nvar m683 = $m683;\nvar it684 = $it684;\nvar rest685 = $rest685;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans687 = R.mC();\n}\nwhile(!R.isContinuation($ans687)) {\nswitch($step680) {\ncase 0: // caller optimization;\n$ans687 = is$concat647.$var.app(it684);\nvar anf_if692 = $ans687;\n$step680 = R.checkPyretTrue(anf_if692)?1:3;\nbreak;\ncase 1: $al688 = L[99];\nvar anf_arg851 = G(it684,\"fst\",L[99]);\n$al688 = L[100];\nvar anf_arg278 = G(it684,\"snd\",L[100]);\n$step680 = 2;\n$al688 = L[101];\n// omitting isFunction check;\n$ans687 = collect$concats691.$var.app(i682,m683,anf_arg278,rest685);\nbreak;\ncase 2: var anf_arg281 = $ans687;\n$step680 = 0;\n++$elidedFrames690;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans687 = R.mC();\n}\ni682 = i682;\nm683 = m683;\nit684 = anf_arg851;\nrest685 = anf_arg281;\ncontinue;\ncase 3: // caller optimization;\n$ans687 = item679.$var.app(i682,m683,it684);\nvar anf_arg865 = $ans687;\n// caller optimization;\n$ans687 = link10.app(anf_arg865,rest685);\n$step680 = 4;\nbreak;\ncase 4: ++R.GAS;\nreturn $ans687;\ndefault: R.ffi.throwSpinnakerError(L[98],$step680);\n}\n}\nif($step680 !== 4) {\n$ans687.stack[R.EXN_STACKHEIGHT++] = R.mAR($al688,$temp_lam681,$step680,[i682,m683,it684,rest685],[anf_arg851],$elidedFrames690);\n}\nreturn $ans687;\n};\nvar anf_assign307 = R.mF($temp_lam681,\"collect-concats\");\ncollect$concats691.$var = anf_assign307;\nR.nothing;\nvar $temp_lam696 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__102($width697,$doc698) {\nvar $step695 = 0;\nvar $elidedFrames702 = 0;\nvar $ans699 = D;\nvar $al700 = L[102];\nif(R.isAR($width697)) {\n$step695 = $width697.step;\n$al700 = $width697.from;\n$ans699 = $width697.ans;\n$elidedFrames702 = $width697.elidedFrames;\nwidth697 = $width697.args[0];\ndoc698 = $width697.args[1];\nprocess1026 = $width697.vars[0];\ngen$output1012 = $width697.vars[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[102],2,$t,false);\n}\nvar width697 = $width697;\nvar doc698 = $doc698;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans699 = R.mC();\n}\nwhile(!R.isContinuation($ans699)) {\nswitch($step695) {\ncase 0: $step695 = 1;\n$al700 = L[164];\nR._cA(L[164],PPrintDoc521,doc698);\nbreak;\ncase 1: var cur$line711 = {\"$var\":empty3};\nvar output730 = {\"$var\":empty3};\nvar emit$text713 = {\"$var\":D};\nvar emit$spaces722 = {\"$var\":D};\nvar emit$newline732 = {\"$var\":D};\nvar gen$output1012 = {\"$var\":D};\nvar process1026 = {\"$var\":D};\nvar $temp_lam705 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__103($s706) {\nvar $step704 = 0;\nvar $elidedFrames710 = 0;\nvar $ans707 = D;\nvar $al708 = L[103];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[103],1,$t,false);\n}\nvar s706 = $s706;\n// callee optimization;\nwhile(!R.isContinuation($ans707)) {\nswitch($step704) {\ncase 0: var anf_arg863 = cur$line711.$var;\n// caller optimization;\n$ans707 = link10.app(s706,anf_arg863);\nvar anf_assign311 = $ans707;\n$step704 = 1;\ncur$line711.$var = anf_assign311;\n$ans707 = R.nothing;\nbreak;\ncase 1: return $ans707;\ndefault: R.ffi.throwSpinnakerError(L[103],$step704);\n}\n}\nreturn $ans707;\n};\nvar anf_assign869 = R.mF($temp_lam705,\"emit-text\");\nemit$text713.$var = anf_assign869;\nR.nothing;\nvar $temp_lam715 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__104($n716) {\nvar $step714 = 0;\nvar $elidedFrames720 = 0;\nvar $ans717 = D;\nvar $al718 = L[104];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[104],1,$t,false);\n}\nvar n716 = $n716;\n// callee optimization;\nwhile(!R.isContinuation($ans717)) {\nswitch($step714) {\ncase 0: // caller optimization;\n$ans717 = string$repeat1.app((\" \"),n716);\nvar anf_arg297 = $ans717;\n// caller optimization;\n$ans717 = emit$text713.$var.app(anf_arg297);\n$step714 = 1;\nbreak;\ncase 1: return $ans717;\ndefault: R.ffi.throwSpinnakerError(L[104],$step714);\n}\n}\nreturn $ans717;\n};\nvar anf_assign317 = R.mF($temp_lam715,\"emit-spaces\");\nemit$spaces722.$var = anf_assign317;\nR.nothing;\nvar $temp_lam724 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__105($i725) {\nvar $step723 = 0;\nvar $elidedFrames729 = 0;\nvar $ans726 = D;\nvar $al727 = L[105];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[105],1,$t,false);\n}\nvar i725 = $i725;\n// callee optimization;\nwhile(!R.isContinuation($ans726)) {\nswitch($step723) {\ncase 0: var anf_arg298 = cur$line711.$var;\nvar anf_arg878 = output730.$var;\n// caller optimization;\n$ans726 = link10.app(anf_arg298,anf_arg878);\nvar anf_assign323 = $ans726;\noutput730.$var = anf_assign323;\nR.nothing;\n// caller optimization;\n$ans726 = string$repeat1.app((\" \"),i725);\nvar anf_arg305 = $ans726;\n// caller optimization;\n$ans726 = link10.app(anf_arg305,empty3);\nvar anf_assign337 = $ans726;\n$step723 = 1;\ncur$line711.$var = anf_assign337;\n$ans726 = R.nothing;\nbreak;\ncase 1: return $ans726;\ndefault: R.ffi.throwSpinnakerError(L[105],$step723);\n}\n}\nreturn $ans726;\n};\nvar anf_assign339 = R.mF($temp_lam724,\"emit-newline\");\nemit$newline732.$var = anf_assign339;\nR.nothing;\nvar $temp_lam734 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__106($$resumer13) {\nvar $step733 = 0;\nvar $elidedFrames738 = 0;\nvar $ans735 = D;\nvar $al736 = L[106];\nif(R.isAR($$resumer13)) {\n$step733 = $$resumer13.step;\n$al736 = $$resumer13.from;\n$ans735 = $$resumer13.ans;\n$elidedFrames738 = $$resumer13.elidedFrames;\n$resumer13 = $$resumer13.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 0) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[106],0,$t,false);\n}\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans735 = R.mC();\n}\nwhile(!R.isContinuation($ans735)) {\nswitch($step733) {\ncase 0: var anf_arg303 = cur$line711.$var;\nvar anf_arg893 = output730.$var;\n// caller optimization;\n$ans735 = link10.app(anf_arg303,anf_arg893);\nvar anf_assign345 = $ans735;\noutput730.$var = anf_assign345;\nR.nothing;\nvar $temp_lam740 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__107($lines741,$line742) {\nvar $step739 = 0;\nvar $elidedFrames746 = 0;\nvar $ans743 = D;\nvar $al744 = L[107];\nif(R.isAR($lines741)) {\n$step739 = $lines741.step;\n$al744 = $lines741.from;\n$ans743 = $lines741.ans;\n$elidedFrames746 = $lines741.elidedFrames;\nlines741 = $lines741.args[0];\nline742 = $lines741.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[107],2,$t,false);\n}\nvar lines741 = $lines741;\nvar line742 = $line742;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans743 = R.mC();\n}\nwhile(!R.isContinuation($ans743)) {\nswitch($step739) {\ncase 0: var $temp_lam748 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__108($acc749,$piece750) {\nvar $step747 = 0;\nvar $elidedFrames754 = 0;\nvar $ans751 = D;\nvar $al752 = L[108];\nif(R.isAR($acc749)) {\n$step747 = $acc749.step;\n$al752 = $acc749.from;\n$ans751 = $acc749.ans;\n$elidedFrames754 = $acc749.elidedFrames;\nacc749 = $acc749.args[0];\npiece750 = $acc749.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[108],2,$t,false);\n}\nvar acc749 = $acc749;\nvar piece750 = $piece750;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans751 = R.mC();\n}\nwhile(!R.isContinuation($ans751)) {\nswitch($step747) {\ncase 0: $step747 = 1;\n$al752 = L[109];\n// omitting isFunction check;\n$ans751 = _plus5.app(piece750,acc749);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans751;\ndefault: R.ffi.throwSpinnakerError(L[108],$step747);\n}\n}\nif($step747 !== 1) {\n$ans751.stack[R.EXN_STACKHEIGHT++] = R.mAR($al752,$temp_lam748,$step747,[acc749,piece750],[],$elidedFrames754);\n}\nreturn $ans751;\n};\nvar anf_arg812 = R.mF($temp_lam748,\"for-body<line 150, column 10>\");\n$step739 = 1;\n$al744 = L[108];\n// omitting isFunction check;\n$ans743 = fold7.app(anf_arg812,(\"\"),line742);\nbreak;\ncase 1: var l813 = $ans743;\n// caller optimization;\n$ans743 = link10.app(l813,lines741);\n$step739 = 2;\nbreak;\ncase 2: ++R.GAS;\nreturn $ans743;\ndefault: R.ffi.throwSpinnakerError(L[107],$step739);\n}\n}\nif($step739 !== 2) {\n$ans743.stack[R.EXN_STACKHEIGHT++] = R.mAR($al744,$temp_lam740,$step739,[lines741,line742],[],$elidedFrames746);\n}\nreturn $ans743;\n};\nvar anf_arg1009 = R.mF($temp_lam740,\"for-body<line 149, column 4>\");\nvar anf_arg910 = output730.$var;\n$step733 = 1;\n$al736 = L[107];\n// omitting isFunction check;\n$ans735 = fold7.app(anf_arg1009,empty3,anf_arg910);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans735;\ndefault: R.ffi.throwSpinnakerError(L[106],$step733);\n}\n}\nif($step733 !== 1) {\n$ans735.stack[R.EXN_STACKHEIGHT++] = R.mAR($al736,$temp_lam734,$step733,[],[],$elidedFrames738);\n}\nreturn $ans735;\n};\nvar anf_assign1011 = R.mF($temp_lam734,\"gen-output\");\ngen$output1012.$var = anf_assign1011;\nR.nothing;\nvar $temp_lam1014 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__110($column1015,$items1016) {\nvar $step1013 = 0;\nvar $elidedFrames1021 = 0;\nvar $ans1018 = D;\nvar $al1019 = L[110];\nif(R.isAR($column1015)) {\n$step1013 = $column1015.step;\n$al1019 = $column1015.from;\n$ans1018 = $column1015.ans;\n$elidedFrames1021 = $column1015.elidedFrames;\ncolumn1015 = $column1015.args[0];\nitems1016 = $column1015.args[1];\nm1031 = $column1015.vars[0];\nfirst1024 = $column1015.vars[1];\nann_check_temp1022 = $column1015.vars[2];\nd1090 = $column1015.vars[3];\nvert1217 = $column1015.vars[4];\ni1030 = $column1015.vars[5];\nn1224 = $column1015.vars[6];\ncases1025 = $column1015.vars[7];\nflat1216 = $column1015.vars[8];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[110],2,$t,false);\n}\nvar column1015 = $column1015;\nvar items1016 = $items1016;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1018 = R.mC();\n}\nwhile(!R.isContinuation($ans1018)) {\nswitch($step1013) {\ncase 0: $step1013 = 1;\n$al1019 = L[156];\nR._cA(L[156],$type$Number3,column1015);\nbreak;\ncase 1: $step1013 = 2;\n$al1019 = L[157];\nR._cA(L[157],List9,items1016);\nbreak;\ncase 2: // caller optimization;\n$ans1018 = is$empty5.app(items1016);\nvar anf_if1275 = $ans1018;\n$step1013 = R.checkPyretTrue(anf_if1275)?3:4;\nbreak;\ncase 3: $step1013 = 29;\n$ans1018 = nothing2;\nbreak;\ncase 4: $al1019 = L[112];\nvar first1024 = G(items1016,\"first\",L[112]);\n$al1019 = L[113];\nvar i1030 = G(first1024,\"indent\",L[113]);\n$al1019 = L[114];\nvar m1031 = G(first1024,\"is-flat\",L[114]);\n$al1019 = L[115];\nvar cases1025 = G(first1024,\"d\",L[115]);\n$step1013 = 5;\n$al1019 = L[155];\nvar $ann$check1274 = R._cA(L[155],PPrintDoc521,cases1025);\nif(R.isContinuation($ann$check1274)) {\n$ans1018 = $ann$check1274;\n}\nbreak;\ncase 5: $al1019 = L[118];\n$step1013 = $cases_dispatch1273[cases1025.$name] || 28;\nbreak;\ncase 6: if(cases1025.$arity !== 2) {\nif(cases1025.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[117],2,cases1025.$arity,L[118],cases1025.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[117],true,L[118],cases1025.$loc);\n}\n}\nvar $fn1028 = cases1025.$constructor.$fieldNames;\nR.dF(cases1025.dict[$fn1028[0]],cases1025.$mut_fields_mask[0],false);\nR.dF(cases1025.dict[$fn1028[1]],cases1025.$mut_fields_mask[1],false);\n$al1019 = L[116];\nvar anf_arg342 = G(items1016,\"rest\",L[116]);\n$step1013 = 0;\n++$elidedFrames1021;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1018 = R.mC();\n}\ncolumn1015 = column1015;\nitems1016 = anf_arg342;\ncontinue;\ncase 7: if(cases1025.$arity !== 4) {\nif(cases1025.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[122],4,cases1025.$arity,L[118],cases1025.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[122],true,L[118],cases1025.$loc);\n}\n}\nvar $fn1033 = cases1025.$constructor.$fieldNames;\nR.dF(cases1025.dict[$fn1033[0]],cases1025.$mut_fields_mask[0],false);\nR.dF(cases1025.dict[$fn1033[1]],cases1025.$mut_fields_mask[1],false);\nR.dF(cases1025.dict[$fn1033[2]],cases1025.$mut_fields_mask[2],false);\nR.dF(cases1025.dict[$fn1033[3]],cases1025.$mut_fields_mask[3],false);\n$al1019 = L[119];\nvar anf_arg349 = G(first1024,\"d\",L[119]);\n$al1019 = L[120];\nvar anf_arg925 = G(items1016,\"rest\",L[120]);\n$step1013 = 8;\n$al1019 = L[121];\n// omitting isFunction check;\n$ans1018 = collect$concats691.$var.app(i1030,m1031,anf_arg349,anf_arg925);\nbreak;\ncase 8: var anf_arg346 = $ans1018;\n$step1013 = 0;\n++$elidedFrames1021;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1018 = R.mC();\n}\ncolumn1015 = column1015;\nitems1016 = anf_arg346;\ncontinue;\ncase 9: if(cases1025.$arity !== 3) {\nif(cases1025.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[125],3,cases1025.$arity,L[118],cases1025.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[125],true,L[118],cases1025.$loc);\n}\n}\nvar $fn1041 = cases1025.$constructor.$fieldNames;\nvar s1038 = R.dF(cases1025.dict[$fn1041[0]],cases1025.$mut_fields_mask[0],false);\nvar flat$width1039 = R.dF(cases1025.dict[$fn1041[1]],cases1025.$mut_fields_mask[1],false);\nR.dF(cases1025.dict[$fn1041[2]],cases1025.$mut_fields_mask[2],false);\n// caller optimization;\n$ans1018 = emit$text713.$var.app(s1038);\n$step1013 = 10;\n$al1019 = L[124];\n// omitting isFunction check;\n$ans1018 = _plus5.app(column1015,flat$width1039);\nbreak;\ncase 10: var anf_arg923 = $ans1018;\n$al1019 = L[123];\nvar anf_arg926 = G(items1016,\"rest\",L[123]);\n$step1013 = 0;\n++$elidedFrames1021;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1018 = R.mC();\n}\ncolumn1015 = anf_arg923;\nitems1016 = anf_arg926;\ncontinue;\ncase 11: if(cases1025.$arity !== 3) {\nif(cases1025.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[128],3,cases1025.$arity,L[118],cases1025.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[128],true,L[118],cases1025.$loc);\n}\n}\nvar $fn1083 = cases1025.$constructor.$fieldNames;\nvar n1042 = R.dF(cases1025.dict[$fn1083[0]],cases1025.$mut_fields_mask[0],false);\nR.dF(cases1025.dict[$fn1083[1]],cases1025.$mut_fields_mask[1],false);\nR.dF(cases1025.dict[$fn1083[2]],cases1025.$mut_fields_mask[2],false);\n// caller optimization;\n$ans1018 = emit$spaces722.$var.app(n1042);\n$step1013 = 12;\n$al1019 = L[127];\n// omitting isFunction check;\n$ans1018 = _plus5.app(column1015,n1042);\nbreak;\ncase 12: var anf_arg1077 = $ans1018;\n$al1019 = L[126];\nvar anf_arg1078 = G(items1016,\"rest\",L[126]);\n$step1013 = 0;\n++$elidedFrames1021;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1018 = R.mC();\n}\ncolumn1015 = anf_arg1077;\nitems1016 = anf_arg1078;\ncontinue;\ncase 13: if(cases1025.$arity !== 3) {\nif(cases1025.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[130],3,cases1025.$arity,L[118],cases1025.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[130],true,L[118],cases1025.$loc);\n}\n}\nvar $fn1088 = cases1025.$constructor.$fieldNames;\nvar d1086 = R.dF(cases1025.dict[$fn1088[0]],cases1025.$mut_fields_mask[0],false);\nR.dF(cases1025.dict[$fn1088[1]],cases1025.$mut_fields_mask[1],false);\nR.dF(cases1025.dict[$fn1088[2]],cases1025.$mut_fields_mask[2],false);\n// caller optimization;\n$ans1018 = item679.$var.app(column1015,m1031,d1086);\nvar anf_arg940 = $ans1018;\n$al1019 = L[129];\nvar anf_arg407 = G(items1016,\"rest\",L[129]);\n// caller optimization;\n$ans1018 = link10.app(anf_arg940,anf_arg407);\nvar anf_arg938 = $ans1018;\n$step1013 = 0;\n++$elidedFrames1021;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1018 = R.mC();\n}\ncolumn1015 = column1015;\nitems1016 = anf_arg938;\ncontinue;\ncase 14: if(cases1025.$arity !== 4) {\nif(cases1025.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[133],4,cases1025.$arity,L[118],cases1025.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[133],true,L[118],cases1025.$loc);\n}\n}\nvar $fn1148 = cases1025.$constructor.$fieldNames;\nvar n1089 = R.dF(cases1025.dict[$fn1148[0]],cases1025.$mut_fields_mask[0],false);\nvar d1090 = R.dF(cases1025.dict[$fn1148[1]],cases1025.$mut_fields_mask[1],false);\nR.dF(cases1025.dict[$fn1148[2]],cases1025.$mut_fields_mask[2],false);\nR.dF(cases1025.dict[$fn1148[3]],cases1025.$mut_fields_mask[3],false);\n$step1013 = 15;\n$al1019 = L[132];\n// omitting isFunction check;\n$ans1018 = _plus5.app(i1030,n1089);\nbreak;\ncase 15: var anf_arg941 = $ans1018;\n// caller optimization;\n$ans1018 = item679.$var.app(anf_arg941,m1031,d1090);\nvar anf_arg1146 = $ans1018;\n$al1019 = L[131];\nvar anf_arg411 = G(items1016,\"rest\",L[131]);\n// caller optimization;\n$ans1018 = link10.app(anf_arg1146,anf_arg411);\nvar anf_arg955 = $ans1018;\n$step1013 = 0;\n++$elidedFrames1021;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1018 = R.mC();\n}\ncolumn1015 = column1015;\nitems1016 = anf_arg955;\ncontinue;\ncase 16: if(cases1025.$arity !== 2) {\nif(cases1025.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[136],2,cases1025.$arity,L[118],cases1025.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[136],true,L[118],cases1025.$loc);\n}\n}\nvar $fn1214 = cases1025.$constructor.$fieldNames;\nR.dF(cases1025.dict[$fn1214[0]],cases1025.$mut_fields_mask[0],false);\nR.dF(cases1025.dict[$fn1214[1]],cases1025.$mut_fields_mask[1],false);\n$step1013 = R.checkPyretTrue(m1031)?17:18;\nbreak;\ncase 17: $step1013 = 29;\n$al1019 = L[134];\nif(typeof(raise1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1019,raise1);\n}\n$ans1018 = raise1.app((\"Impossible for HardLine to be flat\"));\nbreak;\ncase 18: // caller optimization;\n$ans1018 = emit$newline732.$var.app(i1030);\n$al1019 = L[135];\nvar anf_arg1210 = G(items1016,\"rest\",L[135]);\n$step1013 = 0;\n++$elidedFrames1021;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1018 = R.mC();\n}\ncolumn1015 = i1030;\nitems1016 = anf_arg1210;\ncontinue;\ncase 19: if(cases1025.$arity !== 4) {\nif(cases1025.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[138],4,cases1025.$arity,L[118],cases1025.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[138],true,L[118],cases1025.$loc);\n}\n}\nvar $fn1221 = cases1025.$constructor.$fieldNames;\nvar flat1216 = R.dF(cases1025.dict[$fn1221[0]],cases1025.$mut_fields_mask[0],false);\nvar vert1217 = R.dF(cases1025.dict[$fn1221[1]],cases1025.$mut_fields_mask[1],false);\nR.dF(cases1025.dict[$fn1221[2]],cases1025.$mut_fields_mask[2],false);\nR.dF(cases1025.dict[$fn1221[3]],cases1025.$mut_fields_mask[3],false);\n$step1013 = R.checkPyretTrue(m1031)?20:21;\nbreak;\ncase 20: $step1013 = 22;\n$ans1018 = flat1216;\nbreak;\ncase 21: $step1013 = 22;\n$ans1018 = vert1217;\nbreak;\ncase 22: var anf_arg953 = $ans1018;\n// caller optimization;\n$ans1018 = item679.$var.app(i1030,m1031,anf_arg953);\nvar anf_arg956 = $ans1018;\n$al1019 = L[137];\nvar anf_arg372 = G(items1016,\"rest\",L[137]);\n// caller optimization;\n$ans1018 = link10.app(anf_arg956,anf_arg372);\nvar anf_arg969 = $ans1018;\n$step1013 = 0;\n++$elidedFrames1021;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1018 = R.mC();\n}\ncolumn1015 = column1015;\nitems1016 = anf_arg969;\ncontinue;\ncase 23: if(cases1025.$arity !== 3) {\nif(cases1025.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[142],3,cases1025.$arity,L[118],cases1025.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[142],true,L[118],cases1025.$loc);\n}\n}\nvar $fn1226 = cases1025.$constructor.$fieldNames;\nvar n1224 = R.dF(cases1025.dict[$fn1226[0]],cases1025.$mut_fields_mask[0],false);\nR.dF(cases1025.dict[$fn1226[1]],cases1025.$mut_fields_mask[1],false);\nR.dF(cases1025.dict[$fn1226[2]],cases1025.$mut_fields_mask[2],false);\n$step1013 = R.checkPyretTrue(m1031)?24:25;\nbreak;\ncase 24: $al1019 = L[139];\nvar anf_arg373 = G(items1016,\"rest\",L[139]);\n$step1013 = 0;\n++$elidedFrames1021;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1018 = R.mC();\n}\ncolumn1015 = column1015;\nitems1016 = anf_arg373;\ncontinue;\ncase 25: // caller optimization;\n$ans1018 = emit$spaces722.$var.app(n1224);\n$step1013 = 26;\n$al1019 = L[141];\n// omitting isFunction check;\n$ans1018 = _plus5.app(column1015,n1224);\nbreak;\ncase 26: var anf_arg378 = $ans1018;\n$al1019 = L[140];\nvar anf_arg401 = G(items1016,\"rest\",L[140]);\n$step1013 = 0;\n++$elidedFrames1021;\nif(--R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1018 = R.mC();\n}\ncolumn1015 = anf_arg378;\nitems1016 = anf_arg401;\ncontinue;\ncase 27: if(cases1025.$arity !== 3) {\nif(cases1025.$arity >= 0) {\nR.ffi.throwCasesArityErrorC(L[154],3,cases1025.$arity,L[118],cases1025.$loc);\n} else {\nR.ffi.throwCasesSingletonErrorC(L[154],true,L[118],cases1025.$loc);\n}\n}\n$step1013 = 29;\n$al1019 = L[154];\nvar $temp_branch1265 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__118($d1229,$flat$width1262,$has$hardline1264) {\nvar $step1266 = 0;\nvar $elidedFrames1270 = 0;\nvar $ans1267 = D;\nvar $al1268 = L[153];\nif(R.isAR($d1229)) {\n$step1266 = $d1229.step;\n$al1268 = $d1229.from;\n$ans1267 = $d1229.ans;\n$elidedFrames1270 = $d1229.elidedFrames;\nd1229 = $d1229.args[0];\nflat$width1262 = $d1229.args[1];\nhas$hardline1264 = $d1229.args[2];\n} else {\nvar d1229 = $d1229;\nvar flat$width1262 = $flat$width1262;\nvar has$hardline1264 = $has$hardline1264;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1267 = R.mC();\n}\nwhile(!R.isContinuation($ans1267)) {\nswitch($step1266) {\ncase 0: $step1266 = R.checkPyretTrue(m1031)?1:2;\nbreak;\ncase 1: // caller optimization;\n$ans1267 = item679.$var.app(i1030,(true),d1229);\nvar anf_arg970 = $ans1267;\n$al1268 = L[143];\nvar anf_arg971 = G(items1016,\"rest\",L[143]);\n// caller optimization;\n$ans1267 = link10.app(anf_arg970,anf_arg971);\nvar anf_arg394 = $ans1267;\n$step1266 = 9;\n$al1268 = L[149];\n// omitting isFunction check;\n$ans1267 = process1026.$var.app(column1015,anf_arg394);\nbreak;\ncase 2: $step1266 = R.checkPyretTrue(has$hardline1264)?3:4;\nbreak;\ncase 3: // caller optimization;\n$ans1267 = item679.$var.app(i1030,(false),d1229);\nvar anf_arg1261 = $ans1267;\n$al1268 = L[144];\nvar anf_arg383 = G(items1016,\"rest\",L[144]);\n// caller optimization;\n$ans1267 = link10.app(anf_arg1261,anf_arg383);\nvar anf_arg384 = $ans1267;\n$step1266 = 9;\n$al1268 = L[150];\n// omitting isFunction check;\n$ans1267 = process1026.$var.app(column1015,anf_arg384);\nbreak;\ncase 4: $step1266 = 5;\n$al1268 = L[148];\n// omitting isFunction check;\n$ans1267 = _minus11.app(width697,column1015);\nbreak;\ncase 5: var anf_arg386 = $ans1267;\n$step1266 = 6;\n$al1268 = L[147];\n// omitting isFunction check;\n$ans1267 = _greaterequal2.app(anf_arg386,flat$width1262);\nbreak;\ncase 6: var anf_if1263 = $ans1267;\n$step1266 = R.checkPyretTrue(anf_if1263)?7:8;\nbreak;\ncase 7: // caller optimization;\n$ans1267 = item679.$var.app(i1030,(true),d1229);\nvar anf_arg389 = $ans1267;\n$al1268 = L[145];\nvar anf_arg62 = G(items1016,\"rest\",L[145]);\n// caller optimization;\n$ans1267 = link10.app(anf_arg389,anf_arg62);\nvar anf_arg63 = $ans1267;\n$step1266 = 9;\n$al1268 = L[151];\n// omitting isFunction check;\n$ans1267 = process1026.$var.app(column1015,anf_arg63);\nbreak;\ncase 8: // caller optimization;\n$ans1267 = item679.$var.app(i1030,(false),d1229);\nvar anf_arg392 = $ans1267;\n$al1268 = L[146];\nvar anf_arg395 = G(items1016,\"rest\",L[146]);\n// caller optimization;\n$ans1267 = link10.app(anf_arg392,anf_arg395);\nvar anf_arg398 = $ans1267;\n$step1266 = 9;\n$al1268 = L[152];\n// omitting isFunction check;\n$ans1267 = process1026.$var.app(column1015,anf_arg398);\nbreak;\ncase 9: ++R.GAS;\nreturn $ans1267;\ndefault: R.ffi.throwSpinnakerError(L[153],$step1266);\n}\n}\nif($step1266 !== 9) {\n$ans1267.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1268,$temp_branch1265,$step1266,[d1229,flat$width1262,has$hardline1264],[],$elidedFrames1270);\n}\nreturn $ans1267;\n};\n$ans1018 = cases1025.$app_fields($temp_branch1265,[false,false,false]);\nbreak;\ncase 28: $ans1018 = R.throwNoCasesMatched(L[118],cases1025);\n$step1013 = 29;\nbreak;\ncase 29: var ann_check_temp1022 = $ans1018;\n$step1013 = 30;\n$al1019 = L[111];\nvar $ann$check1023 = R._cA(L[111],$type$Nothing1,ann_check_temp1022);\nif(R.isContinuation($ann$check1023)) {\n$ans1018 = $ann$check1023;\n}\nbreak;\ncase 30: $step1013 = 31;\n$ans1018 = ann_check_temp1022;\nbreak;\ncase 31: ++R.GAS;\nreturn $ans1018;\ndefault: R.ffi.throwSpinnakerError(L[110],$step1013);\n}\n}\nif($step1013 !== 31) {\n$ans1018.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1019,$temp_lam1014,$step1013,[column1015,items1016],[m1031,first1024,ann_check_temp1022,d1090,vert1217,i1030,n1224,cases1025,flat1216],$elidedFrames1021);\n}\nreturn $ans1018;\n};\nvar anf_assign1277 = R.mF($temp_lam1014,\"process\");\nprocess1026.$var = anf_assign1277;\nR.nothing;\n$ans699 = R.getMaker1(list6,(\"make1\"),L[158],L[159]);\nvar anf_fun573 = $ans699;\n$al700 = L[160];\nvar anf_arg406 = G(doc698,\"flat-width\",L[160]);\n$al700 = L[161];\nvar anf_arg611 = G(doc698,\"has-hardline\",L[161]);\n// caller optimization;\n$ans699 = group663.$var.app(doc698,anf_arg406,anf_arg611);\nvar anf_arg104 = $ans699;\n// caller optimization;\n$ans699 = item679.$var.app((0),(false),anf_arg104);\nvar anf_arg105 = $ans699;\n$step695 = 2;\n$al700 = L[159];\nif(typeof(anf_fun573.app) !== \"function\") {\nR.ffi.throwNonFunApp($al700,anf_fun573);\n}\n$ans699 = anf_fun573.app(anf_arg105);\nbreak;\ncase 2: var anf_arg425 = $ans699;\n$step695 = 3;\n$al700 = L[163];\n// omitting isFunction check;\n$ans699 = process1026.$var.app((0),anf_arg425);\nbreak;\ncase 3: $step695 = 4;\n$al700 = L[162];\n// omitting isFunction check;\n$ans699 = gen$output1012.$var.app();\nbreak;\ncase 4: ++R.GAS;\nreturn $ans699;\ndefault: R.ffi.throwSpinnakerError(L[102],$step695);\n}\n}\nif($step695 !== 4) {\n$ans699.stack[R.EXN_STACKHEIGHT++] = R.mAR($al700,$temp_lam696,$step695,[width697,doc698],[process1026,gen$output1012],$elidedFrames702);\n}\nreturn $ans699;\n};\nvar anf_assign1279 = R.mF($temp_lam696,\"format\");\nformat533.$var = anf_assign1279;\nR.nothing;\n// caller optimization;\n$ans131 = mt$doc635.$var.app((0),(false));\nvar mt$doc1402 = $ans131;\n// caller optimization;\n$ans131 = hardline644.$var.app((0),(true));\nvar hardline1371 = $ans131;\nvar $temp_lam1281 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__165($d1282) {\nvar $step1280 = 0;\nvar $elidedFrames1286 = 0;\nvar $ans1283 = D;\nvar $al1284 = L[165];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[165],1,$t,false);\n}\nvar d1282 = $d1282;\n// callee optimization;\nwhile(!R.isContinuation($ans1283)) {\nswitch($step1280) {\ncase 0: $al1284 = L[166];\nvar anf_arg426 = G(d1282,\"flat-width\",L[166]);\n$al1284 = L[167];\nvar anf_arg428 = G(d1282,\"has-hardline\",L[167]);\n// caller optimization;\n$ans1283 = align655.$var.app(d1282,anf_arg426,anf_arg428);\n$step1280 = 1;\nbreak;\ncase 1: return $ans1283;\ndefault: R.ffi.throwSpinnakerError(L[165],$step1280);\n}\n}\nreturn $ans1283;\n};\nvar align1547 = R.mF($temp_lam1281,\"\");\nvar $temp_lam1289 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__168($d1290) {\nvar $step1288 = 0;\nvar $elidedFrames1294 = 0;\nvar $ans1291 = D;\nvar $al1292 = L[168];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[168],1,$t,false);\n}\nvar d1290 = $d1290;\n// callee optimization;\nwhile(!R.isContinuation($ans1291)) {\nswitch($step1288) {\ncase 0: $al1292 = L[169];\nvar anf_arg438 = G(d1290,\"flat-width\",L[169]);\n$al1292 = L[170];\nvar anf_arg440 = G(d1290,\"has-hardline\",L[170]);\n// caller optimization;\n$ans1291 = group663.$var.app(d1290,anf_arg438,anf_arg440);\n$step1288 = 1;\nbreak;\ncase 1: return $ans1291;\ndefault: R.ffi.throwSpinnakerError(L[168],$step1288);\n}\n}\nreturn $ans1291;\n};\nvar group1397 = R.mF($temp_lam1289,\"\");\nvar $temp_lam1298 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__171($flat1299,$vert1300) {\nvar $step1297 = 0;\nvar $elidedFrames1304 = 0;\nvar $ans1301 = D;\nvar $al1302 = L[171];\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[171],2,$t,false);\n}\nvar flat1299 = $flat1299;\nvar vert1300 = $vert1300;\n// callee optimization;\nwhile(!R.isContinuation($ans1301)) {\nswitch($step1297) {\ncase 0: $al1302 = L[172];\nvar anf_arg797 = G(flat1299,\"flat-width\",L[172]);\n$al1302 = L[173];\nvar anf_arg434 = G(flat1299,\"has-hardline\",L[173]);\n// caller optimization;\n$ans1301 = if$flat651.$var.app(flat1299,vert1300,anf_arg797,anf_arg434);\n$step1297 = 1;\nbreak;\ncase 1: return $ans1301;\ndefault: R.ffi.throwSpinnakerError(L[171],$step1297);\n}\n}\nreturn $ans1301;\n};\nvar if$flat1370 = R.mF($temp_lam1298,\"\");\nvar $temp_lam1309 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__174($n1310,$d1311) {\nvar $step1308 = 0;\nvar $elidedFrames1318 = 0;\nvar $ans1315 = D;\nvar $al1316 = L[174];\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[174],2,$t,false);\n}\nvar n1310 = $n1310;\nvar d1311 = $d1311;\n// callee optimization;\nwhile(!R.isContinuation($ans1315)) {\nswitch($step1308) {\ncase 0: $al1316 = L[175];\nvar anf_arg431 = G(d1311,\"flat-width\",L[175]);\n$al1316 = L[176];\nvar anf_arg432 = G(d1311,\"has-hardline\",L[176]);\n// caller optimization;\n$ans1315 = nest649.$var.app(n1310,d1311,anf_arg431,anf_arg432);\n$step1308 = 1;\nbreak;\ncase 1: return $ans1315;\ndefault: R.ffi.throwSpinnakerError(L[174],$step1308);\n}\n}\nreturn $ans1315;\n};\nvar nest1546 = R.mF($temp_lam1309,\"\");\nvar $temp_lam1321 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__177($fst1322,$snd1323) {\nvar $step1320 = 0;\nvar $elidedFrames1327 = 0;\nvar $ans1324 = D;\nvar $al1325 = L[177];\nif(R.isAR($fst1322)) {\n$step1320 = $fst1322.step;\n$al1325 = $fst1322.from;\n$ans1324 = $fst1322.ans;\n$elidedFrames1327 = $fst1322.elidedFrames;\nfst1322 = $fst1322.args[0];\nsnd1323 = $fst1322.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[177],2,$t,false);\n}\nvar fst1322 = $fst1322;\nvar snd1323 = $snd1323;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1324 = R.mC();\n}\nwhile(!R.isContinuation($ans1324)) {\nswitch($step1320) {\ncase 0: $step1320 = 1;\n$al1325 = L[178];\n// omitting isFunction check;\n$ans1324 = _plus5.app(fst1322,snd1323);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1324;\ndefault: R.ffi.throwSpinnakerError(L[177],$step1320);\n}\n}\nif($step1320 !== 1) {\n$ans1324.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1325,$temp_lam1321,$step1320,[fst1322,snd1323],[],$elidedFrames1327);\n}\nreturn $ans1324;\n};\nvar concat1720 = R.mF($temp_lam1321,\"\");\nvar $temp_lam1330 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__179($n1331) {\nvar $step1329 = 0;\nvar $elidedFrames1335 = 0;\nvar $ans1332 = D;\nvar $al1333 = L[179];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[179],1,$t,false);\n}\nvar n1331 = $n1331;\n// callee optimization;\nwhile(!R.isContinuation($ans1332)) {\nswitch($step1329) {\ncase 0: // caller optimization;\n$ans1332 = blank646.$var.app(n1331,n1331,(false));\n$step1329 = 1;\nbreak;\ncase 1: return $ans1332;\ndefault: R.ffi.throwSpinnakerError(L[179],$step1329);\n}\n}\nreturn $ans1332;\n};\nvar blank1369 = R.mF($temp_lam1330,\"\");\nvar $temp_lam1338 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__180($s1339) {\nvar $step1337 = 0;\nvar $elidedFrames1344 = 0;\nvar $ans1341 = D;\nvar $al1342 = L[180];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[180],1,$t,false);\n}\nvar s1339 = $s1339;\n// callee optimization;\nwhile(!R.isContinuation($ans1341)) {\nswitch($step1337) {\ncase 0: // caller optimization;\n$ans1341 = string$length1.app(s1339);\nvar anf_arg435 = $ans1341;\n// caller optimization;\n$ans1341 = str639.$var.app(s1339,anf_arg435,(false));\n$step1337 = 1;\nbreak;\ncase 1: return $ans1341;\ndefault: R.ffi.throwSpinnakerError(L[180],$step1337);\n}\n}\nreturn $ans1341;\n};\nvar str1355 = R.mF($temp_lam1338,\"\");\nvar number1359 = {\"$var\":D};\nvar $temp_lam1347 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__181($n1348) {\nvar $step1346 = 0;\nvar $elidedFrames1354 = 0;\nvar $ans1351 = D;\nvar $al1352 = L[181];\nif(R.isAR($n1348)) {\n$step1346 = $n1348.step;\n$al1352 = $n1348.from;\n$ans1351 = $n1348.ans;\n$elidedFrames1354 = $n1348.elidedFrames;\nn1348 = $n1348.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[181],1,$t,false);\n}\nvar n1348 = $n1348;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1351 = R.mC();\n}\nwhile(!R.isContinuation($ans1351)) {\nswitch($step1346) {\ncase 0: $step1346 = 1;\n$al1352 = L[183];\nR._cA(L[183],$type$Number3,n1348);\nbreak;\ncase 1: $step1346 = 2;\n$al1352 = L[182];\nif(typeof(tostring1.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1352,tostring1);\n}\n$ans1351 = tostring1.app(n1348);\nbreak;\ncase 2: var anf_arg436 = $ans1351;\n// caller optimization;\n$ans1351 = str1355.app(anf_arg436);\n$step1346 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1351;\ndefault: R.ffi.throwSpinnakerError(L[181],$step1346);\n}\n}\nif($step1346 !== 3) {\n$ans1351.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1352,$temp_lam1347,$step1346,[n1348],[],$elidedFrames1354);\n}\nreturn $ans1351;\n};\nvar anf_assign1358 = R.mF($temp_lam1347,\"number\");\nnumber1359.$var = anf_assign1358;\nR.nothing;\n// caller optimization;\n$ans131 = str1355.app((\"(\"));\nvar lparen1453 = $ans131;\n// caller optimization;\n$ans131 = str1355.app((\")\"));\nvar rparen1461 = $ans131;\n// caller optimization;\n$ans131 = str1355.app((\"{\"));\nvar lbrace1473 = $ans131;\n// caller optimization;\n$ans131 = str1355.app((\"}\"));\nvar rbrace1474 = $ans131;\n// caller optimization;\n$ans131 = str1355.app((\"[\"));\nvar lbrack1487 = $ans131;\n// caller optimization;\n$ans131 = str1355.app((\"]\"));\nvar rbrack1488 = $ans131;\n// caller optimization;\n$ans131 = str1355.app((\"<\"));\nvar langle1721 = $ans131;\n// caller optimization;\n$ans131 = str1355.app((\">\"));\nvar rangle1722 = $ans131;\n// caller optimization;\n$ans131 = str1355.app((\",\"));\nvar comma1375 = $ans131;\n// caller optimization;\n$ans131 = str1355.app((\";\"));\nvar semi1376 = $ans131;\nvar sbreak1374 = {\"$var\":D};\nvar $temp_lam1362 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__184($n1363) {\nvar $step1361 = 0;\nvar $elidedFrames1368 = 0;\nvar $ans1365 = D;\nvar $al1366 = L[184];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[184],1,$t,false);\n}\nvar n1363 = $n1363;\n// callee optimization;\nwhile(!R.isContinuation($ans1365)) {\nswitch($step1361) {\ncase 0: // caller optimization;\n$ans1365 = blank1369.app(n1363);\nvar anf_arg981 = $ans1365;\n// caller optimization;\n$ans1365 = if$flat1370.app(anf_arg981,hardline1371);\n$step1361 = 1;\nbreak;\ncase 1: return $ans1365;\ndefault: R.ffi.throwSpinnakerError(L[184],$step1361);\n}\n}\nreturn $ans1365;\n};\nvar anf_assign1373 = R.mF($temp_lam1362,\"sbreak\");\nsbreak1374.$var = anf_assign1373;\nR.nothing;\n// caller optimization;\n$ans131 = sbreak1374.$var.app((1));\nvar anf_arg1006 = $ans131;\n$step33 = 1;\n$al132 = L[282];\n// omitting isFunction check;\n$ans131 = _plus5.app(comma1375,anf_arg1006);\nbreak;\ncase 1: var commabreak1723 = $ans131;\n// caller optimization;\n$ans131 = sbreak1374.$var.app((1));\nvar anf_arg1008 = $ans131;\n$step33 = 2;\n$al132 = L[281];\n// omitting isFunction check;\n$ans131 = _plus5.app(semi1376,anf_arg1008);\nbreak;\ncase 2: var semibreak1724 = $ans131;\nvar flow$map1405 = {\"$var\":D};\nvar flow1424 = {\"$var\":D};\nvar vert1445 = {\"$var\":D};\nvar parens1464 = {\"$var\":D};\nvar braces1477 = {\"$var\":D};\nvar brackets1491 = {\"$var\":D};\nvar $temp_lam1380 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__185($sep1381,$f1382,$items1383) {\nvar $step1379 = 0;\nvar $elidedFrames1387 = 0;\nvar $ans1384 = D;\nvar $al1385 = L[185];\nif(R.isAR($sep1381)) {\n$step1379 = $sep1381.step;\n$al1385 = $sep1381.from;\n$ans1384 = $sep1381.ans;\n$elidedFrames1387 = $sep1381.elidedFrames;\nsep1381 = $sep1381.args[0];\nf1382 = $sep1381.args[1];\nitems1383 = $sep1381.args[2];\n} else {\nvar $l = arguments.length;\nif($l !== 3) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[185],3,$t,false);\n}\nvar sep1381 = $sep1381;\nvar f1382 = $f1382;\nvar items1383 = $items1383;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1384 = R.mC();\n}\nwhile(!R.isContinuation($ans1384)) {\nswitch($step1379) {\ncase 0: var $temp_lam1389 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__186($acc1390,$item1391) {\nvar $step1388 = 0;\nvar $elidedFrames1396 = 0;\nvar $ans1393 = D;\nvar $al1394 = L[186];\nif(R.isAR($acc1390)) {\n$step1388 = $acc1390.step;\n$al1394 = $acc1390.from;\n$ans1393 = $acc1390.ans;\n$elidedFrames1396 = $acc1390.elidedFrames;\nacc1390 = $acc1390.args[0];\nitem1391 = $acc1390.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[186],2,$t,false);\n}\nvar acc1390 = $acc1390;\nvar item1391 = $item1391;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1393 = R.mC();\n}\nwhile(!R.isContinuation($ans1393)) {\nswitch($step1388) {\ncase 0: // caller optimization;\n$ans1393 = is$mt$doc152.$var.app(acc1390);\nvar anf_if1398 = $ans1393;\n$step1388 = R.checkPyretTrue(anf_if1398)?1:2;\nbreak;\ncase 1: $step1388 = 5;\n$al1394 = L[187];\nif(typeof(f1382.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1394,f1382);\n}\n$ans1393 = f1382.app(item1391);\nbreak;\ncase 2: $step1388 = 3;\n$al1394 = L[190];\nif(typeof(f1382.app) !== \"function\") {\nR.ffi.throwNonFunApp($al1394,f1382);\n}\n$ans1393 = f1382.app(item1391);\nbreak;\ncase 3: var anf_arg464 = $ans1393;\n$step1388 = 4;\n$al1394 = L[189];\n// omitting isFunction check;\n$ans1393 = _plus5.app(sep1381,anf_arg464);\nbreak;\ncase 4: var anf_arg486 = $ans1393;\n// caller optimization;\n$ans1393 = group1397.app(anf_arg486);\nvar anf_arg458 = $ans1393;\n$step1388 = 5;\n$al1394 = L[188];\n// omitting isFunction check;\n$ans1393 = _plus5.app(acc1390,anf_arg458);\nbreak;\ncase 5: ++R.GAS;\nreturn $ans1393;\ndefault: R.ffi.throwSpinnakerError(L[186],$step1388);\n}\n}\nif($step1388 !== 5) {\n$ans1393.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1394,$temp_lam1389,$step1388,[acc1390,item1391],[],$elidedFrames1396);\n}\nreturn $ans1393;\n};\nvar anf_arg459 = R.mF($temp_lam1389,\"for-body<line 234, column 2>\");\n$step1379 = 1;\n$al1385 = L[186];\n// omitting isFunction check;\n$ans1384 = fold7.app(anf_arg459,mt$doc1402,items1383);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1384;\ndefault: R.ffi.throwSpinnakerError(L[185],$step1379);\n}\n}\nif($step1379 !== 1) {\n$ans1384.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1385,$temp_lam1380,$step1379,[sep1381,f1382,items1383],[],$elidedFrames1387);\n}\nreturn $ans1384;\n};\nvar anf_assign1404 = R.mF($temp_lam1380,\"flow-map\");\nflow$map1405.$var = anf_assign1404;\nR.nothing;\nvar $temp_lam1407 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__191($items1408) {\nvar $step1406 = 0;\nvar $elidedFrames1413 = 0;\nvar $ans1410 = D;\nvar $al1411 = L[191];\nif(R.isAR($items1408)) {\n$step1406 = $items1408.step;\n$al1411 = $items1408.from;\n$ans1410 = $items1408.ans;\n$elidedFrames1413 = $items1408.elidedFrames;\nitems1408 = $items1408.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[191],1,$t,false);\n}\nvar items1408 = $items1408;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1410 = R.mC();\n}\nwhile(!R.isContinuation($ans1410)) {\nswitch($step1406) {\ncase 0: // caller optimization;\n$ans1410 = sbreak1374.$var.app((1));\nvar anf_arg497 = $ans1410;\nvar $temp_lam1415 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__192($x1416) {\nvar $step1414 = 0;\nvar $elidedFrames1420 = 0;\nvar $ans1417 = D;\nvar $al1418 = L[192];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[192],1,$t,false);\n}\nvar x1416 = $x1416;\n// callee optimization;\nwhile(!R.isContinuation($ans1417)) {\nswitch($step1414) {\ncase 0: $step1414 = 1;\n$ans1417 = x1416;\nbreak;\ncase 1: return $ans1417;\ndefault: R.ffi.throwSpinnakerError(L[192],$step1414);\n}\n}\nreturn $ans1417;\n};\nvar anf_arg501 = R.mF($temp_lam1415,\"\");\n$step1406 = 1;\n$al1411 = L[193];\n// omitting isFunction check;\n$ans1410 = flow$map1405.$var.app(anf_arg497,anf_arg501,items1408);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1410;\ndefault: R.ffi.throwSpinnakerError(L[191],$step1406);\n}\n}\nif($step1406 !== 1) {\n$ans1410.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1411,$temp_lam1407,$step1406,[items1408],[],$elidedFrames1413);\n}\nreturn $ans1410;\n};\nvar anf_assign1423 = R.mF($temp_lam1407,\"flow\");\nflow1424.$var = anf_assign1423;\nR.nothing;\nvar $temp_lam1427 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__194($items1428) {\nvar $step1426 = 0;\nvar $elidedFrames1432 = 0;\nvar $ans1429 = D;\nvar $al1430 = L[194];\nif(R.isAR($items1428)) {\n$step1426 = $items1428.step;\n$al1430 = $items1428.from;\n$ans1429 = $items1428.ans;\n$elidedFrames1432 = $items1428.elidedFrames;\nitems1428 = $items1428.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[194],1,$t,false);\n}\nvar items1428 = $items1428;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1429 = R.mC();\n}\nwhile(!R.isContinuation($ans1429)) {\nswitch($step1426) {\ncase 0: var $temp_lam1434 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__195($x1435) {\nvar $step1433 = 0;\nvar $elidedFrames1439 = 0;\nvar $ans1436 = D;\nvar $al1437 = L[195];\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[195],1,$t,false);\n}\nvar x1435 = $x1435;\n// callee optimization;\nwhile(!R.isContinuation($ans1436)) {\nswitch($step1433) {\ncase 0: $step1433 = 1;\n$ans1436 = x1435;\nbreak;\ncase 1: return $ans1436;\ndefault: R.ffi.throwSpinnakerError(L[195],$step1433);\n}\n}\nreturn $ans1436;\n};\nvar anf_arg504 = R.mF($temp_lam1434,\"\");\n$step1426 = 1;\n$al1430 = L[196];\n// omitting isFunction check;\n$ans1429 = flow$map1405.$var.app(hardline1371,anf_arg504,items1428);\nbreak;\ncase 1: ++R.GAS;\nreturn $ans1429;\ndefault: R.ffi.throwSpinnakerError(L[194],$step1426);\n}\n}\nif($step1426 !== 1) {\n$ans1429.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1430,$temp_lam1427,$step1426,[items1428],[],$elidedFrames1432);\n}\nreturn $ans1429;\n};\nvar anf_assign1444 = R.mF($temp_lam1427,\"vert\");\nvert1445.$var = anf_assign1444;\nR.nothing;\nvar $temp_lam1447 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__197($d1448) {\nvar $step1446 = 0;\nvar $elidedFrames1452 = 0;\nvar $ans1449 = D;\nvar $al1450 = L[197];\nif(R.isAR($d1448)) {\n$step1446 = $d1448.step;\n$al1450 = $d1448.from;\n$ans1449 = $d1448.ans;\n$elidedFrames1452 = $d1448.elidedFrames;\nd1448 = $d1448.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[197],1,$t,false);\n}\nvar d1448 = $d1448;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1449 = R.mC();\n}\nwhile(!R.isContinuation($ans1449)) {\nswitch($step1446) {\ncase 0: $step1446 = 1;\n$al1450 = L[199];\n// omitting isFunction check;\n$ans1449 = _plus5.app(lparen1453,d1448);\nbreak;\ncase 1: var anf_arg1460 = $ans1449;\n$step1446 = 2;\n$al1450 = L[198];\n// omitting isFunction check;\n$ans1449 = _plus5.app(anf_arg1460,rparen1461);\nbreak;\ncase 2: var anf_arg304 = $ans1449;\n// caller optimization;\n$ans1449 = group1397.app(anf_arg304);\n$step1446 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1449;\ndefault: R.ffi.throwSpinnakerError(L[197],$step1446);\n}\n}\nif($step1446 !== 3) {\n$ans1449.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1450,$temp_lam1447,$step1446,[d1448],[],$elidedFrames1452);\n}\nreturn $ans1449;\n};\nvar anf_assign1463 = R.mF($temp_lam1447,\"parens\");\nparens1464.$var = anf_assign1463;\nR.nothing;\nvar $temp_lam1466 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__200($d1467) {\nvar $step1465 = 0;\nvar $elidedFrames1472 = 0;\nvar $ans1469 = D;\nvar $al1470 = L[200];\nif(R.isAR($d1467)) {\n$step1465 = $d1467.step;\n$al1470 = $d1467.from;\n$ans1469 = $d1467.ans;\n$elidedFrames1472 = $d1467.elidedFrames;\nd1467 = $d1467.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[200],1,$t,false);\n}\nvar d1467 = $d1467;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1469 = R.mC();\n}\nwhile(!R.isContinuation($ans1469)) {\nswitch($step1465) {\ncase 0: $step1465 = 1;\n$al1470 = L[202];\n// omitting isFunction check;\n$ans1469 = _plus5.app(lbrace1473,d1467);\nbreak;\ncase 1: var anf_arg580 = $ans1469;\n$step1465 = 2;\n$al1470 = L[201];\n// omitting isFunction check;\n$ans1469 = _plus5.app(anf_arg580,rbrace1474);\nbreak;\ncase 2: var anf_arg583 = $ans1469;\n// caller optimization;\n$ans1469 = group1397.app(anf_arg583);\n$step1465 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1469;\ndefault: R.ffi.throwSpinnakerError(L[200],$step1465);\n}\n}\nif($step1465 !== 3) {\n$ans1469.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1470,$temp_lam1466,$step1465,[d1467],[],$elidedFrames1472);\n}\nreturn $ans1469;\n};\nvar anf_assign1476 = R.mF($temp_lam1466,\"braces\");\nbraces1477.$var = anf_assign1476;\nR.nothing;\nvar $temp_lam1481 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__203($d1482) {\nvar $step1480 = 0;\nvar $elidedFrames1486 = 0;\nvar $ans1483 = D;\nvar $al1484 = L[203];\nif(R.isAR($d1482)) {\n$step1480 = $d1482.step;\n$al1484 = $d1482.from;\n$ans1483 = $d1482.ans;\n$elidedFrames1486 = $d1482.elidedFrames;\nd1482 = $d1482.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[203],1,$t,false);\n}\nvar d1482 = $d1482;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1483 = R.mC();\n}\nwhile(!R.isContinuation($ans1483)) {\nswitch($step1480) {\ncase 0: $step1480 = 1;\n$al1484 = L[205];\n// omitting isFunction check;\n$ans1483 = _plus5.app(lbrack1487,d1482);\nbreak;\ncase 1: var anf_arg581 = $ans1483;\n$step1480 = 2;\n$al1484 = L[204];\n// omitting isFunction check;\n$ans1483 = _plus5.app(anf_arg581,rbrack1488);\nbreak;\ncase 2: var anf_arg319 = $ans1483;\n// caller optimization;\n$ans1483 = group1397.app(anf_arg319);\n$step1480 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1483;\ndefault: R.ffi.throwSpinnakerError(L[203],$step1480);\n}\n}\nif($step1480 !== 3) {\n$ans1483.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1484,$temp_lam1481,$step1480,[d1482],[],$elidedFrames1486);\n}\nreturn $ans1483;\n};\nvar anf_assign1490 = R.mF($temp_lam1481,\"brackets\");\nbrackets1491.$var = anf_assign1490;\nR.nothing;\n// caller optimization;\n$ans131 = str1355.app((\"'\"));\nvar str$squote1513 = $ans131;\n// caller optimization;\n$ans131 = str1355.app((\"\\\"\"));\nvar str$dquote1499 = $ans131;\nvar dquote1504 = {\"$var\":D};\nvar squote1536 = {\"$var\":D};\nvar hang1550 = {\"$var\":D};\nvar prefix1562 = {\"$var\":D};\nvar infix1578 = {\"$var\":D};\nvar infix$break1593 = {\"$var\":D};\nvar surround1632 = {\"$var\":D};\nvar soft$surround1665 = {\"$var\":D};\nvar separate1687 = {\"$var\":D};\nvar surround$separate1702 = {\"$var\":D};\nvar label$align$surround1717 = {\"$var\":D};\nvar $temp_lam1493 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__206($s1494) {\nvar $step1492 = 0;\nvar $elidedFrames1498 = 0;\nvar $ans1495 = D;\nvar $al1496 = L[206];\nif(R.isAR($s1494)) {\n$step1492 = $s1494.step;\n$al1496 = $s1494.from;\n$ans1495 = $s1494.ans;\n$elidedFrames1498 = $s1494.elidedFrames;\ns1494 = $s1494.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[206],1,$t,false);\n}\nvar s1494 = $s1494;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1495 = R.mC();\n}\nwhile(!R.isContinuation($ans1495)) {\nswitch($step1492) {\ncase 0: $step1492 = 1;\n$al1496 = L[208];\n// omitting isFunction check;\n$ans1495 = _plus5.app(str$dquote1499,s1494);\nbreak;\ncase 1: var anf_arg603 = $ans1495;\n$step1492 = 2;\n$al1496 = L[207];\n// omitting isFunction check;\n$ans1495 = _plus5.app(anf_arg603,str$dquote1499);\nbreak;\ncase 2: var anf_arg327 = $ans1495;\n// caller optimization;\n$ans1495 = group1397.app(anf_arg327);\n$step1492 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1495;\ndefault: R.ffi.throwSpinnakerError(L[206],$step1492);\n}\n}\nif($step1492 !== 3) {\n$ans1495.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1496,$temp_lam1493,$step1492,[s1494],[],$elidedFrames1498);\n}\nreturn $ans1495;\n};\nvar anf_assign1503 = R.mF($temp_lam1493,\"dquote\");\ndquote1504.$var = anf_assign1503;\nR.nothing;\nvar $temp_lam1507 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__209($s1508) {\nvar $step1506 = 0;\nvar $elidedFrames1512 = 0;\nvar $ans1509 = D;\nvar $al1510 = L[209];\nif(R.isAR($s1508)) {\n$step1506 = $s1508.step;\n$al1510 = $s1508.from;\n$ans1509 = $s1508.ans;\n$elidedFrames1512 = $s1508.elidedFrames;\ns1508 = $s1508.args[0];\n} else {\nvar $l = arguments.length;\nif($l !== 1) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[209],1,$t,false);\n}\nvar s1508 = $s1508;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1509 = R.mC();\n}\nwhile(!R.isContinuation($ans1509)) {\nswitch($step1506) {\ncase 0: $step1506 = 1;\n$al1510 = L[211];\n// omitting isFunction check;\n$ans1509 = _plus5.app(str$squote1513,s1508);\nbreak;\ncase 1: var anf_arg330 = $ans1509;\n$step1506 = 2;\n$al1510 = L[210];\n// omitting isFunction check;\n$ans1509 = _plus5.app(anf_arg330,str$squote1513);\nbreak;\ncase 2: var anf_arg1532 = $ans1509;\n// caller optimization;\n$ans1509 = group1397.app(anf_arg1532);\n$step1506 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1509;\ndefault: R.ffi.throwSpinnakerError(L[209],$step1506);\n}\n}\nif($step1506 !== 3) {\n$ans1509.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1510,$temp_lam1507,$step1506,[s1508],[],$elidedFrames1512);\n}\nreturn $ans1509;\n};\nvar anf_assign1535 = R.mF($temp_lam1507,\"squote\");\nsquote1536.$var = anf_assign1535;\nR.nothing;\nvar $temp_lam1538 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__212($i1539,$d1540) {\nvar $step1537 = 0;\nvar $elidedFrames1545 = 0;\nvar $ans1542 = D;\nvar $al1543 = L[212];\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[212],2,$t,false);\n}\nvar i1539 = $i1539;\nvar d1540 = $d1540;\n// callee optimization;\nwhile(!R.isContinuation($ans1542)) {\nswitch($step1537) {\ncase 0: // caller optimization;\n$ans1542 = nest1546.app(i1539,d1540);\nvar anf_arg1136 = $ans1542;\n// caller optimization;\n$ans1542 = align1547.app(anf_arg1136);\n$step1537 = 1;\nbreak;\ncase 1: return $ans1542;\ndefault: R.ffi.throwSpinnakerError(L[212],$step1537);\n}\n}\nreturn $ans1542;\n};\nvar anf_assign1549 = R.mF($temp_lam1538,\"hang\");\nhang1550.$var = anf_assign1549;\nR.nothing;\nvar $temp_lam1552 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__213($n1715,$b1553,$x1554,$y1555) {\nvar $step1551 = 0;\nvar $elidedFrames1559 = 0;\nvar $ans1556 = D;\nvar $al1557 = L[213];\nif(R.isAR($n1715)) {\n$step1551 = $n1715.step;\n$al1557 = $n1715.from;\n$ans1556 = $n1715.ans;\n$elidedFrames1559 = $n1715.elidedFrames;\nn1715 = $n1715.args[0];\nb1553 = $n1715.args[1];\nx1554 = $n1715.args[2];\ny1555 = $n1715.args[3];\n} else {\nvar $l = arguments.length;\nif($l !== 4) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[213],4,$t,false);\n}\nvar n1715 = $n1715;\nvar b1553 = $b1553;\nvar x1554 = $x1554;\nvar y1555 = $y1555;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1556 = R.mC();\n}\nwhile(!R.isContinuation($ans1556)) {\nswitch($step1551) {\ncase 0: // caller optimization;\n$ans1556 = sbreak1374.$var.app(b1553);\nvar anf_arg667 = $ans1556;\n$step1551 = 1;\n$al1557 = L[215];\n// omitting isFunction check;\n$ans1556 = _plus5.app(anf_arg667,y1555);\nbreak;\ncase 1: var anf_arg335 = $ans1556;\n// caller optimization;\n$ans1556 = nest1546.app(n1715,anf_arg335);\nvar anf_arg336 = $ans1556;\n$step1551 = 2;\n$al1557 = L[214];\n// omitting isFunction check;\n$ans1556 = _plus5.app(x1554,anf_arg336);\nbreak;\ncase 2: var anf_arg340 = $ans1556;\n// caller optimization;\n$ans1556 = group1397.app(anf_arg340);\n$step1551 = 3;\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1556;\ndefault: R.ffi.throwSpinnakerError(L[213],$step1551);\n}\n}\nif($step1551 !== 3) {\n$ans1556.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1557,$temp_lam1552,$step1551,[n1715,b1553,x1554,y1555],[],$elidedFrames1559);\n}\nreturn $ans1556;\n};\nvar anf_assign1561 = R.mF($temp_lam1552,\"prefix\");\nprefix1562.$var = anf_assign1561;\nR.nothing;\nvar $temp_lam1565 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__216($n1566,$b1567,$op1568,$x1569,$y1570) {\nvar $step1564 = 0;\nvar $elidedFrames1574 = 0;\nvar $ans1571 = D;\nvar $al1572 = L[216];\nif(R.isAR($n1566)) {\n$step1564 = $n1566.step;\n$al1572 = $n1566.from;\n$ans1571 = $n1566.ans;\n$elidedFrames1574 = $n1566.elidedFrames;\nn1566 = $n1566.args[0];\nb1567 = $n1566.args[1];\nop1568 = $n1566.args[2];\nx1569 = $n1566.args[3];\ny1570 = $n1566.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[216],5,$t,false);\n}\nvar n1566 = $n1566;\nvar b1567 = $b1567;\nvar op1568 = $op1568;\nvar x1569 = $x1569;\nvar y1570 = $y1570;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1571 = R.mC();\n}\nwhile(!R.isContinuation($ans1571)) {\nswitch($step1564) {\ncase 0: $step1564 = 1;\n$al1572 = L[220];\nR._cA(L[220],$type$Number3,n1566);\nbreak;\ncase 1: $step1564 = 2;\n$al1572 = L[221];\nR._cA(L[221],$type$Number3,b1567);\nbreak;\ncase 2: $step1564 = 3;\n$al1572 = L[222];\nR._cA(L[222],PPrintDoc521,op1568);\nbreak;\ncase 3: $step1564 = 4;\n$al1572 = L[223];\nR._cA(L[223],PPrintDoc521,x1569);\nbreak;\ncase 4: $step1564 = 5;\n$al1572 = L[224];\nR._cA(L[224],PPrintDoc521,y1570);\nbreak;\ncase 5: // caller optimization;\n$ans1571 = blank1369.app(b1567);\nvar anf_arg671 = $ans1571;\n$step1564 = 6;\n$al1572 = L[219];\n// omitting isFunction check;\n$ans1571 = _plus5.app(x1569,anf_arg671);\nbreak;\ncase 6: var anf_arg343 = $ans1571;\n$step1564 = 7;\n$al1572 = L[218];\n// omitting isFunction check;\n$ans1571 = _plus5.app(anf_arg343,op1568);\nbreak;\ncase 7: var anf_arg344 = $ans1571;\n$step1564 = 8;\n$al1572 = L[217];\n// omitting isFunction check;\n$ans1571 = prefix1562.$var.app(n1566,b1567,anf_arg344,y1570);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans1571;\ndefault: R.ffi.throwSpinnakerError(L[216],$step1564);\n}\n}\nif($step1564 !== 8) {\n$ans1571.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1572,$temp_lam1565,$step1564,[n1566,b1567,op1568,x1569,y1570],[],$elidedFrames1574);\n}\nreturn $ans1571;\n};\nvar anf_assign1577 = R.mF($temp_lam1565,\"infix\");\ninfix1578.$var = anf_assign1577;\nR.nothing;\nvar $temp_lam1580 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__225($n1581,$b1582,$op1583,$x1584,$y1585) {\nvar $step1579 = 0;\nvar $elidedFrames1590 = 0;\nvar $ans1587 = D;\nvar $al1588 = L[225];\nif(R.isAR($n1581)) {\n$step1579 = $n1581.step;\n$al1588 = $n1581.from;\n$ans1587 = $n1581.ans;\n$elidedFrames1590 = $n1581.elidedFrames;\nn1581 = $n1581.args[0];\nb1582 = $n1581.args[1];\nop1583 = $n1581.args[2];\nx1584 = $n1581.args[3];\ny1585 = $n1581.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[225],5,$t,false);\n}\nvar n1581 = $n1581;\nvar b1582 = $b1582;\nvar op1583 = $op1583;\nvar x1584 = $x1584;\nvar y1585 = $y1585;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1587 = R.mC();\n}\nwhile(!R.isContinuation($ans1587)) {\nswitch($step1579) {\ncase 0: $step1579 = 1;\n$al1588 = L[229];\nR._cA(L[229],$type$Number3,n1581);\nbreak;\ncase 1: $step1579 = 2;\n$al1588 = L[230];\nR._cA(L[230],$type$Number3,b1582);\nbreak;\ncase 2: $step1579 = 3;\n$al1588 = L[231];\nR._cA(L[231],PPrintDoc521,op1583);\nbreak;\ncase 3: $step1579 = 4;\n$al1588 = L[232];\nR._cA(L[232],PPrintDoc521,x1584);\nbreak;\ncase 4: $step1579 = 5;\n$al1588 = L[233];\nR._cA(L[233],PPrintDoc521,y1585);\nbreak;\ncase 5: // caller optimization;\n$ans1587 = blank1369.app(b1582);\nvar anf_arg345 = $ans1587;\n$step1579 = 6;\n$al1588 = L[228];\n// omitting isFunction check;\n$ans1587 = _plus5.app(op1583,anf_arg345);\nbreak;\ncase 6: var anf_arg347 = $ans1587;\n$step1579 = 7;\n$al1588 = L[227];\n// omitting isFunction check;\n$ans1587 = _plus5.app(anf_arg347,y1585);\nbreak;\ncase 7: var anf_arg1209 = $ans1587;\n$step1579 = 8;\n$al1588 = L[226];\n// omitting isFunction check;\n$ans1587 = prefix1562.$var.app(n1581,b1582,x1584,anf_arg1209);\nbreak;\ncase 8: ++R.GAS;\nreturn $ans1587;\ndefault: R.ffi.throwSpinnakerError(L[225],$step1579);\n}\n}\nif($step1579 !== 8) {\n$ans1587.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1588,$temp_lam1580,$step1579,[n1581,b1582,op1583,x1584,y1585],[],$elidedFrames1590);\n}\nreturn $ans1587;\n};\nvar anf_assign1592 = R.mF($temp_lam1580,\"infix-break\");\ninfix$break1593.$var = anf_assign1592;\nR.nothing;\nvar $temp_lam1595 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__234($n1596,$b1597,$open1598,$contents1599,$close1600) {\nvar $step1594 = 0;\nvar $elidedFrames1605 = 0;\nvar $ans1602 = D;\nvar $al1603 = L[234];\nif(R.isAR($n1596)) {\n$step1594 = $n1596.step;\n$al1603 = $n1596.from;\n$ans1602 = $n1596.ans;\n$elidedFrames1605 = $n1596.elidedFrames;\nn1596 = $n1596.args[0];\nb1597 = $n1596.args[1];\nopen1598 = $n1596.args[2];\ncontents1599 = $n1596.args[3];\nclose1600 = $n1596.args[4];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[234],5,$t,false);\n}\nvar n1596 = $n1596;\nvar b1597 = $b1597;\nvar open1598 = $open1598;\nvar contents1599 = $contents1599;\nvar close1600 = $close1600;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1602 = R.mC();\n}\nwhile(!R.isContinuation($ans1602)) {\nswitch($step1594) {\ncase 0: $step1594 = 1;\n$al1603 = L[241];\nR._cA(L[241],$type$Number3,n1596);\nbreak;\ncase 1: $step1594 = 2;\n$al1603 = L[242];\nR._cA(L[242],$type$Number3,b1597);\nbreak;\ncase 2: $step1594 = 3;\n$al1603 = L[243];\nR._cA(L[243],PPrintDoc521,open1598);\nbreak;\ncase 3: $step1594 = 4;\n$al1603 = L[244];\nR._cA(L[244],PPrintDoc521,contents1599);\nbreak;\ncase 4: $step1594 = 5;\n$al1603 = L[245];\nR._cA(L[245],PPrintDoc521,close1600);\nbreak;\ncase 5: // caller optimization;\n$ans1602 = is$mt$doc152.$var.app(close1600);\nvar anf_if1259 = $ans1602;\n$step1594 = R.checkPyretTrue(anf_if1259)?6:9;\nbreak;\ncase 6: // caller optimization;\n$ans1602 = sbreak1374.$var.app(b1597);\nvar anf_arg1628 = $ans1602;\n$step1594 = 7;\n$al1603 = L[236];\n// omitting isFunction check;\n$ans1602 = _plus5.app(anf_arg1628,contents1599);\nbreak;\ncase 7: var anf_arg697 = $ans1602;\n// caller optimization;\n$ans1602 = nest1546.app(n1596,anf_arg697);\nvar anf_arg364 = $ans1602;\n$step1594 = 8;\n$al1603 = L[235];\n// omitting isFunction check;\n$ans1602 = _plus5.app(open1598,anf_arg364);\nbreak;\ncase 8: var anf_arg699 = $ans1602;\n// caller optimization;\n$ans1602 = group1397.app(anf_arg699);\n$step1594 = 14;\nbreak;\ncase 9: // caller optimization;\n$ans1602 = sbreak1374.$var.app(b1597);\nvar anf_arg701 = $ans1602;\n$step1594 = 10;\n$al1603 = L[240];\n// omitting isFunction check;\n$ans1602 = _plus5.app(anf_arg701,contents1599);\nbreak;\ncase 10: var anf_arg1254 = $ans1602;\n// caller optimization;\n$ans1602 = nest1546.app(n1596,anf_arg1254);\nvar anf_arg367 = $ans1602;\n$step1594 = 11;\n$al1603 = L[239];\n// omitting isFunction check;\n$ans1602 = _plus5.app(open1598,anf_arg367);\nbreak;\ncase 11: var anf_arg1258 = $ans1602;\n// caller optimization;\n$ans1602 = sbreak1374.$var.app(b1597);\nvar anf_arg368 = $ans1602;\n$step1594 = 12;\n$al1603 = L[238];\n// omitting isFunction check;\n$ans1602 = _plus5.app(anf_arg1258,anf_arg368);\nbreak;\ncase 12: var anf_arg369 = $ans1602;\n$step1594 = 13;\n$al1603 = L[237];\n// omitting isFunction check;\n$ans1602 = _plus5.app(anf_arg369,close1600);\nbreak;\ncase 13: var anf_arg371 = $ans1602;\n// caller optimization;\n$ans1602 = group1397.app(anf_arg371);\n$step1594 = 14;\nbreak;\ncase 14: ++R.GAS;\nreturn $ans1602;\ndefault: R.ffi.throwSpinnakerError(L[234],$step1594);\n}\n}\nif($step1594 !== 14) {\n$ans1602.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1603,$temp_lam1595,$step1594,[n1596,b1597,open1598,contents1599,close1600],[],$elidedFrames1605);\n}\nreturn $ans1602;\n};\nvar anf_assign1631 = R.mF($temp_lam1595,\"surround\");\nsurround1632.$var = anf_assign1631;\nR.nothing;\nvar $temp_lam1634 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__246($n1635,$b1636,$open1637,$contents1638,$close1639) {\nvar $step1633 = 0;\nvar $elidedFrames1643 = 0;\nvar $ans1640 = D;\nvar $al1641 = L[246];\nif(R.isAR($n1635)) {\n$step1633 = $n1635.step;\n$al1641 = $n1635.from;\n$ans1640 = $n1635.ans;\n$elidedFrames1643 = $n1635.elidedFrames;\nn1635 = $n1635.args[0];\nb1636 = $n1635.args[1];\nopen1637 = $n1635.args[2];\ncontents1638 = $n1635.args[3];\nclose1639 = $n1635.args[4];\nanf_arg769 = $n1635.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[246],5,$t,false);\n}\nvar n1635 = $n1635;\nvar b1636 = $b1636;\nvar open1637 = $open1637;\nvar contents1638 = $contents1638;\nvar close1639 = $close1639;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1640 = R.mC();\n}\nwhile(!R.isContinuation($ans1640)) {\nswitch($step1633) {\ncase 0: $step1633 = 1;\n$al1641 = L[253];\nR._cA(L[253],$type$Number3,n1635);\nbreak;\ncase 1: $step1633 = 2;\n$al1641 = L[254];\nR._cA(L[254],$type$Number3,b1636);\nbreak;\ncase 2: $step1633 = 3;\n$al1641 = L[255];\nR._cA(L[255],PPrintDoc521,open1637);\nbreak;\ncase 3: $step1633 = 4;\n$al1641 = L[256];\nR._cA(L[256],PPrintDoc521,contents1638);\nbreak;\ncase 4: $step1633 = 5;\n$al1641 = L[257];\nR._cA(L[257],PPrintDoc521,close1639);\nbreak;\ncase 5: // caller optimization;\n$ans1640 = is$mt$doc152.$var.app(close1639);\nvar anf_if1662 = $ans1640;\n$step1633 = R.checkPyretTrue(anf_if1662)?6:9;\nbreak;\ncase 6: // caller optimization;\n$ans1640 = sbreak1374.$var.app(b1636);\nvar anf_arg375 = $ans1640;\n$step1633 = 7;\n$al1641 = L[248];\n// omitting isFunction check;\n$ans1640 = _plus5.app(anf_arg375,contents1638);\nbreak;\ncase 7: var anf_arg376 = $ans1640;\n// caller optimization;\n$ans1640 = group1397.app(anf_arg376);\nvar anf_arg1659 = $ans1640;\n// caller optimization;\n$ans1640 = nest1546.app(n1635,anf_arg1659);\nvar anf_arg377 = $ans1640;\n$step1633 = 8;\n$al1641 = L[247];\n// omitting isFunction check;\n$ans1640 = _plus5.app(open1637,anf_arg377);\nbreak;\ncase 8: var anf_arg381 = $ans1640;\n// caller optimization;\n$ans1640 = group1397.app(anf_arg381);\n$step1633 = 14;\nbreak;\ncase 9: // caller optimization;\n$ans1640 = sbreak1374.$var.app(b1636);\nvar anf_arg761 = $ans1640;\n$step1633 = 10;\n$al1641 = L[252];\n// omitting isFunction check;\n$ans1640 = _plus5.app(anf_arg761,contents1638);\nbreak;\ncase 10: var anf_arg762 = $ans1640;\n// caller optimization;\n$ans1640 = group1397.app(anf_arg762);\nvar anf_arg765 = $ans1640;\n// caller optimization;\n$ans1640 = nest1546.app(n1635,anf_arg765);\nvar anf_arg1352 = $ans1640;\n$step1633 = 11;\n$al1641 = L[251];\n// omitting isFunction check;\n$ans1640 = _plus5.app(open1637,anf_arg1352);\nbreak;\ncase 11: var anf_arg769 = $ans1640;\n// caller optimization;\n$ans1640 = sbreak1374.$var.app(b1636);\nvar anf_arg789 = $ans1640;\n$step1633 = 12;\n$al1641 = L[250];\n// omitting isFunction check;\n$ans1640 = _plus5.app(anf_arg789,close1639);\nbreak;\ncase 12: var anf_arg1365 = $ans1640;\n// caller optimization;\n$ans1640 = group1397.app(anf_arg1365);\nvar anf_arg1661 = $ans1640;\n$step1633 = 13;\n$al1641 = L[249];\n// omitting isFunction check;\n$ans1640 = _plus5.app(anf_arg769,anf_arg1661);\nbreak;\ncase 13: var anf_arg781 = $ans1640;\n// caller optimization;\n$ans1640 = group1397.app(anf_arg781);\n$step1633 = 14;\nbreak;\ncase 14: ++R.GAS;\nreturn $ans1640;\ndefault: R.ffi.throwSpinnakerError(L[246],$step1633);\n}\n}\nif($step1633 !== 14) {\n$ans1640.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1641,$temp_lam1634,$step1633,[n1635,b1636,open1637,contents1638,close1639],[anf_arg769],$elidedFrames1643);\n}\nreturn $ans1640;\n};\nvar anf_assign1664 = R.mF($temp_lam1634,\"soft-surround\");\nsoft$surround1665.$var = anf_assign1664;\nR.nothing;\nvar $temp_lam1667 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__258($sep1668,$docs1669) {\nvar $step1666 = 0;\nvar $elidedFrames1673 = 0;\nvar $ans1670 = D;\nvar $al1671 = L[258];\nif(R.isAR($sep1668)) {\n$step1666 = $sep1668.step;\n$al1671 = $sep1668.from;\n$ans1670 = $sep1668.ans;\n$elidedFrames1673 = $sep1668.elidedFrames;\nsep1668 = $sep1668.args[0];\ndocs1669 = $sep1668.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[258],2,$t,false);\n}\nvar sep1668 = $sep1668;\nvar docs1669 = $docs1669;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1670 = R.mC();\n}\nwhile(!R.isContinuation($ans1670)) {\nswitch($step1666) {\ncase 0: $step1666 = 1;\n$al1671 = L[262];\nR._cA(L[262],PPrintDoc521,sep1668);\nbreak;\ncase 1: $step1666 = 2;\n$al1671 = L[263];\nR._cA(L[263],List9,docs1669);\nbreak;\ncase 2: var $temp_lam1675 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__259($acc1676,$d1677) {\nvar $step1674 = 0;\nvar $elidedFrames1681 = 0;\nvar $ans1678 = D;\nvar $al1679 = L[259];\nif(R.isAR($acc1676)) {\n$step1674 = $acc1676.step;\n$al1679 = $acc1676.from;\n$ans1678 = $acc1676.ans;\n$elidedFrames1681 = $acc1676.elidedFrames;\nacc1676 = $acc1676.args[0];\nd1677 = $acc1676.args[1];\n} else {\nvar $l = arguments.length;\nif($l !== 2) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[259],2,$t,false);\n}\nvar acc1676 = $acc1676;\nvar d1677 = $d1677;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1678 = R.mC();\n}\nwhile(!R.isContinuation($ans1678)) {\nswitch($step1674) {\ncase 0: // caller optimization;\n$ans1678 = is$mt$doc152.$var.app(d1677);\nvar anf_if1684 = $ans1678;\n$step1674 = R.checkPyretTrue(anf_if1684)?1:2;\nbreak;\ncase 1: $step1674 = 6;\n$ans1678 = acc1676;\nbreak;\ncase 2: // caller optimization;\n$ans1678 = is$mt$doc152.$var.app(acc1676);\nvar anf_if1682 = $ans1678;\n$step1674 = R.checkPyretTrue(anf_if1682)?3:4;\nbreak;\ncase 3: $step1674 = 6;\n$ans1678 = d1677;\nbreak;\ncase 4: $step1674 = 5;\n$al1679 = L[261];\n// omitting isFunction check;\n$ans1678 = _plus5.app(acc1676,sep1668);\nbreak;\ncase 5: var anf_arg790 = $ans1678;\n$step1674 = 6;\n$al1679 = L[260];\n// omitting isFunction check;\n$ans1678 = _plus5.app(anf_arg790,d1677);\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1678;\ndefault: R.ffi.throwSpinnakerError(L[259],$step1674);\n}\n}\nif($step1674 !== 6) {\n$ans1678.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1679,$temp_lam1675,$step1674,[acc1676,d1677],[],$elidedFrames1681);\n}\nreturn $ans1678;\n};\nvar anf_arg1383 = R.mF($temp_lam1675,\"for-body<line 270, column 2>\");\n$step1666 = 3;\n$al1671 = L[259];\n// omitting isFunction check;\n$ans1670 = fold7.app(anf_arg1383,mt$doc1402,docs1669);\nbreak;\ncase 3: ++R.GAS;\nreturn $ans1670;\ndefault: R.ffi.throwSpinnakerError(L[258],$step1666);\n}\n}\nif($step1666 !== 3) {\n$ans1670.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1671,$temp_lam1667,$step1666,[sep1668,docs1669],[],$elidedFrames1673);\n}\nreturn $ans1670;\n};\nvar anf_assign487 = R.mF($temp_lam1667,\"separate\");\nseparate1687.$var = anf_assign487;\nR.nothing;\nvar $temp_lam1689 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__264($n1690,$b1691,$void1692,$open1693,$sep1694,$close1695,$docs1696) {\nvar $step1688 = 0;\nvar $elidedFrames1700 = 0;\nvar $ans1697 = D;\nvar $al1698 = L[264];\nif(R.isAR($n1690)) {\n$step1688 = $n1690.step;\n$al1698 = $n1690.from;\n$ans1697 = $n1690.ans;\n$elidedFrames1700 = $n1690.elidedFrames;\nn1690 = $n1690.args[0];\nb1691 = $n1690.args[1];\nvoid1692 = $n1690.args[2];\nopen1693 = $n1690.args[3];\nsep1694 = $n1690.args[4];\nclose1695 = $n1690.args[5];\ndocs1696 = $n1690.args[6];\n} else {\nvar $l = arguments.length;\nif($l !== 7) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[264],7,$t,false);\n}\nvar n1690 = $n1690;\nvar b1691 = $b1691;\nvar void1692 = $void1692;\nvar open1693 = $open1693;\nvar sep1694 = $sep1694;\nvar close1695 = $close1695;\nvar docs1696 = $docs1696;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1697 = R.mC();\n}\nwhile(!R.isContinuation($ans1697)) {\nswitch($step1688) {\ncase 0: $step1688 = 1;\n$al1698 = L[267];\nR._cA(L[267],$type$Number3,n1690);\nbreak;\ncase 1: $step1688 = 2;\n$al1698 = L[268];\nR._cA(L[268],$type$Number3,b1691);\nbreak;\ncase 2: $step1688 = 3;\n$al1698 = L[269];\nR._cA(L[269],PPrintDoc521,void1692);\nbreak;\ncase 3: $step1688 = 4;\n$al1698 = L[270];\nR._cA(L[270],PPrintDoc521,open1693);\nbreak;\ncase 4: $step1688 = 5;\n$al1698 = L[271];\nR._cA(L[271],PPrintDoc521,sep1694);\nbreak;\ncase 5: $step1688 = 6;\n$al1698 = L[272];\nR._cA(L[272],PPrintDoc521,close1695);\nbreak;\ncase 6: $step1688 = 7;\n$al1698 = L[273];\nR._cA(L[273],List9,docs1696);\nbreak;\ncase 7: // caller optimization;\n$ans1697 = is$empty5.app(docs1696);\nvar anf_if863 = $ans1697;\n$step1688 = R.checkPyretTrue(anf_if863)?8:9;\nbreak;\ncase 8: $step1688 = 11;\n$ans1697 = void1692;\nbreak;\ncase 9: $step1688 = 10;\n$al1698 = L[266];\n// omitting isFunction check;\n$ans1697 = separate1687.$var.app(sep1694,docs1696);\nbreak;\ncase 10: var anf_arg1504 = $ans1697;\n$step1688 = 11;\n$al1698 = L[265];\n// omitting isFunction check;\n$ans1697 = surround1632.$var.app(n1690,b1691,open1693,anf_arg1504,close1695);\nbreak;\ncase 11: ++R.GAS;\nreturn $ans1697;\ndefault: R.ffi.throwSpinnakerError(L[264],$step1688);\n}\n}\nif($step1688 !== 11) {\n$ans1697.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1698,$temp_lam1689,$step1688,[n1690,b1691,void1692,open1693,sep1694,close1695,docs1696],[],$elidedFrames1700);\n}\nreturn $ans1697;\n};\nvar anf_assign512 = R.mF($temp_lam1689,\"surround-separate\");\nsurround$separate1702.$var = anf_assign512;\nR.nothing;\nvar $temp_lam1704 = function _572b07b7120b9de3f2e385703e839d88b6dc3832c2c04381348667abfb40db74__274($label1705,$open1706,$sep1707,$contents1708,$close1709) {\nvar $step1703 = 0;\nvar $elidedFrames1714 = 0;\nvar $ans1711 = D;\nvar $al1712 = L[274];\nif(R.isAR($label1705)) {\n$step1703 = $label1705.step;\n$al1712 = $label1705.from;\n$ans1711 = $label1705.ans;\n$elidedFrames1714 = $label1705.elidedFrames;\nlabel1705 = $label1705.args[0];\nopen1706 = $label1705.args[1];\nsep1707 = $label1705.args[2];\ncontents1708 = $label1705.args[3];\nclose1709 = $label1705.args[4];\nanf_arg847 = $label1705.vars[0];\n} else {\nvar $l = arguments.length;\nif($l !== 5) {\nvar $t = new Array($l);\nfor(var $i = 0;$i < $l;++$i) {\n$t[$i] = arguments[$i];\n}\nR.cAC(L[274],5,$t,false);\n}\nvar label1705 = $label1705;\nvar open1706 = $open1706;\nvar sep1707 = $sep1707;\nvar contents1708 = $contents1708;\nvar close1709 = $close1709;\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans1711 = R.mC();\n}\nwhile(!R.isContinuation($ans1711)) {\nswitch($step1703) {\ncase 0: $step1703 = 1;\n$al1712 = L[279];\n// omitting isFunction check;\n$ans1711 = separate1687.$var.app(sep1707,contents1708);\nbreak;\ncase 1: var anf_arg843 = $ans1711;\n// caller optimization;\n$ans1711 = align1547.app(anf_arg843);\nvar anf_arg844 = $ans1711;\n$step1703 = 2;\n$al1712 = L[278];\n// omitting isFunction check;\n$ans1711 = _plus5.app(open1706,anf_arg844);\nbreak;\ncase 2: var anf_arg847 = $ans1711;\n// caller optimization;\n$ans1711 = sbreak1374.$var.app((0));\nvar anf_arg528 = $ans1711;\n$step1703 = 3;\n$al1712 = L[277];\n// omitting isFunction check;\n$ans1711 = _plus5.app(anf_arg528,close1709);\nbreak;\ncase 3: var anf_arg543 = $ans1711;\n// caller optimization;\n$ans1711 = group1397.app(anf_arg543);\nvar anf_arg547 = $ans1711;\n$step1703 = 4;\n$al1712 = L[276];\n// omitting isFunction check;\n$ans1711 = _plus5.app(anf_arg847,anf_arg547);\nbreak;\ncase 4: var anf_arg1581 = $ans1711;\n// caller optimization;\n$ans1711 = align1547.app(anf_arg1581);\nvar anf_arg1587 = $ans1711;\n$step1703 = 5;\n$al1712 = L[275];\n// omitting isFunction check;\n$ans1711 = _plus5.app(label1705,anf_arg1587);\nbreak;\ncase 5: var anf_arg852 = $ans1711;\n// caller optimization;\n$ans1711 = group1397.app(anf_arg852);\n$step1703 = 6;\nbreak;\ncase 6: ++R.GAS;\nreturn $ans1711;\ndefault: R.ffi.throwSpinnakerError(L[274],$step1703);\n}\n}\nif($step1703 !== 6) {\n$ans1711.stack[R.EXN_STACKHEIGHT++] = R.mAR($al1712,$temp_lam1704,$step1703,[label1705,open1706,sep1707,contents1708,close1709],[anf_arg847],$elidedFrames1714);\n}\nreturn $ans1711;\n};\nvar anf_assign1716 = R.mF($temp_lam1704,\"label-align-surround\");\nlabel$align$surround1717.$var = anf_assign1716;\nR.nothing;\n$step33 = 3;\n$ans131 = R.maybeMethodCall2(builtins1,\"trace-value\",L[280],L[280],nothing2);\nbreak;\ncase 3: var answer1725 = $ans131;\n$step33 = 4;\n$ans131 = R.maybeMethodCall0(builtins1,\"current-checker\",L[92]);\nbreak;\ncase 4: var anf_method_obj1718 = $ans131;\n$step33 = 5;\n$ans131 = R.maybeMethodCall0(anf_method_obj1718,\"results\",L[92]);\nbreak;\ncase 5: var checks1726 = $ans131;\n$step33 = 6;\n$ans131 = R.mO({\"answer\":answer1725,\n\"namespace\":NAMESPACE,\n\"locations\":L,\n\"defined-modules\":{\"VS\":VS15},\n\"defined-values\":{\"braces\":braces1477.$var,\n\"rbrace\":rbrace1474,\n\"soft-surround\":soft$surround1665.$var,\n\"rangle\":rangle1722,\n\"is-hardline\":is$hardline642.$var,\n\"is-align\":is$align653.$var,\n\"infix-break\":infix$break1593.$var,\n\"separate\":separate1687.$var,\n\"str-squote\":str$squote1513,\n\"align\":align1547,\n\"is-if-flat\":is$if$flat650.$var,\n\"rbrack\":rbrack1488,\n\"lbrace\":lbrace1473,\n\"langle\":langle1721,\n\"parens\":parens1464.$var,\n\"squote\":squote1536.$var,\n\"if-flat\":if$flat1370,\n\"number\":number1359.$var,\n\"commabreak\":commabreak1723,\n\"brackets\":brackets1491.$var,\n\"sbreak\":sbreak1374.$var,\n\"lbrack\":lbrack1487,\n\"flow\":flow1424.$var,\n\"is-str\":is$str637.$var,\n\"semi\":semi1376,\n\"infix\":infix1578.$var,\n\"vert\":vert1445.$var,\n\"str\":str1355,\n\"semibreak\":semibreak1724,\n\"is-blank\":is$blank645.$var,\n\"mt-doc\":mt$doc1402,\n\"hang\":hang1550.$var,\n\"prefix\":prefix1562.$var,\n\"surround-separate\":surround$separate1702.$var,\n\"item\":item679.$var,\n\"blank\":blank1369,\n\"concat\":concat1720,\n\"str-dquote\":str$dquote1499,\n\"is-mt-doc\":is$mt$doc152.$var,\n\"comma\":comma1375,\n\"align-spaces\":align$spaces659.$var,\n\"is-item\":is$item677.$var,\n\"is-Item\":is$Item675.$var,\n\"is-concat\":is$concat647.$var,\n\"format\":format533.$var,\n\"dquote\":dquote1504.$var,\n\"nest\":nest1546,\n\"is-PPrintDoc\":is$PPrintDoc632.$var,\n\"is-align-spaces\":is$align$spaces657.$var,\n\"rparen\":rparen1461,\n\"is-nest\":is$nest648.$var,\n\"is-group\":is$group661.$var,\n\"collect-concats\":collect$concats691.$var,\n\"flow-map\":flow$map1405.$var,\n\"lparen\":lparen1453,\n\"surround\":surround1632.$var,\n\"group\":group1397,\n\"label-align-surround\":label$align$surround1717.$var,\n\"hardline\":hardline1371},\n\"defined-types\":{\"Item\":Item1719,\n\"PPrintDoc\":PPrintDoc521},\n\"provide-plus-types\":R.mO({\"values\":R.mO({\"mt-doc\":mt$doc1402,\n\"is-mt-doc\":is$mt$doc152.$var,\n\"str\":str1355,\n\"number\":number1359.$var,\n\"hardline\":hardline1371,\n\"blank\":blank1369,\n\"sbreak\":sbreak1374.$var,\n\"concat\":concat1720,\n\"nest\":nest1546,\n\"if-flat\":if$flat1370,\n\"group\":group1397,\n\"flow\":flow1424.$var,\n\"flow-map\":flow$map1405.$var,\n\"vert\":vert1445.$var,\n\"parens\":parens1464.$var,\n\"braces\":braces1477.$var,\n\"brackets\":brackets1491.$var,\n\"dquote\":dquote1504.$var,\n\"squote\":squote1536.$var,\n\"align\":align1547,\n\"hang\":hang1550.$var,\n\"prefix\":prefix1562.$var,\n\"infix\":infix1578.$var,\n\"infix-break\":infix$break1593.$var,\n\"separate\":separate1687.$var,\n\"surround\":surround1632.$var,\n\"soft-surround\":soft$surround1665.$var,\n\"surround-separate\":surround$separate1702.$var,\n\"label-align-surround\":label$align$surround1717.$var,\n\"lparen\":lparen1453,\n\"rparen\":rparen1461,\n\"lbrace\":lbrace1473,\n\"rbrace\":rbrace1474,\n\"lbrack\":lbrack1487,\n\"rbrack\":rbrack1488,\n\"langle\":langle1721,\n\"rangle\":rangle1722,\n\"comma\":comma1375,\n\"commabreak\":commabreak1723,\n\"semi\":semi1376,\n\"semibreak\":semibreak1724,\n\"is-PPrintDoc\":is$PPrintDoc632.$var,\n\"is-str\":is$str637.$var,\n\"is-hardline\":is$hardline642.$var,\n\"is-blank\":is$blank645.$var,\n\"is-concat\":is$concat647.$var,\n\"is-nest\":is$nest648.$var,\n\"is-if-flat\":is$if$flat650.$var,\n\"is-align\":is$align653.$var,\n\"align-spaces\":align$spaces659.$var,\n\"is-align-spaces\":is$align$spaces657.$var,\n\"is-group\":is$group661.$var,\n\"is-Item\":is$Item675.$var,\n\"item\":item679.$var,\n\"is-item\":is$item677.$var}),\n\"types\":{\"PPrintDoc\":PPrintDoc521,\n\"Item\":Item1719},\n\"modules\":{}}),\n\"checks\":checks1726});\nbreak;\ncase 6: ++R.GAS;\nreturn $ans131;\ndefault: R.ffi.throwSpinnakerError(L[283],$step33);\n}\n}\nif($step33 !== 6) {\n$ans131.stack[R.EXN_STACKHEIGHT++] = R.mAR($al132,$toplevel34,$step33,[],[is$blank645,is$str637,comma1375,dquote1504,soft$surround1665,brackets1491,concat1720,sbreak1374,vert1445,semi1376,is$group661,is$PPrintDoc632,blank1369,lbrack1487,is$if$flat650,str1355,flow1424,infix$break1593,str$dquote1499,is$align$spaces657,lbrace1473,parens1464,infix1578,Item1719,is$Item675,semibreak1724,rbrack1488,number1359,commabreak1723,is$align653,is$item677,is$mt$doc152,hardline1371,squote1536,langle1721,label$align$surround1717,rbrace1474,if$flat1370,separate1687,is$concat647,flow$map1405,lparen1453,braces1477,surround$separate1702,align$spaces659,rangle1722,group1397,align1547,rparen1461,is$nest648,surround1632,is$hardline642,PPrintDoc521,item679,str$squote1513,format533,mt$doc1402,answer1725,hang1550,collect$concats691,nest1546,prefix1562],$elidedFrames134);\n}\nreturn $ans131;\n};\nreturn R.safeCall($toplevel34,function module_load(moduleVal) {\nR.modules[\"$builtin://pprint16\"] = moduleVal;\nreturn moduleVal;\n},\"Evaluating $toplevel\");\n}",
"nativeRequires":[],
"provides":{"modules":{},
"values":{"hardline":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
208,
0,
7147,
208,
35,
7182],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"label-align-surround":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
33,
2,
598,
33,
44,
640],
"definition-bind-site":["builtin://pprint",
283,
0,
9857,
285,
3,
10010],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"label-align-surround",
"typ":"tany"},
"group":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
210,
0,
7249,
210,
65,
7314],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"group",
"typ":"tany"},
"surround":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
30,
2,
504,
30,
20,
522],
"definition-bind-site":["builtin://pprint",
258,
0,
8910,
262,
3,
9160],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"surround",
"typ":"tany"},
"lparen":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
34,
2,
644,
34,
16,
658],
"definition-bind-site":["builtin://pprint",
218,
0,
7674,
218,
17,
7691],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"flow-map":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
17,
2,
260,
17,
20,
278],
"definition-bind-site":["builtin://pprint",
233,
0,
7960,
239,
3,
8127],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"flow-map",
"typ":"tany"},
"is-group":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
64,
2,
1671,
64,
72,
1741],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-group",
"typ":"tany"},
"is-nest":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
60,
2,
1334,
60,
89,
1421],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-nest",
"typ":"tany"},
"rparen":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
35,
2,
662,
35,
16,
676],
"definition-bind-site":["builtin://pprint",
219,
0,
7692,
219,
17,
7709],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-align-spaces":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
63,
2,
1594,
63,
76,
1668],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-align-spaces",
"typ":"tany"},
"is-PPrintDoc":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
54,
0,
966,
92,
3,
2986],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"nest":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
212,
0,
7409,
212,
69,
7478],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"nest",
"typ":"tany"},
"dquote":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
22,
2,
354,
22,
16,
368],
"definition-bind-site":["builtin://pprint",
247,
0,
8437,
247,
53,
8490],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"dquote",
"typ":"tany"},
"is-concat":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
59,
2,
1240,
59,
93,
1331],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-concat",
"typ":"tany"},
"is-Item":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
93,
0,
2987,
95,
3,
3064],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-item":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
94,
2,
3000,
94,
62,
3060],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-item",
"typ":"tany"},
"align-spaces":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
63,
2,
1594,
63,
76,
1668],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"align-spaces",
"typ":"tany"},
"comma":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
42,
2,
788,
42,
14,
800],
"definition-bind-site":["builtin://pprint",
226,
0,
7818,
226,
16,
7834],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-mt-doc":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
55,
2,
984,
55,
57,
1039],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-mt-doc",
"typ":"tany"},
"concat":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
213,
0,
7479,
213,
44,
7523],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"concat",
"typ":"tany"},
"blank":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
214,
0,
7524,
214,
45,
7569],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"blank",
"typ":"tany"},
"item":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
94,
2,
3000,
94,
62,
3060],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"item",
"typ":"tany"},
"surround-separate":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
32,
2,
558,
32,
38,
594],
"definition-bind-site":["builtin://pprint",
277,
0,
9624,
281,
3,
9855],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"surround-separate",
"typ":"tany"},
"prefix":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
26,
2,
420,
26,
16,
434],
"definition-bind-site":["builtin://pprint",
251,
0,
8584,
251,
61,
8645],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"prefix",
"typ":"tany"},
"hang":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
25,
2,
406,
25,
12,
416],
"definition-bind-site":["builtin://pprint",
250,
0,
8546,
250,
37,
8583],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":2,
"name":"hang",
"typ":"tany"},
"mt-doc":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
207,
0,
7114,
207,
32,
7146],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-blank":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
58,
2,
1170,
58,
69,
1237],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-blank",
"typ":"tany"},
"semibreak":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
45,
2,
844,
45,
22,
864],
"definition-bind-site":["builtin://pprint",
231,
0,
7930,
231,
28,
7958],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"str":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
215,
0,
7570,
215,
56,
7626],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"str",
"typ":"tany"},
"vert":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
18,
2,
282,
18,
12,
292],
"definition-bind-site":["builtin://pprint",
241,
0,
8191,
241,
61,
8252],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"vert",
"typ":"tany"},
"infix":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
27,
2,
438,
27,
14,
450],
"definition-bind-site":["builtin://pprint",
252,
0,
8646,
254,
3,
8774],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"infix",
"typ":"tany"},
"semi":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
44,
2,
830,
44,
12,
840],
"definition-bind-site":["builtin://pprint",
227,
0,
7835,
227,
15,
7850],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-str":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
56,
2,
1042,
56,
67,
1107],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-str",
"typ":"tany"},
"flow":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
16,
2,
246,
16,
12,
256],
"definition-bind-site":["builtin://pprint",
240,
0,
8128,
240,
62,
8190],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"flow",
"typ":"tany"},
"lbrack":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
38,
2,
716,
38,
16,
730],
"definition-bind-site":["builtin://pprint",
222,
0,
7746,
222,
17,
7763],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"sbreak":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
11,
2,
160,
11,
16,
174],
"definition-bind-site":["builtin://pprint",
229,
0,
7852,
229,
46,
7898],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":2,
"name":"sbreak",
"typ":"tany"},
"brackets":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
21,
2,
332,
21,
20,
350],
"definition-bind-site":["builtin://pprint",
244,
0,
8345,
244,
47,
8392],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"brackets",
"typ":"tany"},
"commabreak":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
43,
2,
804,
43,
24,
826],
"definition-bind-site":["builtin://pprint",
230,
0,
7899,
230,
30,
7929],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"number":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
8,
2,
104,
8,
16,
118],
"definition-bind-site":["builtin://pprint",
217,
0,
7628,
217,
45,
7673],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"number",
"typ":"tany"},
"if-flat":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
211,
0,
7315,
211,
93,
7408],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"if-flat",
"typ":"tany"},
"squote":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
23,
2,
372,
23,
16,
386],
"definition-bind-site":["builtin://pprint",
248,
0,
8491,
248,
53,
8544],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"squote",
"typ":"tany"},
"parens":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
19,
2,
296,
19,
16,
310],
"definition-bind-site":["builtin://pprint",
242,
0,
8253,
242,
45,
8298],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"parens",
"typ":"tany"},
"langle":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
40,
2,
752,
40,
16,
766],
"definition-bind-site":["builtin://pprint",
224,
0,
7782,
224,
17,
7799],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"lbrace":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
36,
2,
680,
36,
16,
694],
"definition-bind-site":["builtin://pprint",
220,
0,
7710,
220,
17,
7727],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"rbrack":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
39,
2,
734,
39,
16,
748],
"definition-bind-site":["builtin://pprint",
223,
0,
7764,
223,
17,
7781],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"is-if-flat":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
61,
2,
1424,
61,
96,
1518],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-if-flat",
"typ":"tany"},
"align":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
209,
0,
7183,
209,
65,
7248],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":1,
"name":"align",
"typ":"tany"},
"separate":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
29,
2,
482,
29,
20,
500],
"definition-bind-site":["builtin://pprint",
269,
0,
9439,
276,
3,
9623],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"separate",
"typ":"tany"},
"infix-break":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
28,
2,
454,
28,
26,
478],
"definition-bind-site":["builtin://pprint",
255,
0,
8775,
257,
3,
8909],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"infix-break",
"typ":"tany"},
"is-align":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
62,
2,
1521,
62,
72,
1591],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-align",
"typ":"tany"},
"is-hardline":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
47,
0,
871,
47,
15,
886],
"definition-bind-site":["builtin://pprint",
57,
2,
1110,
57,
59,
1167],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":0,
"name":"is-hardline",
"typ":"tany"},
"rangle":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
41,
2,
770,
41,
16,
784],
"definition-bind-site":["builtin://pprint",
225,
0,
7800,
225,
17,
7817],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"soft-surround":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
31,
2,
526,
31,
30,
554],
"definition-bind-site":["builtin://pprint",
263,
0,
9161,
267,
3,
9437],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"soft-surround",
"typ":"tany"},
"rbrace":{"bind":"let",
"origin":{"local-bind-site":["builtin://pprint",
37,
2,
698,
37,
16,
712],
"definition-bind-site":["builtin://pprint",
221,
0,
7728,
221,
17,
7745],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"typ":"tany"},
"braces":{"bind":"fun",
"origin":{"local-bind-site":["builtin://pprint",
20,
2,
314,
20,
16,
328],
"definition-bind-site":["builtin://pprint",
243,
0,
8299,
243,
45,
8344],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},
"flatness":false,
"name":"braces",
"typ":"tany"}},
"datatypes":{"Item":["data",{"local-bind-site":["builtin://pprint",
93,
0,
2987,
95,
3,
3064],
"definition-bind-site":["builtin://pprint",
93,
0,
2987,
95,
3,
3064],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},"Item",[],[["item",
[["indent",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["is-flat",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}],["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}]],
{}]],{}],
"PPrintDoc":["data",{"local-bind-site":["builtin://pprint",
54,
0,
966,
92,
3,
2986],
"definition-bind-site":["builtin://pprint",
54,
0,
966,
92,
3,
2986],
"new-definition":true,
"uri-of-definition":"builtin://pprint"},"PPrintDoc",[],[["mt-doc",
[["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["str",
[["s",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"String"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["hardline",
[["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["blank",
[["n",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["concat",
[["fst",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["snd",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["nest",
[["indent",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["if-flat",
[["flat",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["vert",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["align",
[["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["align-spaces",
[["n",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}],["group",
[["d",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://pprint"},
"name":"PPrintDoc"}],["flat-width",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}],["has-hardline",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Boolean"}]],
{}]],{"pretty":["arrow",
["tany",
"tany"],
"tany"],
"_output":["arrow",
["tany"],
"tany"],
"_plus":["arrow",
["tany",
"tany"],
"tany"]}]},
"aliases":{"Item":"tany",
"PPrintDoc":"tany"}},
"requires":[{"import-type":"builtin",
"name":"base"},
{"import-type":"builtin",
"name":"global"},
{"import-type":"builtin",
"name":"lists"},
{"import-type":"builtin",
"name":"valueskeleton"}]})