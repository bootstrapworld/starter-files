({"theMap":"{\"version\":3,\"sources\":[\"builtin://s-exp-structs\"],\"names\":[\"builtin://s-exp-structs\",\",9,0,74,14,3,190\",\",10,2,88,10,31,117\",\",11,2,120,11,22,140\",\",12,2,143,12,22,163\",\",13,2,166,13,22,186\"],\"mappingsoBAQDC,6BARCD;AAAAA;AAAAA;AAAAA;AAAAA,oBASCE,iCATDF;AAAAA;AAAAA;AAAAA;AAAAA,oBASCE,8BATDF;AAAAA;AAAAA;AAAAA;AAAAA,oBAUCG,gCAVDH;AAAAA;AAAAA;AAAAA;AAAAA,oBAUCG,6BAVDH;AAAAA;AAAAA;AAAAA;AAAAA,oBAWCI,gCAXDJ;AAAAA;AAAAA;AAAAA;AAAAA,oBAWCI,6BAXDJ;AAAAA;AAAAA;AAAAA;AAAAA,oBAYCK,gCAZDL;AAAAA;AAAAA;AAAAA;AAAAA,oBAYCK,6BAZDL;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA,SAQDC,oDARCD;AAAAA;AAAAA;AAAAA;AAAAA,SAQDC,oDARCD;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA;AAAAA\",\"file\":\"builtin://s-exp-structs\"}",
"theModule":"function _03a21b609295fa8706921499591c6de05a05276e378ee63ecd3a023126689be0__10(R,NAMESPACE,M,$$underscore_import5,$$included$129) {\nvar G = R.getFieldLoc;\nvar U = function throw_error(loc,name) {\nR.ffi.throwUninitializedIdMkLoc(loc,name);\n};\nvar M = \"builtin://s-exp-structs\";\nvar D = R.undefined;\nvar L = [[M,10,2,88,10,31,117],\n[M,10,19,105,10,30,116],\n[M,11,2,120,11,22,140],\n[M,11,15,133,11,21,139],\n[M,12,2,143,12,22,163],\n[M,12,15,156,12,21,162],\n[M,13,2,166,13,22,186],\n[M,13,15,179,13,21,185],\n[M,9,0,74,14,3,190],\n[\"dummy location\"],\n[M,3,0,13,14,3,190]];\nvar builtins1 = R.getModuleField(\"builtin://global\",\"values\",\"builtins\");\nvar nothing2 = R.getModuleField(\"builtin://global\",\"values\",\"nothing\");\nvar $type$Number3 = R.getModuleField(\"builtin://global\",\"types\",\"Number\");\nvar $type$String8 = R.getModuleField(\"builtin://global\",\"types\",\"String\");\nvar $underscore_import3 = $$underscore_import5;\nvar $included$125 = $$included$129;\nvar List1 = R.getModuleField(\"builtin://lists\",\"types\",\"List\");\nvar $toplevel22 = function _03a21b609295fa8706921499591c6de05a05276e378ee63ecd3a023126689be0__10($$resumer13) {\nvar $step21 = 0;\nvar $elidedFrames91 = 0;\nvar $ans88 = D;\nvar $al89 = L[10];\nif(R.isAR($$resumer13)) {\n$step21 = $$resumer13.step;\n$al89 = $$resumer13.from;\n$ans88 = $$resumer13.ans;\n$elidedFrames91 = $$resumer13.elidedFrames;\n$resumer13 = $$resumer13.args[0];\nanswer179 = $$resumer13.vars[0];\nis$s$str164 = $$resumer13.vars[1];\nS$Exp178 = $$resumer13.vars[2];\nis$s$list128 = $$resumer13.vars[3];\ns$num162 = $$resumer13.vars[4];\ns$sym176 = $$resumer13.vars[5];\ns$list136 = $$resumer13.vars[6];\nis$s$num160 = $$resumer13.vars[7];\nis$S$Exp126 = $$resumer13.vars[8];\ns$str166 = $$resumer13.vars[9];\nis$s$sym168 = $$resumer13.vars[10];\n}\nif(--R.GAS <= 0 || --R.RUNGAS <= 0) {\nR.EXN_STACKHEIGHT = 0;\n$ans88 = R.mC();\n}\nwhile(!R.isContinuation($ans88)) {\nswitch($step21) {\ncase 0: var S$Exp92 = R.nB(\"S-Exp\",L[8]);\nvar S$Exp178 = R.mBA(S$Exp92,\"S-Exp\");\nvar S$Exp124 = {\"$var\":D};\nvar is$S$Exp126 = {\"$var\":D};\nvar is$s$list128 = {\"$var\":D};\nvar s$list136 = {\"$var\":D};\nvar is$s$num160 = {\"$var\":D};\nvar s$num162 = {\"$var\":D};\nvar is$s$str164 = {\"$var\":D};\nvar s$str166 = {\"$var\":D};\nvar is$s$sym168 = {\"$var\":D};\nvar s$sym176 = {\"$var\":D};\nvar $s$list_getfields97 = function singleton_variant(f) {\nreturn f(this.dict[\"exps\"]);\n};\nvar $s$list_mutablemask96 = [false];\nvar $s$list$base93 = {\"$fieldNames\":[\"exps\"],\n\"_match\":R.mM(\"s-list\",1)};\nvar $s$list$brander94 = R.nB(\"s-list\",L[0]);\nvar $s$list$brands95 = {};\n$s$list$brands95[S$Exp92._brand] = true;\n$s$list$brands95[$s$list$brander94._brand] = true;\nvar s$list98 = R.mVC(L[0],function $synthesizedConstructor_$s$list$base() {\nreturn [List1];\n},[\"exps99\"],[L[1]],[false],[\"exps99\"],$s$list_mutablemask96,$s$list$base93,$s$list$brands95,\"s-list\",$s$list_getfields97,$s$list$base93);\nvar $s$num_getfields104 = function singleton_variant(f) {\nreturn f(this.dict[\"n\"]);\n};\nvar $s$num_mutablemask103 = [false];\nvar $s$num$base100 = {\"$fieldNames\":[\"n\"],\n\"_match\":R.mM(\"s-num\",1)};\nvar $s$num$brander101 = R.nB(\"s-num\",L[2]);\nvar $s$num$brands102 = {};\n$s$num$brands102[S$Exp92._brand] = true;\n$s$num$brands102[$s$num$brander101._brand] = true;\nvar s$num105 = R.mVC(L[2],function $synthesizedConstructor_$s$num$base() {\nreturn [$type$Number3];\n},[\"n97\"],[L[3]],[false],[\"n97\"],$s$num_mutablemask103,$s$num$base100,$s$num$brands102,\"s-num\",$s$num_getfields104,$s$num$base100);\nvar $s$str_getfields110 = function singleton_variant(f) {\nreturn f(this.dict[\"s\"]);\n};\nvar $s$str_mutablemask109 = [false];\nvar $s$str$base106 = {\"$fieldNames\":[\"s\"],\n\"_match\":R.mM(\"s-str\",1)};\nvar $s$str$brander107 = R.nB(\"s-str\",L[4]);\nvar $s$str$brands108 = {};\n$s$str$brands108[S$Exp92._brand] = true;\n$s$str$brands108[$s$str$brander107._brand] = true;\nvar s$str111 = R.mVC(L[4],function $synthesizedConstructor_$s$str$base() {\nreturn [$type$String8];\n},[\"s1077\"],[L[5]],[false],[\"s1077\"],$s$str_mutablemask109,$s$str$base106,$s$str$brands108,\"s-str\",$s$str_getfields110,$s$str$base106);\nvar $s$sym_getfields116 = function singleton_variant(f) {\nreturn f(this.dict[\"s\"]);\n};\nvar $s$sym_mutablemask115 = [false];\nvar $s$sym$base112 = {\"$fieldNames\":[\"s\"],\n\"_match\":R.mM(\"s-sym\",1)};\nvar $s$sym$brander113 = R.nB(\"s-sym\",L[6]);\nvar $s$sym$brands114 = {};\n$s$sym$brands114[S$Exp92._brand] = true;\n$s$sym$brands114[$s$sym$brander113._brand] = true;\nvar s$sym117 = R.mVC(L[6],function $synthesizedConstructor_$s$sym$base() {\nreturn [$type$String8];\n},[\"s118\"],[L[7]],[false],[\"s118\"],$s$sym_mutablemask115,$s$sym$base112,$s$sym$brands114,\"s-sym\",$s$sym_getfields116,$s$sym$base112);\nvar anf_assign123 = R.mO({\"S-Exp\":G(S$Exp92,\"test\",L[8]),\n\"is-s-list\":G($s$list$brander94,\"test\",L[0]),\n\"s-list\":s$list98,\n\"is-s-num\":G($s$num$brander101,\"test\",L[2]),\n\"s-num\":s$num105,\n\"is-s-str\":G($s$str$brander107,\"test\",L[4]),\n\"s-str\":s$str111,\n\"is-s-sym\":G($s$sym$brander113,\"test\",L[6]),\n\"s-sym\":s$sym117});\nS$Exp124.$var = anf_assign123;\nR.nothing;\n$al89 = L[8];\nvar anf_assign125 = G(S$Exp124.$var,\"S-Exp\",L[8]);\nis$S$Exp126.$var = anf_assign125;\nR.nothing;\n$al89 = L[0];\nvar anf_assign127 = G(S$Exp124.$var,\"is-s-list\",L[0]);\nis$s$list128.$var = anf_assign127;\nR.nothing;\n$al89 = L[0];\nvar anf_assign135 = G(S$Exp124.$var,\"s-list\",L[0]);\ns$list136.$var = anf_assign135;\nR.nothing;\n$al89 = L[2];\nvar anf_assign159 = G(S$Exp124.$var,\"is-s-num\",L[2]);\nis$s$num160.$var = anf_assign159;\nR.nothing;\n$al89 = L[2];\nvar anf_assign161 = G(S$Exp124.$var,\"s-num\",L[2]);\ns$num162.$var = anf_assign161;\nR.nothing;\n$al89 = L[4];\nvar anf_assign163 = G(S$Exp124.$var,\"is-s-str\",L[4]);\nis$s$str164.$var = anf_assign163;\nR.nothing;\n$al89 = L[4];\nvar anf_assign165 = G(S$Exp124.$var,\"s-str\",L[4]);\ns$str166.$var = anf_assign165;\nR.nothing;\n$al89 = L[6];\nvar anf_assign167 = G(S$Exp124.$var,\"is-s-sym\",L[6]);\nis$s$sym168.$var = anf_assign167;\nR.nothing;\n$al89 = L[6];\nvar anf_assign175 = G(S$Exp124.$var,\"s-sym\",L[6]);\ns$sym176.$var = anf_assign175;\nR.nothing;\n$step21 = 1;\n$ans88 = R.maybeMethodCall2(builtins1,\"trace-value\",L[9],L[9],nothing2);\nbreak;\ncase 1: var answer179 = $ans88;\n$step21 = 2;\n$ans88 = R.maybeMethodCall0(builtins1,\"current-checker\",L[8]);\nbreak;\ncase 2: var anf_method_obj177 = $ans88;\n$step21 = 3;\n$ans88 = R.maybeMethodCall0(anf_method_obj177,\"results\",L[8]);\nbreak;\ncase 3: var checks180 = $ans88;\n$step21 = 4;\n$ans88 = R.mO({\"answer\":answer179,\n\"namespace\":NAMESPACE,\n\"locations\":L,\n\"defined-modules\":{},\n\"defined-values\":{\"is-S-Exp\":is$S$Exp126.$var,\n\"is-s-num\":is$s$num160.$var,\n\"is-s-sym\":is$s$sym168.$var,\n\"s-num\":s$num162.$var,\n\"s-sym\":s$sym176.$var,\n\"is-s-str\":is$s$str164.$var,\n\"s-str\":s$str166.$var,\n\"s-list\":s$list136.$var,\n\"is-s-list\":is$s$list128.$var},\n\"defined-types\":{\"S-Exp\":S$Exp178},\n\"provide-plus-types\":R.mO({\"values\":R.mO({\"is-S-Exp\":is$S$Exp126.$var,\n\"is-s-num\":is$s$num160.$var,\n\"is-s-sym\":is$s$sym168.$var,\n\"s-num\":s$num162.$var,\n\"s-sym\":s$sym176.$var,\n\"is-s-str\":is$s$str164.$var,\n\"s-str\":s$str166.$var,\n\"s-list\":s$list136.$var,\n\"is-s-list\":is$s$list128.$var}),\n\"types\":{\"S-Exp\":S$Exp178},\n\"modules\":{}}),\n\"checks\":checks180});\nbreak;\ncase 4: ++R.GAS;\nreturn $ans88;\ndefault: R.ffi.throwSpinnakerError(L[10],$step21);\n}\n}\nif($step21 !== 4) {\n$ans88.stack[R.EXN_STACKHEIGHT++] = R.mAR($al89,$toplevel22,$step21,[],[answer179,is$s$str164,S$Exp178,is$s$list128,s$num162,s$sym176,s$list136,is$s$num160,is$S$Exp126,s$str166,is$s$sym168],$elidedFrames91);\n}\nreturn $ans88;\n};\nreturn R.safeCall($toplevel22,function module_load(moduleVal) {\nR.modules[\"$builtin://s$exp$structs2\"] = moduleVal;\nreturn moduleVal;\n},\"Evaluating $toplevel\");\n}",
"nativeRequires":[],
"provides":{"modules":{},
"values":{"is-s-list":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
10,
2,
88,
10,
31,
117],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"is-s-list",
"typ":"tany"},
"s-list":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
10,
2,
88,
10,
31,
117],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"s-list",
"typ":"tany"},
"s-str":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
12,
2,
143,
12,
22,
163],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"s-str",
"typ":"tany"},
"is-s-str":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
12,
2,
143,
12,
22,
163],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"is-s-str",
"typ":"tany"},
"s-sym":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
13,
2,
166,
13,
22,
186],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"s-sym",
"typ":"tany"},
"s-num":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
11,
2,
120,
11,
22,
140],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"s-num",
"typ":"tany"},
"is-s-sym":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
13,
2,
166,
13,
22,
186],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"is-s-sym",
"typ":"tany"},
"is-s-num":{"bind":"fun",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
11,
2,
120,
11,
22,
140],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"flatness":0,
"name":"is-s-num",
"typ":"tany"},
"is-S-Exp":{"bind":"let",
"origin":{"local-bind-site":["builtin://s-exp-structs",
4,
0,
23,
4,
15,
38],
"definition-bind-site":["builtin://s-exp-structs",
9,
0,
74,
14,
3,
190],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},
"typ":"tany"}},
"datatypes":{"S-Exp":["data",{"local-bind-site":["builtin://s-exp-structs",
9,
0,
74,
14,
3,
190],
"definition-bind-site":["builtin://s-exp-structs",
9,
0,
74,
14,
3,
190],
"new-definition":true,
"uri-of-definition":"builtin://s-exp-structs"},"S-Exp",[],[["s-list",
[["exps",
["tyapp",{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://s-exp-structs"},
"name":"List"},[{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://s-exp-structs"},
"name":"S-Exp"}]]]],
{}],["s-num",
[["n",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"Number"}]],
{}],["s-str",
[["s",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"String"}]],
{}],["s-sym",
[["s",
{"tag":"name",
"origin":{"import-type":"uri",
"uri":"builtin://global"},
"name":"String"}]],
{}]],{}]},
"aliases":{"S-Exp":"tany"}},
"requires":[{"import-type":"builtin",
"name":"global"},
{"import-type":"builtin",
"name":"lists"}]})